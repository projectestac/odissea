{"version":3,"sources":["../src/encryptedpassword.js"],"names":["EncryptedPassword","elementId","wrapper","document","querySelector","spanOrLink","input","editButtonOrLink","cancelButton","editHandler","e","stopImmediatePropagation","preventDefault","startEditing","addEventListener","nodeName","parentElement","previousElementSibling","cancelEditing","dataset","novalue","style","display","prototype","moveFocus","disabled","id","removeAttribute","focus","value"],"mappings":"uJA6BO,GAAMA,CAAAA,CAAiB,CAAG,SAASC,CAAT,CAAoB,YAC3CC,CAAO,CAAGC,QAAQ,CAACC,aAAT,CAAuB,kCAAmCH,CAAnC,CAA+C,KAAtE,CADiC,CAEjD,KAAKI,UAAL,CAAkBH,CAAO,CAACE,aAAR,CAAsB,SAAtB,CAAlB,CACA,KAAKE,KAAL,CAAaJ,CAAO,CAACE,aAAR,CAAsB,OAAtB,CAAb,CACA,KAAKG,gBAAL,CAAwBL,CAAO,CAACE,aAAR,CAAsB,4BAAtB,CAAxB,CACA,KAAKI,YAAL,CAAoBN,CAAO,CAACE,aAAR,CAAsB,2BAAtB,CAApB,CAGA,GAAIK,CAAAA,CAAW,CAAG,SAACC,CAAD,CAAO,CACrBA,CAAC,CAACC,wBAAF,GACAD,CAAC,CAACE,cAAF,GACA,CAAI,CAACC,YAAL,IACH,CAJD,CAKA,KAAKN,gBAAL,CAAsBO,gBAAtB,CAAuC,OAAvC,CAAgDL,CAAhD,EAGA,GAAuC,GAAnC,QAAKF,gBAAL,CAAsBQ,QAA1B,CAA4C,CACxCb,CAAO,CAACc,aAAR,CAAsBC,sBAAtB,CAA6Cb,aAA7C,CAA2D,OAA3D,EAAoEU,gBAApE,CAAqF,OAArF,CAA8FL,CAA9F,CACH,CAGD,KAAKD,YAAL,CAAkBM,gBAAlB,CAAmC,OAAnC,CAA4C,SAACJ,CAAD,CAAO,CAC/CA,CAAC,CAACC,wBAAF,GACAD,CAAC,CAACE,cAAF,GACA,CAAI,CAACM,aAAL,EACH,CAJD,EASA,GAAgC,GAA5B,GAAAhB,CAAO,CAACiB,OAAR,CAAgBC,OAApB,CAAqC,CACjC,KAAKP,YAAL,KACA,KAAKL,YAAL,CAAkBa,KAAlB,CAAwBC,OAAxB,CAAkC,MACrC,CACJ,CAlCM,C,sBAyCPtB,CAAiB,CAACuB,SAAlB,CAA4BV,YAA5B,CAA2C,SAASW,CAAT,CAAoB,CAC3D,KAAKlB,KAAL,CAAWe,KAAX,CAAiBC,OAAjB,CAA2B,QAA3B,CACA,KAAKhB,KAAL,CAAWmB,QAAX,IACA,KAAKpB,UAAL,CAAgBgB,KAAhB,CAAsBC,OAAtB,CAAgC,MAAhC,CACA,KAAKf,gBAAL,CAAsBc,KAAtB,CAA4BC,OAA5B,CAAsC,MAAtC,CACA,KAAKd,YAAL,CAAkBa,KAAlB,CAAwBC,OAAxB,CAAkC,QAAlC,CAGA,GAAMI,CAAAA,CAAE,CAAG,KAAKnB,gBAAL,CAAsBmB,EAAjC,CACA,KAAKnB,gBAAL,CAAsBoB,eAAtB,CAAsC,IAAtC,EACA,KAAKrB,KAAL,CAAWoB,EAAX,CAAgBA,CAAhB,CAEA,GAAIF,CAAJ,CAAe,CACX,KAAKlB,KAAL,CAAWsB,KAAX,EACH,CACJ,CAfD,CAoBA5B,CAAiB,CAACuB,SAAlB,CAA4BL,aAA5B,CAA4C,UAAW,CACnD,KAAKZ,KAAL,CAAWe,KAAX,CAAiBC,OAAjB,CAA2B,MAA3B,CACA,KAAKhB,KAAL,CAAWuB,KAAX,CAAmB,EAAnB,CACA,KAAKvB,KAAL,CAAWmB,QAAX,IACA,KAAKpB,UAAL,CAAgBgB,KAAhB,CAAsBC,OAAtB,CAAgC,QAAhC,CACA,KAAKf,gBAAL,CAAsBc,KAAtB,CAA4BC,OAA5B,CAAsC,QAAtC,CACA,KAAKd,YAAL,CAAkBa,KAAlB,CAAwBC,OAAxB,CAAkC,MAAlC,CAGA,GAAMI,CAAAA,CAAE,CAAG,KAAKpB,KAAL,CAAWoB,EAAtB,CACA,KAAKpB,KAAL,CAAWqB,eAAX,CAA2B,IAA3B,EACA,KAAKpB,gBAAL,CAAsBmB,EAAtB,CAA2BA,CAC9B,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Encrypted password functionality.\n *\n * @module core_form/encryptedpassword\n * @copyright 2019 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Constructor for EncryptedPassword.\n *\n * @class core_form/encryptedpassword\n * @param {String} elementId The element to apply the encrypted password JS to\n */\nexport const EncryptedPassword = function(elementId) {\n    const wrapper = document.querySelector('div[data-encryptedpasswordid=\"' + elementId + '\"]');\n    this.spanOrLink = wrapper.querySelector('span, a');\n    this.input = wrapper.querySelector('input');\n    this.editButtonOrLink = wrapper.querySelector('button[data-editbutton], a');\n    this.cancelButton = wrapper.querySelector('button[data-cancelbutton]');\n\n    // Edit button action.\n    var editHandler = (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.startEditing(true);\n    };\n    this.editButtonOrLink.addEventListener('click', editHandler);\n\n    // When it's a link, do some magic to make the label work as well.\n    if (this.editButtonOrLink.nodeName === 'A') {\n        wrapper.parentElement.previousElementSibling.querySelector('label').addEventListener('click', editHandler);\n    }\n\n    // Cancel button action.\n    this.cancelButton.addEventListener('click', (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.cancelEditing();\n    });\n\n    // If the value is not set yet, start editing and remove the cancel option - so that\n    // it saves something in the config table and doesn't keep repeat showing it as a new\n    // admin setting...\n    if (wrapper.dataset.novalue === 'y') {\n        this.startEditing(false);\n        this.cancelButton.style.display = 'none';\n    }\n};\n\n/**\n * Starts editing.\n *\n * @param {Boolean} moveFocus If true, sets focus to the edit box\n */\nEncryptedPassword.prototype.startEditing = function(moveFocus) {\n    this.input.style.display = 'inline';\n    this.input.disabled = false;\n    this.spanOrLink.style.display = 'none';\n    this.editButtonOrLink.style.display = 'none';\n    this.cancelButton.style.display = 'inline';\n\n    // Move the id around, which changes what happens when you click the label.\n    const id = this.editButtonOrLink.id;\n    this.editButtonOrLink.removeAttribute('id');\n    this.input.id = id;\n\n    if (moveFocus) {\n        this.input.focus();\n    }\n};\n\n/**\n * Cancels editing.\n */\nEncryptedPassword.prototype.cancelEditing = function() {\n    this.input.style.display = 'none';\n    this.input.value = '';\n    this.input.disabled = true;\n    this.spanOrLink.style.display = 'inline';\n    this.editButtonOrLink.style.display = 'inline';\n    this.cancelButton.style.display = 'none';\n\n    // Move the id around, which changes what happens when you click the label.\n    const id = this.input.id;\n    this.input.removeAttribute('id');\n    this.editButtonOrLink.id = id;\n};\n"],"file":"encryptedpassword.min.js"}