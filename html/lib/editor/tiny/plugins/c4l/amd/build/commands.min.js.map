{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny C4L commands.\n *\n * @module      tiny_c4l/commands\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {handleAction} from './ui';\nimport {\n    component,\n    c4lButtonName,\n    c4lMenuItemName,\n    icon,\n} from './common';\nimport {\n        isC4LVisible,\n        getpreviewCSS\n} from './options';\n\nexport const getSetup = async() => {\n    const [\n        c4lButtonNameTitle,\n        c4lMenuItemNameTitle,\n        buttonImage,\n    ] = await Promise.all([\n        getString('button_c4l', component),\n        getString('menuitem_c4l', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        if (isC4LVisible(editor)) {\n            // Register the C4L Icon.\n            editor.ui.registry.addIcon(icon, buttonImage.html);\n\n            // Register the C4L Toolbar Button.\n            editor.ui.registry.addButton(c4lButtonName, {\n                icon,\n                tooltip: c4lButtonNameTitle,\n                onAction: () => handleAction(editor),\n            });\n\n            // Add the C4L Menu Item.\n            // This allows it to be added to a standard menu, or a context menu.\n            editor.ui.registry.addMenuItem(c4lMenuItemName, {\n                icon,\n                text: c4lMenuItemNameTitle,\n                onAction: () => handleAction(editor),\n            });\n\n            // Inject custom CSS.\n            editor.options.set('content_style', getpreviewCSS(editor));\n        }\n    };\n};\n"],"names":["_exports","getSetup","async","c4lButtonNameTitle","c4lMenuItemNameTitle","buttonImage","Promise","all","getString","component","getButtonImage","editor","isC4LVisible","ui","registry","addIcon","icon","html","addButton","c4lButtonName","tooltip","onAction","handleAction","addMenuItem","c4lMenuItemName","text","options","set","getpreviewCSS"],"mappings":"0OAwEEA,SAAAC,SAnCsBC,UACpB,MACIC,mBACAC,qBACAC,mBACMC,QAAQC,IAAI,EAClB,EAAAC,KAAAA,YAAU,aAAcC,QAASA,YACjC,EAAAD,KAAAA,YAAU,eAAgBC,QAASA,YACnC,EAAAC,uBAAe,OAAQD,QAASA,aAGpC,OAAQE,UACA,EAAAC,SAAAA,cAAaD,UAEbA,OAAOE,GAAGC,SAASC,QAAQC,QAAAA,KAAMX,YAAYY,MAG7CN,OAAOE,GAAGC,SAASI,UAAUC,sBAAe,CACxCH,KAAAA,QAAIA,KACJI,QAASjB,mBACTkB,SAAUA,KAAM,EAAAC,IAAAA,cAAaX,UAKjCA,OAAOE,GAAGC,SAASS,YAAYC,wBAAiB,CAC5CR,KAAAA,QAAIA,KACJS,KAAMrB,qBACNiB,SAAUA,KAAM,EAAAC,IAAAA,cAAaX,UAIjCA,OAAOe,QAAQC,IAAI,iBAAiB,EAAAC,SAAaA,eAACjB,SACtD,CACH,CACH"}