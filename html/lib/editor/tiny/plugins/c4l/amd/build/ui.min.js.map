{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny C4L UI.\n *\n * @module      tiny_c4l/ui\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {component} from './common';\nimport C4LModal from './modal';\nimport ModalFactory from 'core/modal_factory';\nimport {components as Components} from './components';\nimport {get_strings as getStrings} from 'core/str';\nimport {\n    isStudent,\n    getallowedComponents,\n    showPreview,\n    getpreviewCSS,\n    getcustomComponents\n} from './options';\nimport ModalEvents from 'core/modal_events';\nimport {\n    addVariant,\n    getVariantsClass,\n    getVariantHtml,\n    getVariantsHtml,\n    loadVariantPreferences,\n    removeVariant,\n    saveVariantPreferences,\n    variantExists\n} from './variantslib';\n\nlet userStudent = false;\nlet previewC4L = true;\nlet allowedComponents = [];\nlet Contexts = [];\nlet langStrings = {};\nlet previewCSS = '';\nlet customComponents = [];\nconst compPrefix = 'c4lv-';\n\n/**\n * Handle action\n *\n * @param {TinyMCE} editor\n */\nexport const handleAction = async(editor) => {\n    userStudent = isStudent(editor);\n    previewC4L = showPreview(editor);\n    customComponents = getcustomComponents(editor);\n    addCustomComponents();\n    allowedComponents = getallowedComponents(editor);\n    previewCSS = getpreviewCSS(editor);\n    langStrings = await getAllStrings();\n    loadVariantPreferences(Components).then(() => displayDialogue(editor));\n};\n\n/**\n * Display modal\n *\n * @param  {TinyMCE} editor\n */\nconst displayDialogue = async(editor) => {\n    const data = Object.assign({}, {});\n\n    // Show modal with buttons.\n    const modal = await ModalFactory.create({\n        type: C4LModal.TYPE,\n        templateContext: await getTemplateContext(editor, data),\n        large: true,\n    });\n\n    // Choose class to modal.\n    const modalClass = previewC4L ? 'c4l-modal' : 'c4l-modal-no-preview';\n\n    // Set class to modal.\n    editor.targetElm.closest('body').classList.add(modalClass);\n\n    // Inject custom component styles in editor.\n    if (previewCSS !== \"\") {\n        const styles = document.createElement('style');\n        styles.textContent = previewCSS;\n        editor.targetElm.closest('body').appendChild(styles);\n    }\n\n    modal.show();\n\n    // Event modal listener.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        handleModalHidden(editor);\n    });\n\n    // Event filters listener.\n    const filters = modal.getRoot()[0].querySelectorAll('.c4l-button-filter');\n    filters.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonFilterClick(event, modal);\n        });\n    });\n\n    modal.getRoot()[0].querySelector('.c4l-select-filter').addEventListener('change', (event) => {\n       handleSelectFilterChange(event, modal);\n    });\n\n    // Event buttons listeners.\n    const buttons = modal.getRoot()[0].querySelectorAll('.c4lt-dialog-button');\n    buttons.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleButtonClick(event, editor, modal);\n        });\n        if (previewC4L) {\n            node.addEventListener('mouseenter', (event) => {\n                handleButtonMouseEvent(event, modal, true);\n            });\n            node.addEventListener('mouseleave', (event) => {\n                handleButtonMouseEvent(event, modal, false);\n            });\n        }\n    });\n\n    // Event variants listeners.\n    const variants = modal.getRoot()[0].querySelectorAll('.c4l-button-variant');\n    variants.forEach(node => {\n        node.addEventListener('click', (event) => {\n            handleVariantClick(event, modal);\n        });\n        if (previewC4L) {\n            node.addEventListener('mouseenter', (event) => {\n                handleVariantMouseEvent(event, modal, true);\n            });\n            node.addEventListener('mouseleave', (event) => {\n                handleVariantMouseEvent(event, modal, false);\n            });\n        }\n    });\n};\n\n/**\n * Handle a change within filter select.\n *\n * @param {MouseEvent} event The change event\n * @param {obj} modal\n */\nconst handleSelectFilterChange = (event, modal) => {\n    const select = event.target.closest('select');\n\n    if (select) {\n        const currentContext = select.value;\n        if (Contexts.indexOf(currentContext) !== -1) {\n            // Select current button.\n            const buttons = modal.getRoot()[0]\n                .querySelectorAll('.c4l-buttons-filters button');\n            buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n            const button = modal.getRoot()[0]\n                .querySelector('.c4l-button-filter[data-filter=\"' + currentContext + '\"]');\n            button.classList.add('c4l-button-filter-enabled');\n\n            // Show/hide component buttons.\n            showContextButtons(modal, currentContext);\n        }\n    }\n};\n\n/**\n * Handle a click within filter button.\n *\n * @param {MouseEvent} event The change event\n * @param {obj} modal\n */\nconst handleButtonFilterClick = (event, modal) => {\n    const button = event.target.closest('button');\n\n    const currentContext = button.dataset.filter;\n    // Filter button.\n    if (Contexts.indexOf(currentContext) !== -1) {\n        // Select current button.\n        const buttons = modal.getRoot()[0].querySelectorAll('.c4l-buttons-filters button');\n        buttons.forEach(node => node.classList.remove('c4l-button-filter-enabled'));\n        button.classList.add('c4l-button-filter-enabled');\n\n        // Select current option in select.\n        const select = modal.getRoot()[0].querySelector('.c4l-select-filter');\n        select.selectedIndex = Contexts.indexOf(currentContext);\n\n        // Show/hide component buttons.\n        showContextButtons(modal, currentContext);\n    }\n};\n\n/**\n * Handle when closing the Modal.\n *\n * @param {obj} editor\n */\nconst handleModalHidden = (editor) => {\n    editor.targetElm.closest('body').classList.remove('c4l-modal-no-preview');\n    saveVariantPreferences(Components);\n};\n\n/**\n * Handle a click in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} editor\n * @param {obj} modal\n */\nconst handleButtonClick = (event, editor, modal) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n\n    // Component button.\n    const component = Components.find(element => element.name == selectedButton);\n    if (component != undefined) {\n        const sel = editor.selection.getContent();\n        let componentCode = component.code;\n        const placeholder = (sel.length > 0 ? sel : component.text);\n\n        // Create a new node to replace the placeholder.\n        const randomId = generateRandomID();\n        const newNode = document.createElement('span');\n        newNode.dataset.id = randomId;\n        newNode.innerHTML = placeholder;\n        componentCode = componentCode.replace('{{PLACEHOLDER}}', newNode.outerHTML);\n\n        // Return active variants for current component.\n        const variants = getVariantsClass(component.name);\n\n        // Apply variants to html component.\n        if (variants.length > 0) {\n            componentCode = componentCode.replace('{{VARIANTS}}', variants.join(' '));\n            componentCode = componentCode.replace('{{VARIANTSHTML}}', getVariantsHtml(component.name));\n        } else {\n            componentCode = componentCode.replace('{{VARIANTS}}', '');\n            componentCode = componentCode.replace('{{VARIANTSHTML}}', '');\n        }\n\n        // Apply random IDs.\n        componentCode = applyRandomID(componentCode);\n\n        // Apply lang strings.\n        componentCode = applyLangStrings(componentCode);\n\n        // Sets new content.\n        editor.selection.setContent(componentCode);\n\n        // Select text.\n        const nodeSel = editor.dom.select('span[data-id=\"' + randomId + '\"]');\n        if (nodeSel?.[0]) {\n            editor.selection.select(nodeSel[0]);\n        }\n\n        modal.destroy();\n        editor.focus();\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a component button.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleButtonMouseEvent = (event, modal, show) => {\n    const selectedButton = event.target.closest('button').dataset.id;\n    const node = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-' + selectedButton + '\"]');\n    const previewDefault = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-default\"]');\n\n    if (node) {\n        if (show) {\n            previewDefault.classList.toggle('c4l-hidden');\n            node.classList.toggle('c4l-hidden');\n        } else {\n            node.classList.toggle('c4l-hidden');\n            previewDefault.classList.toggle('c4l-hidden');\n        }\n    }\n};\n\n/**\n * Handle a mouse events mouseenter/mouseleave in a variant button.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleVariantMouseEvent = (event, modal, show) => {\n    const variant = event.target.closest('span');\n    const variantEnabled = variant.dataset.state == 'on';\n    const button = event.target.closest('button');\n\n    if (!variantEnabled) {\n        updateVariantComponentState(variant, button, modal, show, false);\n    }\n};\n\n\n/**\n * Handle a mouse event within the variant buttons.\n *\n * @param {MouseEvent} event The mouseenter/mouseleave event\n * @param {obj} modal\n */\nconst handleVariantClick = (event, modal) => {\n    event.stopPropagation();\n    const variant = event.target.closest('span');\n    const button = event.target.closest('button');\n    updateVariantComponentState(variant, button, modal, false, true);\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = async(editor, data) => {\n    return Object.assign({}, {\n        elementid: editor.id,\n        buttons: await getButtons(editor),\n        filters: await getFilters(),\n        preview: previewC4L,\n    }, data);\n};\n\n/**\n * Get the C4L filters for the dialogue.\n *\n * @returns {object} data\n */\nconst getFilters = async() => {\n    const filters = [];\n    const stringValues = await getStrings(Contexts.map((key) => ({key, component})));\n\n    // Iterate over contexts.\n    Contexts.forEach((context, index) => {\n        filters.push({\n            name: stringValues[index],\n            type: context,\n            filterClass: index === 0 ? 'c4l-button-filter-enabled' : '',\n        });\n    });\n\n    return filters;\n};\n\n/**\n * Get the C4L buttons for the dialogue.\n *\n * @param {Editor} editor\n * @returns {object} buttons\n */\nconst getButtons = (editor) => {\n    const buttons = [];\n    const sel = editor.selection.getContent();\n    let componentCode = '';\n    let placeholder = '';\n    let variants = [];\n    let buttonText = '';\n\n    // Iterate over components.\n    Components.forEach((component) => {\n        if (!userStudent || (userStudent && allowedComponents.includes(component.name))) {\n            if (previewC4L) {\n                placeholder = (sel.length > 0 ? sel : component.text);\n                componentCode = component.code;\n                componentCode = componentCode.replace('{{PLACEHOLDER}}', placeholder);\n                // Return active variants for component.\n                variants = getVariantsClass(component.name);\n\n                // Apply class variants and html to html component.\n                const variantsNode = document.createElement('span');\n                variantsNode.dataset.id = 'variantHTML-' + component.id;\n                if (variants.length > 0) {\n                    componentCode = componentCode.replace('{{VARIANTS}}', variants.join(' '));\n                    variantsNode.innerHTML = getVariantsHtml(component.name);\n                    componentCode = componentCode.replace('{{VARIANTSHTML}}', variantsNode.outerHTML);\n                } else {\n                    componentCode = componentCode.replace('{{VARIANTS}}', '');\n                    componentCode = componentCode.replace('{{VARIANTSHTML}}', variantsNode.outerHTML);\n                }\n\n                // Apply lang strings.\n                componentCode = applyLangStrings(componentCode);\n            }\n\n            // Save contexts.\n            if (Contexts.indexOf(component.type) === -1) {\n                Contexts.push(component.type);\n            }\n\n            buttonText = component.type == 'custom' ? component.buttonname : langStrings.get(component.name);\n            buttons.push({\n                id: component.name,\n                name: buttonText,\n                type: component.type,\n                icon: component.icon ?? '',\n                imageClass: component.imageClass,\n                classComponent: compPrefix + component.name,\n                htmlcode: componentCode,\n                css: component.css ?? '',\n                variants: getVariantsState(component.name, component.variants),\n            });\n\n            // Add class to hide button.\n            if (Contexts.indexOf(component.type) !== 0) {\n                buttons[buttons.length - 1].imageClass += ' c4l-hidden';\n            }\n        }\n    });\n\n    return buttons;\n};\n\n/**\n * Get variants for the dialogue.\n *\n * @param  {string} component\n * @param  {object} elements\n * @return {object} Variants for a component\n */\nconst getVariantsState = (component, elements) => {\n    const variants = [];\n    let variantState = '';\n    let variantClass = '';\n\n    // Max 3 variants.\n    if (elements.length > 3) {\n        elements = elements.slice(0, 2);\n    }\n\n    elements.forEach((variant, index) => {\n        if (variantExists(component, variant)) {\n            variantState = 'on';\n            variantClass = 'on ';\n        } else {\n            variantState = 'off';\n            variantClass = '';\n        }\n        variantClass += variant + '-variant-' + variantState;\n        variants.push({\n            id: index,\n            name: variant,\n            state: variantState,\n            imageClass: variantClass,\n            title: langStrings.get(variant),\n        });\n    });\n\n    return variants;\n};\n\n/**\n * Update a variant component UI.\n *\n * @param {obj} variant\n * @param {obj} button\n * @param {obj} modal\n * @param {bool} show\n * @param {bool} updateHtml\n */\nconst updateVariantComponentState = (variant, button, modal, show, updateHtml) => {\n    const selectedVariant = 'c4l-' + variant.dataset.variant + '-variant';\n    const component = Components.find(element => element.name == button.dataset.id);\n    const componentClass = button.dataset.classcomponent;\n    const previewComponent = modal.getRoot()[0]\n        .querySelector('div[data-id=\"code-preview-' + button.dataset.id + '\"] .' + componentClass);\n    const variantPreview = modal.getRoot()[0]\n        .querySelector('span[data-id=\"variantHTML-' + component.id + '\"]');\n    let variantsHtml = '';\n\n    if (previewComponent) {\n        if (updateHtml) {\n            if (variant.dataset.state == 'on') {\n                removeVariant(component.name, variant.dataset.variant);\n                updateVariantButtonState(variant, false);\n                previewComponent.classList.remove(selectedVariant);\n            } else {\n                addVariant(component.name, variant.dataset.variant);\n                updateVariantButtonState(variant, true);\n                previewComponent.classList.add(selectedVariant);\n            }\n\n            // Update variant preview HTML.\n            if (variantPreview) {\n                variantPreview.innerHTML = getVariantsHtml(component.name);\n            }\n        } else {\n            variantsHtml = getVariantsHtml(component.name);\n            if (show) {\n                previewComponent.classList.add(selectedVariant);\n                variantsHtml += getVariantHtml(variant.dataset.variant);\n            } else {\n                previewComponent.classList.remove(selectedVariant);\n            }\n\n            // Update variant preview HTML.\n            if (variantPreview) {\n                variantPreview.innerHTML = variantsHtml;\n            }\n        }\n    } else {\n        if (updateHtml) {\n            // Update variants preferences.\n            if (variant.dataset.state == 'on') {\n                removeVariant(component.name, variant.dataset.variant);\n                updateVariantButtonState(variant, false);\n            } else {\n                addVariant(component.name, variant.dataset.variant);\n                updateVariantButtonState(variant, true);\n            }\n        }\n    }\n};\n\n/**\n * Update a variant button UI.\n *\n * @param {obj} variant\n * @param {bool} activate\n */\nconst updateVariantButtonState = (variant, activate) => {\n    if (activate) {\n        variant.dataset.state = 'on';\n        variant.classList.remove(variant.dataset.variant + '-variant-off');\n        variant.classList.add(variant.dataset.variant + '-variant-on');\n        variant.classList.add('on');\n    } else {\n        variant.dataset.state = 'off';\n        variant.classList.remove(variant.dataset.variant + '-variant-on');\n        variant.classList.add(variant.dataset.variant + '-variant-off');\n        variant.classList.remove('on');\n    }\n};\n\n/**\n * Show/hide buttons depend on selected context.\n *\n * @param  {object} modal\n * @param  {String} context\n */\nconst showContextButtons = (modal, context) => {\n    const showNodes = modal.getRoot()[0].querySelectorAll('button[data-type=\"' + context + '\"]');\n    const hideNodes = modal.getRoot()[0].querySelectorAll('button[data-type]:not([data-type=\"' + context + '\"])');\n\n    showNodes.forEach(node => node.classList.remove('c4l-hidden'));\n    hideNodes.forEach(node => node.classList.add('c4l-hidden'));\n};\n\n/**\n * Replace all localized strings.\n *\n * @param  {String} text\n * @return {String} String with lang tags replaced with a localized string.\n */\nconst applyLangStrings = (text) => {\n    const compRegex = /{{#([^}]*)}}/g;\n\n    [...text.matchAll(compRegex)].forEach(strLang => {\n        text = text.replace('{{#' + strLang[1] + '}}', langStrings.get(strLang[1]));\n    });\n\n    return text;\n};\n\n/**\n * Generates a random string.\n * @return {string} A random string\n */\nconst generateRandomID = () => {\n    const timestamp = new Date().getTime();\n    return 'R' + Math.round(Math.random() * 100000) + '-' + timestamp;\n};\n\n/**\n * Replace all ID tags with a random string.\n * @param  {String} text\n * @return {String} String with all ID tags replaced with a random string.\n */\nconst applyRandomID = (text) => {\n    const compRegex = /{{@ID}}/g;\n\n    if (text.match(compRegex)) {\n        text = text.replace(compRegex, generateRandomID());\n    }\n\n    return text;\n};\n\n/**\n * Get language strings.\n *\n * @return {object} Language strings\n */\nconst getAllStrings = async() => {\n    const keys = [];\n    const compRegex = /{{#([^}]*)}}/g;\n\n    Components.forEach(element => {\n\n        // Only add name from standard components.\n        if (element.name.indexOf(\"customcomp\") == -1) {\n            keys.push(element.name);\n        }\n\n        // Get lang strings from variants.\n        element.variants.forEach(variant => {\n            if (keys.indexOf(variant) === -1) {\n                keys.push(variant);\n            }\n        });\n\n        // Get lang strings from components.\n        [...element.code.matchAll(compRegex)].forEach(strLang => {\n            if (keys.indexOf(strLang[1]) === -1) {\n                keys.push(strLang[1]);\n            }\n        });\n\n        // Get lang strings from text placeholders.\n        [...element.text.matchAll(compRegex)].forEach(strLang => {\n            if (keys.indexOf(strLang[1]) === -1) {\n                keys.push(strLang[1]);\n            }\n        });\n    });\n\n    const stringValues = await getStrings(keys.map((key) => ({key, component})));\n    return new Map(keys.map((key, index) => ([key, stringValues[index]])));\n};\n\n/**\n * Add custom components to standard components.\n */\nconst addCustomComponents = () => {\n    if (customComponents.length > 0) {\n        customComponents.forEach(customcomp => {\n            if (Components.find(element => element.id == customcomp['id'] + 1000) == undefined) {\n                Components.push({\n                    id: customcomp['id'] + 1000,\n                    name: customcomp['name'],\n                    buttonname: customcomp['buttonname'],\n                    type: 'custom',\n                    imageClass: 'c4l-custom-icon',\n                    code: replaceCustomPlaceholders(customcomp),\n                    text: customcomp['text'].length > 0 ? customcomp['text'] : '{{#textplaceholder}}',\n                    variants: customcomp['variants'] ? [\"full-width\"] : [],\n                    icon: customcomp['icon'],\n                    css: customcomp['css']\n                });\n            }\n        });\n    }\n};\n\n/**\n * Replace custom placeholders with values.\n *\n * @param  {object} component\n * @return {string} HTML code.\n */\nconst replaceCustomPlaceholders = (component) => {\n    let html = component['code'];\n    const variants = component['variants'] ? \" {{VARIANTS}}\" : \"\";\n    html = html.replace('{{CUSTOMCLASS}}', compPrefix + component['name'] + ' ' + compPrefix + \"custom-component\" + variants);\n\n    return html;\n};\n"],"names":["_interopRequireDefault","e","__esModule","default","_modal","_modal_factory","_modal_events","userStudent","previewC4L","allowedComponents","Contexts","langStrings","previewCSS","customComponents","_exports","handleAction","async","isStudent","editor","showPreview","getcustomComponents","addCustomComponents","getallowedComponents","getpreviewCSS","getAllStrings","loadVariantPreferences","Components","components","then","displayDialogue","data","Object","assign","modal","ModalFactory","create","type","C4LModal","TYPE","templateContext","getTemplateContext","large","modalClass","targetElm","closest","classList","add","styles","document","createElement","textContent","appendChild","show","getRoot","on","ModalEvents","hidden","handleModalHidden","querySelectorAll","forEach","node","addEventListener","event","handleButtonFilterClick","querySelector","handleSelectFilterChange","handleButtonClick","handleButtonMouseEvent","handleVariantClick","handleVariantMouseEvent","select","target","currentContext","value","indexOf","remove","showContextButtons","button","dataset","filter","selectedIndex","saveVariantPreferences","selectedButton","id","component","find","element","name","undefined","sel","selection","getContent","componentCode","code","placeholder","length","text","randomId","generateRandomID","newNode","innerHTML","replace","outerHTML","variants","getVariantsClass","join","getVariantsHtml","applyRandomID","applyLangStrings","setContent","nodeSel","dom","destroy","focus","previewDefault","toggle","variant","variantEnabled","state","updateVariantComponentState","stopPropagation","elementid","buttons","getButtons","filters","getFilters","preview","stringValues","getStrings","map","key","context","index","push","filterClass","buttonText","includes","variantsNode","buttonname","get","icon","imageClass","classComponent","htmlcode","css","getVariantsState","elements","variantState","variantClass","slice","variantExists","title","updateHtml","selectedVariant","componentClass","classcomponent","previewComponent","variantPreview","variantsHtml","removeVariant","updateVariantButtonState","addVariant","getVariantHtml","activate","showNodes","hideNodes","matchAll","strLang","timestamp","Date","getTime","Math","round","random","compRegex","match","keys","Map","customcomp","replaceCustomPlaceholders","html","compPrefix"],"mappings":"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"}