{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny C4L plugin.\n *\n * @module      tiny_c4l/plugin\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getTinyMCE} from 'editor_tiny/loader';\nimport {getPluginMetadata} from 'editor_tiny/utils';\n\nimport {component, pluginName} from './common';\nimport {register as registerOptions} from './options';\nimport {getSetup as getCommandSetup} from './commands';\nimport * as Configuration from './configuration';\n\n// eslint-disable-next-line no-async-promise-executor\nexport default new Promise(async(resolve) => {\n    const [\n        tinyMCE,\n        pluginMetadata,\n        setupCommands,\n    ] = await Promise.all([\n        getTinyMCE(),\n        getPluginMetadata(component, pluginName),\n        getCommandSetup(),\n    ]);\n\n    tinyMCE.PluginManager.add(pluginName, (editor) => {\n        // Register options.\n        registerOptions(editor);\n\n        // Setup commands.\n        setupCommands(editor);\n\n        return pluginMetadata;\n    });\n\n    // Resolve the C4L Plugin and include configuration.\n    resolve([pluginName, Configuration]);\n});\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","Configuration","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_exports","Promise","async","tinyMCE","pluginMetadata","setupCommands","all","getTinyMCE","getPluginMetadata","component","pluginName","getCommandSetup","PluginManager","add","editor","registerOptions","resolve"],"mappings":"gNA6BiD,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,iFAAjDI,cAAiD,SAAAJ,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAI,IAAAP,GAAA,OAAAG,EAAAK,IAAAR,GAAA,IAAAS,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAf,EAAAe,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAjB,EAAAe,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAd,EAAAe,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAf,EAAAe,GAAAN,OAAAA,EAAAH,QAAAN,EAAAG,GAAAA,EAAAgB,IAAAnB,EAAAS,GAAAA;;;;;;;KAAA,CAAjDW,CAAAhB,eAdAiB,SAAAf,QAiBe,IAAIgB,SAAQC,gBACvB,MACIC,QACAC,eACAC,qBACMJ,QAAQK,IAAI,EAClB,EAAAC,QAAAA,eACA,EAAAC,OAAiBA,mBAACC,kBAAWC,QAAAA,aAC7B,EAAAC,UAAAA,cAGJR,QAAQS,cAAcC,IAAIH,QAAUA,YAAGI,UAEnC,EAAAC,SAAAA,UAAgBD,QAGhBT,cAAcS,QAEPV,kBAIXY,QAAQ,CAACN,QAAAA,WAAY3B,eAAe,IACtC,OAAAiB,SAAAf,OAAA"}