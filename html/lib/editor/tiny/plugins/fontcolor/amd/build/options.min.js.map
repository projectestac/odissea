{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Options helper for Tiny Font Color plugin.\n *\n * @module      tiny_fontcolor\n * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>\n * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPluginOptionName} from 'editor_tiny/options';\nimport {pluginName} from './common';\nimport {isArrayOf, isString, mapColors} from \"./polyfill\";\n\nconst forecolorMap = getPluginOptionName(pluginName, 'textcolors');\nconst backcolorMap = getPluginOptionName(pluginName, 'backgroundcolors');\nconst forecolorPicker = getPluginOptionName(pluginName, 'textcolorpicker');\nconst backcolorPicker = getPluginOptionName(pluginName, 'backgroundcolorpicker');\nconst useCssClassnames = getPluginOptionName(pluginName, 'usecssclassnames');\nconst forecolorClasses = getPluginOptionName(pluginName, 'textcolors_classlist');\nconst backcolorClasses = getPluginOptionName(pluginName, 'backgroundcolors_classlist');\n\n/**\n * Register the options for the Tiny Equation plugin.\n *\n * @param {TinyMCE} editor\n */\nexport const register = (editor) => {\n\n  editor.options.register(forecolorMap, {\n    processor: value => {\n      if (isArrayOf(value, isString)) {\n        return {\n          value: mapColors(value),\n          valid: true\n        };\n      } else {\n        return {\n          valid: false,\n          message: 'Must be an array of strings.'\n        };\n      }\n    },\n    \"default\": [],\n  });\n\n  editor.options.register(backcolorMap, {\n    processor: value => {\n      if (isArrayOf(value, isString)) {\n        return {\n          value: mapColors(value),\n          valid: true\n        };\n      } else {\n        return {\n          valid: false,\n          message: 'Must be an array of strings.'\n        };\n      }\n    },\n    \"default\": [],\n  });\n\n  editor.options.register(forecolorPicker, {\n    processor: 'boolean',\n    \"default\": false,\n  });\n\n  editor.options.register(backcolorPicker, {\n    processor: 'boolean',\n    \"default\": false,\n  });\n\n  editor.options.register(useCssClassnames, {\n    processor: 'boolean',\n    \"default\": false,\n  });\n\n  editor.options.register(forecolorClasses, {\n    processor: value => {\n      return {\n        value: Object.entries(value),\n        valid: true\n      };\n    },\n    \"default\": [],\n  });\n\n  editor.options.register(backcolorClasses, {\n    processor: value => {\n      return {\n        value: Object.entries(value),\n        valid: true\n      };\n    },\n    \"default\": [],\n  });\n};\n\n/**\n * Get the defined colors for the text color.\n *\n * @param {TinyMCE.Editor} editor\n * @returns {array}\n */\nexport const getForecolorMap = (editor) => editor.options.get(forecolorMap);\n/**\n * Get the defined colors for the background color.\n *\n * @param {TinyMCE.Editor} editor\n * @returns {array}\n */\nexport const getBackcolorMap = (editor) => editor.options.get(backcolorMap);\n/**\n * Get whether the color picker for the text color is enabled.\n *\n * @param {TinyMCE.Editor} editor\n * @returns {boolean}\n */\nexport const isForecolorPickerOn = (editor) => editor.options.get(forecolorPicker);\n/**\n * Get whether the color picker for the background color is enabled.\n *\n * @param {TinyMCE.Editor} editor\n * @returns {boolean}\n */\nexport const isBackcolorPickerOn = (editor) => editor.options.get(backcolorPicker);\n/**\n * Get whether the the color codes or css classes are used.\n *\n * @param {TinyMCE.Editor} editor\n * @returns {boolean}\n */\nexport const useCssClasses = (editor) => editor.options.get(useCssClassnames);\n/**\n * Get the list of textcolor css classes.\n *\n * @param {TinyMCE.Editor} editor\n * @returns {boolean}\n */\nexport const getForecolorClasses = (editor) => editor.options.get(forecolorClasses);\n/**\n * Get the list of background color css classes.\n *\n * @param {TinyMCE.Editor} editor\n * @returns {boolean}\n */\nexport const getBackcolorClasses = (editor) => editor.options.get(backcolorClasses);\n"],"names":["forecolorMap","pluginName","backcolorMap","forecolorPicker","backcolorPicker","useCssClassnames","forecolorClasses","backcolorClasses","editor","options","register","processor","value","isString","valid","message","Object","entries","get"],"mappings":";;;;;;;;;MA4BMA,cAAe,gCAAoBC,mBAAY,cAC/CC,cAAe,gCAAoBD,mBAAY,oBAC/CE,iBAAkB,gCAAoBF,mBAAY,mBAClDG,iBAAkB,gCAAoBH,mBAAY,yBAClDI,kBAAmB,gCAAoBJ,mBAAY,oBACnDK,kBAAmB,gCAAoBL,mBAAY,wBACnDM,kBAAmB,gCAAoBN,mBAAY,gDAOhCO,SAEvBA,OAAOC,QAAQC,SAASV,aAAc,CACpCW,UAAWC,QACL,uBAAUA,MAAOC,oBACZ,CACLD,OAAO,uBAAUA,OACjBE,OAAO,GAGF,CACLA,OAAO,EACPC,QAAS,wCAIJ,KAGbP,OAAOC,QAAQC,SAASR,aAAc,CACpCS,UAAWC,QACL,uBAAUA,MAAOC,oBACZ,CACLD,OAAO,uBAAUA,OACjBE,OAAO,GAGF,CACLA,OAAO,EACPC,QAAS,wCAIJ,KAGbP,OAAOC,QAAQC,SAASP,gBAAiB,CACvCQ,UAAW,mBACA,IAGbH,OAAOC,QAAQC,SAASN,gBAAiB,CACvCO,UAAW,mBACA,IAGbH,OAAOC,QAAQC,SAASL,iBAAkB,CACxCM,UAAW,mBACA,IAGbH,OAAOC,QAAQC,SAASJ,iBAAkB,CACxCK,UAAWC,QACF,CACLA,MAAOI,OAAOC,QAAQL,OACtBE,OAAO,YAGA,KAGbN,OAAOC,QAAQC,SAASH,iBAAkB,CACxCI,UAAWC,QACF,CACLA,MAAOI,OAAOC,QAAQL,OACtBE,OAAO,YAGA,+BAUiBN,QAAWA,OAAOC,QAAQS,IAAIlB,uCAO9BQ,QAAWA,OAAOC,QAAQS,IAAIhB,2CAO1BM,QAAWA,OAAOC,QAAQS,IAAIf,8CAO9BK,QAAWA,OAAOC,QAAQS,IAAId,wCAOpCI,QAAWA,OAAOC,QAAQS,IAAIb,+CAOxBG,QAAWA,OAAOC,QAAQS,IAAIZ,+CAO9BE,QAAWA,OAAOC,QAAQS,IAAIX"}