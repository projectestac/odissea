{"version":3,"file":"polyfill.min.js","sources":["../src/polyfill.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Helper functions that come from the theme.js of the TinyMCE and that are\n * heavily used by the colorswat.js.\n *\n * @module      tiny_fontcolor\n * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>\n * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const hasProto = (v, constructor, predicate) => {\n  if (predicate(v, constructor.prototype)) {\n    return true;\n  } else {\n    return v.constructor?.name === constructor.name;\n  }\n};\nexport const typeOf = x => {\n  const t = typeof x;\n  if (x === null) {\n    return 'null';\n  } else if (t === 'object' && Array.isArray(x)) {\n    return 'array';\n  } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n    return 'string';\n  } else {\n    return t;\n  }\n};\nexport const eq$1 = t => a => t === a;\nexport const isType$1 = type => value => typeOf(value) === type;\nexport const isString = isType$1('string');\nexport const isArray = isType$1('array');\nexport const isUndefined = eq$1(undefined);\nexport const isNullable = a => a === null || a === undefined;\nexport const isNonNullable = a => !isNullable(a);\nexport const isArrayOf = (value, pred) => {\n  if (isArray(value)) {\n    for (let i = 0, len = value.length; i < len; ++i) {\n      if (!pred(value[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\nexport const nativeIndexOf = Array.prototype.indexOf;\nexport const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\nexport const indexOf = (xs, x) => {\n  const r = rawIndexOf(xs, x);\n  return r === -1 ? Optional.none() : Optional.some(r);\n};\nexport const noop = () => {\n  // Do nothing.\n};\n\nexport const contains$1 = (str, substr, start = 0, end) => {\n  const idx = str.indexOf(substr, start);\n  if (idx !== -1) {\n    return isUndefined(end) ? true : idx + substr.length <= end;\n  } else {\n    return false;\n  }\n};\nexport const removeFromStart = (str, numChars) => {\n  return str.substring(numChars);\n};\n\nexport const toHex = component => {\n  const hex = component.toString(16);\n  return (hex.length === 1 ? '0' + hex : hex).toUpperCase();\n};\nexport const fromRgba = rgbaColour => {\n  const value = toHex(rgbaColour.red) + toHex(rgbaColour.green) + toHex(rgbaColour.blue) + toHex(rgbaColour.alpha);\n  return hexColour(value);\n};\nexport const rgbRegex = /^\\s*rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*$/i;\nexport const rgbaRegex = /^\\s*rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?(?:\\.\\d+)?)\\s*\\)\\s*$/i;\nexport const fromStringValues = (red, green, blue, alpha) => {\n  const r = parseInt(red, 10);\n  const g = parseInt(green, 10);\n  const b = parseInt(blue, 10);\n  const a = parseFloat(alpha);\n  return rgbaColour(r, g, b, a);\n};\nexport const fromString = rgbaString => {\n  if (rgbaString === 'transparent') {\n    return Optional.some(rgbaColour(0, 0, 0, 0));\n  }\n  const rgbMatch = rgbRegex.exec(rgbaString);\n  if (rgbMatch !== null) {\n    return Optional.some(fromStringValues(rgbMatch[1], rgbMatch[2], rgbMatch[3], '1'));\n  }\n  const rgbaMatch = rgbaRegex.exec(rgbaString);\n  if (rgbaMatch !== null) {\n    return Optional.some(fromStringValues(rgbaMatch[1], rgbaMatch[2], rgbaMatch[3], rgbaMatch[4]));\n  }\n  return Optional.none();\n};\nexport const removeLeading = (str, prefix) => {\n  return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n};\n\nexport const checkRange = (str, substr, start) =>\n  substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n\nexport const hexColour = value => ({value});\nexport const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\nexport const longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nexport const longformAlphaRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nexport const isHexString = hex => shorthandRegex.test(hex) || longformRegex.test(hex) || longformAlphaRegex.test(hex);\nexport const normalizeHex = hex => removeLeading(hex, '#').toUpperCase();\nexport const fromString$1 = hex => isHexString(hex) ? Optional.some({value: normalizeHex(hex)}) : Optional.none();\nexport const startsWith = (str, prefix) => {\n  return checkRange(str, prefix, 0);\n};\nexport const anyToHex = color => fromString$1(color).orThunk(() => fromString(color).map(fromRgba)).getOrThunk(() => {\n  const canvas = document.createElement('canvas');\n  canvas.height = 1;\n  canvas.width = 1;\n  const canvasContext = canvas.getContext('2d');\n  canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n  canvasContext.fillStyle = '#FFFFFF';\n  canvasContext.fillStyle = color;\n  canvasContext.fillRect(0, 0, 1, 1);\n  const rgba = canvasContext.getImageData(0, 0, 1, 1).data;\n  const r = rgba[0];\n  const g = rgba[1];\n  const b = rgba[2];\n  const a = rgba[3];\n  return fromRgba(rgbaColour(r, g, b, a));\n});\nexport const rgbaColour = (red, green, blue, alpha) => ({\n  red,\n  green,\n  blue,\n  alpha\n});\n\nexport const mapColors = colorMap => {\n  const colors = [];\n  for (let i = 0; i < colorMap.length; i += 2) {\n    colors.push({\n      text: colorMap[i + 1],\n      value: '#' + anyToHex(colorMap[i]).value,\n      type: 'choiceitem'\n    });\n  }\n  return colors;\n};\n\nexport class Optional {\n  constructor(tag, value) {\n    this.tag = tag;\n    this.value = value;\n  }\n\n  static some(value) {\n    return new Optional(true, value);\n  }\n\n  static none() {\n    return Optional.singletonNone;\n  }\n\n  fold(onNone, onSome) {\n    if (this.tag) {\n      return onSome(this.value);\n    } else {\n      return onNone();\n    }\n  }\n\n  isSome() {\n    return this.tag;\n  }\n\n  isNone() {\n    return !this.tag;\n  }\n\n  map(mapper) {\n    if (this.tag) {\n      return Optional.some(mapper(this.value));\n    } else {\n      return Optional.none();\n    }\n  }\n\n  bind(binder) {\n    if (this.tag) {\n      return binder(this.value);\n    } else {\n      return Optional.none();\n    }\n  }\n\n  exists(predicate) {\n    return this.tag && predicate(this.value);\n  }\n\n  forall(predicate) {\n    return !this.tag || predicate(this.value);\n  }\n\n  filter(predicate) {\n    if (!this.tag || predicate(this.value)) {\n      return this;\n    } else {\n      return Optional.none();\n    }\n  }\n\n  getOr(replacement) {\n    return this.tag ? this.value : replacement;\n  }\n\n  or(replacement) {\n    return this.tag ? this : replacement;\n  }\n\n  getOrThunk(thunk) {\n    return this.tag ? this.value : thunk();\n  }\n\n  orThunk(thunk) {\n    return this.tag ? this : thunk();\n  }\n\n  getOrDie(message) {\n    if (!this.tag) {\n      throw new Error(message ?? 'Called getOrDie on None');\n    } else {\n      return this.value;\n    }\n  }\n\n  static from(value) {\n    return isNonNullable(value) ? Optional.some(value) : Optional.none();\n  }\n\n  getOrNull() {\n    return this.tag ? this.value : null;\n  }\n\n  getOrUndefined() {\n    return this.value;\n  }\n\n  each(worker) {\n    if (this.tag) {\n      worker(this.value);\n    }\n  }\n\n  toArray() {\n    return this.tag ? [this.value] : [];\n  }\n\n  toString() {\n    return this.tag ? `some(${this.value})` : 'none()';\n  }\n}\n\nOptional.singletonNone = new Optional(false);"],"names":["hasProto","v","constructor","predicate","prototype","name","typeOf","x","t","Array","isArray","String","o","proto","isPrototypeOf","eq$1","a","isType$1","type","value","isString","isUndefined","undefined","isNullable","isNonNullable","pred","i","len","length","nativeIndexOf","indexOf","rawIndexOf","ts","call","xs","r","Optional","none","some","str","substr","start","end","idx","removeFromStart","numChars","substring","toHex","component","hex","toString","toUpperCase","fromRgba","rgbaColour","red","green","blue","alpha","hexColour","rgbRegex","rgbaRegex","fromStringValues","parseInt","g","b","parseFloat","fromString","rgbaString","rgbMatch","exec","rgbaMatch","removeLeading","prefix","startsWith","checkRange","shorthandRegex","longformRegex","longformAlphaRegex","isHexString","test","normalizeHex","fromString$1","anyToHex","color","orThunk","map","getOrThunk","canvas","document","createElement","height","width","canvasContext","getContext","clearRect","fillStyle","fillRect","rgba","getImageData","data","colorMap","colors","push","text","tag","singletonNone","fold","onNone","onSome","this","isSome","isNone","mapper","bind","binder","exists","forall","filter","getOr","replacement","or","thunk","getOrDie","message","Error","getOrNull","getOrUndefined","each","worker","toArray"],"mappings":";;;;;;;;;;MAyBaA,SAAW,CAACC,EAAGC,YAAaC,qBACnCA,UAAUF,EAAGC,YAAYE,oCAGpBH,EAAEC,4DAAaG,QAASH,YAAYG,0DAGlCC,OAASC,UACdC,SAAWD,SACP,OAANA,EACK,OACQ,WAANC,GAAkBC,MAAMC,QAAQH,GAClC,QACQ,WAANC,GAAkBR,SAASO,EAAGI,QAAQ,CAACC,EAAGC,QAAUA,MAAMC,cAAcF,KAC1E,SAEAJ,gCAGEO,KAAOP,GAAKQ,GAAKR,IAAMQ,2BACvBC,SAAWC,MAAQC,OAASb,OAAOa,SAAWD,sCAC9CE,SAAWH,SAAS,2CACpBP,QAAUO,SAAS,wCACnBI,YAAcN,UAAKO,0CACnBC,WAAaP,GAAKA,MAAAA,uCAClBQ,cAAgBR,IAAMO,WAAWP,2DACrB,CAACG,MAAOM,WAC3Bf,QAAQS,OAAQ,KACb,IAAIO,EAAI,EAAGC,IAAMR,MAAMS,OAAQF,EAAIC,MAAOD,MACxCD,KAAKN,MAAMO,WACP,SAGJ,SAEF,SAEIG,cAAgBpB,MAAML,UAAU0B,mDAChCC,WAAa,CAACC,GAAIxB,IAAMqB,cAAcI,KAAKD,GAAIxB,mDACrC,CAAC0B,GAAI3B,WACpB4B,EAAIJ,WAAWG,GAAI3B,UACX,IAAP4B,EAAWC,SAASC,OAASD,SAASE,KAAKH,kBAEhC,2BAIM,SAACI,IAAKC,YAAQC,6DAAQ,EAAGC,iDAC3CC,IAAMJ,IAAIT,QAAQU,OAAQC,cACnB,IAATE,QACKtB,YAAYqB,MAAcC,IAAMH,OAAOZ,QAAUc,YAK/CE,gBAAkB,CAACL,IAAKM,WAC5BN,IAAIO,UAAUD,yDAGVE,MAAQC,kBACbC,IAAMD,UAAUE,SAAS,WACR,IAAfD,IAAIrB,OAAe,IAAMqB,IAAMA,KAAKE,0CAEjCC,SAAWC,mBAChBlC,MAAQ4B,MAAMM,WAAWC,KAAOP,MAAMM,WAAWE,OAASR,MAAMM,WAAWG,MAAQT,MAAMM,WAAWI,cACnGC,UAAUvC,yCAENwC,SAAW,0FACXC,UAAY,mHACZC,iBAAmB,CAACP,IAAKC,MAAOC,KAAMC,eAC3CtB,EAAI2B,SAASR,IAAK,IAClBS,EAAID,SAASP,MAAO,IACpBS,EAAIF,SAASN,KAAM,IACnBxC,EAAIiD,WAAWR,cACdJ,WAAWlB,EAAG4B,EAAGC,EAAGhD,qDAEhBkD,WAAaC,gBACL,gBAAfA,kBACK/B,SAASE,KAAKe,WAAW,EAAG,EAAG,EAAG,UAErCe,SAAWT,SAASU,KAAKF,eACd,OAAbC,gBACKhC,SAASE,KAAKuB,iBAAiBO,SAAS,GAAIA,SAAS,GAAIA,SAAS,GAAI,YAEzEE,UAAYV,UAAUS,KAAKF,mBACf,OAAdG,UACKlC,SAASE,KAAKuB,iBAAiBS,UAAU,GAAIA,UAAU,GAAIA,UAAU,GAAIA,UAAU,KAErFlC,SAASC,6CAELkC,cAAgB,CAAChC,IAAKiC,SAC1BC,WAAWlC,IAAKiC,QAAU5B,gBAAgBL,IAAKiC,OAAO5C,QAAUW,+CAG5DmC,WAAa,CAACnC,IAAKC,OAAQC,QAC3B,KAAXD,QAAiBD,IAAIX,QAAUY,OAAOZ,QAAUW,IAAIC,OAAOC,MAAOA,MAAQD,OAAOZ,UAAYY,4CAElFkB,UAAYvC,SAAWA,MAAAA,2CACvBwD,eAAiB,gFACjBC,cAAgB,uFAChBC,mBAAqB,6GACrBC,YAAc7B,KAAO0B,eAAeI,KAAK9B,MAAQ2B,cAAcG,KAAK9B,MAAQ4B,mBAAmBE,KAAK9B,4CACpG+B,aAAe/B,KAAOsB,cAActB,IAAK,KAAKE,uDAC9C8B,aAAehC,KAAO6B,YAAY7B,KAAOb,SAASE,KAAK,CAACnB,MAAO6D,aAAa/B,OAASb,SAASC,gDAC9FoC,WAAa,CAAClC,IAAKiC,SACvBE,WAAWnC,IAAKiC,OAAQ,wCAEpBU,SAAWC,OAASF,aAAaE,OAAOC,SAAQ,IAAMlB,WAAWiB,OAAOE,IAAIjC,YAAWkC,YAAW,WACvGC,OAASC,SAASC,cAAc,UACtCF,OAAOG,OAAS,EAChBH,OAAOI,MAAQ,QACTC,cAAgBL,OAAOM,WAAW,MACxCD,cAAcE,UAAU,EAAG,EAAGP,OAAOI,MAAOJ,OAAOG,QACnDE,cAAcG,UAAY,UAC1BH,cAAcG,UAAYZ,MAC1BS,cAAcI,SAAS,EAAG,EAAG,EAAG,SAC1BC,KAAOL,cAAcM,aAAa,EAAG,EAAG,EAAG,GAAGC,KAC9ChE,EAAI8D,KAAK,GACTlC,EAAIkC,KAAK,GACTjC,EAAIiC,KAAK,GACTjF,EAAIiF,KAAK,UACR7C,SAASC,WAAWlB,EAAG4B,EAAGC,EAAGhD,wCAEzBqC,WAAa,CAACC,IAAKC,MAAOC,KAAMC,UAC3CH,IAAAA,IACAC,MAAAA,MACAC,KAAAA,KACAC,MAAAA,0DAGuB2C,iBACjBC,OAAS,OACV,IAAI3E,EAAI,EAAGA,EAAI0E,SAASxE,OAAQF,GAAK,EACxC2E,OAAOC,KAAK,CACVC,KAAMH,SAAS1E,EAAI,GACnBP,MAAO,IAAM+D,SAASkB,SAAS1E,IAAIP,MACnCD,KAAM,sBAGHmF,cAGIjE,SACXlC,YAAYsG,IAAKrF,YACVqF,IAAMA,SACNrF,MAAQA,kBAGHA,cACH,IAAIiB,UAAS,EAAMjB,4BAInBiB,SAASqE,cAGlBC,KAAKC,OAAQC,eACPC,KAAKL,IACAI,OAAOC,KAAK1F,OAEZwF,SAIXG,gBACSD,KAAKL,IAGdO,gBACUF,KAAKL,IAGfnB,IAAI2B,eACEH,KAAKL,IACApE,SAASE,KAAK0E,OAAOH,KAAK1F,QAE1BiB,SAASC,OAIpB4E,KAAKC,eACCL,KAAKL,IACAU,OAAOL,KAAK1F,OAEZiB,SAASC,OAIpB8E,OAAOhH,kBACE0G,KAAKL,KAAOrG,UAAU0G,KAAK1F,OAGpCiG,OAAOjH,kBACG0G,KAAKL,KAAOrG,UAAU0G,KAAK1F,OAGrCkG,OAAOlH,kBACA0G,KAAKL,KAAOrG,UAAU0G,KAAK1F,OACvB0F,KAEAzE,SAASC,OAIpBiF,MAAMC,oBACGV,KAAKL,IAAMK,KAAK1F,MAAQoG,YAGjCC,GAAGD,oBACMV,KAAKL,IAAMK,KAAOU,YAG3BjC,WAAWmC,cACFZ,KAAKL,IAAMK,KAAK1F,MAAQsG,QAGjCrC,QAAQqC,cACCZ,KAAKL,IAAMK,KAAOY,QAG3BC,SAASC,YACFd,KAAKL,WAGDK,KAAK1F,YAFN,IAAIyG,MAAMD,MAAAA,QAAAA,QAAW,uCAMnBxG,cACHK,cAAcL,OAASiB,SAASE,KAAKnB,OAASiB,SAASC,OAGhEwF,mBACShB,KAAKL,IAAMK,KAAK1F,MAAQ,KAGjC2G,wBACSjB,KAAK1F,MAGd4G,KAAKC,QACCnB,KAAKL,KACPwB,OAAOnB,KAAK1F,OAIhB8G,iBACSpB,KAAKL,IAAM,CAACK,KAAK1F,OAAS,GAGnC+B,kBACS2D,KAAKL,mBAAcK,KAAK1F,WAAW,qCAI9CiB,SAASqE,cAAgB,IAAIrE,UAAS"}