define("tiny_fontcolor/color-settings",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;
/**
   * Javascript functions to add/remove a row for one color entry that contains
   * two input fields for color name and color hex value. This is suited for and
   * works with the template settings_config_color.mustache only.
   *
   * @module      tiny_fontcolor
   * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>
   * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const handleRow=event=>{event.preventDefault(),event.target.classList.contains("del")?event.target.parentNode.parentNode.remove():event.target.classList.contains("add")&&(element=>{const currRow=element.parentNode.parentNode,newRow=currRow.cloneNode(!0),parts=newRow.querySelector("input").getAttribute("name").split("_"),num=parseInt(parts[parts.length-1]),newNum=num+1,re=new RegExp("_"+num.toString()+"$");newRow.querySelectorAll("input").forEach((input=>{["name","id","value"].forEach((attr=>{if("value"===attr)return void(input.value="");let content=input.getAttribute(attr).replace(re,"_"+newNum.toString());input.setAttribute(attr,content)}))})),currRow.parentNode.insertBefore(newRow,currRow.nextSibling);const button=currRow.querySelector("button");button.classList.remove("add"),button.classList.add("del"),button.innerHTML="-",newRow.querySelector("button").addEventListener("click",(function(e){handleRow(e)}))})(event.target)};_exports.init=name=>{const root=document.querySelector("."+name);if(!root)return;const buttons=root.getElementsByTagName("button");for(let i=0;i<buttons.length;i++)buttons.item(i).addEventListener("click",(function(e){handleRow(e)}))}}));

//# sourceMappingURL=color-settings.min.js.map