define("tiny_recordrtc/commands_screen",["exports","core/str","editor_tiny/utils","./common","./options","./screen_recorder"],(function(_exports,_str,_utils,_common,_options,_screen_recorder){var obj;
/**
   * Tiny Record RTC - record screen command.
   *
   * @module      tiny_recordrtc/commands_screen
   * @copyright   2024 The Open University
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_screen_recorder=(obj=_screen_recorder)&&obj.__esModule?obj:{default:obj};return _exports.default=async()=>{if(!_screen_recorder.default.isBrowserCompatible())return()=>!1;const[screenButtonTitle,buttonImage]=await Promise.all([(0,_str.getString)("screenbuttontitle",_common.component),(0,_utils.getButtonImage)("screen",_common.component)]);return editor=>{if(!(0,_options.isScreenAllowed)(editor)||!editor.editorManager.Env.deviceType.isDesktop())return;editor.ui.registry.addIcon("screen",buttonImage.html),editor.ui.registry.addButton(_common.screenButtonName,{icon:"screen",tooltip:screenButtonTitle,onAction:()=>_screen_recorder.default.display(editor)}),editor.ui.registry.addMenuItem(_common.screenButtonName,{icon:"screen",text:screenButtonTitle,onAction:()=>_screen_recorder.default.display(editor)})}},_exports.default}));

//# sourceMappingURL=commands_screen.min.js.map