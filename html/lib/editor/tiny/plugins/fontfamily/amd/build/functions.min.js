define("tiny_fontfamily/functions",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.typeOf=_exports.isType$1=_exports.isArrayOf=_exports.isArray=_exports.hasProto=void 0;
/**
   * Helper functions that come from the theme.js of the TinyMCE and that are
   * heavily used by the colorswat.js.
   *
   * @module      tiny_fontcolor
   * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>
   * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const hasProto=(v,constructor,predicate)=>{return!!predicate(v,constructor.prototype)||(null===(_v$constructor=v.constructor)||void 0===_v$constructor?void 0:_v$constructor.name)===constructor.name;var _v$constructor};_exports.hasProto=hasProto;const typeOf=x=>{const t=typeof x;return null===x?"null":"object"===t&&Array.isArray(x)?"array":"object"===t&&hasProto(x,String,((o,proto)=>proto.isPrototypeOf(o)))?"string":t};_exports.typeOf=typeOf;const isType$1=type=>value=>typeOf(value)===type;_exports.isType$1=isType$1;const isArray=isType$1("array");_exports.isArray=isArray;_exports.isArrayOf=(value,pred)=>{if(isArray(value)){for(let i=0,len=value.length;i<len;++i)if(!pred(value[i]))return!1;return!0}return!1}}));

//# sourceMappingURL=functions.min.js.map