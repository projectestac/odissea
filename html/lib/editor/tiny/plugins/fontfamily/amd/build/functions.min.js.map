{"version":3,"file":"functions.min.js","sources":["../src/functions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Helper functions that come from the theme.js of the TinyMCE and that are\n * heavily used by the colorswat.js.\n *\n * @module      tiny_fontcolor\n * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>\n * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const hasProto = (v, constructor, predicate) => {\n  if (predicate(v, constructor.prototype)) {\n    return true;\n  } else {\n    return v.constructor?.name === constructor.name;\n  }\n};\nexport const typeOf = x => {\n  const t = typeof x;\n  if (x === null) {\n    return 'null';\n  } else if (t === 'object' && Array.isArray(x)) {\n    return 'array';\n  } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n    return 'string';\n  } else {\n    return t;\n  }\n};\nexport const isType$1 = type => value => typeOf(value) === type;\nexport const isArray = isType$1('array');\nexport const isArrayOf = (value, pred) => {\n  if (isArray(value)) {\n    for (let i = 0, len = value.length; i < len; ++i) {\n      if (!pred(value[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};"],"names":["hasProto","v","constructor","predicate","prototype","name","typeOf","x","t","Array","isArray","String","o","proto","isPrototypeOf","isType$1","type","value","pred","i","len","length"],"mappings":";;;;;;;;;;MAyBaA,SAAW,CAACC,EAAGC,YAAaC,qBACnCA,UAAUF,EAAGC,YAAYE,oCAGpBH,EAAEC,4DAAaG,QAASH,YAAYG,0DAGlCC,OAASC,UACdC,SAAWD,SACP,OAANA,EACK,OACQ,WAANC,GAAkBC,MAAMC,QAAQH,GAClC,QACQ,WAANC,GAAkBR,SAASO,EAAGI,QAAQ,CAACC,EAAGC,QAAUA,MAAMC,cAAcF,KAC1E,SAEAJ,gCAGEO,SAAWC,MAAQC,OAASX,OAAOW,SAAWD,sCAC9CN,QAAUK,SAAS,qDACP,CAACE,MAAOC,WAC3BR,QAAQO,OAAQ,KACb,IAAIE,EAAI,EAAGC,IAAMH,MAAMI,OAAQF,EAAIC,MAAOD,MACxCD,KAAKD,MAAME,WACP,SAGJ,SAEF"}