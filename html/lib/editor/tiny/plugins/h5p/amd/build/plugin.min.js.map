{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny H5P plugin for Moodle.\n *\n * @module      tiny_h5p/plugin\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {getTinyMCE} from 'editor_tiny/loader';\nimport {getPluginMetadata} from 'editor_tiny/utils';\n\nimport {component, pluginName} from './common';\nimport * as FilterContent from './filtercontent';\nimport * as Commands from './commands';\nimport * as Configuration from './configuration';\nimport * as Options from './options';\n\n// Setup the H5P Plugin to add a button and menu option.\n// eslint-disable-next-line no-async-promise-executor\nexport default new Promise(async(resolve) => {\n    const [\n        tinyMCE,\n        setupCommands,\n        pluginMetadata,\n    ] = await Promise.all([\n        getTinyMCE(),\n        Commands.getSetup(),\n        getPluginMetadata(component, pluginName),\n    ]);\n\n    // Note: The PluginManager.add function does not accept a Promise.\n    // Any asynchronous code must be run before this point.\n    tinyMCE.PluginManager.add(`${component}/plugin`, (editor) => {\n        // Register options.\n        Options.register(editor);\n\n        // Setup the Formatter.\n        FilterContent.setup(editor);\n\n        // Setup the Commands (buttons, menu items, and so on).\n        setupCommands(editor);\n\n        return pluginMetadata;\n    });\n\n    // Resolve the H5P Plugin and include configuration.\n    resolve([`${component}/plugin`, Configuration]);\n});\n"],"names":["Promise","async","tinyMCE","setupCommands","pluginMetadata","all","Commands","getSetup","component","pluginName","PluginManager","add","editor","Options","register","FilterContent","setup","resolve","Configuration"],"mappings":";;;;;;;gSAiCe,IAAIA,SAAQC,MAAAA,gBAEnBC,QACAC,cACAC,sBACMJ,QAAQK,IAAI,EAClB,wBACAC,SAASC,YACT,4BAAkBC,kBAAWC,sBAKjCP,QAAQQ,cAAcC,cAAOH,8BAAqBI,SAE9CC,QAAQC,SAASF,QAGjBG,cAAcC,MAAMJ,QAGpBT,cAAcS,QAEPR,kBAIXa,QAAQ,WAAIT,6BAAoBU"}