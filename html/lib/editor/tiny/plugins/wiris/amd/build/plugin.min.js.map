{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["import {getTinyMCE} from 'editor_tiny/loader';\n\nimport {component} from './common';\nimport * as Configuration from './configuration';\nimport * as Config from 'core/config';\n\nexport const baseUrl = `${Config.wwwroot}/lib/editor/tiny/plugins/wiris/js`;\n\nexport default new Promise(async(resolve, reject) => {\n    // eslint-disable-next-line no-unused-vars\n    const [tinyMCE] = await Promise.all([\n        getTinyMCE(),\n    ]);\n\n    const head = document.querySelector('head');\n    let script = head.querySelector('script[data-mathtype=\"mathtype\"]');\n    // If plugin.min.js file is already loaded, execute the init and resolve the promise\n    if (script) {\n        resolve([`${component}/plugin`, Configuration]);\n    }\n\n    // Load plugin.min.js to the head\n    script = document.createElement('script');\n    script.dataset.mathtype = 'mathtype';\n    script.src = `${baseUrl}/plugin.min.js`;\n    script.async = true;\n\n    script.addEventListener('load', () => {\n        resolve([`${component}/plugin`, Configuration]);\n    }, false);\n\n    script.addEventListener('error', (err) => {\n        reject(err);\n    }, false);\n\n    head.append(script);\n});"],"names":["baseUrl","Config","wwwroot","Promise","async","resolve","reject","tinyMCE","all","head","document","querySelector","script","component","Configuration","createElement","dataset","mathtype","src","addEventListener","err","append"],"mappings":"0xCAMaA,kBAAaC,OAAOC,mFAElB,IAAIC,SAAQC,MAAMC,QAASC,gBAE/BC,eAAiBJ,QAAQK,IAAI,EAChC,0BAGEC,KAAOC,SAASC,cAAc,YAChCC,OAASH,KAAKE,cAAc,oCAE5BC,QACAP,QAAQ,WAAIQ,6BAAoBC,gBAIpCF,OAASF,SAASK,cAAc,UAChCH,OAAOI,QAAQC,SAAW,WAC1BL,OAAOM,cAASlB,0BAChBY,OAAOR,OAAQ,EAEfQ,OAAOO,iBAAiB,QAAQ,KAC5Bd,QAAQ,WAAIQ,6BAAoBC,mBACjC,GAEHF,OAAOO,iBAAiB,SAAUC,MAC9Bd,OAAOc,QACR,GAEHX,KAAKY,OAAOT"}