{"version":3,"file":"events.min.js","sources":["../src/events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/ //\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript events for the `editor_atto` plugin.\n *\n * @module     editor_atto/events\n * @copyright  2021 Jun Pataleta <jun@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.10.5\n */\n\nimport {dispatchEvent} from 'core/event_dispatcher';\n\n/**\n * Events for the `editor_atto` plugin.\n *\n * @constant\n * @property {String} attoButtonHighlightToggled See {@link event:attoButtonHighlightToggled}\n */\nexport const eventTypes = {\n    /**\n     * An event triggered when a toolbar button's highlight gets toggled.\n     *\n     * @event attoButtonHighlightToggled\n     * @type {CustomEvent}\n     * @property {HTMLElement} target The button which had its highlight toggled.\n     * @property {object} detail\n     * @property {String} detail.buttonName The name of the Atto button that has had its highlight toggled.\n     * @property {Boolean} detail.highlight True when the button was highlighted. False, otherwise.\n     */\n    attoButtonHighlightToggled: 'editor_atto/attoButtonHighlightToggled',\n};\n\n/**\n * Trigger an event to indicate that a button's highlight was toggled.\n *\n * @method  notifyButtonHighlightToggled\n * @returns {CustomEvent}\n * @fires   attoButtonHighlightToggled\n * @param {HTMLElement} attoButton The button object.\n * @param {String} buttonName The button name.\n * @param {Boolean} highlight True when the button was highlighted. False, otherwise.\n */\nexport const notifyButtonHighlightToggled = (attoButton, buttonName, highlight) => {\n    return dispatchEvent(\n        eventTypes.attoButtonHighlightToggled,\n        {\n            buttonName,\n            highlight,\n        },\n        attoButton\n    );\n};\n"],"names":["eventTypes","attoButtonHighlightToggled","attoButton","buttonName","highlight"],"mappings":";;;;;;;;;MA+BaA,WAAa,CAWtBC,2BAA4B,+GAaY,CAACC,WAAYC,WAAYC,aAC1D,mCACHJ,WAAWC,2BACX,CACIE,WAAAA,WACAC,UAAAA,WAEJF"}