define("core/icon_system",["exports","core/config"],(function(_exports,_config){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_config=(obj=_config)&&obj.__esModule?obj:{default:obj};var _systemImportTransformerGlobalIdentifier="undefined"!=typeof window?window:"undefined"!=typeof self?self:"undefined"!=typeof global?global:{};class IconSystem{static async instance(){return this.iconSystemInstance||(this.iconSystemInstance=(async()=>{const SystemClass=await("function"==typeof _systemImportTransformerGlobalIdentifier.define&&_systemImportTransformerGlobalIdentifier.define.amd?new Promise((function(resolve,reject){_systemImportTransformerGlobalIdentifier.require([_config.default.iconsystemmodule],resolve,reject)})):"undefined"!=typeof module&&module.exports&&"undefined"!=typeof require||"undefined"!=typeof module&&module.component&&_systemImportTransformerGlobalIdentifier.require&&"component"===_systemImportTransformerGlobalIdentifier.require.loader?Promise.resolve(require(_config.default.iconsystemmodule)):Promise.resolve(_systemImportTransformerGlobalIdentifier[_config.default.iconsystemmodule])),instance=new SystemClass;if(!(instance instanceof IconSystem))throw window.console.error("Class is not an IconSystem",SystemClass),Error("Invalid icon system specified ".concat(_config.default.iconsystemmodule,". Class is not an IconSystem."));return await instance.init()})()),await this.iconSystemInstance}init(){return Promise.resolve(this)}renderIcon(key,component,title,template){throw new Error("Abstract function not implemented.")}getTemplateName(){throw new Error("Abstract function not implemented.")}}return _exports.default=IconSystem,function(obj,key,value){key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value}(IconSystem,"iconSystemInstance",null),_exports.default}));

//# sourceMappingURL=icon_system.min.js.map