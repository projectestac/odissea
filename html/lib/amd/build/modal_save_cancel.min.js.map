{"version":3,"sources":["../src/modal_save_cancel.js"],"names":["define","$","Notification","CustomEvents","Modal","ModalEvents","SELECTORS","SAVE_BUTTON","CANCEL_BUTTON","ModalSaveCancel","root","call","getFooter","find","length","exception","message","prototype","Object","create","constructor","setFooter","registerEventListeners","getModal","on","events","activate","e","data","saveEvent","Event","save","getRoot","trigger","isDefaultPrevented","hide","originalEvent","preventDefault","bind","cancelEvent","cancel","setSaveButtonText","value","button","asyncSet","text"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Contain the logic for the save/cancel modal.\n *\n * @module     core/modal_save_cancel\n * @class      modal_save_cancel\n * @package    core\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_events'],\n        function($, Notification, CustomEvents, Modal, ModalEvents) {\n\n    var SELECTORS = {\n        SAVE_BUTTON: '[data-action=\"save\"]',\n        CANCEL_BUTTON: '[data-action=\"cancel\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalSaveCancel = function(root) {\n        Modal.call(this, root);\n\n        if (!this.getFooter().find(SELECTORS.SAVE_BUTTON).length) {\n            Notification.exception({message: 'No save button found'});\n        }\n\n        if (!this.getFooter().find(SELECTORS.CANCEL_BUTTON).length) {\n            Notification.exception({message: 'No cancel button found'});\n        }\n    };\n\n    ModalSaveCancel.prototype = Object.create(Modal.prototype);\n    ModalSaveCancel.prototype.constructor = ModalSaveCancel;\n\n    /**\n     * Override parent implementation to prevent changing the footer content.\n     */\n    ModalSaveCancel.prototype.setFooter = function() {\n        Notification.exception({message: 'Can not change the footer of a save cancel modal'});\n        return;\n    };\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    ModalSaveCancel.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function(e, data) {\n            var saveEvent = $.Event(ModalEvents.save);\n            this.getRoot().trigger(saveEvent, this);\n\n            if (!saveEvent.isDefaultPrevented()) {\n                this.hide();\n                data.originalEvent.preventDefault();\n            }\n        }.bind(this));\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function(e, data) {\n            var cancelEvent = $.Event(ModalEvents.cancel);\n            this.getRoot().trigger(cancelEvent, this);\n\n            if (!cancelEvent.isDefaultPrevented()) {\n                this.hide();\n                data.originalEvent.preventDefault();\n            }\n        }.bind(this));\n    };\n\n    /**\n     * Allows to overwrite the text of \"Save changes\" button.\n     *\n     * This method is overloaded to take either a string value for the button title or a jQuery promise that is resolved with\n     * text most commonly from a Str.get_string call.\n     *\n     * @param {(String|object)} value The button text, or a jQuery promise which will resolve it\n     */\n    ModalSaveCancel.prototype.setSaveButtonText = function(value) {\n        var button = this.getFooter().find(SELECTORS.SAVE_BUTTON);\n\n        this.asyncSet(value, button.text.bind(button));\n    };\n\n    return ModalSaveCancel;\n});\n"],"file":"modal_save_cancel.min.js"}