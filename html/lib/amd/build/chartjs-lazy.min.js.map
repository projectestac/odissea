{"version":3,"file":"chartjs-lazy.min.js","sources":["../src/chartjs-lazy.js"],"sourcesContent":["/*!\n * Chart.js v4.4.2\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\n\n/**\n * Description of import into Moodle:\n *\n * - Download Chartjs source code (zip) file from https://github.com/chartjs/Chart.js/releases/latest.\n * - You must build Chart.js to generate the dist files (https://www.chartjs.org/docs/latest/developers/contributing.html#building-and-testing).\n *   Chart.js will generate a new file dist/chart.umd.js with minified format, in order to avoid the minification\n *   we need to modify rollup.config.js, find below code in the file:\n *   ```\n *   1. // UMD build\n *   2. // dist/chart.umd.js\n *   3. {\n *   4.     input: 'src/index.umd.ts',\n *   5.     plugins: plugins(true),\n *   6.     output: {\n *   7.       ...\n *   8.     },\n *   9. },\n *   ```\n *\n *   Change line 5 into:\n *   ```\n *   plugins: plugins(),\n *   ```\n *\n *   Save the file and run build script again.\n *\n * - Copy /dist/chart.umd.js content to lib/amd/src/chartjs-lazy.js.\n * - Remove below line in the lib/amd/src/chartjs-lazy.js:\n *   ```\n *   //# sourceMappingURL=chart.umd.js.map\n *   ```\n * - Convert line endings to LF-Unix format.\n * - Change the version number and the copyright year at the file header block.\n * - Keep these instructions in the file.\n * - Visit lib/tests/other/chartjstestpage.php to see if the library still works after the update.\n *\n */\n\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nget Colors () { return plugin_colors; },\nget Decimation () { return plugin_decimation; },\nget Filler () { return index; },\nget Legend () { return plugin_legend; },\nget SubTitle () { return plugin_subtitle; },\nget Title () { return plugin_title; },\nget Tooltip () { return plugin_tooltip; }\n});\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone$1(source) {\n    if (isArray(source)) {\n        return source.map(clone$1);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone$1(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone$1(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone$1(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\n/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$2 = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map$2);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map$2[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate$1(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate$1(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nHALF_PI: HALF_PI,\nINFINITY: INFINITY,\nPI: PI,\nPITAU: PITAU,\nQUARTER_PI: QUARTER_PI,\nRAD_PER_DEG: RAD_PER_DEG,\nTAU: TAU,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\n_addGrace: _addGrace,\n_alignPixel: _alignPixel,\n_alignStartEnd: _alignStartEnd,\n_angleBetween: _angleBetween,\n_angleDiff: _angleDiff,\n_arrayUnique: _arrayUnique,\n_attachContext: _attachContext,\n_bezierCurveTo: _bezierCurveTo,\n_bezierInterpolation: _bezierInterpolation,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_capitalize: _capitalize,\n_computeSegments: _computeSegments,\n_createResolver: _createResolver,\n_decimalPlaces: _decimalPlaces,\n_deprecated: _deprecated,\n_descriptors: _descriptors,\n_elementsEqual: _elementsEqual,\n_factorize: _factorize,\n_filterBetween: _filterBetween,\n_getParentNode: _getParentNode,\n_getStartAndCountOfVisiblePoints: _getStartAndCountOfVisiblePoints,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\n_isClickEvent: _isClickEvent,\n_isDomSupported: _isDomSupported,\n_isPointInArea: _isPointInArea,\n_limitValue: _limitValue,\n_longestText: _longestText,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_measureText: _measureText,\n_merger: _merger,\n_mergerIf: _mergerIf,\n_normalizeAngle: _normalizeAngle,\n_parseObjectDataRadialScale: _parseObjectDataRadialScale,\n_pointInLine: _pointInLine,\n_readValueToProps: _readValueToProps,\n_rlookupByKey: _rlookupByKey,\n_scaleRangesChanged: _scaleRangesChanged,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\n_splitKey: _splitKey,\n_steppedInterpolation: _steppedInterpolation,\n_steppedLineTo: _steppedLineTo,\n_textX: _textX,\n_toLeftRightCenter: _toLeftRightCenter,\n_updateBezierControlPoints: _updateBezierControlPoints,\naddRoundedRectPath: addRoundedRectPath,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\ncallback: callback,\nclearCanvas: clearCanvas,\nclipArea: clipArea,\nclone: clone$1,\ncolor: color,\ncreateContext: createContext,\ndebounce: debounce,\ndefined: defined,\ndistanceBetweenPoints: distanceBetweenPoints,\ndrawPoint: drawPoint,\ndrawPointLegend: drawPointLegend,\neach: each,\neasingEffects: effects,\nfiniteOrDefault: finiteOrDefault,\nfontString: fontString,\nformatNumber: formatNumber,\ngetAngleFromPoint: getAngleFromPoint,\ngetHoverColor: getHoverColor,\ngetMaximumSize: getMaximumSize,\ngetRelativePosition: getRelativePosition,\ngetRtlAdapter: getRtlAdapter,\ngetStyle: getStyle,\nisArray: isArray,\nisFinite: isNumberFinite,\nisFunction: isFunction,\nisNullOrUndef: isNullOrUndef,\nisNumber: isNumber,\nisObject: isObject,\nisPatternOrGradient: isPatternOrGradient,\nlistenArrayEvents: listenArrayEvents,\nlog10: log10,\nmerge: merge,\nmergeIf: mergeIf,\nniceNum: niceNum,\nnoop: noop,\noverrideTextDirection: overrideTextDirection,\nreadUsedSize: readUsedSize,\nrenderText: renderText,\nrequestAnimFrame: requestAnimFrame,\nresolve: resolve,\nresolveObjectKey: resolveObjectKey,\nrestoreTextDirection: restoreTextDirection,\nretinaScale: retinaScale,\nsetsEqual: setsEqual,\nsign: sign,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nthrottled: throttled,\ntoDegrees: toDegrees,\ntoDimension: toDimension,\ntoFont: toFont,\ntoFontString: toFontString,\ntoLineHeight: toLineHeight,\ntoPadding: toPadding,\ntoPercentage: toPercentage,\ntoRadians: toRadians,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\nuid: uid,\nunclipArea: unclipArea,\nunlistenArrayEvents: unlistenArrayEvents,\nvalueOrDefault: valueOrDefault\n});\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform,\n_detectPlatform: _detectPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.2\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar _adapters = {\n    _date: DateAdapterBase\n};\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {\n    ...helpers\n};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n    window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));\n"],"names":["global","factory","this","plugins","Object","freeze","__proto__","Colors","plugin_colors","Decimation","plugin_decimation","Filler","index","Legend","plugin_legend","SubTitle","plugin_subtitle","Title","plugin_title","Tooltip","plugin_tooltip","noop","uid","id","isNullOrUndef","value","isArray","Array","type","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","add","reduce","acc","cur","_duration","stop","cancel","remove","delete","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","map$2","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","interpolate$1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","readKey","prefix","resolve","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","helpers","_deprecated","easingEffects","fontString","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","super","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","LineController","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","labelCount","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref8","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","ci","useBorderRadius","_drawArgs","fontOpts","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref9","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","exports","module","define","amd","globalThis","self"],"mappings":"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"}