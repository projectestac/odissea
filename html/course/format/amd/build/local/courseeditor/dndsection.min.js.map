{"version":3,"file":"dndsection.min.js","sources":["../../../src/local/courseeditor/dndsection.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index section component.\n *\n * This component is used to control specific course section interactions like drag and drop\n * in both course index and course content.\n *\n * @module     core_courseformat/local/courseeditor/dndsection\n * @class      core_courseformat/local/courseeditor/dndsection\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent, DragDrop} from 'core/reactive';\n\nexport default class extends BaseComponent {\n\n    /**\n     * Save some values form the state.\n     *\n     * @param {Object} state the current state\n     */\n    configState(state) {\n        this.id = this.element.dataset.id;\n        this.section = state.section.get(this.id);\n        this.course = state.course;\n    }\n\n    /**\n     * Register state values and the drag and drop subcomponent.\n     *\n     * @param {BaseComponent} sectionitem section item component\n     */\n    configDragDrop(sectionitem) {\n        // Drag and drop is only available for components compatible course formats.\n        if (this.reactive.isEditing && this.reactive.supportComponents) {\n            // Init the inner dragable element.\n            this.sectionitem = sectionitem;\n            // Init the dropzone.\n            this.dragdrop = new DragDrop(this);\n            // Save dropzone classes.\n            this.classes = this.dragdrop.getClasses();\n        }\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.sectionitem !== undefined) {\n            this.sectionitem.unregister();\n        }\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    /**\n     * Get the last CM element of that section.\n     *\n     * @returns {element|null} the las course module element of the section.\n     */\n    getLastCm() {\n        return null;\n    }\n\n    // Drag and drop methods.\n\n    /**\n     * The element drop start hook.\n     *\n     * @param {Object} dropdata the dropdata\n     */\n    dragStart(dropdata) {\n        this.reactive.dispatch('sectionDrag', [dropdata.id], true);\n    }\n\n    /**\n     * The element drop end hook.\n     *\n     * @param {Object} dropdata the dropdata\n     */\n    dragEnd(dropdata) {\n        this.reactive.dispatch('sectionDrag', [dropdata.id], false);\n    }\n\n    /**\n     * Validate if the drop data can be dropped over the component.\n     *\n     * @param {Object} dropdata the exported drop data.\n     * @returns {boolean}\n     */\n    validateDropData(dropdata) {\n        // We accept any course module.\n        if (dropdata?.type === 'cm') {\n            return true;\n        }\n        // We accept any section but the section 0 or ourself\n        if (dropdata?.type === 'section') {\n            const sectionzeroid = this.course.sectionlist[0];\n            return dropdata?.id != this.id && dropdata?.id != sectionzeroid && this.id != sectionzeroid;\n        }\n        return false;\n    }\n\n    /**\n     * Display the component dropzone.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    showDropZone(dropdata) {\n        if (dropdata.type == 'cm') {\n            this.getLastCm()?.classList.add(this.classes.DROPDOWN);\n        }\n        if (dropdata.type == 'section') {\n            // The relative move of section depends on the section number.\n            if (this.section.number > dropdata.number) {\n                this.element.classList.remove(this.classes.DROPUP);\n                this.element.classList.add(this.classes.DROPDOWN);\n            } else {\n                this.element.classList.add(this.classes.DROPUP);\n                this.element.classList.remove(this.classes.DROPDOWN);\n            }\n        }\n    }\n\n    /**\n     * Hide the component dropzone.\n     */\n    hideDropZone() {\n        this.getLastCm()?.classList.remove(this.classes.DROPDOWN);\n        this.element.classList.remove(this.classes.DROPUP);\n        this.element.classList.remove(this.classes.DROPDOWN);\n    }\n\n    /**\n     * Drop event handler.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    drop(dropdata) {\n        // Call the move mutation.\n        if (dropdata.type == 'cm') {\n            this.reactive.dispatch('cmMove', [dropdata.id], this.id);\n        }\n        if (dropdata.type == 'section') {\n            this.reactive.dispatch('sectionMove', [dropdata.id], this.id);\n        }\n    }\n}\n"],"names":["BaseComponent","configState","state","id","this","element","dataset","section","get","course","configDragDrop","sectionitem","reactive","isEditing","supportComponents","dragdrop","DragDrop","classes","getClasses","destroy","undefined","unregister","getLastCm","dragStart","dropdata","dispatch","dragEnd","validateDropData","type","sectionzeroid","sectionlist","showDropZone","classList","add","DROPDOWN","number","remove","DROPUP","hideDropZone","drop"],"mappings":";;;;;;;;;;;;uBA6B6BA,wBAOzBC,YAAYC,YACHC,GAAKC,KAAKC,QAAQC,QAAQH,QAC1BI,QAAUL,MAAMK,QAAQC,IAAIJ,KAAKD,SACjCM,OAASP,MAAMO,OAQxBC,eAAeC,aAEPP,KAAKQ,SAASC,WAAaT,KAAKQ,SAASE,yBAEpCH,YAAcA,iBAEdI,SAAW,IAAIC,mBAASZ,WAExBa,QAAUb,KAAKW,SAASG,cAOrCC,eAC6BC,IAArBhB,KAAKO,kBACAA,YAAYU,kBAECD,IAAlBhB,KAAKW,eACAA,SAASM,aAStBC,mBACW,KAUXC,UAAUC,eACDZ,SAASa,SAAS,cAAe,CAACD,SAASrB,KAAK,GAQzDuB,QAAQF,eACCZ,SAASa,SAAS,cAAe,CAACD,SAASrB,KAAK,GASzDwB,iBAAiBH,aAEU,QAAnBA,MAAAA,gBAAAA,SAAUI,aACH,KAGY,aAAnBJ,MAAAA,gBAAAA,SAAUI,MAAoB,OACxBC,cAAgBzB,KAAKK,OAAOqB,YAAY,UACvCN,MAAAA,gBAAAA,SAAUrB,KAAMC,KAAKD,KAAMqB,MAAAA,gBAAAA,SAAUrB,KAAM0B,eAAiBzB,KAAKD,IAAM0B,qBAE3E,EAQXE,aAAaP,8BACY,MAAjBA,SAASI,oCACJN,wDAAaU,UAAUC,IAAI7B,KAAKa,QAAQiB,WAE5B,WAAjBV,SAASI,OAELxB,KAAKG,QAAQ4B,OAASX,SAASW,aAC1B9B,QAAQ2B,UAAUI,OAAOhC,KAAKa,QAAQoB,aACtChC,QAAQ2B,UAAUC,IAAI7B,KAAKa,QAAQiB,iBAEnC7B,QAAQ2B,UAAUC,IAAI7B,KAAKa,QAAQoB,aACnChC,QAAQ2B,UAAUI,OAAOhC,KAAKa,QAAQiB,YAQvDI,kEACShB,0DAAaU,UAAUI,OAAOhC,KAAKa,QAAQiB,eAC3C7B,QAAQ2B,UAAUI,OAAOhC,KAAKa,QAAQoB,aACtChC,QAAQ2B,UAAUI,OAAOhC,KAAKa,QAAQiB,UAQ/CK,KAAKf,UAEoB,MAAjBA,SAASI,WACJhB,SAASa,SAAS,SAAU,CAACD,SAASrB,IAAKC,KAAKD,IAEpC,WAAjBqB,SAASI,WACJhB,SAASa,SAAS,cAAe,CAACD,SAASrB,IAAKC,KAAKD"}