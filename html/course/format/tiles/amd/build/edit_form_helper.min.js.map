{"version":3,"file":"edit_form_helper.min.js","sources":["../src/edit_form_helper.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint space-before-function-paren: 0 */\n\n/**\n * Javascript Module to handle changes which are made to the course > edit settings\n * form as the user changes various options\n * e.g. if user deselects one item, this deselects another linked one for them\n * if the user picks an invalid option it will be detected by format_tiles::edit_form_validation (lib.php)\n * but this is to help them avoid triggering that if they have JS enabled\n *\n * @module      format_tiles/edit_form_helper\n * @copyright   2018 David Watson {@link http://evolutioncode.uk}\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since       Moodle 3.3\n */\n\ndefine([\"jquery\", \"core/notification\", \"core/str\", \"core/templates\"],\n    function ($, Notification, str, Templates) {\n        \"use strict\";\n        return {\n            init: function (pageType, courseDefaultIcon, courseId, allowphototiles, documentationUrl) {\n                $(document).ready(function () {\n                    const useSubTilesCheckBox = $(\"input#id_courseusesubtiles\");\n                    const useSubTilesSecZeroCheckBox = $(\"input#id_usesubtilesseczero\");\n                    if (!useSubTilesCheckBox.prop('checked')) {\n                        // We cannot use sub tiles in top section if we are not using them at all.\n                        useSubTilesSecZeroCheckBox.prop(\"checked\", false);\n                        useSubTilesSecZeroCheckBox.attr('disabled', true);\n                    }\n                    useSubTilesCheckBox.change(function () {\n                        if (!useSubTilesCheckBox.prop('checked')) {\n                            // We cannot use sub tiles in top section if we are not using them at all.\n                            useSubTilesSecZeroCheckBox.prop(\"checked\", false);\n                            useSubTilesSecZeroCheckBox.attr('disabled', true);\n                        } else {\n                            // We are changing to use sub tiles.\n                            // For convenience, uncheck the \"Emphasise headings with coloured tab\" box.\n                            // User can change it back if they want.\n                            $(\"input#id_courseusebarforheadings\").prop(\"checked\", false);\n                            useSubTilesSecZeroCheckBox.attr('disabled', false);\n                        }\n                    });\n                    $(\"select#id_courseshowtileprogress\").change(function (e) {\n                        if (e.currentTarget.value !== \"0\") {\n                            var enableCompBox = $(\"select#id_enablecompletion\");\n                            if (enableCompBox.val() === \"0\") {\n                                // We are changing to show progress on tiles\n                                // For convenience, if completion tracking if off at course level, switch it on and tell the user.\n                                // User can change it back if they want.  See under \"completion tracking > enable.\n                                enableCompBox.val(\"1\");\n                                str.get_strings([\n                                    {key: \"completion\", component: \"completion\"},\n                                    {key: \"completionswitchhelp\", component: \"format_tiles\"}\n                                ]).done(function (s) {\n                                    Notification.alert(\n                                        s[0],\n                                        s[1]\n                                    );\n                                });\n                            }\n                        }\n                    });\n                    $(\"select#id_enablecompletion\").change(function (e) {\n                        if (e.currentTarget.value === \"0\") {\n                            // We are changing switch completion tracking off at course level too.\n                            // See under \"completion tracking > enable.\n                            // It follows that we must be hiding progress on tiles too.\n                            $(\"select#id_courseshowtileprogress\").val(\"0\");\n                        }\n                    });\n\n                    // Create clickable colour swatch for each colour in the select drop down to help user choose.\n                    var colourSelectMenu = $(\"select#id_basecolour\");\n                    Templates.render(\"format_tiles/colour_picker\", {\n                        colours: colourSelectMenu.find(\"option\").map(\n                            function (index, option) {\n                                var optselector = $(option);\n                                var colour = optselector.attr(\"value\");\n                                return {\n                                    colour: colour,\n                                    colourname: optselector.text(),\n                                    selected: colour === colourSelectMenu.val(),\n                                    id: colour.replace(\"#\", \"\")\n                                };\n                            }\n                        ).toArray()\n                    }).done(function (html) {\n                        // Add the newly created colour picker next to the standard select menu.\n                        $(html).insertAfter(colourSelectMenu);\n                        // Now that users are using the colour circles we can hide the text menu.\n                        colourSelectMenu.hide();\n                        // Watch for clicks on each circle and set select menu to correct colour on click.\n\n                        var circles = $(\".colourpickercircle\");\n\n                        circles.click(function (e) {\n                            var clicked = $(e.currentTarget);\n                            circles.removeClass(\"selected\");\n                            clicked.addClass(\"selected\");\n                            colourSelectMenu.val(clicked.data(\"colour\"));\n                            $(\"#colourselectnotify\").fadeIn(200).fadeOut(1200);\n                        });\n\n                        colourSelectMenu.change(function () {\n                            circles.removeClass(\"selected\");\n                            $(\"#colourpick_\" + colourSelectMenu.val().replace(\"#\", \"\")).addClass(\"selected\");\n                        });\n\n                        // If the course is being switched in to \"Tiles\", body will still have old format class e.g. format-topics.\n                        // This comes from core.  We want body to have format-tiles class for our colour picker CSS, so we add it.\n                        var body = $(\"body\");\n                        if (!body.hasClass(\"format-tiles\")) {\n                            body.addClass(\"format-tiles\");\n                        }\n                    });\n\n                    // If we are on the course edit settings form, render a button to be added to it.\n                    // Put it next to the existing drop down select box for course default tile icon.\n                    // Add it to the page.\n\n                    var selectedIconName;\n                    var selectBox;\n                    if (pageType === \"course-edit\") {\n                        selectBox = $(\"#id_defaulttileicon\");\n                        selectedIconName = $(\"#id_defaulttileicon option:selected\").text();\n                        var currentIcon;\n                        if (selectBox.val() === \"\") {\n                            currentIcon = courseDefaultIcon;\n                        } else {\n                            currentIcon = selectBox.val();\n                        }\n                        Templates.render(\"format_tiles/icon_picker_launch_btn\", {\n                            initialicon: currentIcon,\n                            initialname: selectedIconName,\n                            sectionId: 0,\n                            allowphototiles: false // We do not allow a photo to be set as the default at course level.\n                        }).done(function (html) {\n                            $(html).insertAfter(selectBox);\n\n                            // We can hide the original select box now as users will use the button instead.\n                            selectBox.hide();\n                            require([\"format_tiles/edit_icon_picker\"], function(iconPicker) {\n                                iconPicker.init(courseId, pageType, false, documentationUrl);\n                            });\n                        });\n                    }\n\n                    // Add a row to the page with link to plugin documentation.\n                    Templates\n                        .render(\"format_tiles/edit_form_helptext\", {documentationurl: documentationUrl + 'teachers'})\n                        .done(function (html) {\n                            $(html).appendTo($(\"#id_courseformathdr .fcontainer\"));\n                        });\n                });\n            }\n        };\n    }\n);"],"names":["define","$","Notification","str","Templates","init","pageType","courseDefaultIcon","courseId","allowphototiles","documentationUrl","document","ready","useSubTilesCheckBox","useSubTilesSecZeroCheckBox","prop","attr","change","e","currentTarget","value","enableCompBox","val","get_strings","key","component","done","s","alert","selectedIconName","selectBox","currentIcon","colourSelectMenu","render","colours","find","map","index","option","optselector","colour","colourname","text","selected","id","replace","toArray","html","insertAfter","hide","circles","click","clicked","removeClass","addClass","data","fadeIn","fadeOut","body","hasClass","initialicon","initialname","sectionId","require","iconPicker","documentationurl","appendTo"],"mappings":";;;;;;;;;;;;AA8BAA,uCAAO,CAAC,SAAU,oBAAqB,WAAY,mBAC/C,SAAUC,EAAGC,aAAcC,IAAKC,iBAErB,CACHC,KAAM,SAAUC,SAAUC,kBAAmBC,SAAUC,gBAAiBC,kBACpET,EAAEU,UAAUC,OAAM,iBACRC,oBAAsBZ,EAAE,8BACxBa,2BAA6Bb,EAAE,+BAChCY,oBAAoBE,KAAK,aAE1BD,2BAA2BC,KAAK,WAAW,GAC3CD,2BAA2BE,KAAK,YAAY,IAEhDH,oBAAoBI,QAAO,WAClBJ,oBAAoBE,KAAK,YAQ1Bd,EAAE,oCAAoCc,KAAK,WAAW,GACtDD,2BAA2BE,KAAK,YAAY,KAP5CF,2BAA2BC,KAAK,WAAW,GAC3CD,2BAA2BE,KAAK,YAAY,OASpDf,EAAE,oCAAoCgB,QAAO,SAAUC,MACrB,MAA1BA,EAAEC,cAAcC,MAAe,KAC3BC,cAAgBpB,EAAE,8BACM,MAAxBoB,cAAcC,QAIdD,cAAcC,IAAI,KAClBnB,IAAIoB,YAAY,CACZ,CAACC,IAAK,aAAcC,UAAW,cAC/B,CAACD,IAAK,uBAAwBC,UAAW,kBAC1CC,MAAK,SAAUC,GACdzB,aAAa0B,MACTD,EAAE,GACFA,EAAE,YAMtB1B,EAAE,8BAA8BgB,QAAO,SAAUC,GACf,MAA1BA,EAAEC,cAAcC,OAIhBnB,EAAE,oCAAoCqB,IAAI,YAqD9CO,iBACAC,UAIIC,YArDJC,iBAAmB/B,EAAE,yBACzBG,UAAU6B,OAAO,6BAA8B,CAC3CC,QAASF,iBAAiBG,KAAK,UAAUC,KACrC,SAAUC,MAAOC,YACTC,YAActC,EAAEqC,QAChBE,OAASD,YAAYvB,KAAK,eACvB,CACHwB,OAAQA,OACRC,WAAYF,YAAYG,OACxBC,SAAUH,SAAWR,iBAAiBV,MACtCsB,GAAIJ,OAAOK,QAAQ,IAAK,QAGlCC,YACHpB,MAAK,SAAUqB,MAEd9C,EAAE8C,MAAMC,YAAYhB,kBAEpBA,iBAAiBiB,WAGbC,QAAUjD,EAAE,uBAEhBiD,QAAQC,OAAM,SAAUjC,OAChBkC,QAAUnD,EAAEiB,EAAEC,eAClB+B,QAAQG,YAAY,YACpBD,QAAQE,SAAS,YACjBtB,iBAAiBV,IAAI8B,QAAQG,KAAK,WAClCtD,EAAE,uBAAuBuD,OAAO,KAAKC,QAAQ,SAGjDzB,iBAAiBf,QAAO,WACpBiC,QAAQG,YAAY,YACpBpD,EAAE,eAAiB+B,iBAAiBV,MAAMuB,QAAQ,IAAK,KAAKS,SAAS,mBAKrEI,KAAOzD,EAAE,QACRyD,KAAKC,SAAS,iBACfD,KAAKJ,SAAS,mBAUL,gBAAbhD,YACAwB,UAAY7B,EAAE,uBACd4B,iBAAmB5B,EAAE,uCAAuCyC,OAGxDX,YADoB,KAApBD,UAAUR,MACIf,kBAEAuB,UAAUR,MAE5BlB,UAAU6B,OAAO,sCAAuC,CACpD2B,YAAa7B,YACb8B,YAAahC,iBACbiC,UAAW,EACXrD,iBAAiB,IAClBiB,MAAK,SAAUqB,MACd9C,EAAE8C,MAAMC,YAAYlB,WAGpBA,UAAUmB,OACVc,QAAQ,CAAC,kCAAkC,SAASC,YAChDA,WAAW3D,KAAKG,SAAUF,UAAU,EAAOI,yBAMvDN,UACK6B,OAAO,kCAAmC,CAACgC,iBAAkBvD,iBAAmB,aAChFgB,MAAK,SAAUqB,MACZ9C,EAAE8C,MAAMmB,SAASjE,EAAE"}