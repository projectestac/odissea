{"version":3,"file":"filter_buttons.min.js","sources":["../src/filter_buttons.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint space-before-function-paren: 0 */\n\n/**\n * Javascript Module to handle filter buttons which appear above the tiles if used for format_tiles\n *\n * @module      format_tiles/filter_buttons\n * @copyright   2018 David Watson {@link http://evolutioncode.uk}\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since Moodle 3.3\n */\n\ndefine([\"jquery\"], function ($) {\n    \"use strict\";\n\n    var Selector = {\n        FILTER_BUTTON: \".filterbutton\",\n        TILE: \".tile\",\n        COLLAPSING: \".tile-collapsing\",\n        COLLAPSED: \".tile-collapsed\",\n        SPACER: \".spacer\",\n        PAGE_CONTENT: \"#page-content\",\n        REGION_MAIN: \"#region-main\"\n    };\n\n    var ClassNames = {\n        COLLAPSING: \"tile-collapsing\",\n        COLLAPSED: \"tile-collapsed\",\n        SELECTED: \"selected\"\n    };\n\n    var Module = {\n        /**\n         * Which filter button does the user already have pressed\n         * @param {number} courseId the id of the course\n         * @param {boolean} storageEnabled whether the user's device supports local/session storage\n         * @returns {string|null} the filter button id or null if none stored\n         */\n        getPressedFilterButton: function (courseId, storageEnabled) {\n            return storageEnabled\n                ? localStorage.getItem(\"mdl-course-\" + courseId + \"-filter-btn\")\n                : null;\n        },\n\n        setPressedFilterButton: function (courseId, buttonId, storageEnabled) {\n            if (storageEnabled) {\n                if (buttonId === 0) {\n                    localStorage.removeItem(\"mdl-course-\" + courseId + \"-filter-btn\");\n                } else {\n                    localStorage.setItem(\"mdl-course-\" + courseId + \"-filter-btn\", buttonId);\n                }\n            }\n        },\n\n        /**\n         * The filter buttons at the top of the course can be used to collapse or expand tiles (animated via CSS)\n         * This function and other others below handle that when filter buttons are pressed\n         * Tried to use jquery .slideUp() / .slideDown() for this but animation was not smooth, so used this instead\n         * @param {Array|number} tileIds the tile IDs to change\n         */\n        unCollapseTiles: function (tileIds) {\n            tileIds.forEach(function(index, tileId) {\n                $(\"#tile-\" + tileIds[tileId]).addClass(ClassNames.COLLAPSING).removeClass(ClassNames.COLLAPSED);\n            });\n            setTimeout(function () {\n                $(Selector.COLLAPSING).removeClass(ClassNames.COLLAPSING);\n            }, 300);\n        },\n\n        /**\n         * Collapse all tiles in the course\n         */\n        collapseAllTiles: function () {\n            $(Selector.TILE).not($(Selector.COLLAPSED)).not($(Selector.SPACER)).addClass(ClassNames.COLLAPSING);\n            setTimeout(function () {\n                $(Selector.COLLAPSING).addClass(ClassNames.COLLAPSED).removeClass(ClassNames.COLLAPSING);\n            }, 250);\n        },\n\n        /**\n         * Un-collapse all tiles in the present course (animated via CSS) on filter button press\n         */\n        unCollapseAllTiles: function () {\n            setTimeout(function () {\n                $(Selector.FILTER_BUTTON).removeClass(ClassNames.SELECTED);\n                $(Selector.COLLAPSED).addClass(ClassNames.COLLAPSING).removeClass(ClassNames.COLLAPSED);\n                setTimeout(function () {\n                    $(Selector.COLLAPSING).removeClass(ClassNames.COLLAPSING);\n                }, 250);\n                $(\"#filterbutton-all\").addClass(ClassNames.SELECTED);\n            }, 250);\n        }\n    };\n    return {\n        init: function (courseId, storageEnabledLocal) {\n            $(document).ready(function () {\n                const getSectionsForButtons = function (buttons) {\n                    let sections = [];\n                    buttons.forEach(button => {\n                        button = $(button);\n                        if (button.attr('data-sections')) {\n                            const dataSections = JSON.parse(button.attr('data-sections'));\n                            dataSections.forEach(s => {\n                                if (!sections.includes(s)) {\n                                    sections.push(s);\n                                }\n                            });\n                        } else {\n                            // We don't have a data sections attribute so find out which tiles have filter-{x} classes instead.\n                            const newSections = $(\"li.tile.filter-\" + button.attr('data-buttonid')).map(\n                                (index, tile) => {\n                                    return $(tile).attr('data-section');\n                                }\n                            ).toArray();\n                            newSections.forEach(s => {\n                                if (!sections.includes(s)) {\n                                    sections.push(s);\n                                }\n                            });\n                        }\n                    });\n                    return sections;\n                };\n\n                // On page load, if a filter button is already pressed according to user's local storage, press it now.\n                var buttonAlreadyPressed = Module.getPressedFilterButton(courseId, storageEnabledLocal);\n                if (buttonAlreadyPressed) {\n                    var pressedButton = $(\"#filterbutton\" + buttonAlreadyPressed);\n                    if (!pressedButton) {\n                        Module.setPressedFilterButton(courseId, 0);\n                    }\n                    $(Selector.FILTER_BUTTON).removeClass(ClassNames.SELECTED);\n                    const sections = getSectionsForButtons([pressedButton]);\n                    if (sections.length) {\n                    pressedButton.addClass(ClassNames.SELECTED);\n                    Module.collapseAllTiles();\n                    setTimeout(function () {\n                            Module.unCollapseTiles(sections);\n                    }, 250);\n                    Module.setPressedFilterButton(courseId, buttonAlreadyPressed, storageEnabledLocal);\n                    } else {\n                        Module.unCollapseAllTiles();\n                    }\n                } else {\n                    $('#filterbutton-all').addClass(ClassNames.SELECTED);\n                }\n                var pageContent = $(Selector.PAGE_CONTENT);\n                if (pageContent.length === 0) {\n                    // Some themes e.g. RemUI do not have a #page-content div, so use #region-main.\n                    pageContent = $(Selector.REGION_MAIN);\n                }\n                // When a filter button is pressed, mark it as selected and hide/unhide the related tiles.\n                // See @param buttonId {integer|string} the ID of the button pressed.\n                pageContent.on(\"click\", Selector.FILTER_BUTTON, function (e) {\n                    var button = $(e.target);\n                    var buttonId = button.attr(\"data-buttonid\");\n                    if (buttonId === \"all\") {\n                        // If \"All\" button is pressed, un-collapse all tiles.\n                        Module.collapseAllTiles();\n                        setTimeout(function () {\n                            Module.unCollapseAllTiles();\n                        }, 500);\n                        $(Selector.FILTER_BUTTON).removeClass(ClassNames.SELECTED);\n                        Module.setPressedFilterButton(courseId, 0, storageEnabledLocal);\n                        $(\"#filterbutton-all\").addClass(ClassNames.SELECTED);\n                    } else {\n                        // A button except 'All' has been pressed, so collapse all tiles then just reveal the ones we want.\n                        const pressedButtons =\n                            $(Selector.FILTER_BUTTON\n                                + '.' + ClassNames.SELECTED + ':not(\"#filterbutton-all\"):not(\"#filterbutton' + buttonId + '\")');\n                        const pressedButtonsArr = pressedButtons.toArray();\n                        const areUnPressing = button.hasClass(ClassNames.SELECTED);\n                        if (!areUnPressing) {\n                            // We are not 'un-pressing' an already pressed button, so add it in.\n                            pressedButtonsArr.push(button);\n                        }\n                        $(Selector.FILTER_BUTTON).removeClass(ClassNames.SELECTED);\n                        if (!areUnPressing) {\n                            button.addClass(ClassNames.SELECTED);\n                        } else {\n                            button.removeClass(ClassNames.SELECTED);\n                        }\n                        const sections = getSectionsForButtons(pressedButtonsArr);\n                        if (sections.length) {\n                            pressedButtons.addClass(ClassNames.SELECTED);\n                        Module.collapseAllTiles();\n                        setTimeout(function () {\n                                Module.unCollapseTiles(sections);\n                        }, 250);\n                        Module.setPressedFilterButton(courseId, buttonId, storageEnabledLocal);\n                        } else {\n                            Module.unCollapseAllTiles();\n                        }\n                    }\n                });\n            });\n        }\n    };\n});"],"names":["define","$","Selector","ClassNames","Module","courseId","storageEnabled","localStorage","getItem","buttonId","removeItem","setItem","tileIds","forEach","index","tileId","addClass","removeClass","setTimeout","not","init","storageEnabledLocal","document","ready","getSectionsForButtons","buttons","sections","button","attr","JSON","parse","s","includes","push","map","tile","toArray","buttonAlreadyPressed","pressedButton","length","pageContent","on","e","target","pressedButtons","pressedButtonsArr","areUnPressing","hasClass"],"mappings":"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"}