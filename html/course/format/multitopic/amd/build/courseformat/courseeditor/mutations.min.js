define("format_multitopic/courseformat/courseeditor/mutations",["exports","core_courseformat/courseeditor","core_courseformat/local/courseeditor/mutations"],(function(_exports,_courseeditor,_mutations){var obj;function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_mutations=(obj=_mutations)&&obj.__esModule?obj:{default:obj};class MultitopicMutations extends _mutations.default{constructor(){super(...arguments),_defineProperty(this,"sectionMove",(async function(stateManager,sectionIds,targetSectionId){if(!targetSectionId)throw new Error("Mutation sectionMove requires targetSectionId");const course=stateManager.get("course");let subsectionIds=[];for(const sectionId of sectionIds){const section=stateManager.get("section",sectionId);for(let subsection=section;subsection&&(subsection.id==section.id||subsection.levelsan>section.levelsan);subsection=course.sectionlist.length>subsection.number+1?stateManager.get("section",course.sectionlist[subsection.number+1]):null)subsectionIds.push(subsection.id)}this.sectionLock(stateManager,subsectionIds,!0);const updates=await this._callEditWebservice("section_move",course.id,sectionIds,targetSectionId);"function"==typeof this.bulkReset&&this.bulkReset(stateManager),stateManager.processUpdates(updates),this.sectionLock(stateManager,subsectionIds,!1)})),_defineProperty(this,"sectionMoveAfter",(async function(stateManager,sectionIds,targetSectionId){if(!targetSectionId)throw new Error("Mutation sectionMoveAfter requires targetSectionId");const course=stateManager.get("course");let subsectionIds=[];for(const sectionId of sectionIds){const section=stateManager.get("section",sectionId);for(let subsection=section;subsection&&(subsection.id==section.id||subsection.levelsan>section.levelsan);subsection=course.sectionlist.length>subsection.number+1?stateManager.get("section",course.sectionlist[subsection.number+1]):null)subsectionIds.push(subsection.id)}this.sectionLock(stateManager,subsectionIds,!0);const updates=await this._callEditWebservice("section_move_after",course.id,sectionIds,targetSectionId);"function"==typeof this.bulkReset&&this.bulkReset(stateManager),stateManager.processUpdates(updates),this.sectionLock(stateManager,subsectionIds,!1)})),_defineProperty(this,"fmtSectionMoveInto",(async function(stateManager,sectionIds,targetSectionId){if(!targetSectionId)throw new Error("Mutation sectionMoveInto requires targetSectionId");const course=stateManager.get("course");let subsectionIds=[];for(const sectionId of sectionIds){const section=stateManager.get("section",sectionId);for(let subsection=section;subsection&&(subsection.id==section.id||subsection.levelsan>section.levelsan);subsection=course.sectionlist.length>subsection.number+1?stateManager.get("section",course.sectionlist[subsection.number+1]):null)subsectionIds.push(subsection.id)}this.sectionLock(stateManager,subsectionIds,!0);const updates=await this._callEditWebservice("fmt_section_move_into",course.id,sectionIds,targetSectionId);"function"==typeof this.bulkReset&&this.bulkReset(stateManager),stateManager.processUpdates(updates),this.sectionLock(stateManager,subsectionIds,!1)}))}}_exports.init=()=>{(0,_courseeditor.getCurrentCourseEditor)().addMutations(new MultitopicMutations)}}));

//# sourceMappingURL=mutations.min.js.map