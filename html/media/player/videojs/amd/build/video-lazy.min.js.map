{"version":3,"file":"video-lazy.min.js","sources":["../src/video-lazy.js"],"sourcesContent":["/**\n * @license\n * Video.js 7.20.3 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\n (function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojs = factory());\n}(this, (function () { 'use strict';\n\n  var version$5 = \"7.20.3\";\n\n  /**\n   * An Object that contains lifecycle hooks as keys which point to an array\n   * of functions that are run when a lifecycle is triggered\n   *\n   * @private\n   */\n  var hooks_ = {};\n  /**\n   * Get a list of hooks for a specific lifecycle\n   *\n   * @param  {string} type\n   *         the lifecyle to get hooks from\n   *\n   * @param  {Function|Function[]} [fn]\n   *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n   *\n   * @return {Array}\n   *         an array of hooks, or an empty array if there are none.\n   */\n\n  var hooks = function hooks(type, fn) {\n    hooks_[type] = hooks_[type] || [];\n\n    if (fn) {\n      hooks_[type] = hooks_[type].concat(fn);\n    }\n\n    return hooks_[type];\n  };\n  /**\n   * Add a function hook to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  var hook = function hook(type, fn) {\n    hooks(type, fn);\n  };\n  /**\n   * Remove a hook from a specific videojs lifecycle.\n   *\n   * @param  {string} type\n   *         the lifecycle that the function hooked to\n   *\n   * @param  {Function} fn\n   *         The hooked function to remove\n   *\n   * @return {boolean}\n   *         The function that was removed or undef\n   */\n\n\n  var removeHook = function removeHook(type, fn) {\n    var index = hooks(type).indexOf(fn);\n\n    if (index <= -1) {\n      return false;\n    }\n\n    hooks_[type] = hooks_[type].slice();\n    hooks_[type].splice(index, 1);\n    return true;\n  };\n  /**\n   * Add a function hook that will only run once to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  var hookOnce = function hookOnce(type, fn) {\n    hooks(type, [].concat(fn).map(function (original) {\n      var wrapper = function wrapper() {\n        removeHook(type, wrapper);\n        return original.apply(void 0, arguments);\n      };\n\n      return wrapper;\n    }));\n  };\n\n  /**\n   * @file fullscreen-api.js\n   * @module fullscreen-api\n   * @private\n   */\n\n  /**\n   * Store the browser-specific methods for the fullscreen API.\n   *\n   * @type {Object}\n   * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n   * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n   */\n  var FullscreenApi = {\n    prefixed: true\n  }; // browser API methods\n\n  var apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n  ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n  ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n  ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\n  var specApi = apiMap[0];\n  var browserApi; // determine the supported set of functions\n\n  for (var i = 0; i < apiMap.length; i++) {\n    // check for exitFullscreen function\n    if (apiMap[i][1] in document) {\n      browserApi = apiMap[i];\n      break;\n    }\n  } // map the browser API names to the spec API names\n\n\n  if (browserApi) {\n    for (var _i = 0; _i < browserApi.length; _i++) {\n      FullscreenApi[specApi[_i]] = browserApi[_i];\n    }\n\n    FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n  }\n\n  /**\n   * @file create-logger.js\n   * @module create-logger\n   */\n  // This is the private tracking variable for the logging history.\n  var history = [];\n  /**\n   * Log messages to the console and history based on the type of message\n   *\n   * @private\n   * @param  {string} type\n   *         The name of the console method to use.\n   *\n   * @param  {Array} args\n   *         The arguments to be passed to the matching console method.\n   */\n\n  var LogByTypeFactory = function LogByTypeFactory(name, log) {\n    return function (type, level, args) {\n      var lvl = log.levels[level];\n      var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n      if (type !== 'log') {\n        // Add the type to the front of the message when it's not \"log\".\n        args.unshift(type.toUpperCase() + ':');\n      } // Add console prefix after adding to history.\n\n\n      args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n      if (history) {\n        history.push([].concat(args)); // only store 1000 history entries\n\n        var splice = history.length - 1000;\n        history.splice(0, splice > 0 ? splice : 0);\n      } // If there's no console then don't try to output messages, but they will\n      // still be stored in history.\n\n\n      if (!window.console) {\n        return;\n      } // Was setting these once outside of this function, but containing them\n      // in the function makes it easier to test cases where console doesn't exist\n      // when the module is executed.\n\n\n      var fn = window.console[type];\n\n      if (!fn && type === 'debug') {\n        // Certain browsers don't have support for console.debug. For those, we\n        // should default to the closest comparable log.\n        fn = window.console.info || window.console.log;\n      } // Bail out if there's no console or if this type is not allowed by the\n      // current logging level.\n\n\n      if (!fn || !lvl || !lvlRegExp.test(type)) {\n        return;\n      }\n\n      fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    };\n  };\n\n  function createLogger$1(name) {\n    // This is the private tracking variable for logging level.\n    var level = 'info'; // the curried logByType bound to the specific log and history\n\n    var logByType;\n    /**\n     * Logs plain debug messages. Similar to `console.log`.\n     *\n     * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n     * of our JSDoc template, we cannot properly document this as both a function\n     * and a namespace, so its function signature is documented here.\n     *\n     * #### Arguments\n     * ##### *args\n     * Mixed[]\n     *\n     * Any combination of values that could be passed to `console.log()`.\n     *\n     * #### Return Value\n     *\n     * `undefined`\n     *\n     * @namespace\n     * @param    {Mixed[]} args\n     *           One or more messages or objects that should be logged.\n     */\n\n    var log = function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      logByType('log', level, args);\n    }; // This is the logByType helper that the logging methods below use\n\n\n    logByType = LogByTypeFactory(name, log);\n    /**\n     * Create a new sublogger which chains the old name to the new name.\n     *\n     * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n     * ```js\n     *  mylogger('foo');\n     *  // > VIDEOJS: player: foo\n     * ```\n     *\n     * @param {string} name\n     *        The name to add call the new logger\n     * @return {Object}\n     */\n\n    log.createLogger = function (subname) {\n      return createLogger$1(name + ': ' + subname);\n    };\n    /**\n     * Enumeration of available logging levels, where the keys are the level names\n     * and the values are `|`-separated strings containing logging methods allowed\n     * in that logging level. These strings are used to create a regular expression\n     * matching the function name being called.\n     *\n     * Levels provided by Video.js are:\n     *\n     * - `off`: Matches no calls. Any value that can be cast to `false` will have\n     *   this effect. The most restrictive.\n     * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n     *   `log.warn`, and `log.error`).\n     * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n     * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n     * - `warn`: Matches `log.warn` and `log.error` calls.\n     * - `error`: Matches only `log.error` calls.\n     *\n     * @type {Object}\n     */\n\n\n    log.levels = {\n      all: 'debug|log|warn|error',\n      off: '',\n      debug: 'debug|log|warn|error',\n      info: 'log|warn|error',\n      warn: 'warn|error',\n      error: 'error',\n      DEFAULT: level\n    };\n    /**\n     * Get or set the current logging level.\n     *\n     * If a string matching a key from {@link module:log.levels} is provided, acts\n     * as a setter.\n     *\n     * @param  {string} [lvl]\n     *         Pass a valid level to set a new logging level.\n     *\n     * @return {string}\n     *         The current logging level.\n     */\n\n    log.level = function (lvl) {\n      if (typeof lvl === 'string') {\n        if (!log.levels.hasOwnProperty(lvl)) {\n          throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n        }\n\n        level = lvl;\n      }\n\n      return level;\n    };\n    /**\n     * Returns an array containing everything that has been logged to the history.\n     *\n     * This array is a shallow clone of the internal history record. However, its\n     * contents are _not_ cloned; so, mutating objects inside this array will\n     * mutate them in history.\n     *\n     * @return {Array}\n     */\n\n\n    log.history = function () {\n      return history ? [].concat(history) : [];\n    };\n    /**\n     * Allows you to filter the history by the given logger name\n     *\n     * @param {string} fname\n     *        The name to filter by\n     *\n     * @return {Array}\n     *         The filtered list to return\n     */\n\n\n    log.history.filter = function (fname) {\n      return (history || []).filter(function (historyItem) {\n        // if the first item in each historyItem includes `fname`, then it's a match\n        return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n      });\n    };\n    /**\n     * Clears the internal history tracking, but does not prevent further history\n     * tracking.\n     */\n\n\n    log.history.clear = function () {\n      if (history) {\n        history.length = 0;\n      }\n    };\n    /**\n     * Disable history tracking if it is currently enabled.\n     */\n\n\n    log.history.disable = function () {\n      if (history !== null) {\n        history.length = 0;\n        history = null;\n      }\n    };\n    /**\n     * Enable history tracking if it is currently disabled.\n     */\n\n\n    log.history.enable = function () {\n      if (history === null) {\n        history = [];\n      }\n    };\n    /**\n     * Logs error messages. Similar to `console.error`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as an error\n     */\n\n\n    log.error = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return logByType('error', level, args);\n    };\n    /**\n     * Logs warning messages. Similar to `console.warn`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as a warning.\n     */\n\n\n    log.warn = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return logByType('warn', level, args);\n    };\n    /**\n     * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n     * log if `console.debug` is not available\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as debug.\n     */\n\n\n    log.debug = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return logByType('debug', level, args);\n    };\n\n    return log;\n  }\n\n  /**\n   * @file log.js\n   * @module log\n   */\n  var log$1 = createLogger$1('VIDEOJS');\n  var createLogger = log$1.createLogger;\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var _extends_1 = createCommonjsModule(function (module) {\n    function _extends() {\n      module.exports = _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      return _extends.apply(this, arguments);\n    }\n\n    module.exports = _extends;\n  });\n\n  /**\n   * @file obj.js\n   * @module obj\n   */\n\n  /**\n   * @callback obj:EachCallback\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   */\n\n  /**\n   * @callback obj:ReduceCallback\n   *\n   * @param {Mixed} accum\n   *        The value that is accumulating over the reduce loop.\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   *\n   * @return {Mixed}\n   *         The new accumulated value.\n   */\n  var toString$1 = Object.prototype.toString;\n  /**\n   * Get the keys of an Object\n   *\n   * @param {Object}\n   *        The Object to get the keys from\n   *\n   * @return {string[]}\n   *         An array of the keys from the object. Returns an empty array if the\n   *         object passed in was invalid or had no keys.\n   *\n   * @private\n   */\n\n  var keys = function keys(object) {\n    return isObject$1(object) ? Object.keys(object) : [];\n  };\n  /**\n   * Array-like iteration for objects.\n   *\n   * @param {Object} object\n   *        The object to iterate over\n   *\n   * @param {obj:EachCallback} fn\n   *        The callback function which is called for each key in the object.\n   */\n\n\n  function each(object, fn) {\n    keys(object).forEach(function (key) {\n      return fn(object[key], key);\n    });\n  }\n  /**\n   * Array-like reduce for objects.\n   *\n   * @param {Object} object\n   *        The Object that you want to reduce.\n   *\n   * @param {Function} fn\n   *         A callback function which is called for each key in the object. It\n   *         receives the accumulated value and the per-iteration value and key\n   *         as arguments.\n   *\n   * @param {Mixed} [initial = 0]\n   *        Starting value\n   *\n   * @return {Mixed}\n   *         The final accumulated value.\n   */\n\n  function reduce(object, fn, initial) {\n    if (initial === void 0) {\n      initial = 0;\n    }\n\n    return keys(object).reduce(function (accum, key) {\n      return fn(accum, object[key], key);\n    }, initial);\n  }\n  /**\n   * Object.assign-style object shallow merge/extend.\n   *\n   * @param  {Object} target\n   * @param  {Object} ...sources\n   * @return {Object}\n   */\n\n  function assign(target) {\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    if (Object.assign) {\n      return _extends_1.apply(void 0, [target].concat(sources));\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        target[key] = value;\n      });\n    });\n    return target;\n  }\n  /**\n   * Returns whether a value is an object of any kind - including DOM nodes,\n   * arrays, regular expressions, etc. Not functions, though.\n   *\n   * This avoids the gotcha where using `typeof` on a `null` value\n   * results in `'object'`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isObject$1(value) {\n    return !!value && typeof value === 'object';\n  }\n  /**\n   * Returns whether an object appears to be a \"plain\" object - that is, a\n   * direct instance of `Object`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isPlain(value) {\n    return isObject$1(value) && toString$1.call(value) === '[object Object]' && value.constructor === Object;\n  }\n\n  /**\n   * @file computed-style.js\n   * @module computed-style\n   */\n\n  /**\n   * A safe getComputedStyle.\n   *\n   * This is needed because in Firefox, if the player is loaded in an iframe with\n   * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n   * null-check to make sure that the player doesn't break in these cases.\n   *\n   * @function\n   * @param    {Element} el\n   *           The element you want the computed style of\n   *\n   * @param    {string} prop\n   *           The property name you want\n   *\n   * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   */\n  function computedStyle(el, prop) {\n    if (!el || !prop) {\n      return '';\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyleValue;\n\n      try {\n        computedStyleValue = window.getComputedStyle(el);\n      } catch (e) {\n        return '';\n      }\n\n      return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n    }\n\n    return '';\n  }\n\n  /**\n   * @file browser.js\n   * @module browser\n   */\n  var USER_AGENT = window.navigator && window.navigator.userAgent || '';\n  var webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n  var appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n  /**\n   * Whether or not this device is an iPod.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPOD = /iPod/i.test(USER_AGENT);\n  /**\n   * The detected iOS version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {string|null}\n   */\n\n  var IOS_VERSION = function () {\n    var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n    if (match && match[1]) {\n      return match[1];\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is an Android device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANDROID = /Android/i.test(USER_AGENT);\n  /**\n   * The detected Android version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|string|null}\n   */\n\n  var ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n    if (!match) {\n      return null;\n    }\n\n    var major = match[1] && parseFloat(match[1]);\n    var minor = match[2] && parseFloat(match[2]);\n\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is a native Android browser.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n  /**\n   * Whether or not this is Mozilla Firefox.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Microsoft Edge.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_EDGE = /Edg/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Google Chrome.\n   *\n   * This will also be `true` for Chrome on iOS, which will have different support\n   * as it is actually Safari under the hood.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n  /**\n   * The detected Google Chrome version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var CHROME_VERSION = function () {\n    var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n\n    return null;\n  }();\n  /**\n   * The detected Internet Explorer version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var IE_VERSION = function () {\n    var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    var version = result && parseFloat(result[1]);\n\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n\n    return version;\n  }();\n  /**\n   * Whether or not this is desktop Safari.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  /**\n   * Whether or not this is a Windows machine.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  /**\n   * Whether or not this device is touch-enabled.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n  /**\n   * Whether or not this device is an iPad.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  /**\n   * Whether or not this device is an iPhone.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  // The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n  // to identify iPhones, we need to exclude iPads.\n  // http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\n  var IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n  /**\n   * Whether or not this is an iOS device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n  /**\n   * Whether or not this is any flavor of Safari - including iOS.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\n  var browser = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    IS_IPOD: IS_IPOD,\n    IOS_VERSION: IOS_VERSION,\n    IS_ANDROID: IS_ANDROID,\n    ANDROID_VERSION: ANDROID_VERSION,\n    IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n    IS_FIREFOX: IS_FIREFOX,\n    IS_EDGE: IS_EDGE,\n    IS_CHROME: IS_CHROME,\n    CHROME_VERSION: CHROME_VERSION,\n    IE_VERSION: IE_VERSION,\n    IS_SAFARI: IS_SAFARI,\n    IS_WINDOWS: IS_WINDOWS,\n    TOUCH_ENABLED: TOUCH_ENABLED,\n    IS_IPAD: IS_IPAD,\n    IS_IPHONE: IS_IPHONE,\n    IS_IOS: IS_IOS,\n    IS_ANY_SAFARI: IS_ANY_SAFARI\n  });\n\n  /**\n   * @file dom.js\n   * @module dom\n   */\n  /**\n   * Detect if a value is a string with any non-whitespace characters.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check\n   *\n   * @return {boolean}\n   *         Will be `true` if the string is non-blank, `false` otherwise.\n   *\n   */\n\n  function isNonBlankString(str) {\n    // we use str.trim as it will trim any whitespace characters\n    // from the front or back of non-whitespace characters. aka\n    // Any string that contains non-whitespace characters will\n    // still contain them after `trim` but whitespace only strings\n    // will have a length of 0, failing this check.\n    return typeof str === 'string' && Boolean(str.trim());\n  }\n  /**\n   * Throws an error if the passed string has whitespace. This is used by\n   * class methods to be relatively consistent with the classList API.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check for whitespace.\n   *\n   * @throws {Error}\n   *         Throws an error if there is whitespace in the string.\n   */\n\n\n  function throwIfWhitespace(str) {\n    // str.indexOf instead of regex because str.indexOf is faster performance wise.\n    if (str.indexOf(' ') >= 0) {\n      throw new Error('class has illegal whitespace characters');\n    }\n  }\n  /**\n   * Produce a regular expression for matching a className within an elements className.\n   *\n   * @private\n   * @param  {string} className\n   *         The className to generate the RegExp for.\n   *\n   * @return {RegExp}\n   *         The RegExp that will check for a specific `className` in an elements\n   *         className.\n   */\n\n\n  function classRegExp(className) {\n    return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n  }\n  /**\n   * Whether the current DOM interface appears to be real (i.e. not simulated).\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM appears to be real, `false` otherwise.\n   */\n\n\n  function isReal() {\n    // Both document and window will never be undefined thanks to `global`.\n    return document === window.document;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a DOM element.\n   *\n   * @param  {Mixed} value\n   *         The value to check.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a DOM element, `false` otherwise.\n   */\n\n  function isEl(value) {\n    return isObject$1(value) && value.nodeType === 1;\n  }\n  /**\n   * Determines if the current DOM is embedded in an iframe.\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM is embedded in an iframe, `false`\n   *         otherwise.\n   */\n\n  function isInFrame() {\n    // We need a try/catch here because Safari will throw errors when attempting\n    // to get either `parent` or `self`\n    try {\n      return window.parent !== window.self;\n    } catch (x) {\n      return true;\n    }\n  }\n  /**\n   * Creates functions to query the DOM using a given method.\n   *\n   * @private\n   * @param   {string} method\n   *          The method to create the query with.\n   *\n   * @return  {Function}\n   *          The query method\n   */\n\n  function createQuerier(method) {\n    return function (selector, context) {\n      if (!isNonBlankString(selector)) {\n        return document[method](null);\n      }\n\n      if (isNonBlankString(context)) {\n        context = document.querySelector(context);\n      }\n\n      var ctx = isEl(context) ? context : document;\n      return ctx[method] && ctx[method](selector);\n    };\n  }\n  /**\n   * Creates an element and applies properties, attributes, and inserts content.\n   *\n   * @param  {string} [tagName='div']\n   *         Name of tag to be created.\n   *\n   * @param  {Object} [properties={}]\n   *         Element properties to be applied.\n   *\n   * @param  {Object} [attributes={}]\n   *         Element attributes to be applied.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor object.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  function createEl(tagName, properties, attributes, content) {\n    if (tagName === void 0) {\n      tagName = 'div';\n    }\n\n    if (properties === void 0) {\n      properties = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    var el = document.createElement(tagName);\n    Object.getOwnPropertyNames(properties).forEach(function (propName) {\n      var val = properties[propName]; // See #2176\n      // We originally were accepting both properties and attributes in the\n      // same object, but that doesn't work so well.\n\n      if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n        log$1.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n        el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n        // method for it.\n      } else if (propName === 'textContent') {\n        textContent(el, val);\n      } else if (el[propName] !== val || propName === 'tabIndex') {\n        el[propName] = val;\n      }\n    });\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      el.setAttribute(attrName, attributes[attrName]);\n    });\n\n    if (content) {\n      appendContent(el, content);\n    }\n\n    return el;\n  }\n  /**\n   * Injects text into an element, replacing any existing contents entirely.\n   *\n   * @param  {Element} el\n   *         The element to add text content into\n   *\n   * @param  {string} text\n   *         The text content to add.\n   *\n   * @return {Element}\n   *         The element with added text content.\n   */\n\n  function textContent(el, text) {\n    if (typeof el.textContent === 'undefined') {\n      el.innerText = text;\n    } else {\n      el.textContent = text;\n    }\n\n    return el;\n  }\n  /**\n   * Insert an element as the first child node of another\n   *\n   * @param {Element} child\n   *        Element to insert\n   *\n   * @param {Element} parent\n   *        Element to insert child into\n   */\n\n  function prependTo(child, parent) {\n    if (parent.firstChild) {\n      parent.insertBefore(child, parent.firstChild);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n  /**\n   * Check if an element has a class name.\n   *\n   * @param  {Element} element\n   *         Element to check\n   *\n   * @param  {string} classToCheck\n   *         Class name to check for\n   *\n   * @return {boolean}\n   *         Will be `true` if the element has a class, `false` otherwise.\n   *\n   * @throws {Error}\n   *         Throws an error if `classToCheck` has white space.\n   */\n\n  function hasClass(element, classToCheck) {\n    throwIfWhitespace(classToCheck);\n\n    if (element.classList) {\n      return element.classList.contains(classToCheck);\n    }\n\n    return classRegExp(classToCheck).test(element.className);\n  }\n  /**\n   * Add a class name to an element.\n   *\n   * @param  {Element} element\n   *         Element to add class name to.\n   *\n   * @param  {string} classToAdd\n   *         Class name to add.\n   *\n   * @return {Element}\n   *         The DOM element with the added class name.\n   */\n\n  function addClass(element, classToAdd) {\n    if (element.classList) {\n      element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n      // in the case of classList not being supported.\n    } else if (!hasClass(element, classToAdd)) {\n      element.className = (element.className + ' ' + classToAdd).trim();\n    }\n\n    return element;\n  }\n  /**\n   * Remove a class name from an element.\n   *\n   * @param  {Element} element\n   *         Element to remove a class name from.\n   *\n   * @param  {string} classToRemove\n   *         Class name to remove\n   *\n   * @return {Element}\n   *         The DOM element with class name removed.\n   */\n\n  function removeClass(element, classToRemove) {\n    // Protect in case the player gets disposed\n    if (!element) {\n      log$1.warn(\"removeClass was called with an element that doesn't exist\");\n      return null;\n    }\n\n    if (element.classList) {\n      element.classList.remove(classToRemove);\n    } else {\n      throwIfWhitespace(classToRemove);\n      element.className = element.className.split(/\\s+/).filter(function (c) {\n        return c !== classToRemove;\n      }).join(' ');\n    }\n\n    return element;\n  }\n  /**\n   * The callback definition for toggleClass.\n   *\n   * @callback module:dom~PredicateCallback\n   * @param    {Element} element\n   *           The DOM element of the Component.\n   *\n   * @param    {string} classToToggle\n   *           The `className` that wants to be toggled\n   *\n   * @return   {boolean|undefined}\n   *           If `true` is returned, the `classToToggle` will be added to the\n   *           `element`. If `false`, the `classToToggle` will be removed from\n   *           the `element`. If `undefined`, the callback will be ignored.\n   */\n\n  /**\n   * Adds or removes a class name to/from an element depending on an optional\n   * condition or the presence/absence of the class name.\n   *\n   * @param  {Element} element\n   *         The element to toggle a class name on.\n   *\n   * @param  {string} classToToggle\n   *         The class that should be toggled.\n   *\n   * @param  {boolean|module:dom~PredicateCallback} [predicate]\n   *         See the return value for {@link module:dom~PredicateCallback}\n   *\n   * @return {Element}\n   *         The element with a class that has been toggled.\n   */\n\n  function toggleClass(element, classToToggle, predicate) {\n    // This CANNOT use `classList` internally because IE11 does not support the\n    // second parameter to the `classList.toggle()` method! Which is fine because\n    // `classList` will be used by the add/remove functions.\n    var has = hasClass(element, classToToggle);\n\n    if (typeof predicate === 'function') {\n      predicate = predicate(element, classToToggle);\n    }\n\n    if (typeof predicate !== 'boolean') {\n      predicate = !has;\n    } // If the necessary class operation matches the current state of the\n    // element, no action is required.\n\n\n    if (predicate === has) {\n      return;\n    }\n\n    if (predicate) {\n      addClass(element, classToToggle);\n    } else {\n      removeClass(element, classToToggle);\n    }\n\n    return element;\n  }\n  /**\n   * Apply attributes to an HTML element.\n   *\n   * @param {Element} el\n   *        Element to add attributes to.\n   *\n   * @param {Object} [attributes]\n   *        Attributes to be applied.\n   */\n\n  function setAttributes(el, attributes) {\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      var attrValue = attributes[attrName];\n\n      if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n        el.removeAttribute(attrName);\n      } else {\n        el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n      }\n    });\n  }\n  /**\n   * Get an element's attribute values, as defined on the HTML tag.\n   *\n   * Attributes are not the same as properties. They're defined on the tag\n   * or with setAttribute.\n   *\n   * @param  {Element} tag\n   *         Element from which to get tag attributes.\n   *\n   * @return {Object}\n   *         All attributes of the element. Boolean attributes will be `true` or\n   *         `false`, others will be strings.\n   */\n\n  function getAttributes(tag) {\n    var obj = {}; // known boolean attributes\n    // we can check for matching boolean properties, but not all browsers\n    // and not all tags know about these attributes, so, we still want to check them manually\n\n    var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n    if (tag && tag.attributes && tag.attributes.length > 0) {\n      var attrs = tag.attributes;\n\n      for (var i = attrs.length - 1; i >= 0; i--) {\n        var attrName = attrs[i].name;\n        var attrVal = attrs[i].value; // check for known booleans\n        // the matching element property will return a value for typeof\n\n        if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n          // the value of an included boolean attribute is typically an empty\n          // string ('') which would equal false if we just check for a false value.\n          // we also don't want support bad code like autoplay='false'\n          attrVal = attrVal !== null ? true : false;\n        }\n\n        obj[attrName] = attrVal;\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Get the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to get the value of.\n   *\n   * @return {string}\n   *         The value of the attribute.\n   */\n\n  function getAttribute(el, attribute) {\n    return el.getAttribute(attribute);\n  }\n  /**\n   * Set the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   */\n\n  function setAttribute(el, attribute, value) {\n    el.setAttribute(attribute, value);\n  }\n  /**\n   * Remove an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to remove.\n   */\n\n  function removeAttribute(el, attribute) {\n    el.removeAttribute(attribute);\n  }\n  /**\n   * Attempt to block the ability to select text.\n   */\n\n  function blockTextSelection() {\n    document.body.focus();\n\n    document.onselectstart = function () {\n      return false;\n    };\n  }\n  /**\n   * Turn off text selection blocking.\n   */\n\n  function unblockTextSelection() {\n    document.onselectstart = function () {\n      return true;\n    };\n  }\n  /**\n   * Identical to the native `getBoundingClientRect` function, but ensures that\n   * the method is supported at all (it is in all browsers we claim to support)\n   * and that the element is in the DOM before continuing.\n   *\n   * This wrapper function also shims properties which are not provided by some\n   * older browsers (namely, IE8).\n   *\n   * Additionally, some browsers do not support adding properties to a\n   * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n   * properties (except `x` and `y` which are not widely supported). This helps\n   * avoid implementations where keys are non-enumerable.\n   *\n   * @param  {Element} el\n   *         Element whose `ClientRect` we want to calculate.\n   *\n   * @return {Object|undefined}\n   *         Always returns a plain object - or `undefined` if it cannot.\n   */\n\n  function getBoundingClientRect(el) {\n    if (el && el.getBoundingClientRect && el.parentNode) {\n      var rect = el.getBoundingClientRect();\n      var result = {};\n      ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n        if (rect[k] !== undefined) {\n          result[k] = rect[k];\n        }\n      });\n\n      if (!result.height) {\n        result.height = parseFloat(computedStyle(el, 'height'));\n      }\n\n      if (!result.width) {\n        result.width = parseFloat(computedStyle(el, 'width'));\n      }\n\n      return result;\n    }\n  }\n  /**\n   * Represents the position of a DOM element on the page.\n   *\n   * @typedef  {Object} module:dom~Position\n   *\n   * @property {number} left\n   *           Pixels to the left.\n   *\n   * @property {number} top\n   *           Pixels from the top.\n   */\n\n  /**\n   * Get the position of an element in the DOM.\n   *\n   * Uses `getBoundingClientRect` technique from John Resig.\n   *\n   * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n   *\n   * @param  {Element} el\n   *         Element from which to get offset.\n   *\n   * @return {module:dom~Position}\n   *         The position of the element that was passed in.\n   */\n\n  function findPosition(el) {\n    if (!el || el && !el.offsetParent) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    var width = el.offsetWidth;\n    var height = el.offsetHeight;\n    var left = 0;\n    var top = 0;\n\n    while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n      left += el.offsetLeft;\n      top += el.offsetTop;\n      el = el.offsetParent;\n    }\n\n    return {\n      left: left,\n      top: top,\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Represents x and y coordinates for a DOM element or mouse pointer.\n   *\n   * @typedef  {Object} module:dom~Coordinates\n   *\n   * @property {number} x\n   *           x coordinate in pixels\n   *\n   * @property {number} y\n   *           y coordinate in pixels\n   */\n\n  /**\n   * Get the pointer position within an element.\n   *\n   * The base on the coordinates are the bottom left of the element.\n   *\n   * @param  {Element} el\n   *         Element on which to get the pointer position on.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {module:dom~Coordinates}\n   *         A coordinates object corresponding to the mouse position.\n   *\n   */\n\n  function getPointerPosition(el, event) {\n    var translated = {\n      x: 0,\n      y: 0\n    };\n\n    if (IS_IOS) {\n      var item = el;\n\n      while (item && item.nodeName.toLowerCase() !== 'html') {\n        var transform = computedStyle(item, 'transform');\n\n        if (/^matrix/.test(transform)) {\n          var values = transform.slice(7, -1).split(/,\\s/).map(Number);\n          translated.x += values[4];\n          translated.y += values[5];\n        } else if (/^matrix3d/.test(transform)) {\n          var _values = transform.slice(9, -1).split(/,\\s/).map(Number);\n\n          translated.x += _values[12];\n          translated.y += _values[13];\n        }\n\n        item = item.parentNode;\n      }\n    }\n\n    var position = {};\n    var boxTarget = findPosition(event.target);\n    var box = findPosition(el);\n    var boxW = box.width;\n    var boxH = box.height;\n    var offsetY = event.offsetY - (box.top - boxTarget.top);\n    var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n    if (event.changedTouches) {\n      offsetX = event.changedTouches[0].pageX - box.left;\n      offsetY = event.changedTouches[0].pageY + box.top;\n\n      if (IS_IOS) {\n        offsetX -= translated.x;\n        offsetY -= translated.y;\n      }\n    }\n\n    position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n    position.x = Math.max(0, Math.min(1, offsetX / boxW));\n    return position;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a text node.\n   *\n   * @param  {Mixed} value\n   *         Check if this value is a text node.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a text node, `false` otherwise.\n   */\n\n  function isTextNode(value) {\n    return isObject$1(value) && value.nodeType === 3;\n  }\n  /**\n   * Empties the contents of an element.\n   *\n   * @param  {Element} el\n   *         The element to empty children from\n   *\n   * @return {Element}\n   *         The element with no children\n   */\n\n  function emptyEl(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n\n    return el;\n  }\n  /**\n   * This is a mixed value that describes content to be injected into the DOM\n   * via some method. It can be of the following types:\n   *\n   * Type       | Description\n   * -----------|-------------\n   * `string`   | The value will be normalized into a text node.\n   * `Element`  | The value will be accepted as-is.\n   * `TextNode` | The value will be accepted as-is.\n   * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n   * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n   *\n   * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n   */\n\n  /**\n   * Normalizes content for eventual insertion into the DOM.\n   *\n   * This allows a wide range of content definition methods, but helps protect\n   * from falling into the trap of simply writing to `innerHTML`, which could\n   * be an XSS concern.\n   *\n   * The content for an element can be passed in multiple types and\n   * combinations, whose behavior is as follows:\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Array}\n   *         All of the content that was passed in, normalized to an array of\n   *         elements or text nodes.\n   */\n\n  function normalizeContent(content) {\n    // First, invoke content if it is a function. If it produces an array,\n    // that needs to happen before normalization.\n    if (typeof content === 'function') {\n      content = content();\n    } // Next up, normalize to an array, so one or many items can be normalized,\n    // filtered, and returned.\n\n\n    return (Array.isArray(content) ? content : [content]).map(function (value) {\n      // First, invoke value if it is a function to produce a new value,\n      // which will be subsequently normalized to a Node of some kind.\n      if (typeof value === 'function') {\n        value = value();\n      }\n\n      if (isEl(value) || isTextNode(value)) {\n        return value;\n      }\n\n      if (typeof value === 'string' && /\\S/.test(value)) {\n        return document.createTextNode(value);\n      }\n    }).filter(function (value) {\n      return value;\n    });\n  }\n  /**\n   * Normalizes and appends content to an element.\n   *\n   * @param  {Element} el\n   *         Element to append normalized content to.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with appended normalized content.\n   */\n\n  function appendContent(el, content) {\n    normalizeContent(content).forEach(function (node) {\n      return el.appendChild(node);\n    });\n    return el;\n  }\n  /**\n   * Normalizes and inserts content into an element; this is identical to\n   * `appendContent()`, except it empties the element first.\n   *\n   * @param {Element} el\n   *        Element to insert normalized content into.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with inserted normalized content.\n   */\n\n  function insertContent(el, content) {\n    return appendContent(emptyEl(el), content);\n  }\n  /**\n   * Check if an event was a single left click.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {boolean}\n   *         Will be `true` if a single left click, `false` otherwise.\n   */\n\n  function isSingleLeftClick(event) {\n    // Note: if you create something draggable, be sure to\n    // call it on both `mousedown` and `mousemove` event,\n    // otherwise `mousedown` should be enough for a button\n    if (event.button === undefined && event.buttons === undefined) {\n      // Why do we need `buttons` ?\n      // Because, middle mouse sometimes have this:\n      // e.button === 0 and e.buttons === 4\n      // Furthermore, we want to prevent combination click, something like\n      // HOLD middlemouse then left click, that would be\n      // e.button === 0, e.buttons === 5\n      // just `button` is not gonna work\n      // Alright, then what this block does ?\n      // this is for chrome `simulate mobile devices`\n      // I want to support this as well\n      return true;\n    }\n\n    if (event.button === 0 && event.buttons === undefined) {\n      // Touch screen, sometimes on some specific device, `buttons`\n      // doesn't have anything (safari on ios, blackberry...)\n      return true;\n    } // `mouseup` event on a single left click has\n    // `button` and `buttons` equal to 0\n\n\n    if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n      return true;\n    }\n\n    if (event.button !== 0 || event.buttons !== 1) {\n      // This is the reason we have those if else block above\n      // if any special case we can catch and let it slide\n      // we do it above, when get to here, this definitely\n      // is-not-left-click\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Finds a single DOM element matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {Element|null}\n   *         The element that was found or null.\n   */\n\n  var $ = createQuerier('querySelector');\n  /**\n   * Finds a all DOM elements matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {NodeList}\n   *         A element list of elements that were found. Will be empty if none\n   *         were found.\n   *\n   */\n\n  var $$ = createQuerier('querySelectorAll');\n\n  var Dom = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isReal: isReal,\n    isEl: isEl,\n    isInFrame: isInFrame,\n    createEl: createEl,\n    textContent: textContent,\n    prependTo: prependTo,\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    toggleClass: toggleClass,\n    setAttributes: setAttributes,\n    getAttributes: getAttributes,\n    getAttribute: getAttribute,\n    setAttribute: setAttribute,\n    removeAttribute: removeAttribute,\n    blockTextSelection: blockTextSelection,\n    unblockTextSelection: unblockTextSelection,\n    getBoundingClientRect: getBoundingClientRect,\n    findPosition: findPosition,\n    getPointerPosition: getPointerPosition,\n    isTextNode: isTextNode,\n    emptyEl: emptyEl,\n    normalizeContent: normalizeContent,\n    appendContent: appendContent,\n    insertContent: insertContent,\n    isSingleLeftClick: isSingleLeftClick,\n    $: $,\n    $$: $$\n  });\n\n  /**\n   * @file setup.js - Functions for setting up a player without\n   * user interaction based on the data-setup `attribute` of the video tag.\n   *\n   * @module setup\n   */\n  var _windowLoaded = false;\n  var videojs$1;\n  /**\n   * Set up any tags that have a data-setup `attribute` when the player is started.\n   */\n\n  var autoSetup = function autoSetup() {\n    if (videojs$1.options.autoSetup === false) {\n      return;\n    }\n\n    var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n    var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n    var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n    var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n    if (mediaEls && mediaEls.length > 0) {\n      for (var i = 0, e = mediaEls.length; i < e; i++) {\n        var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n        if (mediaEl && mediaEl.getAttribute) {\n          // Make sure this player hasn't already been set up.\n          if (mediaEl.player === undefined) {\n            var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n            // We only auto-setup if they've added the data-setup attr.\n\n            if (options !== null) {\n              // Create new video.js instance.\n              videojs$1(mediaEl);\n            }\n          } // If getAttribute isn't defined, we need to wait for the DOM.\n\n        } else {\n          autoSetupTimeout(1);\n          break;\n        }\n      } // No videos were found, so keep looping unless page is finished loading.\n\n    } else if (!_windowLoaded) {\n      autoSetupTimeout(1);\n    }\n  };\n  /**\n   * Wait until the page is loaded before running autoSetup. This will be called in\n   * autoSetup if `hasLoaded` returns false.\n   *\n   * @param {number} wait\n   *        How long to wait in ms\n   *\n   * @param {module:videojs} [vjs]\n   *        The videojs library function\n   */\n\n\n  function autoSetupTimeout(wait, vjs) {\n    // Protect against breakage in non-browser environments\n    if (!isReal()) {\n      return;\n    }\n\n    if (vjs) {\n      videojs$1 = vjs;\n    }\n\n    window.setTimeout(autoSetup, wait);\n  }\n  /**\n   * Used to set the internal tracking of window loaded state to true.\n   *\n   * @private\n   */\n\n\n  function setWindowLoaded() {\n    _windowLoaded = true;\n    window.removeEventListener('load', setWindowLoaded);\n  }\n\n  if (isReal()) {\n    if (document.readyState === 'complete') {\n      setWindowLoaded();\n    } else {\n      /**\n       * Listen for the load event on window, and set _windowLoaded to true.\n       *\n       * We use a standard event listener here to avoid incrementing the GUID\n       * before any players are created.\n       *\n       * @listens load\n       */\n      window.addEventListener('load', setWindowLoaded);\n    }\n  }\n\n  /**\n   * @file stylesheet.js\n   * @module stylesheet\n   */\n\n  /**\n   * Create a DOM syle element given a className for it.\n   *\n   * @param {string} className\n   *        The className to add to the created style element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  var createStyleElement = function createStyleElement(className) {\n    var style = document.createElement('style');\n    style.className = className;\n    return style;\n  };\n  /**\n   * Add text to a DOM element.\n   *\n   * @param {Element} el\n   *        The Element to add text content to.\n   *\n   * @param {string} content\n   *        The text to add to the element.\n   */\n\n  var setTextContent = function setTextContent(el, content) {\n    if (el.styleSheet) {\n      el.styleSheet.cssText = content;\n    } else {\n      el.textContent = content;\n    }\n  };\n\n  /**\n   * @file guid.js\n   * @module guid\n   */\n  // Default value for GUIDs. This allows us to reset the GUID counter in tests.\n  //\n  // The initial GUID is 3 because some users have come to rely on the first\n  // default player ID ending up as `vjs_video_3`.\n  //\n  // See: https://github.com/videojs/video.js/pull/6216\n  var _initialGuid = 3;\n  /**\n   * Unique ID for an element or function\n   *\n   * @type {Number}\n   */\n\n  var _guid = _initialGuid;\n  /**\n   * Get a unique auto-incrementing ID by number that has not been returned before.\n   *\n   * @return {number}\n   *         A new unique ID.\n   */\n\n  function newGUID() {\n    return _guid++;\n  }\n\n  /**\n   * @file dom-data.js\n   * @module dom-data\n   */\n  var FakeWeakMap;\n\n  if (!window.WeakMap) {\n    FakeWeakMap = /*#__PURE__*/function () {\n      function FakeWeakMap() {\n        this.vdata = 'vdata' + Math.floor(window.performance && window.performance.now() || Date.now());\n        this.data = {};\n      }\n\n      var _proto = FakeWeakMap.prototype;\n\n      _proto.set = function set(key, value) {\n        var access = key[this.vdata] || newGUID();\n\n        if (!key[this.vdata]) {\n          key[this.vdata] = access;\n        }\n\n        this.data[access] = value;\n        return this;\n      };\n\n      _proto.get = function get(key) {\n        var access = key[this.vdata]; // we have data, return it\n\n        if (access) {\n          return this.data[access];\n        } // we don't have data, return nothing.\n        // return undefined explicitly as that's the contract for this method\n\n\n        log$1('We have no data for this element', key);\n        return undefined;\n      };\n\n      _proto.has = function has(key) {\n        var access = key[this.vdata];\n        return access in this.data;\n      };\n\n      _proto[\"delete\"] = function _delete(key) {\n        var access = key[this.vdata];\n\n        if (access) {\n          delete this.data[access];\n          delete key[this.vdata];\n        }\n      };\n\n      return FakeWeakMap;\n    }();\n  }\n  /**\n   * Element Data Store.\n   *\n   * Allows for binding data to an element without putting it directly on the\n   * element. Ex. Event listeners are stored here.\n   * (also from jsninja.com, slightly modified and updated for closure compiler)\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  var DomData = window.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n  /**\n   * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n   * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n   * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n   * robust as jquery's, so there's probably some differences.\n   *\n   * @file events.js\n   * @module events\n   */\n  /**\n   * Clean up the listener cache and dispatchers\n   *\n   * @param {Element|Object} elem\n   *        Element to clean up\n   *\n   * @param {string} type\n   *        Type of event to clean up\n   */\n\n  function _cleanUpEvents(elem, type) {\n    if (!DomData.has(elem)) {\n      return;\n    }\n\n    var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n    if (data.handlers[type].length === 0) {\n      delete data.handlers[type]; // data.handlers[type] = null;\n      // Setting to null was causing an error with data.handlers\n      // Remove the meta-handler from the element\n\n      if (elem.removeEventListener) {\n        elem.removeEventListener(type, data.dispatcher, false);\n      } else if (elem.detachEvent) {\n        elem.detachEvent('on' + type, data.dispatcher);\n      }\n    } // Remove the events object if there are no types left\n\n\n    if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n      delete data.handlers;\n      delete data.dispatcher;\n      delete data.disabled;\n    } // Finally remove the element data if there is no data left\n\n\n    if (Object.getOwnPropertyNames(data).length === 0) {\n      DomData[\"delete\"](elem);\n    }\n  }\n  /**\n   * Loops through an array of event types and calls the requested method for each type.\n   *\n   * @param {Function} fn\n   *        The event method we want to use.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} callback\n   *        Event listener.\n   */\n\n\n  function _handleMultipleEvents(fn, elem, types, callback) {\n    types.forEach(function (type) {\n      // Call the event method for each one of the types\n      fn(elem, type, callback);\n    });\n  }\n  /**\n   * Fix a native event to have standard property values\n   *\n   * @param {Object} event\n   *        Event object to fix.\n   *\n   * @return {Object}\n   *         Fixed event object.\n   */\n\n\n  function fixEvent(event) {\n    if (event.fixed_) {\n      return event;\n    }\n\n    function returnTrue() {\n      return true;\n    }\n\n    function returnFalse() {\n      return false;\n    } // Test if fixing up is needed\n    // Used to check if !event.stopPropagation instead of isPropagationStopped\n    // But native events return true for stopPropagation, but don't have\n    // other expected methods like isPropagationStopped. Seems to be a problem\n    // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n    if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n      var old = event || window.event;\n      event = {}; // Clone the old object so that we can modify the values event = {};\n      // IE8 Doesn't like when you mess with native event properties\n      // Firefox returns false for event.hasOwnProperty('type') and other props\n      //  which makes copying more difficult.\n      // TODO: Probably best to create a whitelist of event props\n\n      for (var key in old) {\n        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n        // and webkitMovementX/Y\n        // Lighthouse complains if Event.path is copied\n        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n          // we still want to if preventDefault isn't supported (IE8).\n          if (!(key === 'returnValue' && old.preventDefault)) {\n            event[key] = old[key];\n          }\n        }\n      } // The event occurred on this element\n\n\n      if (!event.target) {\n        event.target = event.srcElement || document;\n      } // Handle which other element the event is related to\n\n\n      if (!event.relatedTarget) {\n        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n      } // Stop the default browser action\n\n\n      event.preventDefault = function () {\n        if (old.preventDefault) {\n          old.preventDefault();\n        }\n\n        event.returnValue = false;\n        old.returnValue = false;\n        event.defaultPrevented = true;\n      };\n\n      event.defaultPrevented = false; // Stop the event from bubbling\n\n      event.stopPropagation = function () {\n        if (old.stopPropagation) {\n          old.stopPropagation();\n        }\n\n        event.cancelBubble = true;\n        old.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n\n      event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n      event.stopImmediatePropagation = function () {\n        if (old.stopImmediatePropagation) {\n          old.stopImmediatePropagation();\n        }\n\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n\n      event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n      if (event.clientX !== null && event.clientX !== undefined) {\n        var doc = document.documentElement;\n        var body = document.body;\n        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      } // Handle key presses\n\n\n      event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n      // 0 == left; 1 == middle; 2 == right\n\n      if (event.button !== null && event.button !== undefined) {\n        // The following is disabled because it does not pass videojs-standard\n        // and... yikes.\n\n        /* eslint-disable */\n        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n        /* eslint-enable */\n      }\n    }\n\n    event.fixed_ = true; // Returns fixed-up instance\n\n    return event;\n  }\n  /**\n   * Whether passive event listeners are supported\n   */\n\n  var _supportsPassive;\n\n  var supportsPassive = function supportsPassive() {\n    if (typeof _supportsPassive !== 'boolean') {\n      _supportsPassive = false;\n\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            _supportsPassive = true;\n          }\n        });\n        window.addEventListener('test', null, opts);\n        window.removeEventListener('test', null, opts);\n      } catch (e) {// disregard\n      }\n    }\n\n    return _supportsPassive;\n  };\n  /**\n   * Touch events Chrome expects to be passive\n   */\n\n\n  var passiveEvents = ['touchstart', 'touchmove'];\n  /**\n   * Add an event listener to element\n   * It stores the handler function in a separate cache object\n   * and adds a generic handler to the element's event,\n   * along with a unique id (guid) to the element.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string|string[]} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        Event listener.\n   */\n\n  function on(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(on, elem, type, fn);\n    }\n\n    if (!DomData.has(elem)) {\n      DomData.set(elem, {});\n    }\n\n    var data = DomData.get(elem); // We need a place to store all our handler data\n\n    if (!data.handlers) {\n      data.handlers = {};\n    }\n\n    if (!data.handlers[type]) {\n      data.handlers[type] = [];\n    }\n\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    }\n\n    data.handlers[type].push(fn);\n\n    if (!data.dispatcher) {\n      data.disabled = false;\n\n      data.dispatcher = function (event, hash) {\n        if (data.disabled) {\n          return;\n        }\n\n        event = fixEvent(event);\n        var handlers = data.handlers[event.type];\n\n        if (handlers) {\n          // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n          var handlersCopy = handlers.slice(0);\n\n          for (var m = 0, n = handlersCopy.length; m < n; m++) {\n            if (event.isImmediatePropagationStopped()) {\n              break;\n            } else {\n              try {\n                handlersCopy[m].call(elem, event, hash);\n              } catch (e) {\n                log$1.error(e);\n              }\n            }\n          }\n        }\n      };\n    }\n\n    if (data.handlers[type].length === 1) {\n      if (elem.addEventListener) {\n        var options = false;\n\n        if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n          options = {\n            passive: true\n          };\n        }\n\n        elem.addEventListener(type, data.dispatcher, options);\n      } else if (elem.attachEvent) {\n        elem.attachEvent('on' + type, data.dispatcher);\n      }\n    }\n  }\n  /**\n   * Removes event listeners from an element\n   *\n   * @param {Element|Object} elem\n   *        Object to remove listeners from.\n   *\n   * @param {string|string[]} [type]\n   *        Type of listener to remove. Don't include to remove all events from element.\n   *\n   * @param {EventTarget~EventListener} [fn]\n   *        Specific listener to remove. Don't include to remove listeners for an event\n   *        type.\n   */\n\n  function off(elem, type, fn) {\n    // Don't want to add a cache object through getElData if not needed\n    if (!DomData.has(elem)) {\n      return;\n    }\n\n    var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n    if (!data.handlers) {\n      return;\n    }\n\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(off, elem, type, fn);\n    } // Utility function\n\n\n    var removeType = function removeType(el, t) {\n      data.handlers[t] = [];\n\n      _cleanUpEvents(el, t);\n    }; // Are we removing all bound events?\n\n\n    if (type === undefined) {\n      for (var t in data.handlers) {\n        if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n          removeType(elem, t);\n        }\n      }\n\n      return;\n    }\n\n    var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n    if (!handlers) {\n      return;\n    } // If no listener was provided, remove all listeners for type\n\n\n    if (!fn) {\n      removeType(elem, type);\n      return;\n    } // We're only removing a single handler\n\n\n    if (fn.guid) {\n      for (var n = 0; n < handlers.length; n++) {\n        if (handlers[n].guid === fn.guid) {\n          handlers.splice(n--, 1);\n        }\n      }\n    }\n\n    _cleanUpEvents(elem, type);\n  }\n  /**\n   * Trigger an event for an element\n   *\n   * @param {Element|Object} elem\n   *        Element to trigger an event on\n   *\n   * @param {EventTarget~Event|string} event\n   *        A string (the type) or an event object with a type attribute\n   *\n   * @param {Object} [hash]\n   *        data hash to pass along with the event\n   *\n   * @return {boolean|undefined}\n   *         Returns the opposite of `defaultPrevented` if default was\n   *         prevented. Otherwise, returns `undefined`\n   */\n\n  function trigger(elem, event, hash) {\n    // Fetches element data and a reference to the parent (for bubbling).\n    // Don't want to add a data object to cache for every parent,\n    // so checking hasElData first.\n    var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n    var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n    // handler;\n    // If an event name was passed as a string, creates an event out of it\n\n    if (typeof event === 'string') {\n      event = {\n        type: event,\n        target: elem\n      };\n    } else if (!event.target) {\n      event.target = elem;\n    } // Normalizes the event properties.\n\n\n    event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n    if (elemData.dispatcher) {\n      elemData.dispatcher.call(elem, event, hash);\n    } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n    // recursively calls this function to bubble the event up the DOM.\n\n\n    if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n      trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n    } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n      if (!DomData.has(event.target)) {\n        DomData.set(event.target, {});\n      }\n\n      var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n      if (event.target[event.type]) {\n        // Temporarily disables event dispatching on the target as we have already executed the handler.\n        targetData.disabled = true; // Executes the default action.\n\n        if (typeof event.target[event.type] === 'function') {\n          event.target[event.type]();\n        } // Re-enables event dispatching.\n\n\n        targetData.disabled = false;\n      }\n    } // Inform the triggerer if the default was prevented by returning false\n\n\n    return !event.defaultPrevented;\n  }\n  /**\n   * Trigger a listener only once for an event.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n\n  function one(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(one, elem, type, fn);\n    }\n\n    var func = function func() {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n    func.guid = fn.guid = fn.guid || newGUID();\n    on(elem, type, func);\n  }\n  /**\n   * Trigger a listener only once and then turn if off for all\n   * configured events\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n\n  function any(elem, type, fn) {\n    var func = function func() {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n    func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n    on(elem, type, func);\n  }\n\n  var Events = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    fixEvent: fixEvent,\n    on: on,\n    off: off,\n    trigger: trigger,\n    one: one,\n    any: any\n  });\n\n  /**\n   * @file fn.js\n   * @module fn\n   */\n  var UPDATE_REFRESH_INTERVAL = 30;\n  /**\n   * Bind (a.k.a proxy or context). A simple method for changing the context of\n   * a function.\n   *\n   * It also stores a unique id on the function so it can be easily removed from\n   * events.\n   *\n   * @function\n   * @param    {Mixed} context\n   *           The object to bind as scope.\n   *\n   * @param    {Function} fn\n   *           The function to be bound to a scope.\n   *\n   * @param    {number} [uid]\n   *           An optional unique ID for the function to be set\n   *\n   * @return   {Function}\n   *           The new function that will be bound into the context given\n   */\n\n  var bind = function bind(context, fn, uid) {\n    // Make sure the function has a unique ID\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    } // Create the new function that changes the context\n\n\n    var bound = fn.bind(context); // Allow for the ability to individualize this function\n    // Needed in the case where multiple objects might share the same prototype\n    // IF both items add an event listener with the same function, then you try to remove just one\n    // it will remove both because they both have the same guid.\n    // when using this, you need to use the bind method when you remove the listener as well.\n    // currently used in text tracks\n\n    bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n    return bound;\n  };\n  /**\n   * Wraps the given function, `fn`, with a new function that only invokes `fn`\n   * at most once per every `wait` milliseconds.\n   *\n   * @function\n   * @param    {Function} fn\n   *           The function to be throttled.\n   *\n   * @param    {number}   wait\n   *           The number of milliseconds by which to throttle.\n   *\n   * @return   {Function}\n   */\n\n  var throttle = function throttle(fn, wait) {\n    var last = window.performance.now();\n\n    var throttled = function throttled() {\n      var now = window.performance.now();\n\n      if (now - last >= wait) {\n        fn.apply(void 0, arguments);\n        last = now;\n      }\n    };\n\n    return throttled;\n  };\n  /**\n   * Creates a debounced function that delays invoking `func` until after `wait`\n   * milliseconds have elapsed since the last time the debounced function was\n   * invoked.\n   *\n   * Inspired by lodash and underscore implementations.\n   *\n   * @function\n   * @param    {Function} func\n   *           The function to wrap with debounce behavior.\n   *\n   * @param    {number} wait\n   *           The number of milliseconds to wait after the last invocation.\n   *\n   * @param    {boolean} [immediate]\n   *           Whether or not to invoke the function immediately upon creation.\n   *\n   * @param    {Object} [context=window]\n   *           The \"context\" in which the debounced function should debounce. For\n   *           example, if this function should be tied to a Video.js player,\n   *           the player can be passed here. Alternatively, defaults to the\n   *           global `window` object.\n   *\n   * @return   {Function}\n   *           A debounced function.\n   */\n\n  var debounce = function debounce(func, wait, immediate, context) {\n    if (context === void 0) {\n      context = window;\n    }\n\n    var timeout;\n\n    var cancel = function cancel() {\n      context.clearTimeout(timeout);\n      timeout = null;\n    };\n    /* eslint-disable consistent-this */\n\n\n    var debounced = function debounced() {\n      var self = this;\n      var args = arguments;\n\n      var _later = function later() {\n        timeout = null;\n        _later = null;\n\n        if (!immediate) {\n          func.apply(self, args);\n        }\n      };\n\n      if (!timeout && immediate) {\n        func.apply(self, args);\n      }\n\n      context.clearTimeout(timeout);\n      timeout = context.setTimeout(_later, wait);\n    };\n    /* eslint-enable consistent-this */\n\n\n    debounced.cancel = cancel;\n    return debounced;\n  };\n\n  /**\n   * @file src/js/event-target.js\n   */\n  /**\n   * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n   * adds shorthand functions that wrap around lengthy functions. For example:\n   * the `on` function is a wrapper around `addEventListener`.\n   *\n   * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n   * @class EventTarget\n   */\n\n  var EventTarget$2 = function EventTarget() {};\n  /**\n   * A Custom DOM event.\n   *\n   * @typedef {Object} EventTarget~Event\n   * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n   */\n\n  /**\n   * All event listeners should follow the following format.\n   *\n   * @callback EventTarget~EventListener\n   * @this {EventTarget}\n   *\n   * @param {EventTarget~Event} event\n   *        the event that triggered this function\n   *\n   * @param {Object} [hash]\n   *        hash of data sent during the event\n   */\n\n  /**\n   * An object containing event names as keys and booleans as values.\n   *\n   * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n   *         will have extra functionality. See that function for more information.\n   *\n   * @property EventTarget.prototype.allowedEvents_\n   * @private\n   */\n\n\n  EventTarget$2.prototype.allowedEvents_ = {};\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to call with `EventTarget`s\n   */\n\n  EventTarget$2.prototype.on = function (type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    on(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#on}\n   */\n\n\n  EventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to remove.\n   */\n\n  EventTarget$2.prototype.off = function (type, fn) {\n    off(this, type, fn);\n  };\n  /**\n   * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#off}\n   */\n\n\n  EventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to be called once for each event name.\n   */\n\n  EventTarget$2.prototype.one = function (type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    one(this, type, fn);\n    this.addEventListener = ael;\n  };\n\n  EventTarget$2.prototype.any = function (type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    any(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n\n\n  EventTarget$2.prototype.trigger = function (event) {\n    var type = event.type || event; // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n\n    if (typeof event === 'string') {\n      event = {\n        type: type\n      };\n    }\n\n    event = fixEvent(event);\n\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n\n    trigger(this, event);\n  };\n  /**\n   * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#trigger}\n   */\n\n\n  EventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n  var EVENT_MAP;\n\n  EventTarget$2.prototype.queueTrigger = function (event) {\n    var _this = this;\n\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n\n    var type = event.type || event;\n    var map = EVENT_MAP.get(this);\n\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n\n    var oldTimeout = map.get(type);\n    map[\"delete\"](type);\n    window.clearTimeout(oldTimeout);\n    var timeout = window.setTimeout(function () {\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP[\"delete\"](_this);\n      }\n\n      _this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  };\n\n  /**\n   * @file mixins/evented.js\n   * @module evented\n   */\n\n  var objName = function objName(obj) {\n    if (typeof obj.name === 'function') {\n      return obj.name();\n    }\n\n    if (typeof obj.name === 'string') {\n      return obj.name;\n    }\n\n    if (obj.name_) {\n      return obj.name_;\n    }\n\n    if (obj.constructor && obj.constructor.name) {\n      return obj.constructor.name;\n    }\n\n    return typeof obj;\n  };\n  /**\n   * Returns whether or not an object has had the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to test.\n   *\n   * @return {boolean}\n   *         Whether or not the object appears to be evented.\n   */\n\n\n  var isEvented = function isEvented(object) {\n    return object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n      return typeof object[k] === 'function';\n    });\n  };\n  /**\n   * Adds a callback to run after the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to Add\n   * @param  {Function} callback\n   *         The callback to run.\n   */\n\n\n  var addEventedCallback = function addEventedCallback(target, callback) {\n    if (isEvented(target)) {\n      callback();\n    } else {\n      if (!target.eventedCallbacks) {\n        target.eventedCallbacks = [];\n      }\n\n      target.eventedCallbacks.push(callback);\n    }\n  };\n  /**\n   * Whether a value is a valid event type - non-empty string or array.\n   *\n   * @private\n   * @param  {string|Array} type\n   *         The type value to test.\n   *\n   * @return {boolean}\n   *         Whether or not the type is a valid event type.\n   */\n\n\n  var isValidEventType = function isValidEventType(type) {\n    return (// The regex here verifies that the `type` contains at least one non-\n      // whitespace character.\n      typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n    );\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the target does not appear to be a valid event target.\n   *\n   * @param  {Object} target\n   *         The object to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateTarget = function validateTarget(target, obj, fnName) {\n    if (!target || !target.nodeName && !isEvented(target)) {\n      throw new Error(\"Invalid target for \" + objName(obj) + \"#\" + fnName + \"; must be a DOM node or evented object.\");\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the type does not appear to be a valid event type.\n   *\n   * @param  {string|Array} type\n   *         The type to test.\n   *\n   * @param  {Object} obj\n  *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateEventType = function validateEventType(type, obj, fnName) {\n    if (!isValidEventType(type)) {\n      throw new Error(\"Invalid event type for \" + objName(obj) + \"#\" + fnName + \"; must be a non-empty string or array.\");\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid listener. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the listener is not a function.\n   *\n   * @param  {Function} listener\n   *         The listener to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateListener = function validateListener(listener, obj, fnName) {\n    if (typeof listener !== 'function') {\n      throw new Error(\"Invalid listener for \" + objName(obj) + \"#\" + fnName + \"; must be a function.\");\n    }\n  };\n  /**\n   * Takes an array of arguments given to `on()` or `one()`, validates them, and\n   * normalizes them into an object.\n   *\n   * @private\n   * @param  {Object} self\n   *         The evented object on which `on()` or `one()` was called. This\n   *         object will be bound as the `this` value for the listener.\n   *\n   * @param  {Array} args\n   *         An array of arguments passed to `on()` or `one()`.\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   *\n   * @return {Object}\n   *         An object containing useful values for `on()` or `one()` calls.\n   */\n\n\n  var normalizeListenArgs = function normalizeListenArgs(self, args, fnName) {\n    // If the number of arguments is less than 3, the target is always the\n    // evented object itself.\n    var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n    var target;\n    var type;\n    var listener;\n\n    if (isTargetingSelf) {\n      target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n      // the evented object itself.\n\n      if (args.length >= 3) {\n        args.shift();\n      }\n\n      type = args[0];\n      listener = args[1];\n    } else {\n      target = args[0];\n      type = args[1];\n      listener = args[2];\n    }\n\n    validateTarget(target, self, fnName);\n    validateEventType(type, self, fnName);\n    validateListener(listener, self, fnName);\n    listener = bind(self, listener);\n    return {\n      isTargetingSelf: isTargetingSelf,\n      target: target,\n      type: type,\n      listener: listener\n    };\n  };\n  /**\n   * Adds the listener to the event type(s) on the target, normalizing for\n   * the type of target.\n   *\n   * @private\n   * @param  {Element|Object} target\n   *         A DOM node or evented object.\n   *\n   * @param  {string} method\n   *         The event binding method to use (\"on\" or \"one\").\n   *\n   * @param  {string|Array} type\n   *         One or more event type(s).\n   *\n   * @param  {Function} listener\n   *         A listener function.\n   */\n\n\n  var listen = function listen(target, method, type, listener) {\n    validateTarget(target, target, method);\n\n    if (target.nodeName) {\n      Events[method](target, type, listener);\n    } else {\n      target[method](type, listener);\n    }\n  };\n  /**\n   * Contains methods that provide event capabilities to an object which is passed\n   * to {@link module:evented|evented}.\n   *\n   * @mixin EventedMixin\n   */\n\n\n  var EventedMixin = {\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    on: function on() {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _normalizeListenArgs = normalizeListenArgs(this, args, 'on'),\n          isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n          target = _normalizeListenArgs.target,\n          type = _normalizeListenArgs.type,\n          listener = _normalizeListenArgs.listener;\n\n      listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n      if (!isTargetingSelf) {\n        // If this object is disposed, remove the listener.\n        var removeListenerOnDispose = function removeListenerOnDispose() {\n          return _this.off(target, type, listener);\n        }; // Use the same function ID as the listener so we can remove it later it\n        // using the ID of the original listener.\n\n\n        removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n        // that if the target is disposed BEFORE this object, we remove the\n        // removal listener that was just added. Otherwise, we create a memory leak.\n\n        var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n          return _this.off('dispose', removeListenerOnDispose);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        removeRemoverOnTargetDispose.guid = listener.guid;\n        listen(this, 'on', 'dispose', removeListenerOnDispose);\n        listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n      }\n    },\n\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will be called once per event and then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    one: function one() {\n      var _this2 = this;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var _normalizeListenArgs2 = normalizeListenArgs(this, args, 'one'),\n          isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n          target = _normalizeListenArgs2.target,\n          type = _normalizeListenArgs2.type,\n          listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n      if (isTargetingSelf) {\n        listen(target, 'one', type, listener); // Targeting another evented object.\n      } else {\n        // TODO: This wrapper is incorrect! It should only\n        //       remove the wrapper for the event type that called it.\n        //       Instead all listners are removed on the first trigger!\n        //       see https://github.com/videojs/video.js/issues/5962\n        var wrapper = function wrapper() {\n          _this2.off(target, type, wrapper);\n\n          for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            largs[_key3] = arguments[_key3];\n          }\n\n          listener.apply(null, largs);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        wrapper.guid = listener.guid;\n        listen(target, 'one', type, wrapper);\n      }\n    },\n\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will only be called once for the first event that is triggered\n     * then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    any: function any() {\n      var _this3 = this;\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var _normalizeListenArgs3 = normalizeListenArgs(this, args, 'any'),\n          isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n          target = _normalizeListenArgs3.target,\n          type = _normalizeListenArgs3.type,\n          listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n      if (isTargetingSelf) {\n        listen(target, 'any', type, listener); // Targeting another evented object.\n      } else {\n        var wrapper = function wrapper() {\n          _this3.off(target, type, wrapper);\n\n          for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n            largs[_key5] = arguments[_key5];\n          }\n\n          listener.apply(null, largs);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        wrapper.guid = listener.guid;\n        listen(target, 'any', type, wrapper);\n      }\n    },\n\n    /**\n     * Removes listener(s) from event(s) on an evented object.\n     *\n     * @param  {string|Array|Element|Object} [targetOrType]\n     *         If this is a string or array, it represents the event type(s).\n     *\n     *         Another evented object can be passed here instead, in which case\n     *         ALL 3 arguments are _required_.\n     *\n     * @param  {string|Array|Function} [typeOrListener]\n     *         If the first argument was a string or array, this may be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function; otherwise, _all_ listeners bound to the\n     *         event type(s) will be removed.\n     */\n    off: function off$1(targetOrType, typeOrListener, listener) {\n      // Targeting this evented object.\n      if (!targetOrType || isValidEventType(targetOrType)) {\n        off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n      } else {\n        var target = targetOrType;\n        var type = typeOrListener; // Fail fast and in a meaningful way!\n\n        validateTarget(target, this, 'off');\n        validateEventType(type, this, 'off');\n        validateListener(listener, this, 'off'); // Ensure there's at least a guid, even if the function hasn't been used\n\n        listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n        // the same guid as the event listener in on().\n\n        this.off('dispose', listener);\n\n        if (target.nodeName) {\n          off(target, type, listener);\n          off(target, 'dispose', listener);\n        } else if (isEvented(target)) {\n          target.off(type, listener);\n          target.off('dispose', listener);\n        }\n      }\n    },\n\n    /**\n     * Fire an event on this evented object, causing its listeners to be called.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash]\n     *          An additional object to pass along to listeners.\n     *\n     * @return {boolean}\n     *          Whether or not the default behavior was prevented.\n     */\n    trigger: function trigger$1(event, hash) {\n      validateTarget(this.eventBusEl_, this, 'trigger');\n      var type = event && typeof event !== 'string' ? event.type : event;\n\n      if (!isValidEventType(type)) {\n        var error = \"Invalid event type for \" + objName(this) + \"#trigger; \" + 'must be a non-empty string or object with a type key that has a non-empty value.';\n\n        if (event) {\n          (this.log || log$1).error(error);\n        } else {\n          throw new Error(error);\n        }\n      }\n\n      return trigger(this.eventBusEl_, event, hash);\n    }\n  };\n  /**\n   * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n   *\n   * @param  {Object} target\n   *         The object to which to add event methods.\n   *\n   * @param  {Object} [options={}]\n   *         Options for customizing the mixin behavior.\n   *\n   * @param  {string} [options.eventBusKey]\n   *         By default, adds a `eventBusEl_` DOM element to the target object,\n   *         which is used as an event bus. If the target object already has a\n   *         DOM element that should be used, pass its key here.\n   *\n   * @return {Object}\n   *         The target object.\n   */\n\n  function evented(target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n    if (eventBusKey) {\n      if (!target[eventBusKey].nodeName) {\n        throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n      }\n\n      target.eventBusEl_ = target[eventBusKey];\n    } else {\n      target.eventBusEl_ = createEl('span', {\n        className: 'vjs-event-bus'\n      });\n    }\n\n    assign(target, EventedMixin);\n\n    if (target.eventedCallbacks) {\n      target.eventedCallbacks.forEach(function (callback) {\n        callback();\n      });\n    } // When any evented object is disposed, it removes all its listeners.\n\n\n    target.on('dispose', function () {\n      target.off();\n      [target, target.el_, target.eventBusEl_].forEach(function (val) {\n        if (val && DomData.has(val)) {\n          DomData[\"delete\"](val);\n        }\n      });\n      window.setTimeout(function () {\n        target.eventBusEl_ = null;\n      }, 0);\n    });\n    return target;\n  }\n\n  /**\n   * @file mixins/stateful.js\n   * @module stateful\n   */\n  /**\n   * Contains methods that provide statefulness to an object which is passed\n   * to {@link module:stateful}.\n   *\n   * @mixin StatefulMixin\n   */\n\n  var StatefulMixin = {\n    /**\n     * A hash containing arbitrary keys and values representing the state of\n     * the object.\n     *\n     * @type {Object}\n     */\n    state: {},\n\n    /**\n     * Set the state of an object by mutating its\n     * {@link module:stateful~StatefulMixin.state|state} object in place.\n     *\n     * @fires   module:stateful~StatefulMixin#statechanged\n     * @param   {Object|Function} stateUpdates\n     *          A new set of properties to shallow-merge into the plugin state.\n     *          Can be a plain object or a function returning a plain object.\n     *\n     * @return {Object|undefined}\n     *          An object containing changes that occurred. If no changes\n     *          occurred, returns `undefined`.\n     */\n    setState: function setState(stateUpdates) {\n      var _this = this;\n\n      // Support providing the `stateUpdates` state as a function.\n      if (typeof stateUpdates === 'function') {\n        stateUpdates = stateUpdates();\n      }\n\n      var changes;\n      each(stateUpdates, function (value, key) {\n        // Record the change if the value is different from what's in the\n        // current state.\n        if (_this.state[key] !== value) {\n          changes = changes || {};\n          changes[key] = {\n            from: _this.state[key],\n            to: value\n          };\n        }\n\n        _this.state[key] = value;\n      }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n      // function. This allows us to not require that the target object be an\n      // evented object.\n\n      if (changes && isEvented(this)) {\n        /**\n         * An event triggered on an object that is both\n         * {@link module:stateful|stateful} and {@link module:evented|evented}\n         * indicating that its state has changed.\n         *\n         * @event    module:stateful~StatefulMixin#statechanged\n         * @type     {Object}\n         * @property {Object} changes\n         *           A hash containing the properties that were changed and\n         *           the values they were changed `from` and `to`.\n         */\n        this.trigger({\n          changes: changes,\n          type: 'statechanged'\n        });\n      }\n\n      return changes;\n    }\n  };\n  /**\n   * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n   * object.\n   *\n   * If the target object is {@link module:evented|evented} and has a\n   * `handleStateChanged` method, that method will be automatically bound to the\n   * `statechanged` event on itself.\n   *\n   * @param   {Object} target\n   *          The object to be made stateful.\n   *\n   * @param   {Object} [defaultState]\n   *          A default set of properties to populate the newly-stateful object's\n   *          `state` property.\n   *\n   * @return {Object}\n   *          Returns the `target`.\n   */\n\n  function stateful(target, defaultState) {\n    assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n    // added in that step.\n\n    target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n    if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n      target.on('statechanged', target.handleStateChanged);\n    }\n\n    return target;\n  }\n\n  /**\n   * @file string-cases.js\n   * @module to-lower-case\n   */\n\n  /**\n   * Lowercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be lowercased\n   *\n   * @return {string}\n   *         The string with a lowercased first letter\n   */\n  var toLowerCase = function toLowerCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toLowerCase();\n    });\n  };\n  /**\n   * Uppercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be uppercased\n   *\n   * @return {string}\n   *         The string with an uppercased first letter\n   */\n\n  var toTitleCase$1 = function toTitleCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toUpperCase();\n    });\n  };\n  /**\n   * Compares the TitleCase versions of the two strings for equality.\n   *\n   * @param {string} str1\n   *        The first string to compare\n   *\n   * @param {string} str2\n   *        The second string to compare\n   *\n   * @return {boolean}\n   *         Whether the TitleCase versions of the strings are equal\n   */\n\n  var titleCaseEquals = function titleCaseEquals(str1, str2) {\n    return toTitleCase$1(str1) === toTitleCase$1(str2);\n  };\n\n  /**\n   * @file merge-options.js\n   * @module merge-options\n   */\n  /**\n   * Merge two objects recursively.\n   *\n   * Performs a deep merge like\n   * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n   * plain objects (not arrays, elements, or anything else).\n   *\n   * Non-plain object values will be copied directly from the right-most\n   * argument.\n   *\n   * @static\n   * @param   {Object[]} sources\n   *          One or more objects to merge into a new object.\n   *\n   * @return {Object}\n   *          A new object that is the merged result of all sources.\n   */\n\n  function mergeOptions$3() {\n    var result = {};\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        if (!isPlain(value)) {\n          result[key] = value;\n          return;\n        }\n\n        if (!isPlain(result[key])) {\n          result[key] = {};\n        }\n\n        result[key] = mergeOptions$3(result[key], value);\n      });\n    });\n    return result;\n  }\n\n  var MapSham = /*#__PURE__*/function () {\n    function MapSham() {\n      this.map_ = {};\n    }\n\n    var _proto = MapSham.prototype;\n\n    _proto.has = function has(key) {\n      return key in this.map_;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var has = this.has(key);\n      delete this.map_[key];\n      return has;\n    };\n\n    _proto.set = function set(key, value) {\n      this.map_[key] = value;\n      return this;\n    };\n\n    _proto.forEach = function forEach(callback, thisArg) {\n      for (var key in this.map_) {\n        callback.call(thisArg, this.map_[key], key, this);\n      }\n    };\n\n    return MapSham;\n  }();\n\n  var Map$1 = window.Map ? window.Map : MapSham;\n\n  var SetSham = /*#__PURE__*/function () {\n    function SetSham() {\n      this.set_ = {};\n    }\n\n    var _proto = SetSham.prototype;\n\n    _proto.has = function has(key) {\n      return key in this.set_;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var has = this.has(key);\n      delete this.set_[key];\n      return has;\n    };\n\n    _proto.add = function add(key) {\n      this.set_[key] = 1;\n      return this;\n    };\n\n    _proto.forEach = function forEach(callback, thisArg) {\n      for (var key in this.set_) {\n        callback.call(thisArg, key, key, this);\n      }\n    };\n\n    return SetSham;\n  }();\n\n  var Set$1 = window.Set ? window.Set : SetSham;\n\n  var keycode = createCommonjsModule(function (module, exports) {\n    // Source: http://jsfiddle.net/vWx8V/\n    // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n    /**\n     * Conenience method returns corresponding value for given keyName or keyCode.\n     *\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Mixed}\n     * @api public\n     */\n    function keyCode(searchInput) {\n      // Keyboard Events\n      if (searchInput && 'object' === typeof searchInput) {\n        var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n        if (hasKeyCode) searchInput = hasKeyCode;\n      } // Numbers\n\n\n      if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n      var search = String(searchInput); // check codes\n\n      var foundNamedKey = codes[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // check aliases\n\n      var foundNamedKey = aliases[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // weird character?\n\n      if (search.length === 1) return search.charCodeAt(0);\n      return undefined;\n    }\n    /**\n     * Compares a keyboard event with a given keyCode or keyName.\n     *\n     * @param {Event} event Keyboard event that should be tested\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Boolean}\n     * @api public\n     */\n\n\n    keyCode.isEventKey = function isEventKey(event, nameOrCode) {\n      if (event && 'object' === typeof event) {\n        var keyCode = event.which || event.keyCode || event.charCode;\n\n        if (keyCode === null || keyCode === undefined) {\n          return false;\n        }\n\n        if (typeof nameOrCode === 'string') {\n          // check codes\n          var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          } // check aliases\n\n\n          var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          }\n        } else if (typeof nameOrCode === 'number') {\n          return nameOrCode === keyCode;\n        }\n\n        return false;\n      }\n    };\n\n    exports = module.exports = keyCode;\n    /**\n     * Get by name\n     *\n     *   exports.code['enter'] // => 13\n     */\n\n    var codes = exports.code = exports.codes = {\n      'backspace': 8,\n      'tab': 9,\n      'enter': 13,\n      'shift': 16,\n      'ctrl': 17,\n      'alt': 18,\n      'pause/break': 19,\n      'caps lock': 20,\n      'esc': 27,\n      'space': 32,\n      'page up': 33,\n      'page down': 34,\n      'end': 35,\n      'home': 36,\n      'left': 37,\n      'up': 38,\n      'right': 39,\n      'down': 40,\n      'insert': 45,\n      'delete': 46,\n      'command': 91,\n      'left command': 91,\n      'right command': 93,\n      'numpad *': 106,\n      'numpad +': 107,\n      'numpad -': 109,\n      'numpad .': 110,\n      'numpad /': 111,\n      'num lock': 144,\n      'scroll lock': 145,\n      'my computer': 182,\n      'my calculator': 183,\n      ';': 186,\n      '=': 187,\n      ',': 188,\n      '-': 189,\n      '.': 190,\n      '/': 191,\n      '`': 192,\n      '[': 219,\n      '\\\\': 220,\n      ']': 221,\n      \"'\": 222\n    }; // Helper aliases\n\n    var aliases = exports.aliases = {\n      'windows': 91,\n      '⇧': 16,\n      '⌥': 18,\n      '⌃': 17,\n      '⌘': 91,\n      'ctl': 17,\n      'control': 17,\n      'option': 18,\n      'pause': 19,\n      'break': 19,\n      'caps': 20,\n      'return': 13,\n      'escape': 27,\n      'spc': 32,\n      'spacebar': 32,\n      'pgup': 33,\n      'pgdn': 34,\n      'ins': 45,\n      'del': 46,\n      'cmd': 91\n    };\n    /*!\n     * Programatically add the following\n     */\n    // lower case chars\n\n    for (i = 97; i < 123; i++) {\n      codes[String.fromCharCode(i)] = i - 32;\n    } // numbers\n\n\n    for (var i = 48; i < 58; i++) {\n      codes[i - 48] = i;\n    } // function keys\n\n\n    for (i = 1; i < 13; i++) {\n      codes['f' + i] = i + 111;\n    } // numpad keys\n\n\n    for (i = 0; i < 10; i++) {\n      codes['numpad ' + i] = i + 96;\n    }\n    /**\n     * Get by code\n     *\n     *   exports.name[13] // => 'Enter'\n     */\n\n\n    var names = exports.names = exports.title = {}; // title for backward compat\n    // Create reverse mapping\n\n    for (i in codes) {\n      names[codes[i]] = i;\n    } // Add aliases\n\n\n    for (var alias in aliases) {\n      codes[alias] = aliases[alias];\n    }\n  });\n  keycode.code;\n  keycode.codes;\n  keycode.aliases;\n  keycode.names;\n  keycode.title;\n\n  /**\n   * Player Component - Base class for all UI objects\n   *\n   * @file component.js\n   */\n  /**\n   * Base class for all UI Components.\n   * Components are UI objects which represent both a javascript object and an element\n   * in the DOM. They can be children of other components, and can have\n   * children themselves.\n   *\n   * Components can also use methods from {@link EventTarget}\n   */\n\n  var Component$1 = /*#__PURE__*/function () {\n    /**\n     * A callback that is called when a component is ready. Does not have any\n     * paramters and any callback value will be ignored.\n     *\n     * @callback Component~ReadyCallback\n     * @this Component\n     */\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of component options.\n     *\n     * @param {Object[]} [options.children]\n     *        An array of children objects to intialize this component with. Children objects have\n     *        a name property that will be used if more than one component of the same type needs to be\n     *        added.\n     *\n     * @param  {string} [options.className]\n     *         A class or space separated list of classes to add the component\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Function that gets called when the `Component` is ready.\n     */\n    function Component(player, options, ready) {\n      var _this = this;\n\n      // The component might be the player itself and we can't pass `this` to super\n      if (!player && this.play) {\n        this.player_ = player = this; // eslint-disable-line\n      } else {\n        this.player_ = player;\n      }\n\n      this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n      this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n      this.options_ = mergeOptions$3({}, this.options_); // Updated options with supplied options\n\n      options = this.options_ = mergeOptions$3(this.options_, options); // Get ID from options or options element if one is supplied\n\n      this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n      if (!this.id_) {\n        // Don't require the player ID function in the case of mock players\n        var id = player && player.id && player.id() || 'no_player';\n        this.id_ = id + \"_component_\" + newGUID();\n      }\n\n      this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n      if (options.el) {\n        this.el_ = options.el;\n      } else if (options.createEl !== false) {\n        this.el_ = this.createEl();\n      }\n\n      if (options.className && this.el_) {\n        options.className.split(' ').forEach(function (c) {\n          return _this.addClass(c);\n        });\n      } // if evented is anything except false, we want to mixin in evented\n\n\n      if (options.evented !== false) {\n        // Make this an evented object and use `el_`, if available, as its event bus\n        evented(this, {\n          eventBusKey: this.el_ ? 'el_' : null\n        });\n        this.handleLanguagechange = this.handleLanguagechange.bind(this);\n        this.on(this.player_, 'languagechange', this.handleLanguagechange);\n      }\n\n      stateful(this, this.constructor.defaultState);\n      this.children_ = [];\n      this.childIndex_ = {};\n      this.childNameIndex_ = {};\n      this.setTimeoutIds_ = new Set$1();\n      this.setIntervalIds_ = new Set$1();\n      this.rafIds_ = new Set$1();\n      this.namedRafs_ = new Map$1();\n      this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n      if (options.initChildren !== false) {\n        this.initChildren();\n      } // Don't want to trigger ready here or it will go before init is actually\n      // finished for all children that run this constructor\n\n\n      this.ready(ready);\n\n      if (options.reportTouchActivity !== false) {\n        this.enableTouchActivity();\n      }\n    }\n    /**\n     * Dispose of the `Component` and all child components.\n     *\n     * @fires Component#dispose\n     *\n     * @param {Object} options\n     * @param {Element} options.originalEl element with which to replace player element\n     */\n\n\n    var _proto = Component.prototype;\n\n    _proto.dispose = function dispose(options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      // Bail out if the component has already been disposed.\n      if (this.isDisposed_) {\n        return;\n      }\n\n      if (this.readyQueue_) {\n        this.readyQueue_.length = 0;\n      }\n      /**\n       * Triggered when a `Component` is disposed.\n       *\n       * @event Component#dispose\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the dispose event does not\n       *           bubble up\n       */\n\n\n      this.trigger({\n        type: 'dispose',\n        bubbles: false\n      });\n      this.isDisposed_ = true; // Dispose all children.\n\n      if (this.children_) {\n        for (var i = this.children_.length - 1; i >= 0; i--) {\n          if (this.children_[i].dispose) {\n            this.children_[i].dispose();\n          }\n        }\n      } // Delete child references\n\n\n      this.children_ = null;\n      this.childIndex_ = null;\n      this.childNameIndex_ = null;\n      this.parentComponent_ = null;\n\n      if (this.el_) {\n        // Remove element from DOM\n        if (this.el_.parentNode) {\n          if (options.restoreEl) {\n            this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n          } else {\n            this.el_.parentNode.removeChild(this.el_);\n          }\n        }\n\n        this.el_ = null;\n      } // remove reference to the player after disposing of the element\n\n\n      this.player_ = null;\n    }\n    /**\n     * Determine whether or not this component has been disposed.\n     *\n     * @return {boolean}\n     *         If the component has been disposed, will be `true`. Otherwise, `false`.\n     */\n    ;\n\n    _proto.isDisposed = function isDisposed() {\n      return Boolean(this.isDisposed_);\n    }\n    /**\n     * Return the {@link Player} that the `Component` has attached to.\n     *\n     * @return {Player}\n     *         The player that this `Component` has attached to.\n     */\n    ;\n\n    _proto.player = function player() {\n      return this.player_;\n    }\n    /**\n     * Deep merge of options objects with new options.\n     * > Note: When both `obj` and `options` contain properties whose values are objects.\n     *         The two properties get merged using {@link module:mergeOptions}\n     *\n     * @param {Object} obj\n     *        The object that contains new options.\n     *\n     * @return {Object}\n     *         A new object of `this.options_` and `obj` merged together.\n     */\n    ;\n\n    _proto.options = function options(obj) {\n      if (!obj) {\n        return this.options_;\n      }\n\n      this.options_ = mergeOptions$3(this.options_, obj);\n      return this.options_;\n    }\n    /**\n     * Get the `Component`s DOM element\n     *\n     * @return {Element}\n     *         The DOM element for this `Component`.\n     */\n    ;\n\n    _proto.el = function el() {\n      return this.el_;\n    }\n    /**\n     * Create the `Component`s DOM element.\n     *\n     * @param {string} [tagName]\n     *        Element's DOM node type. e.g. 'div'\n     *\n     * @param {Object} [properties]\n     *        An object of properties that should be set.\n     *\n     * @param {Object} [attributes]\n     *        An object of attributes that should be set.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1(tagName, properties, attributes) {\n      return createEl(tagName, properties, attributes);\n    }\n    /**\n     * Localize a string given the string in english.\n     *\n     * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n     * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n     *\n     * If a `defaultValue` is provided, it'll use that over `string`,\n     * if a value isn't found in provided language files.\n     * This is useful if you want to have a descriptive key for token replacement\n     * but have a succinct localized string and not require `en.json` to be included.\n     *\n     * Currently, it is used for the progress bar timing.\n     * ```js\n     * {\n     *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n     * }\n     * ```\n     * It is then used like so:\n     * ```js\n     * this.localize('progress bar timing: currentTime={1} duration{2}',\n     *               [this.player_.currentTime(), this.player_.duration()],\n     *               '{1} of {2}');\n     * ```\n     *\n     * Which outputs something like: `01:23 of 24:56`.\n     *\n     *\n     * @param {string} string\n     *        The string to localize and the key to lookup in the language files.\n     * @param {string[]} [tokens]\n     *        If the current item has token replacements, provide the tokens here.\n     * @param {string} [defaultValue]\n     *        Defaults to `string`. Can be a default value to use for token replacement\n     *        if the lookup key is needed to be separate.\n     *\n     * @return {string}\n     *         The localized string or if no localization exists the english string.\n     */\n    ;\n\n    _proto.localize = function localize(string, tokens, defaultValue) {\n      if (defaultValue === void 0) {\n        defaultValue = string;\n      }\n\n      var code = this.player_.language && this.player_.language();\n      var languages = this.player_.languages && this.player_.languages();\n      var language = languages && languages[code];\n      var primaryCode = code && code.split('-')[0];\n      var primaryLang = languages && languages[primaryCode];\n      var localizedString = defaultValue;\n\n      if (language && language[string]) {\n        localizedString = language[string];\n      } else if (primaryLang && primaryLang[string]) {\n        localizedString = primaryLang[string];\n      }\n\n      if (tokens) {\n        localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n          var value = tokens[index - 1];\n          var ret = value;\n\n          if (typeof value === 'undefined') {\n            ret = match;\n          }\n\n          return ret;\n        });\n      }\n\n      return localizedString;\n    }\n    /**\n     * Handles language change for the player in components. Should be overriden by sub-components.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.handleLanguagechange = function handleLanguagechange() {}\n    /**\n     * Return the `Component`s DOM element. This is where children get inserted.\n     * This will usually be the the same as the element returned in {@link Component#el}.\n     *\n     * @return {Element}\n     *         The content element for this `Component`.\n     */\n    ;\n\n    _proto.contentEl = function contentEl() {\n      return this.contentEl_ || this.el_;\n    }\n    /**\n     * Get this `Component`s ID\n     *\n     * @return {string}\n     *         The id of this `Component`\n     */\n    ;\n\n    _proto.id = function id() {\n      return this.id_;\n    }\n    /**\n     * Get the `Component`s name. The name gets used to reference the `Component`\n     * and is set during registration.\n     *\n     * @return {string}\n     *         The name of this `Component`.\n     */\n    ;\n\n    _proto.name = function name() {\n      return this.name_;\n    }\n    /**\n     * Get an array of all child components\n     *\n     * @return {Array}\n     *         The children\n     */\n    ;\n\n    _proto.children = function children() {\n      return this.children_;\n    }\n    /**\n     * Returns the child `Component` with the given `id`.\n     *\n     * @param {string} id\n     *        The id of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `id` or undefined.\n     */\n    ;\n\n    _proto.getChildById = function getChildById(id) {\n      return this.childIndex_[id];\n    }\n    /**\n     * Returns the child `Component` with the given `name`.\n     *\n     * @param {string} name\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `name` or undefined.\n     */\n    ;\n\n    _proto.getChild = function getChild(name) {\n      if (!name) {\n        return;\n      }\n\n      return this.childNameIndex_[name];\n    }\n    /**\n     * Returns the descendant `Component` following the givent\n     * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n     * try to get 'foo' on the current component, 'bar' on the 'foo'\n     * component and 'baz' on the 'bar' component and return undefined\n     * if any of those don't exist.\n     *\n     * @param {...string[]|...string} names\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The descendant `Component` following the given descendant\n     *         `names` or undefined.\n     */\n    ;\n\n    _proto.getDescendant = function getDescendant() {\n      for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n        names[_key] = arguments[_key];\n      }\n\n      // flatten array argument into the main array\n      names = names.reduce(function (acc, n) {\n        return acc.concat(n);\n      }, []);\n      var currentChild = this;\n\n      for (var i = 0; i < names.length; i++) {\n        currentChild = currentChild.getChild(names[i]);\n\n        if (!currentChild || !currentChild.getChild) {\n          return;\n        }\n      }\n\n      return currentChild;\n    }\n    /**\n     * Add a child `Component` inside the current `Component`.\n     *\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @param {number} [index=this.children_.length]\n     *        The index to attempt to add a child into.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options, index) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (index === void 0) {\n        index = this.children_.length;\n      }\n\n      var component;\n      var componentName; // If child is a string, create component with options\n\n      if (typeof child === 'string') {\n        componentName = toTitleCase$1(child);\n        var componentClassName = options.componentClass || componentName; // Set name through options\n\n        options.name = componentName; // Create a new object & element for this controls set\n        // If there's no .player_, this is a player\n\n        var ComponentClass = Component.getComponent(componentClassName);\n\n        if (!ComponentClass) {\n          throw new Error(\"Component \" + componentClassName + \" does not exist\");\n        } // data stored directly on the videojs object may be\n        // misidentified as a component to retain\n        // backwards-compatibility with 4.x. check to make sure the\n        // component class can be instantiated.\n\n\n        if (typeof ComponentClass !== 'function') {\n          return null;\n        }\n\n        component = new ComponentClass(this.player_ || this, options); // child is a component instance\n      } else {\n        component = child;\n      }\n\n      if (component.parentComponent_) {\n        component.parentComponent_.removeChild(component);\n      }\n\n      this.children_.splice(index, 0, component);\n      component.parentComponent_ = this;\n\n      if (typeof component.id === 'function') {\n        this.childIndex_[component.id()] = component;\n      } // If a name wasn't used to create the component, check if we can use the\n      // name function of the component\n\n\n      componentName = componentName || component.name && toTitleCase$1(component.name());\n\n      if (componentName) {\n        this.childNameIndex_[componentName] = component;\n        this.childNameIndex_[toLowerCase(componentName)] = component;\n      } // Add the UI object's element to the container div (box)\n      // Having an element is not required\n\n\n      if (typeof component.el === 'function' && component.el()) {\n        // If inserting before a component, insert before that component's element\n        var refNode = null;\n\n        if (this.children_[index + 1]) {\n          // Most children are components, but the video tech is an HTML element\n          if (this.children_[index + 1].el_) {\n            refNode = this.children_[index + 1].el_;\n          } else if (isEl(this.children_[index + 1])) {\n            refNode = this.children_[index + 1];\n          }\n        }\n\n        this.contentEl().insertBefore(component.el(), refNode);\n      } // Return so it can stored on parent object if desired.\n\n\n      return component;\n    }\n    /**\n     * Remove a child `Component` from this `Component`s list of children. Also removes\n     * the child `Component`s element from this `Component`s element.\n     *\n     * @param {Component} component\n     *        The child `Component` to remove.\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      if (!component || !this.children_) {\n        return;\n      }\n\n      var childFound = false;\n\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i] === component) {\n          childFound = true;\n          this.children_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!childFound) {\n        return;\n      }\n\n      component.parentComponent_ = null;\n      this.childIndex_[component.id()] = null;\n      this.childNameIndex_[toTitleCase$1(component.name())] = null;\n      this.childNameIndex_[toLowerCase(component.name())] = null;\n      var compEl = component.el();\n\n      if (compEl && compEl.parentNode === this.contentEl()) {\n        this.contentEl().removeChild(component.el());\n      }\n    }\n    /**\n     * Add and initialize default child `Component`s based upon options.\n     */\n    ;\n\n    _proto.initChildren = function initChildren() {\n      var _this2 = this;\n\n      var children = this.options_.children;\n\n      if (children) {\n        // `this` is `parent`\n        var parentOptions = this.options_;\n\n        var handleAdd = function handleAdd(child) {\n          var name = child.name;\n          var opts = child.opts; // Allow options for children to be set at the parent options\n          // e.g. videojs(id, { controlBar: false });\n          // instead of videojs(id, { children: { controlBar: false });\n\n          if (parentOptions[name] !== undefined) {\n            opts = parentOptions[name];\n          } // Allow for disabling default components\n          // e.g. options['children']['posterImage'] = false\n\n\n          if (opts === false) {\n            return;\n          } // Allow options to be passed as a simple boolean if no configuration\n          // is necessary.\n\n\n          if (opts === true) {\n            opts = {};\n          } // We also want to pass the original player options\n          // to each component as well so they don't need to\n          // reach back into the player for options later.\n\n\n          opts.playerOptions = _this2.options_.playerOptions; // Create and add the child component.\n          // Add a direct reference to the child by name on the parent instance.\n          // If two of the same component are used, different names should be supplied\n          // for each\n\n          var newChild = _this2.addChild(name, opts);\n\n          if (newChild) {\n            _this2[name] = newChild;\n          }\n        }; // Allow for an array of children details to passed in the options\n\n\n        var workingChildren;\n        var Tech = Component.getComponent('Tech');\n\n        if (Array.isArray(children)) {\n          workingChildren = children;\n        } else {\n          workingChildren = Object.keys(children);\n        }\n\n        workingChildren // children that are in this.options_ but also in workingChildren  would\n        // give us extra children we do not want. So, we want to filter them out.\n        .concat(Object.keys(this.options_).filter(function (child) {\n          return !workingChildren.some(function (wchild) {\n            if (typeof wchild === 'string') {\n              return child === wchild;\n            }\n\n            return child === wchild.name;\n          });\n        })).map(function (child) {\n          var name;\n          var opts;\n\n          if (typeof child === 'string') {\n            name = child;\n            opts = children[name] || _this2.options_[name] || {};\n          } else {\n            name = child.name;\n            opts = child;\n          }\n\n          return {\n            name: name,\n            opts: opts\n          };\n        }).filter(function (child) {\n          // we have to make sure that child.name isn't in the techOrder since\n          // techs are registerd as Components but can't aren't compatible\n          // See https://github.com/videojs/video.js/issues/2772\n          var c = Component.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n          return c && !Tech.isTech(c);\n        }).forEach(handleAdd);\n      }\n    }\n    /**\n     * Builds the default DOM class name. Should be overriden by sub-components.\n     *\n     * @return {string}\n     *         The DOM class name for this object.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      // Child classes can include a function that does:\n      // return 'CLASS NAME' + this._super();\n      return '';\n    }\n    /**\n     * Bind a listener to the component's ready state.\n     * Different from event listeners in that if the ready event has already happened\n     * it will trigger the function immediately.\n     *\n     * @return {Component}\n     *         Returns itself; method can be chained.\n     */\n    ;\n\n    _proto.ready = function ready(fn, sync) {\n      if (sync === void 0) {\n        sync = false;\n      }\n\n      if (!fn) {\n        return;\n      }\n\n      if (!this.isReady_) {\n        this.readyQueue_ = this.readyQueue_ || [];\n        this.readyQueue_.push(fn);\n        return;\n      }\n\n      if (sync) {\n        fn.call(this);\n      } else {\n        // Call the function asynchronously by default for consistency\n        this.setTimeout(fn, 1);\n      }\n    }\n    /**\n     * Trigger all the ready listeners for this `Component`.\n     *\n     * @fires Component#ready\n     */\n    ;\n\n    _proto.triggerReady = function triggerReady() {\n      this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n      this.setTimeout(function () {\n        var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n        this.readyQueue_ = [];\n\n        if (readyQueue && readyQueue.length > 0) {\n          readyQueue.forEach(function (fn) {\n            fn.call(this);\n          }, this);\n        } // Allow for using event listeners also\n\n        /**\n         * Triggered when a `Component` is ready.\n         *\n         * @event Component#ready\n         * @type {EventTarget~Event}\n         */\n\n\n        this.trigger('ready');\n      }, 1);\n    }\n    /**\n     * Find a single DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelector`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {Element|null}\n     *         the dom element that was found, or null\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$ = function $$1(selector, context) {\n      return $(selector, context || this.contentEl());\n    }\n    /**\n     * Finds all DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelectorAll`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {NodeList}\n     *         a list of dom elements that were found\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$$ = function $$$1(selector, context) {\n      return $$(selector, context || this.contentEl());\n    }\n    /**\n     * Check if a component's element has a CSS class name.\n     *\n     * @param {string} classToCheck\n     *        CSS class name to check.\n     *\n     * @return {boolean}\n     *         - True if the `Component` has the class.\n     *         - False if the `Component` does not have the class`\n     */\n    ;\n\n    _proto.hasClass = function hasClass$1(classToCheck) {\n      return hasClass(this.el_, classToCheck);\n    }\n    /**\n     * Add a CSS class name to the `Component`s element.\n     *\n     * @param {string} classToAdd\n     *        CSS class name to add\n     */\n    ;\n\n    _proto.addClass = function addClass$1(classToAdd) {\n      addClass(this.el_, classToAdd);\n    }\n    /**\n     * Remove a CSS class name from the `Component`s element.\n     *\n     * @param {string} classToRemove\n     *        CSS class name to remove\n     */\n    ;\n\n    _proto.removeClass = function removeClass$1(classToRemove) {\n      removeClass(this.el_, classToRemove);\n    }\n    /**\n     * Add or remove a CSS class name from the component's element.\n     * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n     * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n     *\n     * @param  {string} classToToggle\n     *         The class to add or remove based on (@link Component#hasClass}\n     *\n     * @param  {boolean|Dom~predicate} [predicate]\n     *         An {@link Dom~predicate} function or a boolean\n     */\n    ;\n\n    _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n      toggleClass(this.el_, classToToggle, predicate);\n    }\n    /**\n     * Show the `Component`s element if it is hidden by removing the\n     * 'vjs-hidden' class name from it.\n     */\n    ;\n\n    _proto.show = function show() {\n      this.removeClass('vjs-hidden');\n    }\n    /**\n     * Hide the `Component`s element if it is currently showing by adding the\n     * 'vjs-hidden` class name to it.\n     */\n    ;\n\n    _proto.hide = function hide() {\n      this.addClass('vjs-hidden');\n    }\n    /**\n     * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n     * class name to it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.lockShowing = function lockShowing() {\n      this.addClass('vjs-lock-showing');\n    }\n    /**\n     * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n     * class name from it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unlockShowing = function unlockShowing() {\n      this.removeClass('vjs-lock-showing');\n    }\n    /**\n     * Get the value of an attribute on the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to get the value from.\n     *\n     * @return {string|null}\n     *         - The value of the attribute that was asked for.\n     *         - Can be an empty string on some browsers if the attribute does not exist\n     *           or has no value\n     *         - Most browsers will return null if the attibute does not exist or has\n     *           no value.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n     */\n    ;\n\n    _proto.getAttribute = function getAttribute$1(attribute) {\n      return getAttribute(this.el_, attribute);\n    }\n    /**\n     * Set the value of an attribute on the `Component`'s element\n     *\n     * @param {string} attribute\n     *        Name of the attribute to set.\n     *\n     * @param {string} value\n     *        Value to set the attribute to.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n     */\n    ;\n\n    _proto.setAttribute = function setAttribute$1(attribute, value) {\n      setAttribute(this.el_, attribute, value);\n    }\n    /**\n     * Remove an attribute from the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to remove.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n     */\n    ;\n\n    _proto.removeAttribute = function removeAttribute$1(attribute) {\n      removeAttribute(this.el_, attribute);\n    }\n    /**\n     * Get or set the width of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The width that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *           postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.width = function width(num, skipListeners) {\n      return this.dimension('width', num, skipListeners);\n    }\n    /**\n     * Get or set the height of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The height that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *         postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.height = function height(num, skipListeners) {\n      return this.dimension('height', num, skipListeners);\n    }\n    /**\n     * Set both the width and height of the `Component` element at the same time.\n     *\n     * @param  {number|string} width\n     *         Width to set the `Component`s element to.\n     *\n     * @param  {number|string} height\n     *         Height to set the `Component`s element to.\n     */\n    ;\n\n    _proto.dimensions = function dimensions(width, height) {\n      // Skip componentresize listeners on width for optimization\n      this.width(width, true);\n      this.height(height);\n    }\n    /**\n     * Get or set width or height of the `Component` element. This is the shared code\n     * for the {@link Component#width} and {@link Component#height}.\n     *\n     * Things to know:\n     * - If the width or height in an number this will return the number postfixed with 'px'.\n     * - If the width/height is a percent this will return the percent postfixed with '%'\n     * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n     *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n     *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n     *   for more information\n     * - If you want the computed style of the component, use {@link Component#currentWidth}\n     *   and {@link {Component#currentHeight}\n     *\n     * @fires Component#componentresize\n     *\n     * @param {string} widthOrHeight\n     8        'width' or 'height'\n     *\n     * @param  {number|string} [num]\n     8         New dimension\n     *\n     * @param  {boolean} [skipListeners]\n     *         Skip componentresize event trigger\n     *\n     * @return {number}\n     *         The dimension when getting or 0 if unset\n     */\n    ;\n\n    _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n      if (num !== undefined) {\n        // Set to zero if null or literally NaN (NaN !== NaN)\n        if (num === null || num !== num) {\n          num = 0;\n        } // Check if using css width/height (% or px) and adjust\n\n\n        if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n          this.el_.style[widthOrHeight] = num;\n        } else if (num === 'auto') {\n          this.el_.style[widthOrHeight] = '';\n        } else {\n          this.el_.style[widthOrHeight] = num + 'px';\n        } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n        if (!skipListeners) {\n          /**\n           * Triggered when a component is resized.\n           *\n           * @event Component#componentresize\n           * @type {EventTarget~Event}\n           */\n          this.trigger('componentresize');\n        }\n\n        return;\n      } // Not setting a value, so getting it\n      // Make sure element exists\n\n\n      if (!this.el_) {\n        return 0;\n      } // Get dimension value from style\n\n\n      var val = this.el_.style[widthOrHeight];\n      var pxIndex = val.indexOf('px');\n\n      if (pxIndex !== -1) {\n        // Return the pixel value with no 'px'\n        return parseInt(val.slice(0, pxIndex), 10);\n      } // No px so using % or no style was set, so falling back to offsetWidth/height\n      // If component has display:none, offset will return 0\n      // TODO: handle display:none and no dimension style using px\n\n\n      return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n    }\n    /**\n     * Get the computed width or the height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @param {string} widthOrHeight\n     *        A string containing 'width' or 'height'. Whichever one you want to get.\n     *\n     * @return {number}\n     *         The dimension that gets asked for or 0 if nothing was set\n     *         for that dimension.\n     */\n    ;\n\n    _proto.currentDimension = function currentDimension(widthOrHeight) {\n      var computedWidthOrHeight = 0;\n\n      if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n        throw new Error('currentDimension only accepts width or height value');\n      }\n\n      computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n      computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n      // and we want to check the offset values.\n      // This code also runs wherever getComputedStyle doesn't exist.\n\n      if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n        var rule = \"offset\" + toTitleCase$1(widthOrHeight);\n        computedWidthOrHeight = this.el_[rule];\n      }\n\n      return computedWidthOrHeight;\n    }\n    /**\n     * An object that contains width and height values of the `Component`s\n     * computed style. Uses `window.getComputedStyle`.\n     *\n     * @typedef {Object} Component~DimensionObject\n     *\n     * @property {number} width\n     *           The width of the `Component`s computed style.\n     *\n     * @property {number} height\n     *           The height of the `Component`s computed style.\n     */\n\n    /**\n     * Get an object that contains computed width and height values of the\n     * component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {Component~DimensionObject}\n     *         The computed dimensions of the component's element.\n     */\n    ;\n\n    _proto.currentDimensions = function currentDimensions() {\n      return {\n        width: this.currentDimension('width'),\n        height: this.currentDimension('height')\n      };\n    }\n    /**\n     * Get the computed width of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed width of the component's element.\n     */\n    ;\n\n    _proto.currentWidth = function currentWidth() {\n      return this.currentDimension('width');\n    }\n    /**\n     * Get the computed height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed height of the component's element.\n     */\n    ;\n\n    _proto.currentHeight = function currentHeight() {\n      return this.currentDimension('height');\n    }\n    /**\n     * Set the focus to this component\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.el_.focus();\n    }\n    /**\n     * Remove the focus from this component\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.el_.blur();\n    }\n    /**\n     * When this Component receives a `keydown` event which it does not process,\n     *  it passes the event to the Player for handling.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (this.player_) {\n        // We only stop propagation here because we want unhandled events to fall\n        // back to the browser. Exclude Tab for focus trapping.\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.stopPropagation();\n        }\n\n        this.player_.handleKeyDown(event);\n      }\n    }\n    /**\n     * Many components used to have a `handleKeyPress` method, which was poorly\n     * named because it listened to a `keydown` event. This method name now\n     * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n     * will not see their method calls stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyPress = function handleKeyPress(event) {\n      this.handleKeyDown(event);\n    }\n    /**\n     * Emit a 'tap' events when touch event support gets detected. This gets used to\n     * support toggling the controls through a tap on the video. They get enabled\n     * because every sub-component would have extra overhead otherwise.\n     *\n     * @private\n     * @fires Component#tap\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchleave\n     * @listens Component#touchcancel\n     * @listens Component#touchend\n      */\n    ;\n\n    _proto.emitTapEvents = function emitTapEvents() {\n      // Track the start time so we can determine how long the touch lasted\n      var touchStart = 0;\n      var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n      // Other popular libs use anywhere from 2 (hammer.js) to 15,\n      // so 10 seems like a nice, round number.\n\n      var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n      var touchTimeThreshold = 200;\n      var couldBeTap;\n      this.on('touchstart', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length === 1) {\n          // Copy pageX/pageY from the object\n          firstTouch = {\n            pageX: event.touches[0].pageX,\n            pageY: event.touches[0].pageY\n          }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n          touchStart = window.performance.now(); // Reset couldBeTap tracking\n\n          couldBeTap = true;\n        }\n      });\n      this.on('touchmove', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length > 1) {\n          couldBeTap = false;\n        } else if (firstTouch) {\n          // Some devices will throw touchmoves for all but the slightest of taps.\n          // So, if we moved only a small distance, this could still be a tap\n          var xdiff = event.touches[0].pageX - firstTouch.pageX;\n          var ydiff = event.touches[0].pageY - firstTouch.pageY;\n          var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n          if (touchDistance > tapMovementThreshold) {\n            couldBeTap = false;\n          }\n        }\n      });\n\n      var noTap = function noTap() {\n        couldBeTap = false;\n      }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n      this.on('touchleave', noTap);\n      this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n      // event\n\n      this.on('touchend', function (event) {\n        firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n        if (couldBeTap === true) {\n          // Measure how long the touch lasted\n          var touchTime = window.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n          if (touchTime < touchTimeThreshold) {\n            // Don't let browser turn this into a click\n            event.preventDefault();\n            /**\n             * Triggered when a `Component` is tapped.\n             *\n             * @event Component#tap\n             * @type {EventTarget~Event}\n             */\n\n            this.trigger('tap'); // It may be good to copy the touchend event object and change the\n            // type to tap, if the other event properties aren't exact after\n            // Events.fixEvent runs (e.g. event.target)\n          }\n        }\n      });\n    }\n    /**\n     * This function reports user activity whenever touch events happen. This can get\n     * turned off by any sub-components that wants touch events to act another way.\n     *\n     * Report user touch activity when touch events occur. User activity gets used to\n     * determine when controls should show/hide. It is simple when it comes to mouse\n     * events, because any mouse event should show the controls. So we capture mouse\n     * events that bubble up to the player and report activity when that happens.\n     * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n     * controls. So touch events can't help us at the player level either.\n     *\n     * User activity gets checked asynchronously. So what could happen is a tap event\n     * on the video turns the controls off. Then the `touchend` event bubbles up to\n     * the player. Which, if it reported user activity, would turn the controls right\n     * back on. We also don't want to completely block touch events from bubbling up.\n     * Furthermore a `touchmove` event and anything other than a tap, should not turn\n     * controls back on.\n     *\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchend\n     * @listens Component#touchcancel\n     */\n    ;\n\n    _proto.enableTouchActivity = function enableTouchActivity() {\n      // Don't continue if the root player doesn't support reporting user activity\n      if (!this.player() || !this.player().reportUserActivity) {\n        return;\n      } // listener for reporting that the user is active\n\n\n      var report = bind(this.player(), this.player().reportUserActivity);\n      var touchHolding;\n      this.on('touchstart', function () {\n        report(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n        touchHolding = this.setInterval(report, 250);\n      });\n\n      var touchEnd = function touchEnd(event) {\n        report(); // stop the interval that maintains activity if the touch is holding\n\n        this.clearInterval(touchHolding);\n      };\n\n      this.on('touchmove', report);\n      this.on('touchend', touchEnd);\n      this.on('touchcancel', touchEnd);\n    }\n    /**\n     * A callback that has no parameters and is bound into `Component`s context.\n     *\n     * @callback Component~GenericCallback\n     * @this Component\n     */\n\n    /**\n     * Creates a function that runs after an `x` millisecond timeout. This function is a\n     * wrapper around `window.setTimeout`. There are a few reasons to use this one\n     * instead though:\n     * 1. It gets cleared via  {@link Component#clearTimeout} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n     *\n     * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n     *         will cause its dispose listener not to get cleaned up! Please use\n     *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function that will be run after `timeout`.\n     *\n     * @param {number} timeout\n     *        Timeout in milliseconds to delay before executing the specified function.\n     *\n     * @return {number}\n     *         Returns a timeout ID that gets used to identify the timeout. It can also\n     *         get used in {@link Component#clearTimeout} to clear the timeout that\n     *         was set.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n     */\n    ;\n\n    _proto.setTimeout = function setTimeout(fn, timeout) {\n      var _this3 = this;\n\n      // declare as variables so they are properly available in timeout function\n      // eslint-disable-next-line\n      var timeoutId;\n      fn = bind(this, fn);\n      this.clearTimersOnDispose_();\n      timeoutId = window.setTimeout(function () {\n        if (_this3.setTimeoutIds_.has(timeoutId)) {\n          _this3.setTimeoutIds_[\"delete\"](timeoutId);\n        }\n\n        fn();\n      }, timeout);\n      this.setTimeoutIds_.add(timeoutId);\n      return timeoutId;\n    }\n    /**\n     * Clears a timeout that gets created via `window.setTimeout` or\n     * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n     * use this function instead of `window.clearTimout`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} timeoutId\n     *        The id of the timeout to clear. The return value of\n     *        {@link Component#setTimeout} or `window.setTimeout`.\n     *\n     * @return {number}\n     *         Returns the timeout id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n     */\n    ;\n\n    _proto.clearTimeout = function clearTimeout(timeoutId) {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_[\"delete\"](timeoutId);\n        window.clearTimeout(timeoutId);\n      }\n\n      return timeoutId;\n    }\n    /**\n     * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n     * around `window.setInterval`. There are a few reasons to use this one instead though.\n     * 1. It gets cleared via  {@link Component#clearInterval} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will be a {@link Component~GenericCallback}\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function to run every `x` seconds.\n     *\n     * @param {number} interval\n     *        Execute the specified function every `x` milliseconds.\n     *\n     * @return {number}\n     *         Returns an id that can be used to identify the interval. It can also be be used in\n     *         {@link Component#clearInterval} to clear the interval.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n     */\n    ;\n\n    _proto.setInterval = function setInterval(fn, interval) {\n      fn = bind(this, fn);\n      this.clearTimersOnDispose_();\n      var intervalId = window.setInterval(fn, interval);\n      this.setIntervalIds_.add(intervalId);\n      return intervalId;\n    }\n    /**\n     * Clears an interval that gets created via `window.setInterval` or\n     * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n     * use this function instead of `window.clearInterval`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} intervalId\n     *        The id of the interval to clear. The return value of\n     *        {@link Component#setInterval} or `window.setInterval`.\n     *\n     * @return {number}\n     *         Returns the interval id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n     */\n    ;\n\n    _proto.clearInterval = function clearInterval(intervalId) {\n      if (this.setIntervalIds_.has(intervalId)) {\n        this.setIntervalIds_[\"delete\"](intervalId);\n        window.clearInterval(intervalId);\n      }\n\n      return intervalId;\n    }\n    /**\n     * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n     * with a few extra bonuses:\n     *\n     * - Supports browsers that do not support rAF by falling back to\n     *   {@link Component#setTimeout}.\n     *\n     * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n     *   bound to the component).\n     *\n     * - Automatic cancellation of the rAF callback is handled if the component\n     *   is disposed before it is called.\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     *\n     * @return {number}\n     *         Returns an rAF ID that gets used to identify the timeout. It can\n     *         also be used in {@link Component#cancelAnimationFrame} to cancel\n     *         the animation frame callback.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n     */\n    ;\n\n    _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n      var _this4 = this;\n\n      // Fall back to using a timer.\n      if (!this.supportsRaf_) {\n        return this.setTimeout(fn, 1000 / 60);\n      }\n\n      this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n      // eslint-disable-next-line\n\n      var id;\n      fn = bind(this, fn);\n      id = window.requestAnimationFrame(function () {\n        if (_this4.rafIds_.has(id)) {\n          _this4.rafIds_[\"delete\"](id);\n        }\n\n        fn();\n      });\n      this.rafIds_.add(id);\n      return id;\n    }\n    /**\n     * Request an animation frame, but only one named animation\n     * frame will be queued. Another will never be added until\n     * the previous one finishes.\n     *\n     * @param {string} name\n     *        The name to give this requestAnimationFrame\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     */\n    ;\n\n    _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n      var _this5 = this;\n\n      if (this.namedRafs_.has(name)) {\n        return;\n      }\n\n      this.clearTimersOnDispose_();\n      fn = bind(this, fn);\n      var id = this.requestAnimationFrame(function () {\n        fn();\n\n        if (_this5.namedRafs_.has(name)) {\n          _this5.namedRafs_[\"delete\"](name);\n        }\n      });\n      this.namedRafs_.set(name, id);\n      return name;\n    }\n    /**\n     * Cancels a current named animation frame if it exists.\n     *\n     * @param {string} name\n     *        The name of the requestAnimationFrame to cancel.\n     */\n    ;\n\n    _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n      if (!this.namedRafs_.has(name)) {\n        return;\n      }\n\n      this.cancelAnimationFrame(this.namedRafs_.get(name));\n      this.namedRafs_[\"delete\"](name);\n    }\n    /**\n     * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n     * (rAF).\n     *\n     * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n     * use this function instead of `window.cancelAnimationFrame`. If you don't,\n     * your dispose listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} id\n     *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n     *\n     * @return {number}\n     *         Returns the rAF ID that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n     */\n    ;\n\n    _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n      // Fall back to using a timer.\n      if (!this.supportsRaf_) {\n        return this.clearTimeout(id);\n      }\n\n      if (this.rafIds_.has(id)) {\n        this.rafIds_[\"delete\"](id);\n        window.cancelAnimationFrame(id);\n      }\n\n      return id;\n    }\n    /**\n     * A function to setup `requestAnimationFrame`, `setTimeout`,\n     * and `setInterval`, clearing on dispose.\n     *\n     * > Previously each timer added and removed dispose listeners on it's own.\n     * For better performance it was decided to batch them all, and use `Set`s\n     * to track outstanding timer ids.\n     *\n     * @private\n     */\n    ;\n\n    _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n      var _this6 = this;\n\n      if (this.clearingTimersOnDispose_) {\n        return;\n      }\n\n      this.clearingTimersOnDispose_ = true;\n      this.one('dispose', function () {\n        [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n          var idName = _ref[0],\n              cancelName = _ref[1];\n\n          // for a `Set` key will actually be the value again\n          // so forEach((val, val) =>` but for maps we want to use\n          // the key.\n          _this6[idName].forEach(function (val, key) {\n            return _this6[cancelName](key);\n          });\n        });\n        _this6.clearingTimersOnDispose_ = false;\n      });\n    }\n    /**\n     * Register a `Component` with `videojs` given the name and the component.\n     *\n     * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n     *         should be registered using {@link Tech.registerTech} or\n     *         {@link videojs:videojs.registerTech}.\n     *\n     * > NOTE: This function can also be seen on videojs as\n     *         {@link videojs:videojs.registerComponent}.\n     *\n     * @param {string} name\n     *        The name of the `Component` to register.\n     *\n     * @param {Component} ComponentToRegister\n     *        The `Component` class to register.\n     *\n     * @return {Component}\n     *         The `Component` that was registered.\n     */\n    ;\n\n    Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n      }\n\n      var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n      var isTech = Tech && Tech.isTech(ComponentToRegister);\n      var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n      if (isTech || !isComp) {\n        var reason;\n\n        if (isTech) {\n          reason = 'techs must be registered using Tech.registerTech()';\n        } else {\n          reason = 'must be a Component subclass';\n        }\n\n        throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n      }\n\n      name = toTitleCase$1(name);\n\n      if (!Component.components_) {\n        Component.components_ = {};\n      }\n\n      var Player = Component.getComponent('Player');\n\n      if (name === 'Player' && Player && Player.players) {\n        var players = Player.players;\n        var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n        // in Players.players. So, we must loop through and verify that the value\n        // for each item is not null. This allows registration of the Player component\n        // after all players have been disposed or before any were created.\n\n        if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n          return players[pname];\n        }).every(Boolean)) {\n          throw new Error('Can not register Player component after player has been created.');\n        }\n      }\n\n      Component.components_[name] = ComponentToRegister;\n      Component.components_[toLowerCase(name)] = ComponentToRegister;\n      return ComponentToRegister;\n    }\n    /**\n     * Get a `Component` based on the name it was registered with.\n     *\n     * @param {string} name\n     *        The Name of the component to get.\n     *\n     * @return {Component}\n     *         The `Component` that got registered under the given name.\n     */\n    ;\n\n    Component.getComponent = function getComponent(name) {\n      if (!name || !Component.components_) {\n        return;\n      }\n\n      return Component.components_[name];\n    };\n\n    return Component;\n  }();\n  /**\n   * Whether or not this component supports `requestAnimationFrame`.\n   *\n   * This is exposed primarily for testing purposes.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n\n  Component$1.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n  Component$1.registerComponent('Component', Component$1);\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  var assertThisInitialized = _assertThisInitialized;\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  var inheritsLoose = _inheritsLoose;\n\n  /**\n   * @file time-ranges.js\n   * @module time-ranges\n   */\n\n  /**\n   * Returns the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @typedef    {Function} TimeRangeIndex\n   *\n   * @param      {number} [index=0]\n   *             The range number to return the time for.\n   *\n   * @return     {number}\n   *             The time offset at the specified index.\n   *\n   * @deprecated The index argument must be provided.\n   *             In the future, leaving it out will throw an error.\n   */\n\n  /**\n   * An object that contains ranges of time.\n   *\n   * @typedef  {Object} TimeRange\n   *\n   * @property {number} length\n   *           The number of time ranges represented by this object.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} start\n   *           Returns the time offset at which a specified time range begins.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} end\n   *           Returns the time offset at which a specified time range ends.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n   */\n\n  /**\n   * Check if any of the time ranges are over the maximum index.\n   *\n   * @private\n   * @param   {string} fnName\n   *          The function name to use for logging\n   *\n   * @param   {number} index\n   *          The index to check\n   *\n   * @param   {number} maxIndex\n   *          The maximum possible index\n   *\n   * @throws  {Error} if the timeRanges provided are over the maxIndex\n   */\n  function rangeCheck(fnName, index, maxIndex) {\n    if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n      throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n    }\n  }\n  /**\n   * Get the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @private\n   * @param      {string} fnName\n   *             The function name to use for logging\n   *\n   * @param      {string} valueIndex\n   *             The property that should be used to get the time. should be\n   *             'start' or 'end'\n   *\n   * @param      {Array} ranges\n   *             An array of time ranges\n   *\n   * @param      {Array} [rangeIndex=0]\n   *             The index to start the search at\n   *\n   * @return     {number}\n   *             The time that offset at the specified index.\n   *\n   * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n   * @throws     {Error} if rangeIndex is more than the length of ranges\n   */\n\n\n  function getRange(fnName, valueIndex, ranges, rangeIndex) {\n    rangeCheck(fnName, rangeIndex, ranges.length - 1);\n    return ranges[rangeIndex][valueIndex];\n  }\n  /**\n   * Create a time range object given ranges of time.\n   *\n   * @private\n   * @param   {Array} [ranges]\n   *          An array of time ranges.\n   */\n\n\n  function createTimeRangesObj(ranges) {\n    var timeRangesObj;\n\n    if (ranges === undefined || ranges.length === 0) {\n      timeRangesObj = {\n        length: 0,\n        start: function start() {\n          throw new Error('This TimeRanges object is empty');\n        },\n        end: function end() {\n          throw new Error('This TimeRanges object is empty');\n        }\n      };\n    } else {\n      timeRangesObj = {\n        length: ranges.length,\n        start: getRange.bind(null, 'start', 0, ranges),\n        end: getRange.bind(null, 'end', 1, ranges)\n      };\n    }\n\n    if (window.Symbol && window.Symbol.iterator) {\n      timeRangesObj[window.Symbol.iterator] = function () {\n        return (ranges || []).values();\n      };\n    }\n\n    return timeRangesObj;\n  }\n  /**\n   * Create a `TimeRange` object which mimics an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n   *\n   * @param {number|Array[]} start\n   *        The start of a single range (a number) or an array of ranges (an\n   *        array of arrays of two numbers each).\n   *\n   * @param {number} end\n   *        The end of a single range. Cannot be used with the array form of\n   *        the `start` argument.\n   */\n\n\n  function createTimeRanges(start, end) {\n    if (Array.isArray(start)) {\n      return createTimeRangesObj(start);\n    } else if (start === undefined || end === undefined) {\n      return createTimeRangesObj();\n    }\n\n    return createTimeRangesObj([[start, end]]);\n  }\n\n  /**\n   * @file buffer.js\n   * @module buffer\n   */\n  /**\n   * Compute the percentage of the media that has been buffered.\n   *\n   * @param {TimeRange} buffered\n   *        The current `TimeRange` object representing buffered time ranges\n   *\n   * @param {number} duration\n   *        Total duration of the media\n   *\n   * @return {number}\n   *         Percent buffered of the total duration in decimal form.\n   */\n\n  function bufferedPercent(buffered, duration) {\n    var bufferedDuration = 0;\n    var start;\n    var end;\n\n    if (!duration) {\n      return 0;\n    }\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    for (var i = 0; i < buffered.length; i++) {\n      start = buffered.start(i);\n      end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      bufferedDuration += end - start;\n    }\n\n    return bufferedDuration / duration;\n  }\n\n  /**\n   * @file media-error.js\n   */\n  /**\n   * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n   *\n   * @param {number|string|Object|MediaError} value\n   *        This can be of multiple types:\n   *        - number: should be a standard error code\n   *        - string: an error message (the code will be 0)\n   *        - Object: arbitrary properties\n   *        - `MediaError` (native): used to populate a video.js `MediaError` object\n   *        - `MediaError` (video.js): will return itself if it's already a\n   *          video.js `MediaError` object.\n   *\n   * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n   * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n   *\n   * @class MediaError\n   */\n\n  function MediaError(value) {\n    // Allow redundant calls to this constructor to avoid having `instanceof`\n    // checks peppered around the code.\n    if (value instanceof MediaError) {\n      return value;\n    }\n\n    if (typeof value === 'number') {\n      this.code = value;\n    } else if (typeof value === 'string') {\n      // default code is zero, so this is a custom error\n      this.message = value;\n    } else if (isObject$1(value)) {\n      // We assign the `code` property manually because native `MediaError` objects\n      // do not expose it as an own/enumerable property of the object.\n      if (typeof value.code === 'number') {\n        this.code = value.code;\n      }\n\n      assign(this, value);\n    }\n\n    if (!this.message) {\n      this.message = MediaError.defaultMessages[this.code] || '';\n    }\n  }\n  /**\n   * The error code that refers two one of the defined `MediaError` types\n   *\n   * @type {Number}\n   */\n\n\n  MediaError.prototype.code = 0;\n  /**\n   * An optional message that to show with the error. Message is not part of the HTML5\n   * video spec but allows for more informative custom errors.\n   *\n   * @type {String}\n   */\n\n  MediaError.prototype.message = '';\n  /**\n   * An optional status code that can be set by plugins to allow even more detail about\n   * the error. For example a plugin might provide a specific HTTP status code and an\n   * error message for that code. Then when the plugin gets that error this class will\n   * know how to display an error message for it. This allows a custom message to show\n   * up on the `Player` error overlay.\n   *\n   * @type {Array}\n   */\n\n  MediaError.prototype.status = null;\n  /**\n   * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n   * specification listed under {@link MediaError} for more information.\n   *\n   * @enum {array}\n   * @readonly\n   * @property {string} 0 - MEDIA_ERR_CUSTOM\n   * @property {string} 1 - MEDIA_ERR_ABORTED\n   * @property {string} 2 - MEDIA_ERR_NETWORK\n   * @property {string} 3 - MEDIA_ERR_DECODE\n   * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n   * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n   */\n\n  MediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n  /**\n   * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n   *\n   * @type {Array}\n   * @constant\n   */\n\n  MediaError.defaultMessages = {\n    1: 'You aborted the media playback',\n    2: 'A network error caused the media download to fail part-way.',\n    3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n    4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n    5: 'The media is encrypted and we do not have the keys to decrypt it.'\n  }; // Add types as properties on MediaError\n  // e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n  for (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n    MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n    MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n  } // jsdocs for instance/static members added above\n\n  var tuple = SafeParseTuple;\n\n  function SafeParseTuple(obj, reviver) {\n    var json;\n    var error = null;\n\n    try {\n      json = JSON.parse(obj, reviver);\n    } catch (err) {\n      error = err;\n    }\n\n    return [error, json];\n  }\n\n  /**\n   * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n   *\n   * @param  {Object}  value\n   *         An object that may or may not be `Promise`-like.\n   *\n   * @return {boolean}\n   *         Whether or not the object is `Promise`-like.\n   */\n  function isPromise(value) {\n    return value !== undefined && value !== null && typeof value.then === 'function';\n  }\n  /**\n   * Silence a Promise-like object.\n   *\n   * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n   * play promise\" rejection error messages.\n   *\n   * @param  {Object} value\n   *         An object that may or may not be `Promise`-like.\n   */\n\n  function silencePromise(value) {\n    if (isPromise(value)) {\n      value.then(null, function (e) {});\n    }\n  }\n\n  /**\n   * @file text-track-list-converter.js Utilities for capturing text track state and\n   * re-creating tracks based on a capture.\n   *\n   * @module text-track-list-converter\n   */\n\n  /**\n   * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n   * represents the {@link TextTrack}'s state.\n   *\n   * @param {TextTrack} track\n   *        The text track to query.\n   *\n   * @return {Object}\n   *         A serializable javascript representation of the TextTrack.\n   * @private\n   */\n  var trackToJson_ = function trackToJson_(track) {\n    var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n      if (track[prop]) {\n        acc[prop] = track[prop];\n      }\n\n      return acc;\n    }, {\n      cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n        return {\n          startTime: cue.startTime,\n          endTime: cue.endTime,\n          text: cue.text,\n          id: cue.id\n        };\n      })\n    });\n    return ret;\n  };\n  /**\n   * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n   * state of all {@link TextTrack}s currently configured. The return array is compatible with\n   * {@link text-track-list-converter:jsonToTextTracks}.\n   *\n   * @param {Tech} tech\n   *        The tech object to query\n   *\n   * @return {Array}\n   *         A serializable javascript representation of the {@link Tech}s\n   *         {@link TextTrackList}.\n   */\n\n\n  var textTracksToJson = function textTracksToJson(tech) {\n    var trackEls = tech.$$('track');\n    var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n      return t.track;\n    });\n    var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n      var json = trackToJson_(trackEl.track);\n\n      if (trackEl.src) {\n        json.src = trackEl.src;\n      }\n\n      return json;\n    });\n    return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n      return trackObjs.indexOf(track) === -1;\n    }).map(trackToJson_));\n  };\n  /**\n   * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n   * object {@link TextTrack} representations.\n   *\n   * @param {Array} json\n   *        An array of `TextTrack` representation objects, like those that would be\n   *        produced by `textTracksToJson`.\n   *\n   * @param {Tech} tech\n   *        The `Tech` to create the `TextTrack`s on.\n   */\n\n\n  var jsonToTextTracks = function jsonToTextTracks(json, tech) {\n    json.forEach(function (track) {\n      var addedTrack = tech.addRemoteTextTrack(track).track;\n\n      if (!track.src && track.cues) {\n        track.cues.forEach(function (cue) {\n          return addedTrack.addCue(cue);\n        });\n      }\n    });\n    return tech.textTracks();\n  };\n\n  var textTrackConverter = {\n    textTracksToJson: textTracksToJson,\n    jsonToTextTracks: jsonToTextTracks,\n    trackToJson_: trackToJson_\n  };\n\n  var MODAL_CLASS_NAME = 'vjs-modal-dialog';\n  /**\n   * The `ModalDialog` displays over the video and its controls, which blocks\n   * interaction with the player until it is closed.\n   *\n   * Modal dialogs include a \"Close\" button and will close when that button\n   * is activated - or when ESC is pressed anywhere.\n   *\n   * @extends Component\n   */\n\n  var ModalDialog = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ModalDialog, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Mixed} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {string} [options.description]\n     *        A text description for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.fillAlways=false]\n     *        Normally, modals are automatically filled only the first time\n     *        they open. This tells the modal to refresh its content\n     *        every time it opens.\n     *\n     * @param {string} [options.label]\n     *        A text label for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.pauseOnOpen=true]\n     *        If `true`, playback will will be paused if playing when\n     *        the modal opens, and resumed when it closes.\n     *\n     * @param {boolean} [options.temporary=true]\n     *        If `true`, the modal can only be opened once; it will be\n     *        disposed as soon as it's closed.\n     *\n     * @param {boolean} [options.uncloseable=false]\n     *        If `true`, the user will not be able to close the modal\n     *        through the UI in the normal ways. Programmatic closing is\n     *        still possible.\n     */\n    function ModalDialog(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.close_ = function (e) {\n        return _this.close(e);\n      };\n\n      _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n      _this.closeable(!_this.options_.uncloseable);\n\n      _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n      // because we only want the contents of the modal in the contentEl\n      // (not the UI elements like the close button).\n\n\n      _this.contentEl_ = createEl('div', {\n        className: MODAL_CLASS_NAME + \"-content\"\n      }, {\n        role: 'document'\n      });\n      _this.descEl_ = createEl('p', {\n        className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n        id: _this.el().getAttribute('aria-describedby')\n      });\n      textContent(_this.descEl_, _this.description());\n\n      _this.el_.appendChild(_this.descEl_);\n\n      _this.el_.appendChild(_this.contentEl_);\n\n      return _this;\n    }\n    /**\n     * Create the `ModalDialog`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n\n\n    var _proto = ModalDialog.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass(),\n        tabIndex: -1\n      }, {\n        'aria-describedby': this.id() + \"_description\",\n        'aria-hidden': 'true',\n        'aria-label': this.label(),\n        'role': 'dialog'\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.descEl_ = null;\n      this.previouslyActiveEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Returns the label string for this modal. Primarily used for accessibility.\n     *\n     * @return {string}\n     *         the localized or raw label of this modal.\n     */\n    ;\n\n    _proto.label = function label() {\n      return this.localize(this.options_.label || 'Modal Window');\n    }\n    /**\n     * Returns the description string for this modal. Primarily used for\n     * accessibility.\n     *\n     * @return {string}\n     *         The localized or raw description of this modal.\n     */\n    ;\n\n    _proto.description = function description() {\n      var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n      if (this.closeable()) {\n        desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n      }\n\n      return desc;\n    }\n    /**\n     * Opens the modal.\n     *\n     * @fires ModalDialog#beforemodalopen\n     * @fires ModalDialog#modalopen\n     */\n    ;\n\n    _proto.open = function open() {\n      if (!this.opened_) {\n        var player = this.player();\n        /**\n          * Fired just before a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#beforemodalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('beforemodalopen');\n        this.opened_ = true; // Fill content if the modal has never opened before and\n        // never been filled.\n\n        if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n          this.fill();\n        } // If the player was playing, pause it and take note of its previously\n        // playing state.\n\n\n        this.wasPlaying_ = !player.paused();\n\n        if (this.options_.pauseOnOpen && this.wasPlaying_) {\n          player.pause();\n        }\n\n        this.on('keydown', this.handleKeyDown_); // Hide controls and note if they were enabled.\n\n        this.hadControls_ = player.controls();\n        player.controls(false);\n        this.show();\n        this.conditionalFocus_();\n        this.el().setAttribute('aria-hidden', 'false');\n        /**\n          * Fired just after a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#modalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('modalopen');\n        this.hasBeenOpened_ = true;\n      }\n    }\n    /**\n     * If the `ModalDialog` is currently open or closed.\n     *\n     * @param  {boolean} [value]\n     *         If given, it will open (`true`) or close (`false`) the modal.\n     *\n     * @return {boolean}\n     *         the current open state of the modaldialog\n     */\n    ;\n\n    _proto.opened = function opened(value) {\n      if (typeof value === 'boolean') {\n        this[value ? 'open' : 'close']();\n      }\n\n      return this.opened_;\n    }\n    /**\n     * Closes the modal, does nothing if the `ModalDialog` is\n     * not open.\n     *\n     * @fires ModalDialog#beforemodalclose\n     * @fires ModalDialog#modalclose\n     */\n    ;\n\n    _proto.close = function close() {\n      if (!this.opened_) {\n        return;\n      }\n\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#beforemodalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalclose');\n      this.opened_ = false;\n\n      if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n        player.play();\n      }\n\n      this.off('keydown', this.handleKeyDown_);\n\n      if (this.hadControls_) {\n        player.controls(true);\n      }\n\n      this.hide();\n      this.el().setAttribute('aria-hidden', 'true');\n      /**\n        * Fired just after a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#modalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalclose');\n      this.conditionalBlur_();\n\n      if (this.options_.temporary) {\n        this.dispose();\n      }\n    }\n    /**\n     * Check to see if the `ModalDialog` is closeable via the UI.\n     *\n     * @param  {boolean} [value]\n     *         If given as a boolean, it will set the `closeable` option.\n     *\n     * @return {boolean}\n     *         Returns the final value of the closable option.\n     */\n    ;\n\n    _proto.closeable = function closeable(value) {\n      if (typeof value === 'boolean') {\n        var closeable = this.closeable_ = !!value;\n        var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n        if (closeable && !close) {\n          // The close button should be a child of the modal - not its\n          // content element, so temporarily change the content element.\n          var temp = this.contentEl_;\n          this.contentEl_ = this.el_;\n          close = this.addChild('closeButton', {\n            controlText: 'Close Modal Dialog'\n          });\n          this.contentEl_ = temp;\n          this.on(close, 'close', this.close_);\n        } // If this is being made uncloseable and has a close button, remove it.\n\n\n        if (!closeable && close) {\n          this.off(close, 'close', this.close_);\n          this.removeChild(close);\n          close.dispose();\n        }\n      }\n\n      return this.closeable_;\n    }\n    /**\n     * Fill the modal's content element with the modal's \"content\" option.\n     * The content element will be emptied before this change takes place.\n     */\n    ;\n\n    _proto.fill = function fill() {\n      this.fillWith(this.content());\n    }\n    /**\n     * Fill the modal's content element with arbitrary content.\n     * The content element will be emptied before this change takes place.\n     *\n     * @fires ModalDialog#beforemodalfill\n     * @fires ModalDialog#modalfill\n     *\n     * @param {Mixed} [content]\n     *        The same rules apply to this as apply to the `content` option.\n     */\n    ;\n\n    _proto.fillWith = function fillWith(content) {\n      var contentEl = this.contentEl();\n      var parentEl = contentEl.parentNode;\n      var nextSiblingEl = contentEl.nextSibling;\n      /**\n        * Fired just before a `ModalDialog` is filled with content.\n        *\n        * @event ModalDialog#beforemodalfill\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalfill');\n      this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n      // manipulation to avoid modifying the live DOM multiple times.\n\n      parentEl.removeChild(contentEl);\n      this.empty();\n      insertContent(contentEl, content);\n      /**\n       * Fired just after a `ModalDialog` is filled with content.\n       *\n       * @event ModalDialog#modalfill\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n      if (nextSiblingEl) {\n        parentEl.insertBefore(contentEl, nextSiblingEl);\n      } else {\n        parentEl.appendChild(contentEl);\n      } // make sure that the close button is last in the dialog DOM\n\n\n      var closeButton = this.getChild('closeButton');\n\n      if (closeButton) {\n        parentEl.appendChild(closeButton.el_);\n      }\n    }\n    /**\n     * Empties the content element. This happens anytime the modal is filled.\n     *\n     * @fires ModalDialog#beforemodalempty\n     * @fires ModalDialog#modalempty\n     */\n    ;\n\n    _proto.empty = function empty() {\n      /**\n      * Fired just before a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#beforemodalempty\n      * @type {EventTarget~Event}\n      */\n      this.trigger('beforemodalempty');\n      emptyEl(this.contentEl());\n      /**\n      * Fired just after a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#modalempty\n      * @type {EventTarget~Event}\n      */\n\n      this.trigger('modalempty');\n    }\n    /**\n     * Gets or sets the modal content, which gets normalized before being\n     * rendered into the DOM.\n     *\n     * This does not update the DOM or fill the modal, but it is called during\n     * that process.\n     *\n     * @param  {Mixed} [value]\n     *         If defined, sets the internal content value to be used on the\n     *         next call(s) to `fill`. This value is normalized before being\n     *         inserted. To \"clear\" the internal content value, pass `null`.\n     *\n     * @return {Mixed}\n     *         The current content of the modal dialog\n     */\n    ;\n\n    _proto.content = function content(value) {\n      if (typeof value !== 'undefined') {\n        this.content_ = value;\n      }\n\n      return this.content_;\n    }\n    /**\n     * conditionally focus the modal dialog if focus was previously on the player.\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalFocus_ = function conditionalFocus_() {\n      var activeEl = document.activeElement;\n      var playerEl = this.player_.el_;\n      this.previouslyActiveEl_ = null;\n\n      if (playerEl.contains(activeEl) || playerEl === activeEl) {\n        this.previouslyActiveEl_ = activeEl;\n        this.focus();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the last focused element\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      if (this.previouslyActiveEl_) {\n        this.previouslyActiveEl_.focus();\n        this.previouslyActiveEl_ = null;\n      }\n    }\n    /**\n     * Keydown handler. Attached when modal is focused.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Do not allow keydowns to reach out of the modal dialog.\n      event.stopPropagation();\n\n      if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n        event.preventDefault();\n        this.close();\n        return;\n      } // exit early if it isn't a tab key\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        return;\n      }\n\n      var focusableEls = this.focusableEls_();\n      var activeEl = this.el_.querySelector(':focus');\n      var focusIndex;\n\n      for (var i = 0; i < focusableEls.length; i++) {\n        if (activeEl === focusableEls[i]) {\n          focusIndex = i;\n          break;\n        }\n      }\n\n      if (document.activeElement === this.el_) {\n        focusIndex = 0;\n      }\n\n      if (event.shiftKey && focusIndex === 0) {\n        focusableEls[focusableEls.length - 1].focus();\n        event.preventDefault();\n      } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n        focusableEls[0].focus();\n        event.preventDefault();\n      }\n    }\n    /**\n     * get all focusable elements\n     *\n     * @private\n     */\n    ;\n\n    _proto.focusableEls_ = function focusableEls_() {\n      var allChildren = this.el_.querySelectorAll('*');\n      return Array.prototype.filter.call(allChildren, function (child) {\n        return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n      });\n    };\n\n    return ModalDialog;\n  }(Component$1);\n  /**\n   * Default options for `ModalDialog` default options.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ModalDialog.prototype.options_ = {\n    pauseOnOpen: true,\n    temporary: true\n  };\n  Component$1.registerComponent('ModalDialog', ModalDialog);\n\n  /**\n   * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n   * {@link VideoTrackList}\n   *\n   * @extends EventTarget\n   */\n\n  var TrackList = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(TrackList, _EventTarget);\n\n    /**\n     * Create an instance of this class\n     *\n     * @param {Track[]} tracks\n     *        A list of tracks to initialize the list with.\n     *\n     * @abstract\n     */\n    function TrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      _this = _EventTarget.call(this) || this;\n      _this.tracks_ = [];\n      /**\n       * @memberof TrackList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'length', {\n        get: function get() {\n          return this.tracks_.length;\n        }\n      });\n\n      for (var i = 0; i < tracks.length; i++) {\n        _this.addTrack(tracks[i]);\n      }\n\n      return _this;\n    }\n    /**\n     * Add a {@link Track} to the `TrackList`\n     *\n     * @param {Track} track\n     *        The audio, video, or text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = TrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      var index = this.tracks_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.tracks_[index];\n          }\n        });\n      } // Do not add duplicate tracks\n\n\n      if (this.tracks_.indexOf(track) === -1) {\n        this.tracks_.push(track);\n        /**\n         * Triggered when a track is added to a track list.\n         *\n         * @event TrackList#addtrack\n         * @type {EventTarget~Event}\n         * @property {Track} track\n         *           A reference to track that was added.\n         */\n\n        this.trigger({\n          track: track,\n          type: 'addtrack',\n          target: this\n        });\n      }\n      /**\n       * Triggered when a track label is changed.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n\n      track.labelchange_ = function () {\n        _this2.trigger({\n          track: track,\n          type: 'labelchange',\n          target: _this2\n        });\n      };\n\n      if (isEvented(track)) {\n        track.addEventListener('labelchange', track.labelchange_);\n      }\n    }\n    /**\n     * Remove a {@link Track} from the `TrackList`\n     *\n     * @param {Track} rtrack\n     *        The audio, video, or text track to remove from the list.\n     *\n     * @fires TrackList#removetrack\n     */\n    ;\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      var track;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        if (this[i] === rtrack) {\n          track = this[i];\n\n          if (track.off) {\n            track.off();\n          }\n\n          this.tracks_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!track) {\n        return;\n      }\n      /**\n       * Triggered when a track is removed from track list.\n       *\n       * @event TrackList#removetrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was removed.\n       */\n\n\n      this.trigger({\n        track: track,\n        type: 'removetrack',\n        target: this\n      });\n    }\n    /**\n     * Get a Track from the TrackList by a tracks id\n     *\n     * @param {string} id - the id of the track to get\n     * @method getTrackById\n     * @return {Track}\n     * @private\n     */\n    ;\n\n    _proto.getTrackById = function getTrackById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var track = this[i];\n\n        if (track.id === id) {\n          result = track;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TrackList;\n  }(EventTarget$2);\n  /**\n   * Triggered when a different track is selected/enabled.\n   *\n   * @event TrackList#change\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Events that can be called with on + eventName. See {@link EventHandler}.\n   *\n   * @property {Object} TrackList#allowedEvents_\n   * @private\n   */\n\n\n  TrackList.prototype.allowedEvents_ = {\n    change: 'change',\n    addtrack: 'addtrack',\n    removetrack: 'removetrack',\n    labelchange: 'labelchange'\n  }; // emulate attribute EventHandler support to allow for feature detection\n\n  for (var event in TrackList.prototype.allowedEvents_) {\n    TrackList.prototype['on' + event] = null;\n  }\n\n  /**\n   * Anywhere we call this function we diverge from the spec\n   * as we only support one enabled audiotrack at a time\n   *\n   * @param {AudioTrackList} list\n   *        list to work on\n   *\n   * @param {AudioTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers$1 = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another audio track is enabled, disable it\n\n\n      list[i].enabled = false;\n    }\n  };\n  /**\n   * The current list of {@link AudioTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n   * @extends TrackList\n   */\n\n\n  var AudioTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(AudioTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {AudioTrack[]} [tracks=[]]\n     *        A list of `AudioTrack` to instantiate the list with.\n     */\n    function AudioTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].enabled) {\n          disableOthers$1(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      return _this;\n    }\n    /**\n     * Add an {@link AudioTrack} to the `AudioTrackList`.\n     *\n     * @param {AudioTrack} track\n     *        The AudioTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = AudioTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.enabled) {\n        disableOthers$1(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.enabledChange_ = function () {\n        // when we are disabling other tracks (since we don't support\n        // more than one track at a time) we will set changing_\n        // to true so that we don't trigger additional change events\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers$1(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens AudioTrack#enabledchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('enabledchange', track.enabledChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.enabledChange_) {\n        rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n        rtrack.enabledChange_ = null;\n      }\n    };\n\n    return AudioTrackList;\n  }(TrackList);\n\n  /**\n   * Un-select all other {@link VideoTrack}s that are selected.\n   *\n   * @param {VideoTrackList} list\n   *        list to work on\n   *\n   * @param {VideoTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another video track is enabled, disable it\n\n\n      list[i].selected = false;\n    }\n  };\n  /**\n   * The current list of {@link VideoTrack} for a video.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n   * @extends TrackList\n   */\n\n\n  var VideoTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(VideoTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {VideoTrack[]} [tracks=[]]\n     *        A list of `VideoTrack` to instantiate the list with.\n     */\n    function VideoTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].selected) {\n          disableOthers(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      /**\n       * @member {number} VideoTrackList#selectedIndex\n       *         The current index of the selected {@link VideoTrack`}.\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'selectedIndex', {\n        get: function get() {\n          for (var _i = 0; _i < this.length; _i++) {\n            if (this[_i].selected) {\n              return _i;\n            }\n          }\n\n          return -1;\n        },\n        set: function set() {}\n      });\n      return _this;\n    }\n    /**\n     * Add a {@link VideoTrack} to the `VideoTrackList`.\n     *\n     * @param {VideoTrack} track\n     *        The VideoTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = VideoTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.selected) {\n        disableOthers(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.selectedChange_ = function () {\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens VideoTrack#selectedchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('selectedchange', track.selectedChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.selectedChange_) {\n        rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n        rtrack.selectedChange_ = null;\n      }\n    };\n\n    return VideoTrackList;\n  }(TrackList);\n\n  /**\n   * The current list of {@link TextTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n   * @extends TrackList\n   */\n\n  var TextTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(TextTrackList, _TrackList);\n\n    function TextTrackList() {\n      return _TrackList.apply(this, arguments) || this;\n    }\n\n    var _proto = TextTrackList.prototype;\n\n    /**\n     * Add a {@link TextTrack} to the `TextTrackList`\n     *\n     * @param {TextTrack} track\n     *        The text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n    _proto.addTrack = function addTrack(track) {\n      var _this = this;\n\n      _TrackList.prototype.addTrack.call(this, track);\n\n      if (!this.queueChange_) {\n        this.queueChange_ = function () {\n          return _this.queueTrigger('change');\n        };\n      }\n\n      if (!this.triggerSelectedlanguagechange) {\n        this.triggerSelectedlanguagechange_ = function () {\n          return _this.trigger('selectedlanguagechange');\n        };\n      }\n      /**\n       * @listens TextTrack#modechange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('modechange', this.queueChange_);\n      var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n      if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n        track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n      if (rtrack.removeEventListener) {\n        if (this.queueChange_) {\n          rtrack.removeEventListener('modechange', this.queueChange_);\n        }\n\n        if (this.selectedlanguagechange_) {\n          rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n        }\n      }\n    };\n\n    return TextTrackList;\n  }(TrackList);\n\n  /**\n   * @file html-track-element-list.js\n   */\n\n  /**\n   * The current list of {@link HtmlTrackElement}s.\n   */\n  var HtmlTrackElementList = /*#__PURE__*/function () {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {HtmlTrackElement[]} [tracks=[]]\n     *        A list of `HtmlTrackElement` to instantiate the list with.\n     */\n    function HtmlTrackElementList(trackElements) {\n      if (trackElements === void 0) {\n        trackElements = [];\n      }\n\n      this.trackElements_ = [];\n      /**\n       * @memberof HtmlTrackElementList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.trackElements_.length;\n        }\n      });\n\n      for (var i = 0, length = trackElements.length; i < length; i++) {\n        this.addTrackElement_(trackElements[i]);\n      }\n    }\n    /**\n     * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to add to the list.\n     *\n     * @private\n     */\n\n\n    var _proto = HtmlTrackElementList.prototype;\n\n    _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n      var index = this.trackElements_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.trackElements_[index];\n          }\n        });\n      } // Do not add duplicate elements\n\n\n      if (this.trackElements_.indexOf(trackElement) === -1) {\n        this.trackElements_.push(trackElement);\n      }\n    }\n    /**\n     * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n     * {@link TextTrack}.\n     *\n     * @param {TextTrack} track\n     *        The track associated with a track element.\n     *\n     * @return {HtmlTrackElement|undefined}\n     *         The track element that was found or undefined.\n     *\n     * @private\n     */\n    ;\n\n    _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n      var trackElement_;\n\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (track === this.trackElements_[i].track) {\n          trackElement_ = this.trackElements_[i];\n          break;\n        }\n      }\n\n      return trackElement_;\n    }\n    /**\n     * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to remove from the list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (trackElement === this.trackElements_[i]) {\n          if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n            this.trackElements_[i].track.off();\n          }\n\n          if (typeof this.trackElements_[i].off === 'function') {\n            this.trackElements_[i].off();\n          }\n\n          this.trackElements_.splice(i, 1);\n          break;\n        }\n      }\n    };\n\n    return HtmlTrackElementList;\n  }();\n\n  /**\n   * @file text-track-cue-list.js\n   */\n\n  /**\n   * @typedef {Object} TextTrackCueList~TextTrackCue\n   *\n   * @property {string} id\n   *           The unique id for this text track cue\n   *\n   * @property {number} startTime\n   *           The start time for this text track cue\n   *\n   * @property {number} endTime\n   *           The end time for this text track cue\n   *\n   * @property {boolean} pauseOnExit\n   *           Pause when the end time is reached if true.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n   */\n\n  /**\n   * A List of TextTrackCues.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n   */\n  var TextTrackCueList = /*#__PURE__*/function () {\n    /**\n     * Create an instance of this class..\n     *\n     * @param {Array} cues\n     *        A list of cues to be initialized with\n     */\n    function TextTrackCueList(cues) {\n      TextTrackCueList.prototype.setCues_.call(this, cues);\n      /**\n       * @memberof TextTrackCueList\n       * @member {number} length\n       *         The current number of `TextTrackCue`s in the TextTrackCueList.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.length_;\n        }\n      });\n    }\n    /**\n     * A setter for cues in this list. Creates getters\n     * an an index for the cues.\n     *\n     * @param {Array} cues\n     *        An array of cues to set\n     *\n     * @private\n     */\n\n\n    var _proto = TextTrackCueList.prototype;\n\n    _proto.setCues_ = function setCues_(cues) {\n      var oldLength = this.length || 0;\n      var i = 0;\n      var l = cues.length;\n      this.cues_ = cues;\n      this.length_ = cues.length;\n\n      var defineProp = function defineProp(index) {\n        if (!('' + index in this)) {\n          Object.defineProperty(this, '' + index, {\n            get: function get() {\n              return this.cues_[index];\n            }\n          });\n        }\n      };\n\n      if (oldLength < l) {\n        i = oldLength;\n\n        for (; i < l; i++) {\n          defineProp.call(this, i);\n        }\n      }\n    }\n    /**\n     * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n     *\n     * @param {string} id\n     *        The id of the cue that should be searched for.\n     *\n     * @return {TextTrackCueList~TextTrackCue|null}\n     *         A single cue or null if none was found.\n     */\n    ;\n\n    _proto.getCueById = function getCueById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var cue = this[i];\n\n        if (cue.id === id) {\n          result = cue;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TextTrackCueList;\n  }();\n\n  /**\n   * @file track-kinds.js\n   */\n\n  /**\n   * All possible `VideoTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n   * @typedef VideoTrack~Kind\n   * @enum\n   */\n  var VideoTrackKind = {\n    alternative: 'alternative',\n    captions: 'captions',\n    main: 'main',\n    sign: 'sign',\n    subtitles: 'subtitles',\n    commentary: 'commentary'\n  };\n  /**\n   * All possible `AudioTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n   * @typedef AudioTrack~Kind\n   * @enum\n   */\n\n  var AudioTrackKind = {\n    'alternative': 'alternative',\n    'descriptions': 'descriptions',\n    'main': 'main',\n    'main-desc': 'main-desc',\n    'translation': 'translation',\n    'commentary': 'commentary'\n  };\n  /**\n   * All possible `TextTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n   * @typedef TextTrack~Kind\n   * @enum\n   */\n\n  var TextTrackKind = {\n    subtitles: 'subtitles',\n    captions: 'captions',\n    descriptions: 'descriptions',\n    chapters: 'chapters',\n    metadata: 'metadata'\n  };\n  /**\n   * All possible `TextTrackMode`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n   * @typedef TextTrack~Mode\n   * @enum\n   */\n\n  var TextTrackMode = {\n    disabled: 'disabled',\n    hidden: 'hidden',\n    showing: 'showing'\n  };\n\n  /**\n   * A Track class that contains all of the common functionality for {@link AudioTrack},\n   * {@link VideoTrack}, and {@link TextTrack}.\n   *\n   * > Note: This class should not be used directly\n   *\n   * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n   * @extends EventTarget\n   * @abstract\n   */\n\n  var Track = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(Track, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid kind for the track type you are creating.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @abstract\n     */\n    function Track(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var trackProps = {\n        id: options.id || 'vjs_track_' + newGUID(),\n        kind: options.kind || '',\n        language: options.language || ''\n      };\n      var label = options.label || '';\n      /**\n       * @memberof Track\n       * @member {string} id\n       *         The id of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} kind\n       *         The kind of track that this is. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} language\n       *         The two letter language code for this track. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      var _loop = function _loop(key) {\n        Object.defineProperty(assertThisInitialized(_this), key, {\n          get: function get() {\n            return trackProps[key];\n          },\n          set: function set() {}\n        });\n      };\n\n      for (var key in trackProps) {\n        _loop(key);\n      }\n      /**\n       * @memberof Track\n       * @member {string} label\n       *         The label of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @fires Track#labelchange\n       */\n\n\n      Object.defineProperty(assertThisInitialized(_this), 'label', {\n        get: function get() {\n          return label;\n        },\n        set: function set(newLabel) {\n          if (newLabel !== label) {\n            label = newLabel;\n            /**\n             * An event that fires when label changes on this track.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event Track#labelchange\n             * @type {EventTarget~Event}\n             */\n\n            this.trigger('labelchange');\n          }\n        }\n      });\n      return _this;\n    }\n\n    return Track;\n  }(EventTarget$2);\n\n  /**\n   * @file url.js\n   * @module url\n   */\n\n  /**\n   * @typedef {Object} url:URLObject\n   *\n   * @property {string} protocol\n   *           The protocol of the url that was parsed.\n   *\n   * @property {string} hostname\n   *           The hostname of the url that was parsed.\n   *\n   * @property {string} port\n   *           The port of the url that was parsed.\n   *\n   * @property {string} pathname\n   *           The pathname of the url that was parsed.\n   *\n   * @property {string} search\n   *           The search query of the url that was parsed.\n   *\n   * @property {string} hash\n   *           The hash of the url that was parsed.\n   *\n   * @property {string} host\n   *           The host of the url that was parsed.\n   */\n\n  /**\n   * Resolve and parse the elements of a URL.\n   *\n   * @function\n   * @param    {String} url\n   *           The url to parse\n   *\n   * @return   {url:URLObject}\n   *           An object of url details\n   */\n  var parseUrl = function parseUrl(url) {\n    // This entire method can be replace with URL once we are able to drop IE11\n    var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n    var a = document.createElement('a');\n    a.href = url; // Copy the specific URL properties to a new object\n    // This is also needed for IE because the anchor loses its\n    // properties when it's removed from the dom\n\n    var details = {};\n\n    for (var i = 0; i < props.length; i++) {\n      details[props[i]] = a[props[i]];\n    } // IE adds the port to the host property unlike everyone else. If\n    // a port identifier is added for standard ports, strip it.\n\n\n    if (details.protocol === 'http:') {\n      details.host = details.host.replace(/:80$/, '');\n    }\n\n    if (details.protocol === 'https:') {\n      details.host = details.host.replace(/:443$/, '');\n    }\n\n    if (!details.protocol) {\n      details.protocol = window.location.protocol;\n    }\n    /* istanbul ignore if */\n\n\n    if (!details.host) {\n      details.host = window.location.host;\n    }\n\n    return details;\n  };\n  /**\n   * Get absolute version of relative URL. Used to tell Flash the correct URL.\n   *\n   * @function\n   * @param    {string} url\n   *           URL to make absolute\n   *\n   * @return   {string}\n   *           Absolute URL\n   *\n   * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n   */\n\n  var getAbsoluteURL = function getAbsoluteURL(url) {\n    // Check if absolute URL\n    if (!url.match(/^https?:\\/\\//)) {\n      // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n      // add the url to an anchor and let the browser parse the URL\n      var a = document.createElement('a');\n      a.href = url;\n      url = a.href;\n    }\n\n    return url;\n  };\n  /**\n   * Returns the extension of the passed file name. It will return an empty string\n   * if passed an invalid path.\n   *\n   * @function\n   * @param    {string} path\n   *           The fileName path like '/path/to/file.mp4'\n   *\n   * @return  {string}\n   *           The extension in lower case or an empty string if no\n   *           extension could be found.\n   */\n\n  var getFileExtension = function getFileExtension(path) {\n    if (typeof path === 'string') {\n      var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n      var pathParts = splitPathRe.exec(path);\n\n      if (pathParts) {\n        return pathParts.pop().toLowerCase();\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns whether the url passed is a cross domain request or not.\n   *\n   * @function\n   * @param    {string} url\n   *           The url to check.\n   *\n   * @param    {Object} [winLoc]\n   *           the domain to check the url against, defaults to window.location\n   *\n   * @param    {string} [winLoc.protocol]\n   *           The window location protocol defaults to window.location.protocol\n   *\n   * @param    {string} [winLoc.host]\n   *           The window location host defaults to window.location.host\n   *\n   * @return   {boolean}\n   *           Whether it is a cross domain request or not.\n   */\n\n  var isCrossOrigin = function isCrossOrigin(url, winLoc) {\n    if (winLoc === void 0) {\n      winLoc = window.location;\n    }\n\n    var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n    var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n    // IE8 doesn't know location.origin, so we won't rely on it here\n\n    var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n    return crossOrigin;\n  };\n\n  var Url = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    parseUrl: parseUrl,\n    getAbsoluteURL: getAbsoluteURL,\n    getFileExtension: getFileExtension,\n    isCrossOrigin: isCrossOrigin\n  });\n\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n\n  var isFunction_1 = isFunction;\n  var toString = Object.prototype.toString;\n\n  function isFunction(fn) {\n    if (!fn) {\n      return false;\n    }\n\n    var string = toString.call(fn);\n    return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n    fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n  }\n\n  var httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n    if (decodeResponseBody === void 0) {\n      decodeResponseBody = false;\n    }\n\n    return function (err, response, responseBody) {\n      // if the XHR failed, return that error\n      if (err) {\n        callback(err);\n        return;\n      } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n      if (response.statusCode >= 400 && response.statusCode <= 599) {\n        var cause = responseBody;\n\n        if (decodeResponseBody) {\n          if (window_1.TextDecoder) {\n            var charset = getCharset(response.headers && response.headers['content-type']);\n\n            try {\n              cause = new TextDecoder(charset).decode(responseBody);\n            } catch (e) {}\n          } else {\n            cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n          }\n        }\n\n        callback({\n          cause: cause\n        });\n        return;\n      } // otherwise, request succeeded\n\n\n      callback(null, responseBody);\n    };\n  };\n\n  function getCharset(contentTypeHeader) {\n    if (contentTypeHeader === void 0) {\n      contentTypeHeader = '';\n    }\n\n    return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n      var _contentType$split = contentType.split('='),\n          type = _contentType$split[0],\n          value = _contentType$split[1];\n\n      if (type.trim() === 'charset') {\n        return value.trim();\n      }\n\n      return charset;\n    }, 'utf-8');\n  }\n\n  var httpHandler = httpResponseHandler;\n\n  createXHR.httpHandler = httpHandler;\n  /**\n   * @license\n   * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n   * Copyright (c) 2014 David Björklund\n   * Available under the MIT license\n   * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n   */\n\n  var parseHeaders = function parseHeaders(headers) {\n    var result = {};\n\n    if (!headers) {\n      return result;\n    }\n\n    headers.trim().split('\\n').forEach(function (row) {\n      var index = row.indexOf(':');\n      var key = row.slice(0, index).trim().toLowerCase();\n      var value = row.slice(index + 1).trim();\n\n      if (typeof result[key] === 'undefined') {\n        result[key] = value;\n      } else if (Array.isArray(result[key])) {\n        result[key].push(value);\n      } else {\n        result[key] = [result[key], value];\n      }\n    });\n    return result;\n  };\n\n  var lib = createXHR; // Allow use of default import syntax in TypeScript\n\n  var default_1 = createXHR;\n  createXHR.XMLHttpRequest = window_1.XMLHttpRequest || noop$1;\n  createXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window_1.XDomainRequest;\n  forEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n      options = initParams(uri, options, callback);\n      options.method = method.toUpperCase();\n      return _createXHR(options);\n    };\n  });\n\n  function forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n      iterator(array[i]);\n    }\n  }\n\n  function isEmpty(obj) {\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) return false;\n    }\n\n    return true;\n  }\n\n  function initParams(uri, options, callback) {\n    var params = uri;\n\n    if (isFunction_1(options)) {\n      callback = options;\n\n      if (typeof uri === \"string\") {\n        params = {\n          uri: uri\n        };\n      }\n    } else {\n      params = _extends_1({}, options, {\n        uri: uri\n      });\n    }\n\n    params.callback = callback;\n    return params;\n  }\n\n  function createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback);\n    return _createXHR(options);\n  }\n\n  function _createXHR(options) {\n    if (typeof options.callback === \"undefined\") {\n      throw new Error(\"callback argument missing\");\n    }\n\n    var called = false;\n\n    var callback = function cbOnce(err, response, body) {\n      if (!called) {\n        called = true;\n        options.callback(err, response, body);\n      }\n    };\n\n    function readystatechange() {\n      if (xhr.readyState === 4) {\n        setTimeout(loadFunc, 0);\n      }\n    }\n\n    function getBody() {\n      // Chrome with requestType=blob throws errors arround when even testing access to responseText\n      var body = undefined;\n\n      if (xhr.response) {\n        body = xhr.response;\n      } else {\n        body = xhr.responseText || getXml(xhr);\n      }\n\n      if (isJson) {\n        try {\n          body = JSON.parse(body);\n        } catch (e) {}\n      }\n\n      return body;\n    }\n\n    function errorFunc(evt) {\n      clearTimeout(timeoutTimer);\n\n      if (!(evt instanceof Error)) {\n        evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n      }\n\n      evt.statusCode = 0;\n      return callback(evt, failureResponse);\n    } // will load the data & process the response in a special response object\n\n\n    function loadFunc() {\n      if (aborted) return;\n      var status;\n      clearTimeout(timeoutTimer);\n\n      if (options.useXDR && xhr.status === undefined) {\n        //IE8 CORS GET successful response doesn't have a status field, but body is fine\n        status = 200;\n      } else {\n        status = xhr.status === 1223 ? 204 : xhr.status;\n      }\n\n      var response = failureResponse;\n      var err = null;\n\n      if (status !== 0) {\n        response = {\n          body: getBody(),\n          statusCode: status,\n          method: method,\n          headers: {},\n          url: uri,\n          rawRequest: xhr\n        };\n\n        if (xhr.getAllResponseHeaders) {\n          //remember xhr can in fact be XDR for CORS in IE\n          response.headers = parseHeaders(xhr.getAllResponseHeaders());\n        }\n      } else {\n        err = new Error(\"Internal XMLHttpRequest Error\");\n      }\n\n      return callback(err, response, response.body);\n    }\n\n    var xhr = options.xhr || null;\n\n    if (!xhr) {\n      if (options.cors || options.useXDR) {\n        xhr = new createXHR.XDomainRequest();\n      } else {\n        xhr = new createXHR.XMLHttpRequest();\n      }\n    }\n\n    var key;\n    var aborted;\n    var uri = xhr.url = options.uri || options.url;\n    var method = xhr.method = options.method || \"GET\";\n    var body = options.body || options.data;\n    var headers = xhr.headers = options.headers || {};\n    var sync = !!options.sync;\n    var isJson = false;\n    var timeoutTimer;\n    var failureResponse = {\n      body: undefined,\n      headers: {},\n      statusCode: 0,\n      method: method,\n      url: uri,\n      rawRequest: xhr\n    };\n\n    if (\"json\" in options && options.json !== false) {\n      isJson = true;\n      headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      if (method !== \"GET\" && method !== \"HEAD\") {\n        headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n        body = JSON.stringify(options.json === true ? body : options.json);\n      }\n    }\n\n    xhr.onreadystatechange = readystatechange;\n    xhr.onload = loadFunc;\n    xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n    xhr.onprogress = function () {// IE must die\n    };\n\n    xhr.onabort = function () {\n      aborted = true;\n    };\n\n    xhr.ontimeout = errorFunc;\n    xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n    if (!sync) {\n      xhr.withCredentials = !!options.withCredentials;\n    } // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n    if (!sync && options.timeout > 0) {\n      timeoutTimer = setTimeout(function () {\n        if (aborted) return;\n        aborted = true; //IE9 may still call readystatechange\n\n        xhr.abort(\"timeout\");\n        var e = new Error(\"XMLHttpRequest timeout\");\n        e.code = \"ETIMEDOUT\";\n        errorFunc(e);\n      }, options.timeout);\n    }\n\n    if (xhr.setRequestHeader) {\n      for (key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    } else if (options.headers && !isEmpty(options.headers)) {\n      throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n    }\n\n    if (\"responseType\" in options) {\n      xhr.responseType = options.responseType;\n    }\n\n    if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n      options.beforeSend(xhr);\n    } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n\n\n    xhr.send(body || null);\n    return xhr;\n  }\n\n  function getXml(xhr) {\n    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n    try {\n      if (xhr.responseType === \"document\") {\n        return xhr.responseXML;\n      }\n\n      var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n      if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML;\n      }\n    } catch (e) {}\n\n    return null;\n  }\n\n  function noop$1() {}\n  lib[\"default\"] = default_1;\n\n  /**\n   * Takes a webvtt file contents and parses it into cues\n   *\n   * @param {string} srcContent\n   *        webVTT file contents\n   *\n   * @param {TextTrack} track\n   *        TextTrack to add cues to. Cues come from the srcContent.\n   *\n   * @private\n   */\n\n  var parseCues = function parseCues(srcContent, track) {\n    var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n    var errors = [];\n\n    parser.oncue = function (cue) {\n      track.addCue(cue);\n    };\n\n    parser.onparsingerror = function (error) {\n      errors.push(error);\n    };\n\n    parser.onflush = function () {\n      track.trigger({\n        type: 'loadeddata',\n        target: track\n      });\n    };\n\n    parser.parse(srcContent);\n\n    if (errors.length > 0) {\n      if (window.console && window.console.groupCollapsed) {\n        window.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n      }\n\n      errors.forEach(function (error) {\n        return log$1.error(error);\n      });\n\n      if (window.console && window.console.groupEnd) {\n        window.console.groupEnd();\n      }\n    }\n\n    parser.flush();\n  };\n  /**\n   * Load a `TextTrack` from a specified url.\n   *\n   * @param {string} src\n   *        Url to load track from.\n   *\n   * @param {TextTrack} track\n   *        Track to add cues to. Comes from the content at the end of `url`.\n   *\n   * @private\n   */\n\n\n  var loadTrack = function loadTrack(src, track) {\n    var opts = {\n      uri: src\n    };\n    var crossOrigin = isCrossOrigin(src);\n\n    if (crossOrigin) {\n      opts.cors = crossOrigin;\n    }\n\n    var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n    if (withCredentials) {\n      opts.withCredentials = withCredentials;\n    }\n\n    lib(opts, bind(this, function (err, response, responseBody) {\n      if (err) {\n        return log$1.error(err, response);\n      }\n\n      track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      // NOTE: this is only used for the alt/video.novtt.js build\n\n      if (typeof window.WebVTT !== 'function') {\n        if (track.tech_) {\n          // to prevent use before define eslint error, we define loadHandler\n          // as a let here\n          track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n            if (event.type === 'vttjserror') {\n              log$1.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n              return;\n            }\n\n            return parseCues(responseBody, track);\n          });\n        }\n      } else {\n        parseCues(responseBody, track);\n      }\n    }));\n  };\n  /**\n   * A representation of a single `TextTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n   * @extends Track\n   */\n\n\n  var TextTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(TextTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this TextTrack.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function TextTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!options.tech) {\n        throw new Error('A tech was not provided.');\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: TextTrackKind[options.kind] || 'subtitles',\n        language: options.language || options.srclang || ''\n      });\n      var mode = TextTrackMode[settings.mode] || 'disabled';\n      var default_ = settings[\"default\"];\n\n      if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n        mode = 'hidden';\n      }\n\n      _this = _Track.call(this, settings) || this;\n      _this.tech_ = settings.tech;\n      _this.cues_ = [];\n      _this.activeCues_ = [];\n      _this.preload_ = _this.tech_.preloadTextTracks !== false;\n      var cues = new TextTrackCueList(_this.cues_);\n      var activeCues = new TextTrackCueList(_this.activeCues_);\n      var changed = false;\n      _this.timeupdateHandler = bind(assertThisInitialized(_this), function (event) {\n        if (event === void 0) {\n          event = {};\n        }\n\n        if (this.tech_.isDisposed()) {\n          return;\n        }\n\n        if (!this.tech_.isReady_) {\n          if (event.type !== 'timeupdate') {\n            this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n          }\n\n          return;\n        } // Accessing this.activeCues for the side-effects of updating itself\n        // due to its nature as a getter function. Do not remove or cues will\n        // stop updating!\n        // Use the setter to prevent deletion from uglify (pure_getters rule)\n\n\n        this.activeCues = this.activeCues;\n\n        if (changed) {\n          this.trigger('cuechange');\n          changed = false;\n        }\n\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n      });\n\n      var disposeHandler = function disposeHandler() {\n        _this.stopTracking();\n      };\n\n      _this.tech_.one('dispose', disposeHandler);\n\n      if (mode !== 'disabled') {\n        _this.startTracking();\n      }\n\n      Object.defineProperties(assertThisInitialized(_this), {\n        /**\n         * @memberof TextTrack\n         * @member {boolean} default\n         *         If this track was set to be on or off by default. Cannot be changed after\n         *         creation.\n         * @instance\n         *\n         * @readonly\n         */\n        \"default\": {\n          get: function get() {\n            return default_;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {string} mode\n         *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n         *         not be set if setting to an invalid mode.\n         * @instance\n         *\n         * @fires TextTrack#modechange\n         */\n        mode: {\n          get: function get() {\n            return mode;\n          },\n          set: function set(newMode) {\n            if (!TextTrackMode[newMode]) {\n              return;\n            }\n\n            if (mode === newMode) {\n              return;\n            }\n\n            mode = newMode;\n\n            if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n              // On-demand load.\n              loadTrack(this.src, this);\n            }\n\n            this.stopTracking();\n\n            if (mode !== 'disabled') {\n              this.startTracking();\n            }\n            /**\n             * An event that fires when mode changes on this track. This allows\n             * the TextTrackList that holds this track to act accordingly.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event TextTrack#modechange\n             * @type {EventTarget~Event}\n             */\n\n\n            this.trigger('modechange');\n          }\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} cues\n         *         The text track cue list for this TextTrack.\n         * @instance\n         */\n        cues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            }\n\n            return cues;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} activeCues\n         *         The list text track cues that are currently active for this TextTrack.\n         * @instance\n         */\n        activeCues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            } // nothing to do\n\n\n            if (this.cues.length === 0) {\n              return activeCues;\n            }\n\n            var ct = this.tech_.currentTime();\n            var active = [];\n\n            for (var i = 0, l = this.cues.length; i < l; i++) {\n              var cue = this.cues[i];\n\n              if (cue.startTime <= ct && cue.endTime >= ct) {\n                active.push(cue);\n              } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n                active.push(cue);\n              }\n            }\n\n            changed = false;\n\n            if (active.length !== this.activeCues_.length) {\n              changed = true;\n            } else {\n              for (var _i = 0; _i < active.length; _i++) {\n                if (this.activeCues_.indexOf(active[_i]) === -1) {\n                  changed = true;\n                }\n              }\n            }\n\n            this.activeCues_ = active;\n            activeCues.setCues_(this.activeCues_);\n            return activeCues;\n          },\n          // /!\\ Keep this setter empty (see the timeupdate handler above)\n          set: function set() {}\n        }\n      });\n\n      if (settings.src) {\n        _this.src = settings.src;\n\n        if (!_this.preload_) {\n          // Tracks will load on-demand.\n          // Act like we're loaded for other purposes.\n          _this.loaded_ = true;\n        }\n\n        if (_this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n          loadTrack(_this.src, assertThisInitialized(_this));\n        }\n      } else {\n        _this.loaded_ = true;\n      }\n\n      return _this;\n    }\n\n    var _proto = TextTrack.prototype;\n\n    _proto.startTracking = function startTracking() {\n      // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n      this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler); // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n\n      this.tech_.on('timeupdate', this.timeupdateHandler);\n    };\n\n    _proto.stopTracking = function stopTracking() {\n      if (this.rvf_) {\n        this.tech_.cancelVideoFrameCallback(this.rvf_);\n        this.rvf_ = undefined;\n      }\n\n      this.tech_.off('timeupdate', this.timeupdateHandler);\n    }\n    /**\n     * Add a cue to the internal list of cues.\n     *\n     * @param {TextTrack~Cue} cue\n     *        The cue to add to our internal list\n     */\n    ;\n\n    _proto.addCue = function addCue(originalCue) {\n      var cue = originalCue;\n\n      if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n        cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n        for (var prop in originalCue) {\n          if (!(prop in cue)) {\n            cue[prop] = originalCue[prop];\n          }\n        } // make sure that `id` is copied over\n\n\n        cue.id = originalCue.id;\n        cue.originalCue_ = originalCue;\n      }\n\n      var tracks = this.tech_.textTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        if (tracks[i] !== this) {\n          tracks[i].removeCue(cue);\n        }\n      }\n\n      this.cues_.push(cue);\n      this.cues.setCues_(this.cues_);\n    }\n    /**\n     * Remove a cue from our internal list\n     *\n     * @param {TextTrack~Cue} removeCue\n     *        The cue to remove from our internal list\n     */\n    ;\n\n    _proto.removeCue = function removeCue(_removeCue) {\n      var i = this.cues_.length;\n\n      while (i--) {\n        var cue = this.cues_[i];\n\n        if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n          this.cues_.splice(i, 1);\n          this.cues.setCues_(this.cues_);\n          break;\n        }\n      }\n    };\n\n    return TextTrack;\n  }(Track);\n  /**\n   * cuechange - One or more cues in the track have become active or stopped being active.\n   */\n\n\n  TextTrack.prototype.allowedEvents_ = {\n    cuechange: 'cuechange'\n  };\n\n  /**\n   * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n   * only one `AudioTrack` in the list will be enabled at a time.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n   * @extends Track\n   */\n\n  var AudioTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(AudioTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {AudioTrack~Kind} [options.kind='']\n     *        A valid audio track kind\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.enabled]\n     *        If this track is the one that is currently playing. If this track is part of\n     *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n     */\n    function AudioTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: AudioTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var enabled = false;\n      /**\n       * @memberof AudioTrack\n       * @member {boolean} enabled\n       *         If this `AudioTrack` is enabled or not. When setting this will\n       *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'enabled', {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(newEnabled) {\n          // an invalid or unchanged value\n          if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n            return;\n          }\n\n          enabled = newEnabled;\n          /**\n           * An event that fires when enabled changes on this track. This allows\n           * the AudioTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event AudioTrack#enabledchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('enabledchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.enabled) {\n        _this.enabled = settings.enabled;\n      }\n\n      _this.loaded_ = true;\n      return _this;\n    }\n\n    return AudioTrack;\n  }(Track);\n\n  /**\n   * A representation of a single `VideoTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n   * @extends Track\n   */\n\n  var VideoTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(VideoTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid {@link VideoTrack~Kind}\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.selected]\n     *        If this track is the one that is currently playing.\n     */\n    function VideoTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: VideoTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var selected = false;\n      /**\n       * @memberof VideoTrack\n       * @member {boolean} selected\n       *         If this `VideoTrack` is selected or not. When setting this will\n       *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'selected', {\n        get: function get() {\n          return selected;\n        },\n        set: function set(newSelected) {\n          // an invalid or unchanged value\n          if (typeof newSelected !== 'boolean' || newSelected === selected) {\n            return;\n          }\n\n          selected = newSelected;\n          /**\n           * An event that fires when selected changes on this track. This allows\n           * the VideoTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event VideoTrack#selectedchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('selectedchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.selected) {\n        _this.selected = settings.selected;\n      }\n\n      return _this;\n    }\n\n    return VideoTrack;\n  }(Track);\n\n  /**\n   * @memberof HTMLTrackElement\n   * @typedef {HTMLTrackElement~ReadyState}\n   * @enum {number}\n   */\n\n  var NONE = 0;\n  var LOADING = 1;\n  var LOADED = 2;\n  var ERROR = 3;\n  /**\n   * A single track represented in the DOM.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n   * @extends EventTarget\n   */\n\n  var HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(HTMLTrackElement, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this HTMLTrackElement.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function HTMLTrackElement(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var readyState;\n      var track = new TextTrack(options);\n      _this.kind = track.kind;\n      _this.src = track.src;\n      _this.srclang = track.language;\n      _this.label = track.label;\n      _this[\"default\"] = track[\"default\"];\n      Object.defineProperties(assertThisInitialized(_this), {\n        /**\n         * @memberof HTMLTrackElement\n         * @member {HTMLTrackElement~ReadyState} readyState\n         *         The current ready state of the track element.\n         * @instance\n         */\n        readyState: {\n          get: function get() {\n            return readyState;\n          }\n        },\n\n        /**\n         * @memberof HTMLTrackElement\n         * @member {TextTrack} track\n         *         The underlying TextTrack object.\n         * @instance\n         *\n         */\n        track: {\n          get: function get() {\n            return track;\n          }\n        }\n      });\n      readyState = NONE;\n      /**\n       * @listens TextTrack#loadeddata\n       * @fires HTMLTrackElement#load\n       */\n\n      track.addEventListener('loadeddata', function () {\n        readyState = LOADED;\n\n        _this.trigger({\n          type: 'load',\n          target: assertThisInitialized(_this)\n        });\n      });\n      return _this;\n    }\n\n    return HTMLTrackElement;\n  }(EventTarget$2);\n\n  HTMLTrackElement.prototype.allowedEvents_ = {\n    load: 'load'\n  };\n  HTMLTrackElement.NONE = NONE;\n  HTMLTrackElement.LOADING = LOADING;\n  HTMLTrackElement.LOADED = LOADED;\n  HTMLTrackElement.ERROR = ERROR;\n\n  /*\n   * This file contains all track properties that are used in\n   * player.js, tech.js, html5.js and possibly other techs in the future.\n   */\n\n  var NORMAL = {\n    audio: {\n      ListClass: AudioTrackList,\n      TrackClass: AudioTrack,\n      capitalName: 'Audio'\n    },\n    video: {\n      ListClass: VideoTrackList,\n      TrackClass: VideoTrack,\n      capitalName: 'Video'\n    },\n    text: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'Text'\n    }\n  };\n  Object.keys(NORMAL).forEach(function (type) {\n    NORMAL[type].getterName = type + \"Tracks\";\n    NORMAL[type].privateName = type + \"Tracks_\";\n  });\n  var REMOTE = {\n    remoteText: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'RemoteText',\n      getterName: 'remoteTextTracks',\n      privateName: 'remoteTextTracks_'\n    },\n    remoteTextEl: {\n      ListClass: HtmlTrackElementList,\n      TrackClass: HTMLTrackElement,\n      capitalName: 'RemoteTextTrackEls',\n      getterName: 'remoteTextTrackEls',\n      privateName: 'remoteTextTrackEls_'\n    }\n  };\n\n  var ALL = _extends_1({}, NORMAL, REMOTE);\n\n  REMOTE.names = Object.keys(REMOTE);\n  NORMAL.names = Object.keys(NORMAL);\n  ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n  var minDoc = {};\n\n  var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof window !== 'undefined' ? window : {};\n  var doccy;\n\n  if (typeof document !== 'undefined') {\n    doccy = document;\n  } else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n      doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n  }\n\n  var document_1 = doccy;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n  /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n  var _objCreate = Object.create || function () {\n    function F() {}\n\n    return function (o) {\n      if (arguments.length !== 1) {\n        throw new Error('Object.create shim only accepts one parameter.');\n      }\n\n      F.prototype = o;\n      return new F();\n    };\n  }(); // Creates a new ParserError object from an errorData object. The errorData\n  // object should have default code and message properties. The default message\n  // property can be overriden by passing in a message parameter.\n  // See ParsingError.Errors below for acceptable errors.\n\n\n  function ParsingError(errorData, message) {\n    this.name = \"ParsingError\";\n    this.code = errorData.code;\n    this.message = message || errorData.message;\n  }\n\n  ParsingError.prototype = _objCreate(Error.prototype);\n  ParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\n  ParsingError.Errors = {\n    BadSignature: {\n      code: 0,\n      message: \"Malformed WebVTT signature.\"\n    },\n    BadTimeStamp: {\n      code: 1,\n      message: \"Malformed time stamp.\"\n    }\n  }; // Try to parse input as a time stamp.\n\n  function parseTimeStamp(input) {\n    function computeSeconds(h, m, s, f) {\n      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n    }\n\n    var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n\n    if (!m) {\n      return null;\n    }\n\n    if (m[3]) {\n      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n      return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n    } else if (m[1] > 59) {\n      // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n      // First position is hours as it's over 59.\n      return computeSeconds(m[1], m[2], 0, m[4]);\n    } else {\n      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n      return computeSeconds(0, m[1], m[2], m[4]);\n    }\n  } // A settings object holds key/value pairs and will ignore anything but the first\n  // assignment to a specific key.\n\n\n  function Settings() {\n    this.values = _objCreate(null);\n  }\n\n  Settings.prototype = {\n    // Only accept the first assignment to any key.\n    set: function set(k, v) {\n      if (!this.get(k) && v !== \"\") {\n        this.values[k] = v;\n      }\n    },\n    // Return the value for a key, or a default value.\n    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n    // a number of possible default values as properties where 'defaultKey' is\n    // the key of the property that will be chosen; otherwise it's assumed to be\n    // a single value.\n    get: function get(k, dflt, defaultKey) {\n      if (defaultKey) {\n        return this.has(k) ? this.values[k] : dflt[defaultKey];\n      }\n\n      return this.has(k) ? this.values[k] : dflt;\n    },\n    // Check whether we have a value for a key.\n    has: function has(k) {\n      return k in this.values;\n    },\n    // Accept a setting if its one of the given alternatives.\n    alt: function alt(k, v, a) {\n      for (var n = 0; n < a.length; ++n) {\n        if (v === a[n]) {\n          this.set(k, v);\n          break;\n        }\n      }\n    },\n    // Accept a setting if its a valid (signed) integer.\n    integer: function integer(k, v) {\n      if (/^-?\\d+$/.test(v)) {\n        // integer\n        this.set(k, parseInt(v, 10));\n      }\n    },\n    // Accept a setting if its a valid percentage.\n    percent: function percent(k, v) {\n\n      if (v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n        v = parseFloat(v);\n\n        if (v >= 0 && v <= 100) {\n          this.set(k, v);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }; // Helper function to parse input into groups separated by 'groupDelim', and\n  // interprete each group as a key/value pair separated by 'keyValueDelim'.\n\n  function parseOptions(input, callback, keyValueDelim, groupDelim) {\n    var groups = groupDelim ? input.split(groupDelim) : [input];\n\n    for (var i in groups) {\n      if (typeof groups[i] !== \"string\") {\n        continue;\n      }\n\n      var kv = groups[i].split(keyValueDelim);\n\n      if (kv.length !== 2) {\n        continue;\n      }\n\n      var k = kv[0].trim();\n      var v = kv[1].trim();\n      callback(k, v);\n    }\n  }\n\n  function parseCue(input, cue, regionList) {\n    // Remember the original input if we need to throw an error.\n    var oInput = input; // 4.1 WebVTT timestamp\n\n    function consumeTimeStamp() {\n      var ts = parseTimeStamp(input);\n\n      if (ts === null) {\n        throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n      } // Remove time stamp from input.\n\n\n      input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n      return ts;\n    } // 4.4.2 WebVTT cue settings\n\n\n    function consumeCueSettings(input, cue) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"region\":\n            // Find the last region we parsed with the same region id.\n            for (var i = regionList.length - 1; i >= 0; i--) {\n              if (regionList[i].id === v) {\n                settings.set(k, regionList[i].region);\n                break;\n              }\n            }\n\n            break;\n\n          case \"vertical\":\n            settings.alt(k, v, [\"rl\", \"lr\"]);\n            break;\n\n          case \"line\":\n            var vals = v.split(\",\"),\n                vals0 = vals[0];\n            settings.integer(k, vals0);\n            settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n            settings.alt(k, vals0, [\"auto\"]);\n\n            if (vals.length === 2) {\n              settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n\n            break;\n\n          case \"position\":\n            vals = v.split(\",\");\n            settings.percent(k, vals[0]);\n\n            if (vals.length === 2) {\n              settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n\n            break;\n\n          case \"size\":\n            settings.percent(k, v);\n            break;\n\n          case \"align\":\n            settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n            break;\n        }\n      }, /:/, /\\s/); // Apply default values for any missing fields.\n\n      cue.region = settings.get(\"region\", null);\n      cue.vertical = settings.get(\"vertical\", \"\");\n\n      try {\n        cue.line = settings.get(\"line\", \"auto\");\n      } catch (e) {}\n\n      cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n      cue.snapToLines = settings.get(\"snapToLines\", true);\n      cue.size = settings.get(\"size\", 100); // Safari still uses the old middle value and won't accept center\n\n      try {\n        cue.align = settings.get(\"align\", \"center\");\n      } catch (e) {\n        cue.align = settings.get(\"align\", \"middle\");\n      }\n\n      try {\n        cue.position = settings.get(\"position\", \"auto\");\n      } catch (e) {\n        cue.position = settings.get(\"position\", {\n          start: 0,\n          left: 0,\n          center: 50,\n          middle: 50,\n          end: 100,\n          right: 100\n        }, cue.align);\n      }\n\n      cue.positionAlign = settings.get(\"positionAlign\", {\n        start: \"start\",\n        left: \"start\",\n        center: \"center\",\n        middle: \"center\",\n        end: \"end\",\n        right: \"end\"\n      }, cue.align);\n    }\n\n    function skipWhitespace() {\n      input = input.replace(/^\\s+/, \"\");\n    } // 4.1 WebVTT cue timings.\n\n\n    skipWhitespace();\n    cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n    skipWhitespace();\n\n    if (input.substr(0, 3) !== \"-->\") {\n      // (3) next characters must match \"-->\"\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n    }\n\n    input = input.substr(3);\n    skipWhitespace();\n    cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n    // 4.1 WebVTT cue settings list.\n\n    skipWhitespace();\n    consumeCueSettings(input, cue);\n  } // When evaluating this file as part of a Webpack bundle for server\n  // side rendering, `document` is an empty object.\n\n\n  var TEXTAREA_ELEMENT = document_1.createElement && document_1.createElement(\"textarea\");\n  var TAG_NAME = {\n    c: \"span\",\n    i: \"i\",\n    b: \"b\",\n    u: \"u\",\n    ruby: \"ruby\",\n    rt: \"rt\",\n    v: \"span\",\n    lang: \"span\"\n  }; // 5.1 default text color\n  // 5.2 default text background color is equivalent to text color with bg_ prefix\n\n  var DEFAULT_COLOR_CLASS = {\n    white: 'rgba(255,255,255,1)',\n    lime: 'rgba(0,255,0,1)',\n    cyan: 'rgba(0,255,255,1)',\n    red: 'rgba(255,0,0,1)',\n    yellow: 'rgba(255,255,0,1)',\n    magenta: 'rgba(255,0,255,1)',\n    blue: 'rgba(0,0,255,1)',\n    black: 'rgba(0,0,0,1)'\n  };\n  var TAG_ANNOTATION = {\n    v: \"title\",\n    lang: \"lang\"\n  };\n  var NEEDS_PARENT = {\n    rt: \"ruby\"\n  }; // Parse content into a document fragment.\n\n  function parseContent(window, input) {\n    function nextToken() {\n      // Check for end-of-string.\n      if (!input) {\n        return null;\n      } // Consume 'n' characters from the input.\n\n\n      function consume(result) {\n        input = input.substr(result.length);\n        return result;\n      }\n\n      var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n      // the tag.\n\n      return consume(m[1] ? m[1] : m[2]);\n    }\n\n    function unescape(s) {\n      TEXTAREA_ELEMENT.innerHTML = s;\n      s = TEXTAREA_ELEMENT.textContent;\n      TEXTAREA_ELEMENT.textContent = \"\";\n      return s;\n    }\n\n    function shouldAdd(current, element) {\n      return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n    } // Create an element for this tag.\n\n\n    function createElement(type, annotation) {\n      var tagName = TAG_NAME[type];\n\n      if (!tagName) {\n        return null;\n      }\n\n      var element = window.document.createElement(tagName);\n      var name = TAG_ANNOTATION[type];\n\n      if (name && annotation) {\n        element[name] = annotation.trim();\n      }\n\n      return element;\n    }\n\n    var rootDiv = window.document.createElement(\"div\"),\n        current = rootDiv,\n        t,\n        tagStack = [];\n\n    while ((t = nextToken()) !== null) {\n      if (t[0] === '<') {\n        if (t[1] === \"/\") {\n          // If the closing tag matches, move back up to the parent node.\n          if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n            tagStack.pop();\n            current = current.parentNode;\n          } // Otherwise just ignore the end tag.\n\n\n          continue;\n        }\n\n        var ts = parseTimeStamp(t.substr(1, t.length - 2));\n        var node;\n\n        if (ts) {\n          // Timestamps are lead nodes as well.\n          node = window.document.createProcessingInstruction(\"timestamp\", ts);\n          current.appendChild(node);\n          continue;\n        }\n\n        var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n        if (!m) {\n          continue;\n        } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n        node = createElement(m[1], m[3]);\n\n        if (!node) {\n          continue;\n        } // Determine if the tag should be added based on the context of where it\n        // is placed in the cuetext.\n\n\n        if (!shouldAdd(current, node)) {\n          continue;\n        } // Set the class list (as a list of classes, separated by space).\n\n\n        if (m[2]) {\n          var classes = m[2].split('.');\n          classes.forEach(function (cl) {\n            var bgColor = /^bg_/.test(cl); // slice out `bg_` if it's a background color\n\n            var colorName = bgColor ? cl.slice(3) : cl;\n\n            if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n              var propName = bgColor ? 'background-color' : 'color';\n              var propValue = DEFAULT_COLOR_CLASS[colorName];\n              node.style[propName] = propValue;\n            }\n          });\n          node.className = classes.join(' ');\n        } // Append the node to the current node, and enter the scope of the new\n        // node.\n\n\n        tagStack.push(m[1]);\n        current.appendChild(node);\n        current = node;\n        continue;\n      } // Text nodes are leaf nodes.\n\n\n      current.appendChild(window.document.createTextNode(unescape(t)));\n    }\n\n    return rootDiv;\n  } // This is a list of all the Unicode characters that have a strong\n  // right-to-left category. What this means is that these characters are\n  // written right-to-left for sure. It was generated by pulling all the strong\n  // right-to-left characters out of the Unicode data table. That table can\n  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\n  var strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\n  function isStrongRTLChar(charCode) {\n    for (var i = 0; i < strongRTLRanges.length; i++) {\n      var currentRange = strongRTLRanges[i];\n\n      if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function determineBidi(cueDiv) {\n    var nodeStack = [],\n        text = \"\",\n        charCode;\n\n    if (!cueDiv || !cueDiv.childNodes) {\n      return \"ltr\";\n    }\n\n    function pushNodes(nodeStack, node) {\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        nodeStack.push(node.childNodes[i]);\n      }\n    }\n\n    function nextTextNode(nodeStack) {\n      if (!nodeStack || !nodeStack.length) {\n        return null;\n      }\n\n      var node = nodeStack.pop(),\n          text = node.textContent || node.innerText;\n\n      if (text) {\n        // TODO: This should match all unicode type B characters (paragraph\n        // separator characters). See issue #115.\n        var m = text.match(/^.*(\\n|\\r)/);\n\n        if (m) {\n          nodeStack.length = 0;\n          return m[0];\n        }\n\n        return text;\n      }\n\n      if (node.tagName === \"ruby\") {\n        return nextTextNode(nodeStack);\n      }\n\n      if (node.childNodes) {\n        pushNodes(nodeStack, node);\n        return nextTextNode(nodeStack);\n      }\n    }\n\n    pushNodes(nodeStack, cueDiv);\n\n    while (text = nextTextNode(nodeStack)) {\n      for (var i = 0; i < text.length; i++) {\n        charCode = text.charCodeAt(i);\n\n        if (isStrongRTLChar(charCode)) {\n          return \"rtl\";\n        }\n      }\n    }\n\n    return \"ltr\";\n  }\n\n  function computeLinePos(cue) {\n    if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n      return cue.line;\n    }\n\n    if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n      return -1;\n    }\n\n    var track = cue.track,\n        trackList = track.textTrackList,\n        count = 0;\n\n    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n      if (trackList[i].mode === \"showing\") {\n        count++;\n      }\n    }\n\n    return ++count * -1;\n  }\n\n  function StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n  // div on 'this'.\n\n\n  StyleBox.prototype.applyStyles = function (styles, div) {\n    div = div || this.div;\n\n    for (var prop in styles) {\n      if (styles.hasOwnProperty(prop)) {\n        div.style[prop] = styles[prop];\n      }\n    }\n  };\n\n  StyleBox.prototype.formatStyle = function (val, unit) {\n    return val === 0 ? 0 : val + unit;\n  }; // Constructs the computed display state of the cue (a div). Places the div\n  // into the overlay which should be a block level element (usually a div).\n\n\n  function CueStyleBox(window, cue, styleOptions) {\n    StyleBox.call(this);\n    this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n    // have inline positioning and will function as the cue background box.\n\n    this.cueDiv = parseContent(window, cue.text);\n    var styles = {\n      color: \"rgba(255, 255, 255, 1)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n      position: \"relative\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: \"inline\",\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\"\n    };\n    this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n    // mirrors of them except middle instead of center on Safari.\n\n    this.div = window.document.createElement(\"div\");\n    styles = {\n      direction: determineBidi(this.cueDiv),\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\",\n      textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n      font: styleOptions.font,\n      whiteSpace: \"pre-line\",\n      position: \"absolute\"\n    };\n    this.applyStyles(styles);\n    this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n    // position of the cue box. The reference edge will be resolved later when\n    // the box orientation styles are applied.\n\n    var textPos = 0;\n\n    switch (cue.positionAlign) {\n      case \"start\":\n        textPos = cue.position;\n        break;\n\n      case \"center\":\n        textPos = cue.position - cue.size / 2;\n        break;\n\n      case \"end\":\n        textPos = cue.position - cue.size;\n        break;\n    } // Horizontal box orientation; textPos is the distance from the left edge of the\n    // area to the left edge of the box and cue.size is the distance extending to\n    // the right from there.\n\n\n    if (cue.vertical === \"\") {\n      this.applyStyles({\n        left: this.formatStyle(textPos, \"%\"),\n        width: this.formatStyle(cue.size, \"%\")\n      }); // Vertical box orientation; textPos is the distance from the top edge of the\n      // area to the top edge of the box and cue.size is the height extending\n      // downwards from there.\n    } else {\n      this.applyStyles({\n        top: this.formatStyle(textPos, \"%\"),\n        height: this.formatStyle(cue.size, \"%\")\n      });\n    }\n\n    this.move = function (box) {\n      this.applyStyles({\n        top: this.formatStyle(box.top, \"px\"),\n        bottom: this.formatStyle(box.bottom, \"px\"),\n        left: this.formatStyle(box.left, \"px\"),\n        right: this.formatStyle(box.right, \"px\"),\n        height: this.formatStyle(box.height, \"px\"),\n        width: this.formatStyle(box.width, \"px\")\n      });\n    };\n  }\n\n  CueStyleBox.prototype = _objCreate(StyleBox.prototype);\n  CueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n  // compute things with such as if it overlaps or intersects with another Element.\n  // Can initialize it with either a StyleBox or another BoxPosition.\n\n  function BoxPosition(obj) {\n    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n    // was passed in and we need to copy the results of 'getBoundingClientRect'\n    // as the object returned is readonly. All co-ordinate values are in reference\n    // to the viewport origin (top left).\n    var lh, height, width, top;\n\n    if (obj.div) {\n      height = obj.div.offsetHeight;\n      width = obj.div.offsetWidth;\n      top = obj.div.offsetTop;\n      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n      obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n      // the inner div's lines. This could be due to bold text, etc, on some platforms.\n      // In this case we should get the average line height and use that. This will\n      // result in the desired behaviour.\n\n      lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n    }\n\n    this.left = obj.left;\n    this.right = obj.right;\n    this.top = obj.top || top;\n    this.height = obj.height || height;\n    this.bottom = obj.bottom || top + (obj.height || height);\n    this.width = obj.width || width;\n    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n  } // Move the box along a particular axis. Optionally pass in an amount to move\n  // the box. If no amount is passed then the default is the line height of the\n  // box.\n\n\n  BoxPosition.prototype.move = function (axis, toMove) {\n    toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n    switch (axis) {\n      case \"+x\":\n        this.left += toMove;\n        this.right += toMove;\n        break;\n\n      case \"-x\":\n        this.left -= toMove;\n        this.right -= toMove;\n        break;\n\n      case \"+y\":\n        this.top += toMove;\n        this.bottom += toMove;\n        break;\n\n      case \"-y\":\n        this.top -= toMove;\n        this.bottom -= toMove;\n        break;\n    }\n  }; // Check if this box overlaps another box, b2.\n\n\n  BoxPosition.prototype.overlaps = function (b2) {\n    return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n  }; // Check if this box overlaps any other boxes in boxes.\n\n\n  BoxPosition.prototype.overlapsAny = function (boxes) {\n    for (var i = 0; i < boxes.length; i++) {\n      if (this.overlaps(boxes[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // Check if this box is within another box.\n\n\n  BoxPosition.prototype.within = function (container) {\n    return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n  }; // Check if this box is entirely within the container or it is overlapping\n  // on the edge opposite of the axis direction passed. For example, if \"+x\" is\n  // passed and the box is overlapping on the left edge of the container, then\n  // return true.\n\n\n  BoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n    switch (axis) {\n      case \"+x\":\n        return this.left < container.left;\n\n      case \"-x\":\n        return this.right > container.right;\n\n      case \"+y\":\n        return this.top < container.top;\n\n      case \"-y\":\n        return this.bottom > container.bottom;\n    }\n  }; // Find the percentage of the area that this box is overlapping with another\n  // box.\n\n\n  BoxPosition.prototype.intersectPercentage = function (b2) {\n    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n        y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n        intersectArea = x * y;\n    return intersectArea / (this.height * this.width);\n  }; // Convert the positions from this box to CSS compatible positions using\n  // the reference container's positions. This has to be done because this\n  // box's positions are in reference to the viewport origin, whereas, CSS\n  // values are in referecne to their respective edges.\n\n\n  BoxPosition.prototype.toCSSCompatValues = function (reference) {\n    return {\n      top: this.top - reference.top,\n      bottom: reference.bottom - this.bottom,\n      left: this.left - reference.left,\n      right: reference.right - this.right,\n      height: this.height,\n      width: this.width\n    };\n  }; // Get an object that represents the box's position without anything extra.\n  // Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\n  BoxPosition.getSimpleBoxPosition = function (obj) {\n    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n    obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n    var ret = {\n      left: obj.left,\n      right: obj.right,\n      top: obj.top || top,\n      height: obj.height || height,\n      bottom: obj.bottom || top + (obj.height || height),\n      width: obj.width || width\n    };\n    return ret;\n  }; // Move a StyleBox to its specified, or next best, position. The containerBox\n  // is the box that contains the StyleBox, such as a div. boxPositions are\n  // a list of other boxes that the styleBox can't overlap with.\n\n\n  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n    // Find the best position for a cue box, b, on the video. The axis parameter\n    // is a list of axis, the order of which, it will move the box along. For example:\n    // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n    // direction. If it doesn't find a good position for it there it will then move\n    // it along the x axis in the negative direction.\n    function findBestPosition(b, axis) {\n      var bestPosition,\n          specifiedPosition = new BoxPosition(b),\n          percentage = 1; // Highest possible so the first thing we get is better.\n\n      for (var i = 0; i < axis.length; i++) {\n        while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n          b.move(axis[i]);\n        } // We found a spot where we aren't overlapping anything. This is our\n        // best position.\n\n\n        if (b.within(containerBox)) {\n          return b;\n        }\n\n        var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n        // then remember this position as the best position.\n\n        if (percentage > p) {\n          bestPosition = new BoxPosition(b);\n          percentage = p;\n        } // Reset the box position to the specified position.\n\n\n        b = new BoxPosition(specifiedPosition);\n      }\n\n      return bestPosition || specifiedPosition;\n    }\n\n    var boxPosition = new BoxPosition(styleBox),\n        cue = styleBox.cue,\n        linePos = computeLinePos(cue),\n        axis = []; // If we have a line number to align the cue to.\n\n    if (cue.snapToLines) {\n      var size;\n\n      switch (cue.vertical) {\n        case \"\":\n          axis = [\"+y\", \"-y\"];\n          size = \"height\";\n          break;\n\n        case \"rl\":\n          axis = [\"+x\", \"-x\"];\n          size = \"width\";\n          break;\n\n        case \"lr\":\n          axis = [\"-x\", \"+x\"];\n          size = \"width\";\n          break;\n      }\n\n      var step = boxPosition.lineHeight,\n          position = step * Math.round(linePos),\n          maxPosition = containerBox[size] + step,\n          initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n      // clamp the box to the amount of steps it would take for the box to\n      // reach the max position.\n\n      if (Math.abs(position) > maxPosition) {\n        position = position < 0 ? -1 : 1;\n        position *= Math.ceil(maxPosition / step) * step;\n      } // If computed line position returns negative then line numbers are\n      // relative to the bottom of the video instead of the top. Therefore, we\n      // need to increase our initial position by the length or width of the\n      // video, depending on the writing direction, and reverse our axis directions.\n\n\n      if (linePos < 0) {\n        position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n        axis = axis.reverse();\n      } // Move the box to the specified position. This may not be its best\n      // position.\n\n\n      boxPosition.move(initialAxis, position);\n    } else {\n      // If we have a percentage line value for the cue.\n      var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n      switch (cue.lineAlign) {\n        case \"center\":\n          linePos -= calculatedPercentage / 2;\n          break;\n\n        case \"end\":\n          linePos -= calculatedPercentage;\n          break;\n      } // Apply initial line position to the cue box.\n\n\n      switch (cue.vertical) {\n        case \"\":\n          styleBox.applyStyles({\n            top: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"rl\":\n          styleBox.applyStyles({\n            left: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"lr\":\n          styleBox.applyStyles({\n            right: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n      }\n\n      axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n      // to it.\n\n      boxPosition = new BoxPosition(styleBox);\n    }\n\n    var bestPosition = findBestPosition(boxPosition, axis);\n    styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n  }\n\n  function WebVTT$1() {// Nothing\n  } // Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\n  WebVTT$1.StringDecoder = function () {\n    return {\n      decode: function decode(data) {\n        if (!data) {\n          return \"\";\n        }\n\n        if (typeof data !== \"string\") {\n          throw new Error(\"Error - expected string data.\");\n        }\n\n        return decodeURIComponent(encodeURIComponent(data));\n      }\n    };\n  };\n\n  WebVTT$1.convertCueToDOMTree = function (window, cuetext) {\n    if (!window || !cuetext) {\n      return null;\n    }\n\n    return parseContent(window, cuetext);\n  };\n\n  var FONT_SIZE_PERCENT = 0.05;\n  var FONT_STYLE = \"sans-serif\";\n  var CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n  // @param overlay A block level element (usually a div) that the computed cues\n  //                and regions will be placed into.\n\n  WebVTT$1.processCues = function (window, cues, overlay) {\n    if (!window || !cues || !overlay) {\n      return null;\n    } // Remove all previous children.\n\n\n    while (overlay.firstChild) {\n      overlay.removeChild(overlay.firstChild);\n    }\n\n    var paddedOverlay = window.document.createElement(\"div\");\n    paddedOverlay.style.position = \"absolute\";\n    paddedOverlay.style.left = \"0\";\n    paddedOverlay.style.right = \"0\";\n    paddedOverlay.style.top = \"0\";\n    paddedOverlay.style.bottom = \"0\";\n    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n    overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n    // be the case if a cue's state has been changed since the last computation or\n    // if it has not been computed yet.\n\n    function shouldCompute(cues) {\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i].hasBeenReset || !cues[i].displayState) {\n          return true;\n        }\n      }\n\n      return false;\n    } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n    if (!shouldCompute(cues)) {\n      for (var i = 0; i < cues.length; i++) {\n        paddedOverlay.appendChild(cues[i].displayState);\n      }\n\n      return;\n    }\n\n    var boxPositions = [],\n        containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n        fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n    var styleOptions = {\n      font: fontSize + \"px \" + FONT_STYLE\n    };\n\n    (function () {\n      var styleBox, cue;\n\n      for (var i = 0; i < cues.length; i++) {\n        cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n        styleBox = new CueStyleBox(window, cue, styleOptions);\n        paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n        // if we don't have too.\n\n        cue.displayState = styleBox.div;\n        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n      }\n    })();\n  };\n\n  WebVTT$1.Parser = function (window, vttjs, decoder) {\n    if (!decoder) {\n      decoder = vttjs;\n      vttjs = {};\n    }\n\n    if (!vttjs) {\n      vttjs = {};\n    }\n\n    this.window = window;\n    this.vttjs = vttjs;\n    this.state = \"INITIAL\";\n    this.buffer = \"\";\n    this.decoder = decoder || new TextDecoder(\"utf8\");\n    this.regionList = [];\n  };\n\n  WebVTT$1.Parser.prototype = {\n    // If the error is a ParsingError then report it to the consumer if\n    // possible. If it's not a ParsingError then throw it like normal.\n    reportOrThrowError: function reportOrThrowError(e) {\n      if (e instanceof ParsingError) {\n        this.onparsingerror && this.onparsingerror(e);\n      } else {\n        throw e;\n      }\n    },\n    parse: function parse(data) {\n      var self = this; // If there is no data then we won't decode it, but will just try to parse\n      // whatever is in buffer already. This may occur in circumstances, for\n      // example when flush() is called.\n\n      if (data) {\n        // Try to decode the data that we received.\n        self.buffer += self.decoder.decode(data, {\n          stream: true\n        });\n      }\n\n      function collectNextLine() {\n        var buffer = self.buffer;\n        var pos = 0;\n\n        while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n          ++pos;\n        }\n\n        var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n        if (buffer[pos] === '\\r') {\n          ++pos;\n        }\n\n        if (buffer[pos] === '\\n') {\n          ++pos;\n        }\n\n        self.buffer = buffer.substr(pos);\n        return line;\n      } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n      function parseRegion(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"id\":\n              settings.set(k, v);\n              break;\n\n            case \"width\":\n              settings.percent(k, v);\n              break;\n\n            case \"lines\":\n              settings.integer(k, v);\n              break;\n\n            case \"regionanchor\":\n            case \"viewportanchor\":\n              var xy = v.split(',');\n\n              if (xy.length !== 2) {\n                break;\n              } // We have to make sure both x and y parse, so use a temporary\n              // settings object here.\n\n\n              var anchor = new Settings();\n              anchor.percent(\"x\", xy[0]);\n              anchor.percent(\"y\", xy[1]);\n\n              if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n                break;\n              }\n\n              settings.set(k + \"X\", anchor.get(\"x\"));\n              settings.set(k + \"Y\", anchor.get(\"y\"));\n              break;\n\n            case \"scroll\":\n              settings.alt(k, v, [\"up\"]);\n              break;\n          }\n        }, /=/, /\\s/); // Create the region, using default values for any values that were not\n        // specified.\n\n        if (settings.has(\"id\")) {\n          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n          region.width = settings.get(\"width\", 100);\n          region.lines = settings.get(\"lines\", 3);\n          region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n          region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n          region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n          region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n          region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n          self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n          // reference it.\n\n          self.regionList.push({\n            id: settings.get(\"id\"),\n            region: region\n          });\n        }\n      } // draft-pantos-http-live-streaming-20\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n      // 3.5 WebVTT\n\n\n      function parseTimestampMap(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"MPEGT\":\n              settings.integer(k + 'S', v);\n              break;\n\n            case \"LOCA\":\n              settings.set(k + 'L', parseTimeStamp(v));\n              break;\n          }\n        }, /[^\\d]:/, /,/);\n        self.ontimestampmap && self.ontimestampmap({\n          \"MPEGTS\": settings.get(\"MPEGTS\"),\n          \"LOCAL\": settings.get(\"LOCAL\")\n        });\n      } // 3.2 WebVTT metadata header syntax\n\n\n      function parseHeader(input) {\n        if (input.match(/X-TIMESTAMP-MAP/)) {\n          // This line contains HLS X-TIMESTAMP-MAP metadata\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"X-TIMESTAMP-MAP\":\n                parseTimestampMap(v);\n                break;\n            }\n          }, /=/);\n        } else {\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"Region\":\n                // 3.3 WebVTT region metadata header syntax\n                parseRegion(v);\n                break;\n            }\n          }, /:/);\n        }\n      } // 5.1 WebVTT file parsing.\n\n\n      try {\n        var line;\n\n        if (self.state === \"INITIAL\") {\n          // We can't start parsing until we have the first line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          line = collectNextLine();\n          var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n          if (!m || !m[0]) {\n            throw new ParsingError(ParsingError.Errors.BadSignature);\n          }\n\n          self.state = \"HEADER\";\n        }\n\n        var alreadyCollectedLine = false;\n\n        while (self.buffer) {\n          // We can't parse a line until we have the full line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          if (!alreadyCollectedLine) {\n            line = collectNextLine();\n          } else {\n            alreadyCollectedLine = false;\n          }\n\n          switch (self.state) {\n            case \"HEADER\":\n              // 13-18 - Allow a header (metadata) under the WEBVTT line.\n              if (/:/.test(line)) {\n                parseHeader(line);\n              } else if (!line) {\n                // An empty line terminates the header and starts the body (cues).\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"NOTE\":\n              // Ignore NOTE blocks.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"ID\":\n              // Check for the start of NOTE blocks.\n              if (/^NOTE($|[ \\t])/.test(line)) {\n                self.state = \"NOTE\";\n                break;\n              } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n              if (!line) {\n                continue;\n              }\n\n              self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\"); // Safari still uses the old middle value and won't accept center\n\n              try {\n                self.cue.align = \"center\";\n              } catch (e) {\n                self.cue.align = \"middle\";\n              }\n\n              self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n              if (line.indexOf(\"-->\") === -1) {\n                self.cue.id = line;\n                continue;\n              }\n\n            // Process line as start of a cue.\n\n            /*falls through*/\n\n            case \"CUE\":\n              // 40 - Collect cue timings and settings.\n              try {\n                parseCue(line, self.cue, self.regionList);\n              } catch (e) {\n                self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n                self.cue = null;\n                self.state = \"BADCUE\";\n                continue;\n              }\n\n              self.state = \"CUETEXT\";\n              continue;\n\n            case \"CUETEXT\":\n              var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n              // 35 - If we have the special substring '-->' then report the cue,\n              // but do not collect the line as we need to process the current\n              // one as a new cue.\n\n              if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n                // We are done parsing self cue.\n                self.oncue && self.oncue(self.cue);\n                self.cue = null;\n                self.state = \"ID\";\n                continue;\n              }\n\n              if (self.cue.text) {\n                self.cue.text += \"\\n\";\n              }\n\n              self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n              continue;\n\n            case \"BADCUE\":\n              // BADCUE\n              // 54-62 - Collect and discard the remaining cue.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n          }\n        }\n      } catch (e) {\n        self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n        if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n          self.oncue(self.cue);\n        }\n\n        self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n        // another exception occurred so enter BADCUE state.\n\n        self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n      }\n\n      return this;\n    },\n    flush: function flush() {\n      var self = this;\n\n      try {\n        // Finish decoding the stream.\n        self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n        if (self.cue || self.state === \"HEADER\") {\n          self.buffer += \"\\n\\n\";\n          self.parse();\n        } // If we've flushed, parsed, and we're still on the INITIAL state then\n        // that means we don't have enough of the stream to parse the first\n        // line.\n\n\n        if (self.state === \"INITIAL\") {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n      }\n\n      self.onflush && self.onflush();\n      return this;\n    }\n  };\n  var vtt = WebVTT$1;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var autoKeyword = \"auto\";\n  var directionSetting = {\n    \"\": 1,\n    \"lr\": 1,\n    \"rl\": 1\n  };\n  var alignSetting = {\n    \"start\": 1,\n    \"center\": 1,\n    \"end\": 1,\n    \"left\": 1,\n    \"right\": 1,\n    \"auto\": 1,\n    \"line-left\": 1,\n    \"line-right\": 1\n  };\n\n  function findDirectionSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var dir = directionSetting[value.toLowerCase()];\n    return dir ? value.toLowerCase() : false;\n  }\n\n  function findAlignSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var align = alignSetting[value.toLowerCase()];\n    return align ? value.toLowerCase() : false;\n  }\n\n  function VTTCue(startTime, endTime, text) {\n    /**\n     * Shim implementation specific properties. These properties are not in\n     * the spec.\n     */\n    // Lets us know when the VTTCue's data has changed in such a way that we need\n    // to recompute its display state. This lets us compute its display state\n    // lazily.\n    this.hasBeenReset = false;\n    /**\n     * VTTCue and TextTrackCue properties\n     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n     */\n\n    var _id = \"\";\n    var _pauseOnExit = false;\n    var _startTime = startTime;\n    var _endTime = endTime;\n    var _text = text;\n    var _region = null;\n    var _vertical = \"\";\n    var _snapToLines = true;\n    var _line = \"auto\";\n    var _lineAlign = \"start\";\n    var _position = \"auto\";\n    var _positionAlign = \"auto\";\n    var _size = 100;\n    var _align = \"center\";\n    Object.defineProperties(this, {\n      \"id\": {\n        enumerable: true,\n        get: function get() {\n          return _id;\n        },\n        set: function set(value) {\n          _id = \"\" + value;\n        }\n      },\n      \"pauseOnExit\": {\n        enumerable: true,\n        get: function get() {\n          return _pauseOnExit;\n        },\n        set: function set(value) {\n          _pauseOnExit = !!value;\n        }\n      },\n      \"startTime\": {\n        enumerable: true,\n        get: function get() {\n          return _startTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Start time must be set to a number.\");\n          }\n\n          _startTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"endTime\": {\n        enumerable: true,\n        get: function get() {\n          return _endTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"End time must be set to a number.\");\n          }\n\n          _endTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"text\": {\n        enumerable: true,\n        get: function get() {\n          return _text;\n        },\n        set: function set(value) {\n          _text = \"\" + value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"region\": {\n        enumerable: true,\n        get: function get() {\n          return _region;\n        },\n        set: function set(value) {\n          _region = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"vertical\": {\n        enumerable: true,\n        get: function get() {\n          return _vertical;\n        },\n        set: function set(value) {\n          var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n          if (setting === false) {\n            throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n          }\n\n          _vertical = setting;\n          this.hasBeenReset = true;\n        }\n      },\n      \"snapToLines\": {\n        enumerable: true,\n        get: function get() {\n          return _snapToLines;\n        },\n        set: function set(value) {\n          _snapToLines = !!value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"line\": {\n        enumerable: true,\n        get: function get() {\n          return _line;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\" && value !== autoKeyword) {\n            throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n          }\n\n          _line = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"lineAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _lineAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n          } else {\n            _lineAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"position\": {\n        enumerable: true,\n        get: function get() {\n          return _position;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Position must be between 0 and 100.\");\n          }\n\n          _position = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"positionAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _positionAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n          } else {\n            _positionAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"size\": {\n        enumerable: true,\n        get: function get() {\n          return _size;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Size must be between 0 and 100.\");\n          }\n\n          _size = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"align\": {\n        enumerable: true,\n        get: function get() {\n          return _align;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n          }\n\n          _align = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    });\n    /**\n     * Other <track> spec defined properties\n     */\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n    this.displayState = undefined;\n  }\n  /**\n   * VTTCue methods\n   */\n\n\n  VTTCue.prototype.getCueAsHTML = function () {\n    // Assume WebVTT.convertCueToDOMTree is on the global.\n    return WebVTT.convertCueToDOMTree(window, this.text);\n  };\n\n  var vttcue = VTTCue;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var scrollSetting = {\n    \"\": true,\n    \"up\": true\n  };\n\n  function findScrollSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var scroll = scrollSetting[value.toLowerCase()];\n    return scroll ? value.toLowerCase() : false;\n  }\n\n  function isValidPercentValue(value) {\n    return typeof value === \"number\" && value >= 0 && value <= 100;\n  } // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\n  function VTTRegion() {\n    var _width = 100;\n    var _lines = 3;\n    var _regionAnchorX = 0;\n    var _regionAnchorY = 100;\n    var _viewportAnchorX = 0;\n    var _viewportAnchorY = 100;\n    var _scroll = \"\";\n    Object.defineProperties(this, {\n      \"width\": {\n        enumerable: true,\n        get: function get() {\n          return _width;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"Width must be between 0 and 100.\");\n          }\n\n          _width = value;\n        }\n      },\n      \"lines\": {\n        enumerable: true,\n        get: function get() {\n          return _lines;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Lines must be set to a number.\");\n          }\n\n          _lines = value;\n        }\n      },\n      \"regionAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n          }\n\n          _regionAnchorY = value;\n        }\n      },\n      \"regionAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n          }\n\n          _regionAnchorX = value;\n        }\n      },\n      \"viewportAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n          }\n\n          _viewportAnchorY = value;\n        }\n      },\n      \"viewportAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n          }\n\n          _viewportAnchorX = value;\n        }\n      },\n      \"scroll\": {\n        enumerable: true,\n        get: function get() {\n          return _scroll;\n        },\n        set: function set(value) {\n          var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n          if (setting === false) {\n            console.warn(\"Scroll: an invalid or illegal string was specified.\");\n          } else {\n            _scroll = setting;\n          }\n        }\n      }\n    });\n  }\n\n  var vttregion = VTTRegion;\n\n  var browserIndex = createCommonjsModule(function (module) {\n    /**\n     * Copyright 2013 vtt.js Contributors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // Default exports for Node. Export the extended versions of VTTCue and\n    // VTTRegion in Node since we likely want the capability to convert back and\n    // forth between JSON. If we don't then it's not that big of a deal since we're\n    // off browser.\n    var vttjs = module.exports = {\n      WebVTT: vtt,\n      VTTCue: vttcue,\n      VTTRegion: vttregion\n    };\n    window_1.vttjs = vttjs;\n    window_1.WebVTT = vttjs.WebVTT;\n    var cueShim = vttjs.VTTCue;\n    var regionShim = vttjs.VTTRegion;\n    var nativeVTTCue = window_1.VTTCue;\n    var nativeVTTRegion = window_1.VTTRegion;\n\n    vttjs.shim = function () {\n      window_1.VTTCue = cueShim;\n      window_1.VTTRegion = regionShim;\n    };\n\n    vttjs.restore = function () {\n      window_1.VTTCue = nativeVTTCue;\n      window_1.VTTRegion = nativeVTTRegion;\n    };\n\n    if (!window_1.VTTCue) {\n      vttjs.shim();\n    }\n  });\n  browserIndex.WebVTT;\n  browserIndex.VTTCue;\n  browserIndex.VTTRegion;\n\n  /**\n   * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n   * that just contains the src url alone.\n   * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n     * `var SourceString = 'http://example.com/some-video.mp4';`\n   *\n   * @typedef {Object|string} Tech~SourceObject\n   *\n   * @property {string} src\n   *           The url to the source\n   *\n   * @property {string} type\n   *           The mime type of the source\n   */\n\n  /**\n   * A function used by {@link Tech} to create a new {@link TextTrack}.\n   *\n   * @private\n   *\n   * @param {Tech} self\n   *        An instance of the Tech class.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @param {Object} [options={}]\n   *        An object with additional text track options\n   *\n   * @return {TextTrack}\n   *          The text track that was created.\n   */\n\n  function createTrackHelper(self, kind, label, language, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var tracks = self.textTracks();\n    options.kind = kind;\n\n    if (label) {\n      options.label = label;\n    }\n\n    if (language) {\n      options.language = language;\n    }\n\n    options.tech = self;\n    var track = new ALL.text.TrackClass(options);\n    tracks.addTrack(track);\n    return track;\n  }\n  /**\n   * This is the base class for media playback technology controllers, such as\n   * {@link HTML5}\n   *\n   * @extends Component\n   */\n\n\n  var Tech = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Tech, _Component);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Tech(options, ready) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (ready === void 0) {\n        ready = function ready() {};\n      }\n\n      // we don't want the tech to report user activity automatically.\n      // This is done manually in addControlsListeners\n      options.reportTouchActivity = false;\n      _this = _Component.call(this, null, options, ready) || this;\n\n      _this.onDurationChange_ = function (e) {\n        return _this.onDurationChange(e);\n      };\n\n      _this.trackProgress_ = function (e) {\n        return _this.trackProgress(e);\n      };\n\n      _this.trackCurrentTime_ = function (e) {\n        return _this.trackCurrentTime(e);\n      };\n\n      _this.stopTrackingCurrentTime_ = function (e) {\n        return _this.stopTrackingCurrentTime(e);\n      };\n\n      _this.disposeSourceHandler_ = function (e) {\n        return _this.disposeSourceHandler(e);\n      };\n\n      _this.queuedHanders_ = new Set(); // keep track of whether the current source has played at all to\n      // implement a very limited played()\n\n      _this.hasStarted_ = false;\n\n      _this.on('playing', function () {\n        this.hasStarted_ = true;\n      });\n\n      _this.on('loadstart', function () {\n        this.hasStarted_ = false;\n      });\n\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n\n        if (options && options[props.getterName]) {\n          _this[props.privateName] = options[props.getterName];\n        }\n      }); // Manually track progress in cases where the browser/tech doesn't report it.\n\n      if (!_this.featuresProgressEvents) {\n        _this.manualProgressOn();\n      } // Manually track timeupdates in cases where the browser/tech doesn't report it.\n\n\n      if (!_this.featuresTimeupdateEvents) {\n        _this.manualTimeUpdatesOn();\n      }\n\n      ['Text', 'Audio', 'Video'].forEach(function (track) {\n        if (options[\"native\" + track + \"Tracks\"] === false) {\n          _this[\"featuresNative\" + track + \"Tracks\"] = false;\n        }\n      });\n\n      if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n        _this.featuresNativeTextTracks = false;\n      } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n        _this.featuresNativeTextTracks = true;\n      }\n\n      if (!_this.featuresNativeTextTracks) {\n        _this.emulateTextTracks();\n      }\n\n      _this.preloadTextTracks = options.preloadTextTracks !== false;\n      _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n      _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n      if (!options.nativeControlsForTouch) {\n        _this.emitTapEvents();\n      }\n\n      if (_this.constructor) {\n        _this.name_ = _this.constructor.name || 'Unknown Tech';\n      }\n\n      return _this;\n    }\n    /**\n     * A special function to trigger source set in a way that will allow player\n     * to re-trigger if the player or tech are not ready yet.\n     *\n     * @fires Tech#sourceset\n     * @param {string} src The source string at the time of the source changing.\n     */\n\n\n    var _proto = Tech.prototype;\n\n    _proto.triggerSourceset = function triggerSourceset(src) {\n      var _this2 = this;\n\n      if (!this.isReady_) {\n        // on initial ready we have to trigger source set\n        // 1ms after ready so that player can watch for it.\n        this.one('ready', function () {\n          return _this2.setTimeout(function () {\n            return _this2.triggerSourceset(src);\n          }, 1);\n        });\n      }\n      /**\n       * Fired when the source is set on the tech causing the media element\n       * to reload.\n       *\n       * @see {@link Player#event:sourceset}\n       * @event Tech#sourceset\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger({\n        src: src,\n        type: 'sourceset'\n      });\n    }\n    /* Fallbacks for unsupported event types\n    ================================================================================ */\n\n    /**\n     * Polyfill the `progress` event for browsers that don't support it natively.\n     *\n     * @see {@link Tech#trackProgress}\n     */\n    ;\n\n    _proto.manualProgressOn = function manualProgressOn() {\n      this.on('durationchange', this.onDurationChange_);\n      this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n      this.one('ready', this.trackProgress_);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     */\n    ;\n\n    _proto.manualProgressOff = function manualProgressOff() {\n      this.manualProgress = false;\n      this.stopTrackingProgress();\n      this.off('durationchange', this.onDurationChange_);\n    }\n    /**\n     * This is used to trigger a `progress` event when the buffered percent changes. It\n     * sets an interval function that will be called every 500 milliseconds to check if the\n     * buffer end percent has changed.\n     *\n     * > This function is called by {@link Tech#manualProgressOn}\n     *\n     * @param {EventTarget~Event} event\n     *        The `ready` event that caused this to run.\n     *\n     * @listens Tech#ready\n     * @fires Tech#progress\n     */\n    ;\n\n    _proto.trackProgress = function trackProgress(event) {\n      this.stopTrackingProgress();\n      this.progressInterval = this.setInterval(bind(this, function () {\n        // Don't trigger unless buffered amount is greater than last time\n        var numBufferedPercent = this.bufferedPercent();\n\n        if (this.bufferedPercent_ !== numBufferedPercent) {\n          /**\n           * See {@link Player#progress}\n           *\n           * @event Tech#progress\n           * @type {EventTarget~Event}\n           */\n          this.trigger('progress');\n        }\n\n        this.bufferedPercent_ = numBufferedPercent;\n\n        if (numBufferedPercent === 1) {\n          this.stopTrackingProgress();\n        }\n      }), 500);\n    }\n    /**\n     * Update our internal duration on a `durationchange` event by calling\n     * {@link Tech#duration}.\n     *\n     * @param {EventTarget~Event} event\n     *        The `durationchange` event that caused this to run.\n     *\n     * @listens Tech#durationchange\n     */\n    ;\n\n    _proto.onDurationChange = function onDurationChange(event) {\n      this.duration_ = this.duration();\n    }\n    /**\n     * Get and create a `TimeRange` object for buffering.\n     *\n     * @return {TimeRange}\n     *         The time range object that was created.\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      return createTimeRanges(0, 0);\n    }\n    /**\n     * Get the percentage of the current video that is currently buffered.\n     *\n     * @return {number}\n     *         A number from 0 to 1 that represents the decimal percentage of the\n     *         video that is buffered.\n     *\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$1() {\n      return bufferedPercent(this.buffered(), this.duration_);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     * Stop manually tracking progress events by clearing the interval that was set in\n     * {@link Tech#trackProgress}.\n     */\n    ;\n\n    _proto.stopTrackingProgress = function stopTrackingProgress() {\n      this.clearInterval(this.progressInterval);\n    }\n    /**\n     * Polyfill the `timeupdate` event for browsers that don't support it.\n     *\n     * @see {@link Tech#trackCurrentTime}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n      this.manualTimeUpdates = true;\n      this.on('play', this.trackCurrentTime_);\n      this.on('pause', this.stopTrackingCurrentTime_);\n    }\n    /**\n     * Turn off the polyfill for `timeupdate` events that was created in\n     * {@link Tech#manualTimeUpdatesOn}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n      this.manualTimeUpdates = false;\n      this.stopTrackingCurrentTime();\n      this.off('play', this.trackCurrentTime_);\n      this.off('pause', this.stopTrackingCurrentTime_);\n    }\n    /**\n     * Sets up an interval function to track current time and trigger `timeupdate` every\n     * 250 milliseconds.\n     *\n     * @listens Tech#play\n     * @triggers Tech#timeupdate\n     */\n    ;\n\n    _proto.trackCurrentTime = function trackCurrentTime() {\n      if (this.currentTimeInterval) {\n        this.stopTrackingCurrentTime();\n      }\n\n      this.currentTimeInterval = this.setInterval(function () {\n        /**\n         * Triggered at an interval of 250ms to indicated that time is passing in the video.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      }, 250);\n    }\n    /**\n     * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n     * `timeupdate` event is no longer triggered.\n     *\n     * @listens {Tech#pause}\n     */\n    ;\n\n    _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n      this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n      // the progress bar won't make it all the way to the end\n\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n    /**\n     * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n     * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n     *\n     * @fires Component#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      // clear out all tracks because we can't reuse them between techs\n      this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n      if (this.manualProgress) {\n        this.manualProgressOff();\n      }\n\n      if (this.manualTimeUpdates) {\n        this.manualTimeUpdatesOff();\n      }\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n     *\n     * > Note: Techs without source handlers should call this between sources for `video`\n     *         & `audio` tracks. You don't want to use them between tracks!\n     *\n     * @param {string[]|string} types\n     *        TrackList names to clear, valid names are `video`, `audio`, and\n     *        `text`.\n     */\n    ;\n\n    _proto.clearTracks = function clearTracks(types) {\n      var _this3 = this;\n\n      types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n      types.forEach(function (type) {\n        var list = _this3[type + \"Tracks\"]() || [];\n        var i = list.length;\n\n        while (i--) {\n          var track = list[i];\n\n          if (type === 'text') {\n            _this3.removeRemoteTextTrack(track);\n          }\n\n          list.removeTrack(track);\n        }\n      });\n    }\n    /**\n     * Remove any TextTracks added via addRemoteTextTrack that are\n     * flagged for automatic garbage collection\n     */\n    ;\n\n    _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n      var list = this.autoRemoteTextTracks_ || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n        this.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Reset the tech, which will removes all sources and reset the internal readyState.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.reset = function reset() {}\n    /**\n     * Get the value of `crossOrigin` from the tech.\n     *\n     * @abstract\n     *\n     * @see {Html5#crossOrigin}\n     */\n    ;\n\n    _proto.crossOrigin = function crossOrigin() {}\n    /**\n     * Set the value of `crossOrigin` on the tech.\n     *\n     * @abstract\n     *\n     * @param {string} crossOrigin the crossOrigin value\n     * @see {Html5#setCrossOrigin}\n     */\n    ;\n\n    _proto.setCrossOrigin = function setCrossOrigin() {}\n    /**\n     * Get or set an error on the Tech.\n     *\n     * @param {MediaError} [err]\n     *        Error to set on the Tech\n     *\n     * @return {MediaError|null}\n     *         The current error object on the tech, or null if there isn't one.\n     */\n    ;\n\n    _proto.error = function error(err) {\n      if (err !== undefined) {\n        this.error_ = new MediaError(err);\n        this.trigger('error');\n      }\n\n      return this.error_;\n    }\n    /**\n     * Returns the `TimeRange`s that have been played through for the current source.\n     *\n     * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n     *         It only checks whether the source has played at all or not.\n     *\n     * @return {TimeRange}\n     *         - A single time range if this video has played\n     *         - An empty set of ranges if not.\n     */\n    ;\n\n    _proto.played = function played() {\n      if (this.hasStarted_) {\n        return createTimeRanges(0, 0);\n      }\n\n      return createTimeRanges();\n    }\n    /**\n     * Start playback\n     *\n     * @abstract\n     *\n     * @see {Html5#play}\n     */\n    ;\n\n    _proto.play = function play() {}\n    /**\n     * Set whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#setScrubbing}\n     */\n    ;\n\n    _proto.setScrubbing = function setScrubbing() {}\n    /**\n     * Get whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#scrubbing}\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing() {}\n    /**\n     * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n     * previously called.\n     *\n     * @fires Tech#timeupdate\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime() {\n      // improve the accuracy of manual timeupdates\n      if (this.manualTimeUpdates) {\n        /**\n         * A manual `timeupdate` event.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        });\n      }\n    }\n    /**\n     * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n     * {@link TextTrackList} events.\n     *\n     * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n     *\n     * @fires Tech#audiotrackchange\n     * @fires Tech#videotrackchange\n     * @fires Tech#texttrackchange\n     */\n    ;\n\n    _proto.initTrackListeners = function initTrackListeners() {\n      var _this4 = this;\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n        *\n        * @event Tech#audiotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n        *\n        * @event Tech#videotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n        *\n        * @event Tech#texttrackchange\n        * @type {EventTarget~Event}\n        */\n      NORMAL.names.forEach(function (name) {\n        var props = NORMAL[name];\n\n        var trackListChanges = function trackListChanges() {\n          _this4.trigger(name + \"trackchange\");\n        };\n\n        var tracks = _this4[props.getterName]();\n\n        tracks.addEventListener('removetrack', trackListChanges);\n        tracks.addEventListener('addtrack', trackListChanges);\n\n        _this4.on('dispose', function () {\n          tracks.removeEventListener('removetrack', trackListChanges);\n          tracks.removeEventListener('addtrack', trackListChanges);\n        });\n      });\n    }\n    /**\n     * Emulate TextTracks using vtt.js if necessary\n     *\n     * @fires Tech#vttjsloaded\n     * @fires Tech#vttjserror\n     */\n    ;\n\n    _proto.addWebVttScript_ = function addWebVttScript_() {\n      var _this5 = this;\n\n      if (window.WebVTT) {\n        return;\n      } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n      // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n      // before inserting the WebVTT script\n\n\n      if (document.body.contains(this.el())) {\n        // load via require if available and vtt.js script location was not passed in\n        // as an option. novtt builds will turn the above require call into an empty object\n        // which will cause this if check to always fail.\n        if (!this.options_['vtt.js'] && isPlain(browserIndex) && Object.keys(browserIndex).length > 0) {\n          this.trigger('vttjsloaded');\n          return;\n        } // load vtt.js via the script location option or the cdn of no location was\n        // passed in\n\n\n        var script = document.createElement('script');\n        script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n        script.onload = function () {\n          /**\n           * Fired when vtt.js is loaded.\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjsloaded');\n        };\n\n        script.onerror = function () {\n          /**\n           * Fired when vtt.js was not loaded due to an error\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjserror');\n        };\n\n        this.on('dispose', function () {\n          script.onload = null;\n          script.onerror = null;\n        }); // but have not loaded yet and we set it to true before the inject so that\n        // we don't overwrite the injected window.WebVTT if it loads right away\n\n        window.WebVTT = true;\n        this.el().parentNode.appendChild(script);\n      } else {\n        this.ready(this.addWebVttScript_);\n      }\n    }\n    /**\n     * Emulate texttracks\n     *\n     */\n    ;\n\n    _proto.emulateTextTracks = function emulateTextTracks() {\n      var _this6 = this;\n\n      var tracks = this.textTracks();\n      var remoteTracks = this.remoteTextTracks();\n\n      var handleAddTrack = function handleAddTrack(e) {\n        return tracks.addTrack(e.track);\n      };\n\n      var handleRemoveTrack = function handleRemoveTrack(e) {\n        return tracks.removeTrack(e.track);\n      };\n\n      remoteTracks.on('addtrack', handleAddTrack);\n      remoteTracks.on('removetrack', handleRemoveTrack);\n      this.addWebVttScript_();\n\n      var updateDisplay = function updateDisplay() {\n        return _this6.trigger('texttrackchange');\n      };\n\n      var textTracksChanges = function textTracksChanges() {\n        updateDisplay();\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n\n          if (track.mode === 'showing') {\n            track.addEventListener('cuechange', updateDisplay);\n          }\n        }\n      };\n\n      textTracksChanges();\n      tracks.addEventListener('change', textTracksChanges);\n      tracks.addEventListener('addtrack', textTracksChanges);\n      tracks.addEventListener('removetrack', textTracksChanges);\n      this.on('dispose', function () {\n        remoteTracks.off('addtrack', handleAddTrack);\n        remoteTracks.off('removetrack', handleRemoveTrack);\n        tracks.removeEventListener('change', textTracksChanges);\n        tracks.removeEventListener('addtrack', textTracksChanges);\n        tracks.removeEventListener('removetrack', textTracksChanges);\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n        }\n      });\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!kind) {\n        throw new Error('TextTrack kind is required but was not provided');\n      }\n\n      return createTrackHelper(this, kind, label, language);\n    }\n    /**\n     * Create an emulated TextTrack for use by addRemoteTextTrack\n     *\n     * This is intended to be overridden by classes that inherit from\n     * Tech in order to create native or custom TextTracks.\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label].\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      var track = mergeOptions$3(options, {\n        tech: this\n      });\n      return new REMOTE.remoteTextEl.TrackClass(track);\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n     *\n     * @param {Object} options\n     *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n     *\n     * @param {boolean} [manualCleanup=true]\n     *        - When false: the TextTrack will be automatically removed from the video\n     *          element whenever the source changes\n     *        - When True: The TextTrack will have to be cleaned up manually\n     *\n     * @return {HTMLTrackElement}\n     *         An Html Track Element.\n     *\n     * @deprecated The default functionality for this function will be equivalent\n     *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n     *             also be removed.\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var _this7 = this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var htmlTrackElement = this.createRemoteTextTrack(options);\n\n      if (manualCleanup !== true && manualCleanup !== false) {\n        // deprecation warning\n        log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n        manualCleanup = true;\n      } // store HTMLTrackElement and TextTrack to remote list\n\n\n      this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n      this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n      if (manualCleanup !== true) {\n        // create the TextTrackList if it doesn't exist\n        this.ready(function () {\n          return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n        });\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove a remote text track from the remote `TextTrackList`.\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` to remove from the `TextTrackList`\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n      this.remoteTextTrackEls().removeTrackElement_(trackElement);\n      this.remoteTextTracks().removeTrack(track);\n      this.autoRemoteTextTracks_.removeTrack(track);\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return {};\n    }\n    /**\n     * Attempt to create a floating video window always on top of other windows\n     * so that users may continue consuming media while they interact with other\n     * content sites, or applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise|undefined}\n     *         A promise with a Picture-in-Picture window if the browser supports\n     *         Promises (or one was passed in as an option). It returns undefined\n     *         otherwise.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        return PromiseClass.reject();\n      }\n    }\n    /**\n     * A method to check for the value of the 'disablePictureInPicture' <video> property.\n     * Defaults to true, as it should be considered disabled if the tech does not support pip\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.disablePictureInPicture = function disablePictureInPicture() {\n      return true;\n    }\n    /**\n     * A method to set or unset the 'disablePictureInPicture' <video> property.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n    /**\n     * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n     *\n     * @param {function} cb\n     * @return {number} request id\n     */\n    ;\n\n    _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n      var _this8 = this;\n\n      var id = newGUID();\n\n      if (!this.isReady_ || this.paused()) {\n        this.queuedHanders_.add(id);\n        this.one('playing', function () {\n          if (_this8.queuedHanders_.has(id)) {\n            _this8.queuedHanders_[\"delete\"](id);\n\n            cb();\n          }\n        });\n      } else {\n        this.requestNamedAnimationFrame(id, cb);\n      }\n\n      return id;\n    }\n    /**\n     * A fallback implementation of cancelVideoFrameCallback\n     *\n     * @param {number} id id of callback to be cancelled\n     */\n    ;\n\n    _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n      if (this.queuedHanders_.has(id)) {\n        this.queuedHanders_[\"delete\"](id);\n      } else {\n        this.cancelNamedAnimationFrame(id);\n      }\n    }\n    /**\n     * A method to set a poster from a `Tech`.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPoster = function setPoster() {}\n    /**\n     * A method to check for the presence of the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.playsinline = function playsinline() {}\n    /**\n     * A method to set or unset the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPlaysinline = function setPlaysinline() {}\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n    /*\n     * Check if the tech can support the given mime-type.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param  {string} type\n     *         The mimetype to check for support\n     *\n     * @return {string}\n     *         'probably', 'maybe', or empty string\n     *\n     * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the type is supported by this tech.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param {string} type\n     *        The media type to check\n     * @return {string} Returns the native video element's response\n     */\n    ;\n\n    Tech.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the tech can support the given source\n     *\n     * @param {Object} srcObj\n     *        The source object\n     * @param {Object} options\n     *        The options passed to the tech\n     * @return {string} 'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    Tech.canPlaySource = function canPlaySource(srcObj, options) {\n      return Tech.canPlayType(srcObj.type);\n    }\n    /*\n     * Return whether the argument is a Tech or not.\n     * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n     *\n     * @param {Object} component\n     *        The item to check\n     *\n     * @return {boolean}\n     *         Whether it is a tech or not\n     *         - True if it is a tech\n     *         - False if it is not\n     */\n    ;\n\n    Tech.isTech = function isTech(component) {\n      return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n    }\n    /**\n     * Registers a `Tech` into a shared list for videojs.\n     *\n     * @param {string} name\n     *        Name of the `Tech` to register.\n     *\n     * @param {Object} tech\n     *        The `Tech` class to register.\n     */\n    ;\n\n    Tech.registerTech = function registerTech(name, tech) {\n      if (!Tech.techs_) {\n        Tech.techs_ = {};\n      }\n\n      if (!Tech.isTech(tech)) {\n        throw new Error(\"Tech \" + name + \" must be a Tech\");\n      }\n\n      if (!Tech.canPlayType) {\n        throw new Error('Techs must have a static canPlayType method on them');\n      }\n\n      if (!Tech.canPlaySource) {\n        throw new Error('Techs must have a static canPlaySource method on them');\n      }\n\n      name = toTitleCase$1(name);\n      Tech.techs_[name] = tech;\n      Tech.techs_[toLowerCase(name)] = tech;\n\n      if (name !== 'Tech') {\n        // camel case the techName for use in techOrder\n        Tech.defaultTechOrder_.push(name);\n      }\n\n      return tech;\n    }\n    /**\n     * Get a `Tech` from the shared list by name.\n     *\n     * @param {string} name\n     *        `camelCase` or `TitleCase` name of the Tech to get\n     *\n     * @return {Tech|undefined}\n     *         The `Tech` or undefined if there was no tech with the name requested.\n     */\n    ;\n\n    Tech.getTech = function getTech(name) {\n      if (!name) {\n        return;\n      }\n\n      if (Tech.techs_ && Tech.techs_[name]) {\n        return Tech.techs_[name];\n      }\n\n      name = toTitleCase$1(name);\n\n      if (window && window.videojs && window.videojs[name]) {\n        log$1.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n        return window.videojs[name];\n      }\n    };\n\n    return Tech;\n  }(Component$1);\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @returns {VideoTrackList}\n   * @method Tech.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @returns {AudioTrackList}\n   * @method Tech.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.textTracks\n   */\n\n  /**\n   * Get the remote element {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote element {@link HtmlTrackElementList}\n   *\n   * @returns {HtmlTrackElementList}\n   * @method Tech.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name) {\n    var props = ALL[name];\n\n    Tech.prototype[props.getterName] = function () {\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * List of associated text tracks\n   *\n   * @type {TextTrackList}\n   * @private\n   * @property Tech#textTracks_\n   */\n\n  /**\n   * List of associated audio tracks.\n   *\n   * @type {AudioTrackList}\n   * @private\n   * @property Tech#audioTracks_\n   */\n\n  /**\n   * List of associated video tracks.\n   *\n   * @type {VideoTrackList}\n   * @private\n   * @property Tech#videoTracks_\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresVolumeControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default\n   */\n\n  Tech.prototype.featuresMuteControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports fullscreen resize control.\n   * Resizing plugins using request fullscreen reloads the plugin\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresFullscreenResize = false;\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the video\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresPlaybackRate = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualProgressOn} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresProgressEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n   * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n   * a new source.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresSourceset = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualTimeUpdates} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresTimeupdateEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n   * This will help us integrate with native `TextTrack`s if the browser supports them.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresNativeTextTracks = false;\n  /**\n   * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresVideoFrameCallback = false;\n  /**\n   * A functional mixin for techs that want to use the Source Handler pattern.\n   * Source handlers are scripts for handling specific formats.\n   * The source handler pattern is used for adaptive formats (HLS, DASH) that\n   * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n   * Example: `Tech.withSourceHandlers.call(MyTech);`\n   *\n   * @param {Tech} _Tech\n   *        The tech to add source handler functions to.\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   */\n\n  Tech.withSourceHandlers = function (_Tech) {\n    /**\n     * Register a source handler\n     *\n     * @param {Function} handler\n     *        The source handler class\n     *\n     * @param {number} [index]\n     *        Register it at the following index\n     */\n    _Tech.registerSourceHandler = function (handler, index) {\n      var handlers = _Tech.sourceHandlers;\n\n      if (!handlers) {\n        handlers = _Tech.sourceHandlers = [];\n      }\n\n      if (index === undefined) {\n        // add to the end of the list\n        index = handlers.length;\n      }\n\n      handlers.splice(index, 0, handler);\n    };\n    /**\n     * Check if the tech can support the given type. Also checks the\n     * Techs sourceHandlers.\n     *\n     * @param {string} type\n     *         The mimetype to check.\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlayType = function (type) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n\n      return '';\n    };\n    /**\n     * Returns the first source handler that supports the source.\n     *\n     * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {SourceHandler|null}\n     *          The first source handler that supports the source or null if\n     *          no SourceHandler supports the source\n     */\n\n\n    _Tech.selectSourceHandler = function (source, options) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canHandleSource(source, options);\n\n        if (can) {\n          return handlers[i];\n        }\n      }\n\n      return null;\n    };\n    /**\n     * Check if the tech can support the given source.\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlaySource = function (srcObj, options) {\n      var sh = _Tech.selectSourceHandler(srcObj, options);\n\n      if (sh) {\n        return sh.canHandleSource(srcObj, options);\n      }\n\n      return '';\n    };\n    /**\n     * When using a source handler, prefer its implementation of\n     * any function normally provided by the tech.\n     */\n\n\n    var deferrable = ['seekable', 'seeking', 'duration'];\n    /**\n     * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n     * function if it exists, with a fallback to the Techs seekable function.\n     *\n     * @method _Tech.seekable\n     */\n\n    /**\n     * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n     * function if it exists, otherwise it will fallback to the techs duration function.\n     *\n     * @method _Tech.duration\n     */\n\n    deferrable.forEach(function (fnName) {\n      var originalFn = this[fnName];\n\n      if (typeof originalFn !== 'function') {\n        return;\n      }\n\n      this[fnName] = function () {\n        if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n          return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n        }\n\n        return originalFn.apply(this, arguments);\n      };\n    }, _Tech.prototype);\n    /**\n     * Create a function for setting the source using a source object\n     * and source handlers.\n     * Should never be called unless a source handler was found.\n     *\n     * @param {Tech~SourceObject} source\n     *        A source object with src and type keys\n     */\n\n    _Tech.prototype.setSource = function (source) {\n      var sh = _Tech.selectSourceHandler(source, this.options_);\n\n      if (!sh) {\n        // Fall back to a native source hander when unsupported sources are\n        // deliberately set\n        if (_Tech.nativeSourceHandler) {\n          sh = _Tech.nativeSourceHandler;\n        } else {\n          log$1.error('No source handler found for the current source.');\n        }\n      } // Dispose any existing source handler\n\n\n      this.disposeSourceHandler();\n      this.off('dispose', this.disposeSourceHandler_);\n\n      if (sh !== _Tech.nativeSourceHandler) {\n        this.currentSource_ = source;\n      }\n\n      this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n      this.one('dispose', this.disposeSourceHandler_);\n    };\n    /**\n     * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n     *\n     * @listens Tech#dispose\n     */\n\n\n    _Tech.prototype.disposeSourceHandler = function () {\n      // if we have a source and get another one\n      // then we are loading something new\n      // than clear all of our current tracks\n      if (this.currentSource_) {\n        this.clearTracks(['audio', 'video']);\n        this.currentSource_ = null;\n      } // always clean up auto-text tracks\n\n\n      this.cleanupAutoTextTracks();\n\n      if (this.sourceHandler_) {\n        if (this.sourceHandler_.dispose) {\n          this.sourceHandler_.dispose();\n        }\n\n        this.sourceHandler_ = null;\n      }\n    };\n  }; // The base Tech class needs to be registered as a Component. It is the only\n  // Tech that can be registered as a Component.\n\n\n  Component$1.registerComponent('Tech', Tech);\n  Tech.registerTech('Tech', Tech);\n  /**\n   * A list of techs that should be added to techOrder on Players\n   *\n   * @private\n   */\n\n  Tech.defaultTechOrder_ = [];\n\n  /**\n   * @file middleware.js\n   * @module middleware\n   */\n  var middlewares = {};\n  var middlewareInstances = {};\n  var TERMINATOR = {};\n  /**\n   * A middleware object is a plain JavaScript object that has methods that\n   * match the {@link Tech} methods found in the lists of allowed\n   * {@link module:middleware.allowedGetters|getters},\n   * {@link module:middleware.allowedSetters|setters}, and\n   * {@link module:middleware.allowedMediators|mediators}.\n   *\n   * @typedef {Object} MiddlewareObject\n   */\n\n  /**\n   * A middleware factory function that should return a\n   * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n   *\n   * This factory will be called for each player when needed, with the player\n   * passed in as an argument.\n   *\n   * @callback MiddlewareFactory\n   * @param {Player} player\n   *        A Video.js player.\n   */\n\n  /**\n   * Define a middleware that the player should use by way of a factory function\n   * that returns a middleware object.\n   *\n   * @param  {string} type\n   *         The MIME type to match or `\"*\"` for all MIME types.\n   *\n   * @param  {MiddlewareFactory} middleware\n   *         A middleware factory function that will be executed for\n   *         matching types.\n   */\n\n  function use(type, middleware) {\n    middlewares[type] = middlewares[type] || [];\n    middlewares[type].push(middleware);\n  }\n  /**\n   * Asynchronously sets a source using middleware by recursing through any\n   * matching middlewares and calling `setSource` on each, passing along the\n   * previous returned value each time.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   *\n   * @param  {Tech~SourceObject} src\n   *         A source object.\n   *\n   * @param  {Function}\n   *         The next middleware to run.\n   */\n\n  function setSource(player, src, next) {\n    player.setTimeout(function () {\n      return setSourceHelper(src, middlewares[src.type], next, player);\n    }, 1);\n  }\n  /**\n   * When the tech is set, passes the tech to each middleware's `setTech` method.\n   *\n   * @param {Object[]} middleware\n   *        An array of middleware instances.\n   *\n   * @param {Tech} tech\n   *        A Video.js tech.\n   */\n\n  function setTech(middleware, tech) {\n    middleware.forEach(function (mw) {\n      return mw.setTech && mw.setTech(tech);\n    });\n  }\n  /**\n   * Calls a getter on the tech first, through each middleware\n   * from right to left to the player.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @return {Mixed}\n   *         The final value from the tech after middleware has intercepted it.\n   */\n\n  function get(middleware, tech, method) {\n    return middleware.reduceRight(middlewareIterator(method), tech[method]());\n  }\n  /**\n   * Takes the argument given to the player and calls the setter method on each\n   * middleware from left to right to the tech.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`.\n   */\n\n  function set(middleware, tech, method, arg) {\n    return tech[method](middleware.reduce(middlewareIterator(method), arg));\n  }\n  /**\n   * Takes the argument given to the player and calls the `call` version of the\n   * method on each middleware from left to right.\n   *\n   * Then, call the passed in method on the tech and return the result unchanged\n   * back to the player, through middleware, this time from right to left.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`, regardless of the\n   *         return values of middlewares.\n   */\n\n  function mediate(middleware, tech, method, arg) {\n    if (arg === void 0) {\n      arg = null;\n    }\n\n    var callMethod = 'call' + toTitleCase$1(method);\n    var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n    var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n    // prevent confusion if a techs method actually returns null.\n\n    var returnValue = terminated ? null : tech[method](middlewareValue);\n    executeRight(middleware, method, returnValue, terminated);\n    return returnValue;\n  }\n  /**\n   * Enumeration of allowed getters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedGetters = {\n    buffered: 1,\n    currentTime: 1,\n    duration: 1,\n    muted: 1,\n    played: 1,\n    paused: 1,\n    seekable: 1,\n    volume: 1,\n    ended: 1\n  };\n  /**\n   * Enumeration of allowed setters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedSetters = {\n    setCurrentTime: 1,\n    setMuted: 1,\n    setVolume: 1\n  };\n  /**\n   * Enumeration of allowed mediators where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedMediators = {\n    play: 1,\n    pause: 1\n  };\n\n  function middlewareIterator(method) {\n    return function (value, mw) {\n      // if the previous middleware terminated, pass along the termination\n      if (value === TERMINATOR) {\n        return TERMINATOR;\n      }\n\n      if (mw[method]) {\n        return mw[method](value);\n      }\n\n      return value;\n    };\n  }\n\n  function executeRight(mws, method, value, terminated) {\n    for (var i = mws.length - 1; i >= 0; i--) {\n      var mw = mws[i];\n\n      if (mw[method]) {\n        mw[method](terminated, value);\n      }\n    }\n  }\n  /**\n   * Clear the middleware cache for a player.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   */\n\n\n  function clearCacheForPlayer(player) {\n    middlewareInstances[player.id()] = null;\n  }\n  /**\n   * {\n   *  [playerId]: [[mwFactory, mwInstance], ...]\n   * }\n   *\n   * @private\n   */\n\n  function getOrCreateFactory(player, mwFactory) {\n    var mws = middlewareInstances[player.id()];\n    var mw = null;\n\n    if (mws === undefined || mws === null) {\n      mw = mwFactory(player);\n      middlewareInstances[player.id()] = [[mwFactory, mw]];\n      return mw;\n    }\n\n    for (var i = 0; i < mws.length; i++) {\n      var _mws$i = mws[i],\n          mwf = _mws$i[0],\n          mwi = _mws$i[1];\n\n      if (mwf !== mwFactory) {\n        continue;\n      }\n\n      mw = mwi;\n    }\n\n    if (mw === null) {\n      mw = mwFactory(player);\n      mws.push([mwFactory, mw]);\n    }\n\n    return mw;\n  }\n\n  function setSourceHelper(src, middleware, next, player, acc, lastRun) {\n    if (src === void 0) {\n      src = {};\n    }\n\n    if (middleware === void 0) {\n      middleware = [];\n    }\n\n    if (acc === void 0) {\n      acc = [];\n    }\n\n    if (lastRun === void 0) {\n      lastRun = false;\n    }\n\n    var _middleware = middleware,\n        mwFactory = _middleware[0],\n        mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n    if (typeof mwFactory === 'string') {\n      setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n      // then call the mw's setSource method\n    } else if (mwFactory) {\n      var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n      if (!mw.setSource) {\n        acc.push(mw);\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      mw.setSource(assign({}, src), function (err, _src) {\n        // something happened, try the next middleware on the current level\n        // make sure to use the old src\n        if (err) {\n          return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        } // we've succeeded, now we need to go deeper\n\n\n        acc.push(mw); // if it's the same type, continue down the current chain\n        // otherwise, we want to go down the new chain\n\n        setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n      });\n    } else if (mwrest.length) {\n      setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    } else if (lastRun) {\n      next(src, acc);\n    } else {\n      setSourceHelper(src, middlewares['*'], next, player, acc, true);\n    }\n  }\n\n  /**\n   * Mimetypes\n   *\n   * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n   * @typedef Mimetypes~Kind\n   * @enum\n   */\n\n  var MimetypesKind = {\n    opus: 'video/ogg',\n    ogv: 'video/ogg',\n    mp4: 'video/mp4',\n    mov: 'video/mp4',\n    m4v: 'video/mp4',\n    mkv: 'video/x-matroska',\n    m4a: 'audio/mp4',\n    mp3: 'audio/mpeg',\n    aac: 'audio/aac',\n    caf: 'audio/x-caf',\n    flac: 'audio/flac',\n    oga: 'audio/ogg',\n    wav: 'audio/wav',\n    m3u8: 'application/x-mpegURL',\n    mpd: 'application/dash+xml',\n    jpg: 'image/jpeg',\n    jpeg: 'image/jpeg',\n    gif: 'image/gif',\n    png: 'image/png',\n    svg: 'image/svg+xml',\n    webp: 'image/webp'\n  };\n  /**\n   * Get the mimetype of a given src url if possible\n   *\n   * @param {string} src\n   *        The url to the src\n   *\n   * @return {string}\n   *         return the mimetype if it was known or empty string otherwise\n   */\n\n  var getMimetype = function getMimetype(src) {\n    if (src === void 0) {\n      src = '';\n    }\n\n    var ext = getFileExtension(src);\n    var mimetype = MimetypesKind[ext.toLowerCase()];\n    return mimetype || '';\n  };\n  /**\n   * Find the mime type of a given source string if possible. Uses the player\n   * source cache.\n   *\n   * @param {Player} player\n   *        The player object\n   *\n   * @param {string} src\n   *        The source string\n   *\n   * @return {string}\n   *         The type that was found\n   */\n\n  var findMimetype = function findMimetype(player, src) {\n    if (!src) {\n      return '';\n    } // 1. check for the type in the `source` cache\n\n\n    if (player.cache_.source.src === src && player.cache_.source.type) {\n      return player.cache_.source.type;\n    } // 2. see if we have this source in our `currentSources` cache\n\n\n    var matchingSources = player.cache_.sources.filter(function (s) {\n      return s.src === src;\n    });\n\n    if (matchingSources.length) {\n      return matchingSources[0].type;\n    } // 3. look for the src url in source elements and use the type there\n\n\n    var sources = player.$$('source');\n\n    for (var i = 0; i < sources.length; i++) {\n      var s = sources[i];\n\n      if (s.type && s.src && s.src === src) {\n        return s.type;\n      }\n    } // 4. finally fallback to our list of mime types based on src url extension\n\n\n    return getMimetype(src);\n  };\n\n  /**\n   * @module filter-source\n   */\n  /**\n   * Filter out single bad source objects or multiple source objects in an\n   * array. Also flattens nested source object arrays into a 1 dimensional\n   * array of source objects.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]} src\n   *        The src object to filter\n   *\n   * @return {Tech~SourceObject[]}\n   *         An array of sourceobjects containing only valid sources\n   *\n   * @private\n   */\n\n  var filterSource = function filterSource(src) {\n    // traverse array\n    if (Array.isArray(src)) {\n      var newsrc = [];\n      src.forEach(function (srcobj) {\n        srcobj = filterSource(srcobj);\n\n        if (Array.isArray(srcobj)) {\n          newsrc = newsrc.concat(srcobj);\n        } else if (isObject$1(srcobj)) {\n          newsrc.push(srcobj);\n        }\n      });\n      src = newsrc;\n    } else if (typeof src === 'string' && src.trim()) {\n      // convert string into object\n      src = [fixSource({\n        src: src\n      })];\n    } else if (isObject$1(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n      // src is already valid\n      src = [fixSource(src)];\n    } else {\n      // invalid source, turn it into an empty array\n      src = [];\n    }\n\n    return src;\n  };\n  /**\n   * Checks src mimetype, adding it when possible\n   *\n   * @param {Tech~SourceObject} src\n   *        The src object to check\n   * @return {Tech~SourceObject}\n   *        src Object with known type\n   */\n\n\n  function fixSource(src) {\n    if (!src.type) {\n      var mimetype = getMimetype(src.src);\n\n      if (mimetype) {\n        src.type = mimetype;\n      }\n    }\n\n    return src;\n  }\n\n  /**\n   * The `MediaLoader` is the `Component` that decides which playback technology to load\n   * when a player is initialized.\n   *\n   * @extends Component\n   */\n\n  var MediaLoader = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MediaLoader, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function that is run when this component is ready.\n     */\n    function MediaLoader(player, options, ready) {\n      var _this;\n\n      // MediaLoader has no element\n      var options_ = mergeOptions$3({\n        createEl: false\n      }, options);\n      _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n      // load the first supported playback technology.\n\n      if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n        for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n          var techName = toTitleCase$1(j[i]);\n          var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n          // Remove once that deprecated behavior is removed.\n\n          if (!techName) {\n            tech = Component$1.getComponent(techName);\n          } // Check if the browser supports this technology\n\n\n          if (tech && tech.isSupported()) {\n            player.loadTech_(techName);\n            break;\n          }\n        }\n      } else {\n        // Loop through playback technologies (e.g. HTML5) and check for support.\n        // Then load the best source.\n        // A few assumptions here:\n        //   All playback technologies respect preload false.\n        player.src(options.playerOptions.sources);\n      }\n\n      return _this;\n    }\n\n    return MediaLoader;\n  }(Component$1);\n\n  Component$1.registerComponent('MediaLoader', MediaLoader);\n\n  /**\n   * Component which is clickable or keyboard actionable, but is not a\n   * native HTML button.\n   *\n   * @extends Component\n   */\n\n  var ClickableComponent = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ClickableComponent, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of component options.\n     *\n     * @param  {function} [options.clickHandler]\n     *         The function to call when the button is clicked / activated\n     *\n     * @param  {string} [options.controlText]\n     *         The text to set on the button\n     *\n     * @param  {string} [options.className]\n     *         A class or space separated list of classes to add the component\n     *\n     */\n    function ClickableComponent(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      if (_this.options_.controlText) {\n        _this.controlText(_this.options_.controlText);\n      }\n\n      _this.handleMouseOver_ = function (e) {\n        return _this.handleMouseOver(e);\n      };\n\n      _this.handleMouseOut_ = function (e) {\n        return _this.handleMouseOut(e);\n      };\n\n      _this.handleClick_ = function (e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.emitTapEvents();\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `ClickableComponent`s DOM element.\n     *\n     * @param {string} [tag=div]\n     *        The element's node type.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = ClickableComponent.prototype;\n\n    _proto.createEl = function createEl$1(tag, props, attributes) {\n      if (tag === void 0) {\n        tag = 'div';\n      }\n\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      props = assign({\n        className: this.buildCSSClass(),\n        tabIndex: 0\n      }, props);\n\n      if (tag === 'button') {\n        log$1.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n      } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n      attributes = assign({\n        role: 'button'\n      }, attributes);\n      this.tabIndex_ = props.tabIndex;\n      var el = createEl(tag, props, attributes);\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      // remove controlTextEl_ on dispose\n      this.controlTextEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Create a control text element on this `ClickableComponent`\n     *\n     * @param {Element} [el]\n     *        Parent element for the control text.\n     *\n     * @return {Element}\n     *         The control text element that gets created.\n     */\n    ;\n\n    _proto.createControlTextEl = function createControlTextEl(el) {\n      this.controlTextEl_ = createEl('span', {\n        className: 'vjs-control-text'\n      }, {\n        // let the screen reader user know that the text of the element may change\n        'aria-live': 'polite'\n      });\n\n      if (el) {\n        el.appendChild(this.controlTextEl_);\n      }\n\n      this.controlText(this.controlText_, el);\n      return this.controlTextEl_;\n    }\n    /**\n     * Get or set the localize text to use for the controls on the `ClickableComponent`.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.el();\n      }\n\n      if (text === undefined) {\n        return this.controlText_ || 'Need Text';\n      }\n\n      var localizedText = this.localize(text);\n      this.controlText_ = text;\n      textContent(this.controlTextEl_, localizedText);\n\n      if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n        // Set title attribute if only an icon is shown\n        el.setAttribute('title', localizedText);\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Enable this `ClickableComponent`\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (!this.enabled_) {\n        this.enabled_ = true;\n        this.removeClass('vjs-disabled');\n        this.el_.setAttribute('aria-disabled', 'false');\n\n        if (typeof this.tabIndex_ !== 'undefined') {\n          this.el_.setAttribute('tabIndex', this.tabIndex_);\n        }\n\n        this.on(['tap', 'click'], this.handleClick_);\n        this.on('keydown', this.handleKeyDown_);\n      }\n    }\n    /**\n     * Disable this `ClickableComponent`\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'true');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.removeAttribute('tabIndex');\n      }\n\n      this.off('mouseover', this.handleMouseOver_);\n      this.off('mouseout', this.handleMouseOut_);\n      this.off(['tap', 'click'], this.handleClick_);\n      this.off('keydown', this.handleKeyDown_);\n    }\n    /**\n     * Handles language change in ClickableComponent for the player in components\n     *\n     *\n     */\n    ;\n\n    _proto.handleLanguagechange = function handleLanguagechange() {\n      this.controlText(this.controlText_);\n    }\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `click` or `tap` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `tap` or `click` event that caused this function to be called.\n     *\n     * @listens tap\n     * @listens click\n     * @abstract\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.options_.clickHandler) {\n        this.options_.clickHandler.call(this, arguments);\n      }\n    }\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Space or Enter, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Support Space or Enter key operation to fire a click event. Also,\n      // prevent the event from propagating through the DOM and triggering\n      // Player hotkeys.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return ClickableComponent;\n  }(Component$1);\n\n  Component$1.registerComponent('ClickableComponent', ClickableComponent);\n\n  /**\n   * A `ClickableComponent` that handles showing the poster image for the player.\n   *\n   * @extends ClickableComponent\n   */\n\n  var PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(PosterImage, _ClickableComponent);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PosterImage(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n\n      _this.update();\n\n      _this.update_ = function (e) {\n        return _this.update(e);\n      };\n\n      player.on('posterchange', _this.update_);\n      return _this;\n    }\n    /**\n     * Clean up and dispose of the `PosterImage`.\n     */\n\n\n    var _proto = PosterImage.prototype;\n\n    _proto.dispose = function dispose() {\n      this.player().off('posterchange', this.update_);\n\n      _ClickableComponent.prototype.dispose.call(this);\n    }\n    /**\n     * Create the `PosterImage`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var el = createEl('div', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      });\n      return el;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n     *\n     * @listens Player#posterchange\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `Player#posterchange` event that triggered this function.\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var url = this.player().poster();\n      this.setSrc(url); // If there's no poster source we should display:none on this component\n      // so it's not still clickable or right-clickable\n\n      if (url) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    /**\n     * Set the source of the `PosterImage` depending on the display method.\n     *\n     * @param {string} url\n     *        The URL to the source for the `PosterImage`.\n     */\n    ;\n\n    _proto.setSrc = function setSrc(url) {\n      var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n      // this will throw an extra error\n\n      if (url) {\n        backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n     * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n     *\n     * @listens tap\n     * @listens click\n     * @listens keydown\n     *\n     * @param {EventTarget~Event} event\n     +        The `click`, `tap` or `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // We don't want a click to trigger playback when controls are disabled\n      if (!this.player_.controls()) {\n        return;\n      }\n\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    };\n\n    return PosterImage;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('PosterImage', PosterImage);\n\n  var darkGray = '#222';\n  var lightGray = '#ccc';\n  var fontMap = {\n    monospace: 'monospace',\n    sansSerif: 'sans-serif',\n    serif: 'serif',\n    monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n    monospaceSerif: '\"Courier New\", monospace',\n    proportionalSansSerif: 'sans-serif',\n    proportionalSerif: 'serif',\n    casual: '\"Comic Sans MS\", Impact, fantasy',\n    script: '\"Monotype Corsiva\", cursive',\n    smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n  };\n  /**\n   * Construct an rgba color from a given hex color code.\n   *\n   * @param {number} color\n   *        Hex number for color, like #f0e or #f604e2.\n   *\n   * @param {number} opacity\n   *        Value for opacity, 0.0 - 1.0.\n   *\n   * @return {string}\n   *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n   */\n\n  function constructColor(color, opacity) {\n    var hex;\n\n    if (color.length === 4) {\n      // color looks like \"#f0e\"\n      hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n    } else if (color.length === 7) {\n      // color looks like \"#f604e2\"\n      hex = color.slice(1);\n    } else {\n      throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n    }\n\n    return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n  }\n  /**\n   * Try to update the style of a DOM element. Some style changes will throw an error,\n   * particularly in IE8. Those should be noops.\n   *\n   * @param {Element} el\n   *        The DOM element to be styled.\n   *\n   * @param {string} style\n   *        The CSS property on the element that should be styled.\n   *\n   * @param {string} rule\n   *        The style rule that should be applied to the property.\n   *\n   * @private\n   */\n\n  function tryUpdateStyle(el, style, rule) {\n    try {\n      el.style[style] = rule;\n    } catch (e) {\n      // Satisfies linter.\n      return;\n    }\n  }\n  /**\n   * The component for displaying text track cues.\n   *\n   * @extends Component\n   */\n\n\n  var TextTrackDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TextTrackDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when `TextTrackDisplay` is ready.\n     */\n    function TextTrackDisplay(player, options, ready) {\n      var _this;\n\n      _this = _Component.call(this, player, options, ready) || this;\n\n      var updateDisplayHandler = function updateDisplayHandler(e) {\n        return _this.updateDisplay(e);\n      };\n\n      player.on('loadstart', function (e) {\n        return _this.toggleDisplay(e);\n      });\n      player.on('texttrackchange', updateDisplayHandler);\n      player.on('loadedmetadata', function (e) {\n        return _this.preselectTrack(e);\n      }); // This used to be called during player init, but was causing an error\n      // if a track should show by default and the display hadn't loaded yet.\n      // Should probably be moved to an external track loader when we support\n      // tracks that don't need a display.\n\n      player.ready(bind(assertThisInitialized(_this), function () {\n        if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n          this.hide();\n          return;\n        }\n\n        player.on('fullscreenchange', updateDisplayHandler);\n        player.on('playerresize', updateDisplayHandler);\n        window.addEventListener('orientationchange', updateDisplayHandler);\n        player.on('dispose', function () {\n          return window.removeEventListener('orientationchange', updateDisplayHandler);\n        });\n        var tracks = this.options_.playerOptions.tracks || [];\n\n        for (var i = 0; i < tracks.length; i++) {\n          this.player_.addRemoteTextTrack(tracks[i], true);\n        }\n\n        this.preselectTrack();\n      }));\n      return _this;\n    }\n    /**\n    * Preselect a track following this precedence:\n    * - matches the previously selected {@link TextTrack}'s language and kind\n    * - matches the previously selected {@link TextTrack}'s language only\n    * - is the first default captions track\n    * - is the first default descriptions track\n    *\n    * @listens Player#loadstart\n    */\n\n\n    var _proto = TextTrackDisplay.prototype;\n\n    _proto.preselectTrack = function preselectTrack() {\n      var modes = {\n        captions: 1,\n        subtitles: 1\n      };\n      var trackList = this.player_.textTracks();\n      var userPref = this.player_.cache_.selectedLanguage;\n      var firstDesc;\n      var firstCaptions;\n      var preferredTrack;\n\n      for (var i = 0; i < trackList.length; i++) {\n        var track = trackList[i];\n\n        if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n          // Always choose the track that matches both language and kind\n          if (track.kind === userPref.kind) {\n            preferredTrack = track; // or choose the first track that matches language\n          } else if (!preferredTrack) {\n            preferredTrack = track;\n          } // clear everything if offTextTrackMenuItem was clicked\n\n        } else if (userPref && !userPref.enabled) {\n          preferredTrack = null;\n          firstDesc = null;\n          firstCaptions = null;\n        } else if (track[\"default\"]) {\n          if (track.kind === 'descriptions' && !firstDesc) {\n            firstDesc = track;\n          } else if (track.kind in modes && !firstCaptions) {\n            firstCaptions = track;\n          }\n        }\n      } // The preferredTrack matches the user preference and takes\n      // precedence over all the other tracks.\n      // So, display the preferredTrack before the first default track\n      // and the subtitles/captions track before the descriptions track\n\n\n      if (preferredTrack) {\n        preferredTrack.mode = 'showing';\n      } else if (firstCaptions) {\n        firstCaptions.mode = 'showing';\n      } else if (firstDesc) {\n        firstDesc.mode = 'showing';\n      }\n    }\n    /**\n     * Turn display of {@link TextTrack}'s from the current state into the other state.\n     * There are only two states:\n     * - 'shown'\n     * - 'hidden'\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.toggleDisplay = function toggleDisplay() {\n      if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    /**\n     * Create the {@link Component}'s DOM element.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-text-track-display'\n      }, {\n        'translate': 'yes',\n        'aria-live': 'off',\n        'aria-atomic': 'true'\n      });\n    }\n    /**\n     * Clear all displayed {@link TextTrack}s.\n     */\n    ;\n\n    _proto.clearDisplay = function clearDisplay() {\n      if (typeof window.WebVTT === 'function') {\n        window.WebVTT.processCues(window, [], this.el_);\n      }\n    }\n    /**\n     * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n     * a {@link Player#fullscreenchange} is fired.\n     *\n     * @listens Player#texttrackchange\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var tracks = this.player_.textTracks();\n      var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n      this.clearDisplay();\n\n      if (allowMultipleShowingTracks) {\n        var showingTracks = [];\n\n        for (var _i = 0; _i < tracks.length; ++_i) {\n          var track = tracks[_i];\n\n          if (track.mode !== 'showing') {\n            continue;\n          }\n\n          showingTracks.push(track);\n        }\n\n        this.updateForTrack(showingTracks);\n        return;\n      } //  Track display prioritization model: if multiple tracks are 'showing',\n      //  display the first 'subtitles' or 'captions' track which is 'showing',\n      //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n      var descriptionsTrack = null;\n      var captionsSubtitlesTrack = null;\n      var i = tracks.length;\n\n      while (i--) {\n        var _track = tracks[i];\n\n        if (_track.mode === 'showing') {\n          if (_track.kind === 'descriptions') {\n            descriptionsTrack = _track;\n          } else {\n            captionsSubtitlesTrack = _track;\n          }\n        }\n      }\n\n      if (captionsSubtitlesTrack) {\n        if (this.getAttribute('aria-live') !== 'off') {\n          this.setAttribute('aria-live', 'off');\n        }\n\n        this.updateForTrack(captionsSubtitlesTrack);\n      } else if (descriptionsTrack) {\n        if (this.getAttribute('aria-live') !== 'assertive') {\n          this.setAttribute('aria-live', 'assertive');\n        }\n\n        this.updateForTrack(descriptionsTrack);\n      }\n    }\n    /**\n     * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n     *\n     * @param {TextTrack} track\n     *        Text track object containing active cues to style.\n     */\n    ;\n\n    _proto.updateDisplayState = function updateDisplayState(track) {\n      var overrides = this.player_.textTrackSettings.getValues();\n      var cues = track.activeCues;\n      var i = cues.length;\n\n      while (i--) {\n        var cue = cues[i];\n\n        if (!cue) {\n          continue;\n        }\n\n        var cueDiv = cue.displayState;\n\n        if (overrides.color) {\n          cueDiv.firstChild.style.color = overrides.color;\n        }\n\n        if (overrides.textOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n        }\n\n        if (overrides.backgroundColor) {\n          cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n        }\n\n        if (overrides.backgroundOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n        }\n\n        if (overrides.windowColor) {\n          if (overrides.windowOpacity) {\n            tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n          } else {\n            cueDiv.style.backgroundColor = overrides.windowColor;\n          }\n        }\n\n        if (overrides.edgeStyle) {\n          if (overrides.edgeStyle === 'dropshadow') {\n            cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n          } else if (overrides.edgeStyle === 'raised') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n          } else if (overrides.edgeStyle === 'depressed') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n          } else if (overrides.edgeStyle === 'uniform') {\n            cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n          }\n        }\n\n        if (overrides.fontPercent && overrides.fontPercent !== 1) {\n          var fontSize = window.parseFloat(cueDiv.style.fontSize);\n          cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n          cueDiv.style.height = 'auto';\n          cueDiv.style.top = 'auto';\n        }\n\n        if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n          if (overrides.fontFamily === 'small-caps') {\n            cueDiv.firstChild.style.fontVariant = 'small-caps';\n          } else {\n            cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n          }\n        }\n      }\n    }\n    /**\n     * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n     *\n     * @param {TextTrack|TextTrack[]} tracks\n     *        Text track object or text track array to be added to the list.\n     */\n    ;\n\n    _proto.updateForTrack = function updateForTrack(tracks) {\n      if (!Array.isArray(tracks)) {\n        tracks = [tracks];\n      }\n\n      if (typeof window.WebVTT !== 'function' || tracks.every(function (track) {\n        return !track.activeCues;\n      })) {\n        return;\n      }\n\n      var cues = []; // push all active track cues\n\n      for (var i = 0; i < tracks.length; ++i) {\n        var track = tracks[i];\n\n        for (var j = 0; j < track.activeCues.length; ++j) {\n          cues.push(track.activeCues[j]);\n        }\n      } // removes all cues before it processes new ones\n\n\n      window.WebVTT.processCues(window, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n      for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n        var _track2 = tracks[_i2];\n\n        for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n          var cueEl = _track2.activeCues[_j].displayState;\n          addClass(cueEl, 'vjs-text-track-cue');\n          addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n\n          if (_track2.language) {\n            setAttribute(cueEl, 'lang', _track2.language);\n          }\n        }\n\n        if (this.player_.textTrackSettings) {\n          this.updateDisplayState(_track2);\n        }\n      }\n    };\n\n    return TextTrackDisplay;\n  }(Component$1);\n\n  Component$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n  /**\n   * A loading spinner for use during waiting/loading events.\n   *\n   * @extends Component\n   */\n\n  var LoadingSpinner = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LoadingSpinner, _Component);\n\n    function LoadingSpinner() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = LoadingSpinner.prototype;\n\n    /**\n     * Create the `LoadingSpinner`s DOM element.\n     *\n     * @return {Element}\n     *         The dom element that gets created.\n     */\n    _proto.createEl = function createEl$1() {\n      var isAudio = this.player_.isAudio();\n      var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n      var controlText = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('{1} is loading.', [playerType])\n      });\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-loading-spinner',\n        dir: 'ltr'\n      });\n\n      el.appendChild(controlText);\n      return el;\n    };\n\n    return LoadingSpinner;\n  }(Component$1);\n\n  Component$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n  /**\n   * Base class for all buttons.\n   *\n   * @extends ClickableComponent\n   */\n\n  var Button = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(Button, _ClickableComponent);\n\n    function Button() {\n      return _ClickableComponent.apply(this, arguments) || this;\n    }\n\n    var _proto = Button.prototype;\n\n    /**\n     * Create the `Button`s DOM element.\n     *\n     * @param {string} [tag=\"button\"]\n     *        The element's node type. This argument is IGNORED: no matter what\n     *        is passed, it will always create a `button` element.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    _proto.createEl = function createEl$1(tag, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      tag = 'button';\n      props = assign({\n        className: this.buildCSSClass()\n      }, props); // Add attributes for button element\n\n      attributes = assign({\n        // Necessary since the default button type is \"submit\"\n        type: 'button'\n      }, attributes);\n\n      var el = createEl(tag, props, attributes);\n\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    }\n    /**\n     * Add a child `Component` inside of this `Button`.\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     *\n     * @deprecated since version 5\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var className = this.constructor.name;\n      log$1.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n      return Component$1.prototype.addChild.call(this, child, options);\n    }\n    /**\n     * Enable the `Button` element so that it can be activated or clicked. Use this with\n     * {@link Button#disable}.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      _ClickableComponent.prototype.enable.call(this);\n\n      this.el_.removeAttribute('disabled');\n    }\n    /**\n     * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n     * {@link Button#enable}.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      _ClickableComponent.prototype.disable.call(this);\n\n      this.el_.setAttribute('disabled', 'disabled');\n    }\n    /**\n     * This gets called when a `Button` has focus and `keydown` is triggered via a key\n     * press.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to get called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Ignore Space or Enter key operation, which is handled by the browser for\n      // a button - though not for its super class, ClickableComponent. Also,\n      // prevent the event from propagating through the DOM and triggering Player\n      // hotkeys. We do not preventDefault here because we _want_ the browser to\n      // handle it.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.stopPropagation();\n        return;\n      } // Pass keypress handling up for unsupported keys\n\n\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    };\n\n    return Button;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('Button', Button);\n\n  /**\n   * The initial play button that shows before the video has played. The hiding of the\n   * `BigPlayButton` get done via CSS and `Player` states.\n   *\n   * @extends Button\n   */\n\n  var BigPlayButton = /*#__PURE__*/function (_Button) {\n    inheritsLoose(BigPlayButton, _Button);\n\n    function BigPlayButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n      _this.mouseused_ = false;\n\n      _this.on('mousedown', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n     */\n\n\n    var _proto = BigPlayButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-big-play-button';\n    }\n    /**\n     * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n      if (this.mouseused_ && event.clientX && event.clientY) {\n        var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n        silencePromise(playPromise);\n\n        if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n        // calling .focus() on the video element causes the video to go black,\n        // so we avoid it in that specific case\n        !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n          this.player_.tech(true).focus();\n        }\n\n        return;\n      }\n\n      var cb = this.player_.getChild('controlBar');\n      var playToggle = cb && cb.getChild('playToggle');\n\n      if (!playToggle) {\n        this.player_.tech(true).focus();\n        return;\n      }\n\n      var playFocus = function playFocus() {\n        return playToggle.focus();\n      };\n\n      if (isPromise(playPromise)) {\n        playPromise.then(playFocus, function () {});\n      } else {\n        this.setTimeout(playFocus, 1);\n      }\n    };\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      this.mouseused_ = false;\n\n      _Button.prototype.handleKeyDown.call(this, event);\n    };\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      this.mouseused_ = true;\n    };\n\n    return BigPlayButton;\n  }(Button);\n  /**\n   * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  BigPlayButton.prototype.controlText_ = 'Play Video';\n  Component$1.registerComponent('BigPlayButton', BigPlayButton);\n\n  /**\n   * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n   * it gets clicked.\n   *\n   * @extends Button\n   */\n\n  var CloseButton = /*#__PURE__*/function (_Button) {\n    inheritsLoose(CloseButton, _Button);\n\n    /**\n    * Creates an instance of the this class.\n    *\n    * @param  {Player} player\n    *         The `Player` that this class should be attached to.\n    *\n    * @param  {Object} [options]\n    *         The key/value store of player options.\n    */\n    function CloseButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.controlText(options && options.controlText || _this.localize('Close'));\n\n      return _this;\n    }\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n\n\n    var _proto = CloseButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when a `CloseButton` gets clicked. See\n     * {@link ClickableComponent#handleClick} for more information on when\n     * this will be triggered\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     * @fires CloseButton#close\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      /**\n       * Triggered when the a `CloseButton` is clicked.\n       *\n       * @event CloseButton#close\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the close event does not\n       *           bubble up to parents if there is no listener\n       */\n      this.trigger({\n        type: 'close',\n        bubbles: false\n      });\n    }\n    /**\n     * Event handler that is called when a `CloseButton` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Esc, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Esc button will trigger `click` event\n      if (keycode.isEventKey(event, 'Esc')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        _Button.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return CloseButton;\n  }(Button);\n\n  Component$1.registerComponent('CloseButton', CloseButton);\n\n  /**\n   * Button to toggle between play and pause.\n   *\n   * @extends Button\n   */\n\n  var PlayToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(PlayToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function PlayToggle(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n      options.replay = options.replay === undefined || options.replay;\n\n      _this.on(player, 'play', function (e) {\n        return _this.handlePlay(e);\n      });\n\n      _this.on(player, 'pause', function (e) {\n        return _this.handlePause(e);\n      });\n\n      if (options.replay) {\n        _this.on(player, 'ended', function (e) {\n          return _this.handleEnded(e);\n        });\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = PlayToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `PlayToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * This gets called once after the video has ended and the user seeks so that\n     * we can change the replay button back to a play button.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#seeked\n     */\n    ;\n\n    _proto.handleSeeked = function handleSeeked(event) {\n      this.removeClass('vjs-ended');\n\n      if (this.player_.paused()) {\n        this.handlePause(event);\n      } else {\n        this.handlePlay(event);\n      }\n    }\n    /**\n     * Add the vjs-playing class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#play\n     */\n    ;\n\n    _proto.handlePlay = function handlePlay(event) {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n      this.controlText('Pause');\n    }\n    /**\n     * Add the vjs-paused class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#pause\n     */\n    ;\n\n    _proto.handlePause = function handlePause(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n      this.controlText('Play');\n    }\n    /**\n     * Add the vjs-ended class to the element so it can change appearance\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ended\n     */\n    ;\n\n    _proto.handleEnded = function handleEnded(event) {\n      var _this2 = this;\n\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n      this.controlText('Replay'); // on the next seek remove the replay button\n\n      this.one(this.player_, 'seeked', function (e) {\n        return _this2.handleSeeked(e);\n      });\n    };\n\n    return PlayToggle;\n  }(Button);\n  /**\n   * The text that should display over the `PlayToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlayToggle.prototype.controlText_ = 'Play';\n  Component$1.registerComponent('PlayToggle', PlayToggle);\n\n  /**\n   * @file format-time.js\n   * @module format-time\n   */\n\n  /**\n   * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n   * seconds) will force a number of leading zeros to cover the length of the\n   * guide.\n   *\n   * @private\n   * @param  {number} seconds\n   *         Number of seconds to be turned into a string\n   *\n   * @param  {number} guide\n   *         Number (in seconds) to model the string after\n   *\n   * @return {string}\n   *         Time formatted as H:MM:SS or M:SS\n   */\n  var defaultImplementation = function defaultImplementation(seconds, guide) {\n    seconds = seconds < 0 ? 0 : seconds;\n    var s = Math.floor(seconds % 60);\n    var m = Math.floor(seconds / 60 % 60);\n    var h = Math.floor(seconds / 3600);\n    var gm = Math.floor(guide / 60 % 60);\n    var gh = Math.floor(guide / 3600); // handle invalid times\n\n    if (isNaN(seconds) || seconds === Infinity) {\n      // '-' is false for all relational operators (e.g. <, >=) so this setting\n      // will add the minimum number of fields specified by the guide\n      h = m = s = '-';\n    } // Check if we need to show hours\n\n\n    h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n    // Always show at least one digit of minutes.\n\n    m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n    s = s < 10 ? '0' + s : s;\n    return h + m + s;\n  }; // Internal pointer to the current implementation.\n\n\n  var implementation = defaultImplementation;\n  /**\n   * Replaces the default formatTime implementation with a custom implementation.\n   *\n   * @param {Function} customImplementation\n   *        A function which will be used in place of the default formatTime\n   *        implementation. Will receive the current time in seconds and the\n   *        guide (in seconds) as arguments.\n   */\n\n  function setFormatTime(customImplementation) {\n    implementation = customImplementation;\n  }\n  /**\n   * Resets formatTime to the default implementation.\n   */\n\n  function resetFormatTime() {\n    implementation = defaultImplementation;\n  }\n  /**\n   * Delegates to either the default time formatting function or a custom\n   * function supplied via `setFormatTime`.\n   *\n   * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n   * guide (in seconds) will force a number of leading zeros to cover the\n   * length of the guide.\n   *\n   * @static\n   * @example  formatTime(125, 600) === \"02:05\"\n   * @param    {number} seconds\n   *           Number of seconds to be turned into a string\n   *\n   * @param    {number} guide\n   *           Number (in seconds) to model the string after\n   *\n   * @return   {string}\n   *           Time formatted as H:MM:SS or M:SS\n   */\n\n  function formatTime(seconds, guide) {\n    if (guide === void 0) {\n      guide = seconds;\n    }\n\n    return implementation(seconds, guide);\n  }\n\n  /**\n   * Displays time information about the video\n   *\n   * @extends Component\n   */\n\n  var TimeDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.on(player, ['timeupdate', 'ended'], function (e) {\n        return _this.updateContent(e);\n      });\n\n      _this.updateTextNode_();\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = TimeDisplay.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var className = this.buildCSSClass();\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: className + \" vjs-time-control vjs-control\"\n      });\n\n      var span = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize(this.labelText_) + \"\\xA0\"\n      }, {\n        role: 'presentation'\n      });\n      el.appendChild(span);\n      this.contentEl_ = createEl('span', {\n        className: className + \"-display\"\n      }, {\n        // tell screen readers not to automatically read the time as it changes\n        'aria-live': 'off',\n        // span elements have no implicit role, but some screen readers (notably VoiceOver)\n        // treat them as a break between items in the DOM when using arrow keys\n        // (or left-to-right swipes on iOS) to read contents of a page. Using\n        // role='presentation' causes VoiceOver to NOT treat this span as a break.\n        'role': 'presentation'\n      });\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.textNode_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Updates the time display text node with a new time\n     *\n     * @param {number} [time=0] the time to update to\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateTextNode_ = function updateTextNode_(time) {\n      var _this2 = this;\n\n      if (time === void 0) {\n        time = 0;\n      }\n\n      time = formatTime(time);\n\n      if (this.formattedTime_ === time) {\n        return;\n      }\n\n      this.formattedTime_ = time;\n      this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n        if (!_this2.contentEl_) {\n          return;\n        }\n\n        var oldNode = _this2.textNode_;\n\n        if (oldNode && _this2.contentEl_.firstChild !== oldNode) {\n          oldNode = null;\n          log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n        }\n\n        _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n        if (!_this2.textNode_) {\n          return;\n        }\n\n        if (oldNode) {\n          _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n        } else {\n          _this2.contentEl_.appendChild(_this2.textNode_);\n        }\n      });\n    }\n    /**\n     * To be filled out in the child class, should update the displayed time\n     * in accordance with the fact that the current time has changed.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate`  event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {};\n\n    return TimeDisplay;\n  }(Component$1);\n  /**\n   * The text that is added to the `TimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  TimeDisplay.prototype.labelText_ = 'Time';\n  /**\n   * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  TimeDisplay.prototype.controlText_ = 'Time';\n  Component$1.registerComponent('TimeDisplay', TimeDisplay);\n\n  /**\n   * Displays the current time\n   *\n   * @extends Component\n   */\n\n  var CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n    function CurrentTimeDisplay() {\n      return _TimeDisplay.apply(this, arguments) || this;\n    }\n\n    var _proto = CurrentTimeDisplay.prototype;\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-current-time';\n    }\n    /**\n     * Update current time display\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` event that caused this function to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      // Allows for smooth scrubbing, when player can't keep up.\n      var time;\n\n      if (this.player_.ended()) {\n        time = this.player_.duration();\n      } else {\n        time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      }\n\n      this.updateTextNode_(time);\n    };\n\n    return CurrentTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n  /**\n   * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n  Component$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n  /**\n   * Displays the duration\n   *\n   * @extends Component\n   */\n\n  var DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(DurationDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function DurationDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      var updateContent = function updateContent(e) {\n        return _this.updateContent(e);\n      }; // we do not want to/need to throttle duration changes,\n      // as they should always display the changed duration as\n      // it has changed\n\n\n      _this.on(player, 'durationchange', updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n      // but the durationchange on the user agent will not fire.\n      // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n      _this.on(player, 'loadstart', updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n      // listeners could have broken dependent applications/libraries. These\n      // can likely be removed for 7.0.\n\n\n      _this.on(player, 'loadedmetadata', updateContent);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = DurationDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-duration';\n    }\n    /**\n     * Update duration time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n     *        this function to be called.\n     *\n     * @listens Player#durationchange\n     * @listens Player#timeupdate\n     * @listens Player#loadedmetadata\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      var duration = this.player_.duration();\n      this.updateTextNode_(duration);\n    };\n\n    return DurationDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `DurationDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DurationDisplay.prototype.labelText_ = 'Duration';\n  /**\n   * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  DurationDisplay.prototype.controlText_ = 'Duration';\n  Component$1.registerComponent('DurationDisplay', DurationDisplay);\n\n  /**\n   * The separator between the current time and duration.\n   * Can be hidden if it's not needed in the design.\n   *\n   * @extends Component\n   */\n\n  var TimeDivider = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeDivider, _Component);\n\n    function TimeDivider() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = TimeDivider.prototype;\n\n    /**\n     * Create the component's DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-control vjs-time-divider'\n      }, {\n        // this element and its contents can be hidden from assistive techs since\n        // it is made extraneous by the announcement of the control text\n        // for the current time and duration displays\n        'aria-hidden': true\n      });\n\n      var div = _Component.prototype.createEl.call(this, 'div');\n\n      var span = _Component.prototype.createEl.call(this, 'span', {\n        textContent: '/'\n      });\n\n      div.appendChild(span);\n      el.appendChild(div);\n      return el;\n    };\n\n    return TimeDivider;\n  }(Component$1);\n\n  Component$1.registerComponent('TimeDivider', TimeDivider);\n\n  /**\n   * Displays the time left in the video\n   *\n   * @extends Component\n   */\n\n  var RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function RemainingTimeDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      _this.on(player, 'durationchange', function (e) {\n        return _this.updateContent(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = RemainingTimeDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-remaining-time';\n    }\n    /**\n     * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var el = _TimeDisplay.prototype.createEl.call(this);\n\n      if (this.options_.displayNegative !== false) {\n        el.insertBefore(createEl('span', {}, {\n          'aria-hidden': true\n        }, '-'), this.contentEl_);\n      }\n\n      return el;\n    }\n    /**\n     * Update remaining time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `durationchange` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      if (typeof this.player_.duration() !== 'number') {\n        return;\n      }\n\n      var time; // @deprecated We should only use remainingTimeDisplay\n      // as of video.js 7\n\n      if (this.player_.ended()) {\n        time = 0;\n      } else if (this.player_.remainingTimeDisplay) {\n        time = this.player_.remainingTimeDisplay();\n      } else {\n        time = this.player_.remainingTime();\n      }\n\n      this.updateTextNode_(time);\n    };\n\n    return RemainingTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n  /**\n   * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n  Component$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var LiveDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LiveDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LiveDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.updateShowing();\n\n      _this.on(_this.player(), 'durationchange', function (e) {\n        return _this.updateShowing(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LiveDisplay.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-live-control vjs-control'\n      });\n\n      this.contentEl_ = createEl('div', {\n        className: 'vjs-live-display'\n      }, {\n        'aria-live': 'off'\n      });\n      this.contentEl_.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('Stream Type') + \"\\xA0\"\n      }));\n      this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n     * it accordingly\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#durationchange} event that caused this function to run.\n     *\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateShowing = function updateShowing(event) {\n      if (this.player().duration() === Infinity) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    };\n\n    return LiveDisplay;\n  }(Component$1);\n\n  Component$1.registerComponent('LiveDisplay', LiveDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var SeekToLive = /*#__PURE__*/function (_Button) {\n    inheritsLoose(SeekToLive, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekToLive(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.updateLiveEdgeStatus();\n\n      if (_this.player_.liveTracker) {\n        _this.updateLiveEdgeStatusHandler_ = function (e) {\n          return _this.updateLiveEdgeStatus(e);\n        };\n\n        _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatusHandler_);\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = SeekToLive.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Button.prototype.createEl.call(this, 'button', {\n        className: 'vjs-seek-to-live-control vjs-control'\n      });\n\n      this.textEl_ = createEl('span', {\n        className: 'vjs-seek-to-live-text',\n        textContent: this.localize('LIVE')\n      }, {\n        'aria-hidden': 'true'\n      });\n      el.appendChild(this.textEl_);\n      return el;\n    }\n    /**\n     * Update the state of this button if we are at the live edge\n     * or not\n     */\n    ;\n\n    _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n      // default to live edge\n      if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n        this.setAttribute('aria-disabled', true);\n        this.addClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently playing live');\n      } else {\n        this.setAttribute('aria-disabled', false);\n        this.removeClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently behind live');\n      }\n    }\n    /**\n     * On click bring us as near to the live point as possible.\n     * This requires that we wait for the next `live-seekable-change`\n     * event which will happen every segment length seconds.\n     */\n    ;\n\n    _proto.handleClick = function handleClick() {\n      this.player_.liveTracker.seekToLiveEdge();\n    }\n    /**\n     * Dispose of the element and stop tracking\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n      }\n\n      this.textEl_ = null;\n\n      _Button.prototype.dispose.call(this);\n    };\n\n    return SeekToLive;\n  }(Button);\n\n  SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n  Component$1.registerComponent('SeekToLive', SeekToLive);\n\n  /**\n   * Keep a number between a min and a max value\n   *\n   * @param {number} number\n   *        The number to clamp\n   *\n   * @param {number} min\n   *        The minimum value\n   * @param {number} max\n   *        The maximum value\n   *\n   * @return {number}\n   *         the clamped number\n   */\n  var clamp = function clamp(number, min, max) {\n    number = Number(number);\n    return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n  };\n\n  /**\n   * The base functionality for a slider. Can be vertical or horizontal.\n   * For instance the volume bar or the seek bar on a video is a slider.\n   *\n   * @extends Component\n   */\n\n  var Slider = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Slider, _Component);\n\n    /**\n    * Create an instance of this class\n    *\n    * @param {Player} player\n    *        The `Player` that this class should be attached to.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    */\n    function Slider(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleMouseDown_ = function (e) {\n        return _this.handleMouseDown(e);\n      };\n\n      _this.handleMouseUp_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.handleClick_ = function (e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleMouseMove_ = function (e) {\n        return _this.handleMouseMove(e);\n      };\n\n      _this.update_ = function (e) {\n        return _this.update(e);\n      }; // Set property names to bar to match with the child Slider class is looking for\n\n\n      _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n      _this.vertical(!!_this.options_.vertical);\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Are controls are currently enabled for this slider or not.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n\n\n    var _proto = Slider.prototype;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Enable controls for this slider if they are disabled\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on('mousedown', this.handleMouseDown_);\n      this.on('touchstart', this.handleMouseDown_);\n      this.on('keydown', this.handleKeyDown_);\n      this.on('click', this.handleClick_); // TODO: deprecated, controlsvisible does not seem to be fired\n\n      this.on(this.player_, 'controlsvisible', this.update);\n\n      if (this.playerEvent) {\n        this.on(this.player_, this.playerEvent, this.update);\n      }\n\n      this.removeClass('disabled');\n      this.setAttribute('tabindex', 0);\n      this.enabled_ = true;\n    }\n    /**\n     * Disable controls for this slider if they are enabled\n     */\n    ;\n\n    _proto.disable = function disable() {\n      if (!this.enabled()) {\n        return;\n      }\n\n      var doc = this.bar.el_.ownerDocument;\n      this.off('mousedown', this.handleMouseDown_);\n      this.off('touchstart', this.handleMouseDown_);\n      this.off('keydown', this.handleKeyDown_);\n      this.off('click', this.handleClick_);\n      this.off(this.player_, 'controlsvisible', this.update_);\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.removeAttribute('tabindex');\n      this.addClass('disabled');\n\n      if (this.playerEvent) {\n        this.off(this.player_, this.playerEvent, this.update);\n      }\n\n      this.enabled_ = false;\n    }\n    /**\n     * Create the `Slider`s DOM element.\n     *\n     * @param {string} type\n     *        Type of element to create.\n     *\n     * @param {Object} [props={}]\n     *        List of properties in Object form.\n     *\n     * @param {Object} [attributes={}]\n     *        list of attributes in Object form.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl(type, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      // Add the slider element class to all sub classes\n      props.className = props.className + ' vjs-slider';\n      props = assign({\n        tabIndex: 0\n      }, props);\n      attributes = assign({\n        'role': 'slider',\n        'aria-valuenow': 0,\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'tabIndex': 0\n      }, attributes);\n      return _Component.prototype.createEl.call(this, type, props, attributes);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     * @fires Slider#slideractive\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.bar.el_.ownerDocument;\n\n      if (event.type === 'mousedown') {\n        event.preventDefault();\n      } // Do not call preventDefault() on touchstart in Chrome\n      // to avoid console warnings. Use a 'touch-action: none' style\n      // instead to prevent unintented scrolling.\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n      if (event.type === 'touchstart' && !IS_CHROME) {\n        event.preventDefault();\n      }\n\n      blockTextSelection();\n      this.addClass('vjs-sliding');\n      /**\n       * Triggered when the slider is in an active state\n       *\n       * @event Slider#slideractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('slideractive');\n      this.on(doc, 'mousemove', this.handleMouseMove_);\n      this.on(doc, 'mouseup', this.handleMouseUp_);\n      this.on(doc, 'touchmove', this.handleMouseMove_);\n      this.on(doc, 'touchend', this.handleMouseUp_);\n      this.handleMouseMove(event, true);\n    }\n    /**\n     * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n     * The `mousemove` and `touchmove` events will only only trigger this function during\n     * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n     * {@link Slider#handleMouseUp}.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n     *        this function\n     * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {}\n    /**\n     * Handle `mouseup` or `touchend` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     * @fires Slider#sliderinactive\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp() {\n      var doc = this.bar.el_.ownerDocument;\n      unblockTextSelection();\n      this.removeClass('vjs-sliding');\n      /**\n       * Triggered when the slider is no longer in an active state.\n       *\n       * @event Slider#sliderinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('sliderinactive');\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.update();\n    }\n    /**\n     * Update the progress bar of the `Slider`.\n     *\n     * @return {number}\n     *          The percentage of progress the progress bar represents as a\n     *          number from 0 to 1.\n     */\n    ;\n\n    _proto.update = function update() {\n      var _this2 = this;\n\n      // In VolumeBar init we have a setTimeout for update that pops and update\n      // to the end of the execution stack. The player is destroyed before then\n      // update will cause an error\n      // If there's no bar...\n      if (!this.el_ || !this.bar) {\n        return;\n      } // clamp progress between 0 and 1\n      // and only round to four decimal places, as we round to two below\n\n\n      var progress = this.getProgress();\n\n      if (progress === this.progress_) {\n        return progress;\n      }\n\n      this.progress_ = progress;\n      this.requestNamedAnimationFrame('Slider#update', function () {\n        // Set the new bar width or height\n        var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n        _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n      });\n      return progress;\n    }\n    /**\n     * Get the percentage of the bar that should be filled\n     * but clamped and rounded.\n     *\n     * @return {number}\n     *         percentage filled that the slider is\n     */\n    ;\n\n    _proto.getProgress = function getProgress() {\n      return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n    }\n    /**\n     * Calculate distance for slider\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @return {number}\n     *         The current position of the Slider.\n     *         - position.x for vertical `Slider`s\n     *         - position.y for horizontal `Slider`s\n     */\n    ;\n\n    _proto.calculateDistance = function calculateDistance(event) {\n      var position = getPointerPosition(this.el_, event);\n\n      if (this.vertical()) {\n        return position.y;\n      }\n\n      return position.x;\n    }\n    /**\n     * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n     * arrow keys. This function will only be called when the slider has focus. See\n     * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n     *\n     * @param {EventTarget~Event} event\n     *        the `keydown` event that caused this function to run.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Listener for click events on slider, used to prevent clicks\n     *   from bubbling up to parent elements like button menus.\n     *\n     * @param {Object} event\n     *        Event that caused this object to run\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    /**\n     * Get/set if slider is horizontal for vertical\n     *\n     * @param {boolean} [bool]\n     *        - true if slider is vertical,\n     *        - false is horizontal\n     *\n     * @return {boolean}\n     *         - true if slider is vertical, and getting\n     *         - false if the slider is horizontal, and getting\n     */\n    ;\n\n    _proto.vertical = function vertical(bool) {\n      if (bool === undefined) {\n        return this.vertical_ || false;\n      }\n\n      this.vertical_ = !!bool;\n\n      if (this.vertical_) {\n        this.addClass('vjs-slider-vertical');\n      } else {\n        this.addClass('vjs-slider-horizontal');\n      }\n    };\n\n    return Slider;\n  }(Component$1);\n\n  Component$1.registerComponent('Slider', Slider);\n\n  var percentify = function percentify(time, end) {\n    return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n  };\n  /**\n   * Shows loading progress\n   *\n   * @extends Component\n   */\n\n\n  var LoadProgressBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LoadProgressBar, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LoadProgressBar(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.partEls_ = [];\n\n      _this.on(player, 'progress', function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LoadProgressBar.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-load-progress'\n      });\n\n      var wrapper = createEl('span', {\n        className: 'vjs-control-text'\n      });\n      var loadedText = createEl('span', {\n        textContent: this.localize('Loaded')\n      });\n      var separator = document.createTextNode(': ');\n      this.percentageEl_ = createEl('span', {\n        className: 'vjs-control-text-loaded-percentage',\n        textContent: '0%'\n      });\n      el.appendChild(wrapper);\n      wrapper.appendChild(loadedText);\n      wrapper.appendChild(separator);\n      wrapper.appendChild(this.percentageEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.partEls_ = null;\n      this.percentageEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Update progress bar\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `progress` event that caused this function to run.\n     *\n     * @listens Player#progress\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n        var liveTracker = _this2.player_.liveTracker;\n\n        var buffered = _this2.player_.buffered();\n\n        var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n        var bufferedEnd = _this2.player_.bufferedEnd();\n\n        var children = _this2.partEls_;\n        var percent = percentify(bufferedEnd, duration);\n\n        if (_this2.percent_ !== percent) {\n          // update the width of the progress bar\n          _this2.el_.style.width = percent; // update the control-text\n\n          textContent(_this2.percentageEl_, percent);\n          _this2.percent_ = percent;\n        } // add child elements to represent the individual buffered time ranges\n\n\n        for (var i = 0; i < buffered.length; i++) {\n          var start = buffered.start(i);\n          var end = buffered.end(i);\n          var part = children[i];\n\n          if (!part) {\n            part = _this2.el_.appendChild(createEl());\n            children[i] = part;\n          } //  only update if changed\n\n\n          if (part.dataset.start === start && part.dataset.end === end) {\n            continue;\n          }\n\n          part.dataset.start = start;\n          part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n          part.style.left = percentify(start, bufferedEnd);\n          part.style.width = percentify(end - start, bufferedEnd);\n        } // remove unused buffered range elements\n\n\n        for (var _i = children.length; _i > buffered.length; _i--) {\n          _this2.el_.removeChild(children[_i - 1]);\n        }\n\n        children.length = buffered.length;\n      });\n    };\n\n    return LoadProgressBar;\n  }(Component$1);\n\n  Component$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n  /**\n   * Time tooltips display a time above the progress bar.\n   *\n   * @extends Component\n   */\n\n  var TimeTooltip = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeTooltip, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TimeTooltip(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the time tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = TimeTooltip.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint, content) {\n      var tooltipRect = findPosition(this.el_);\n      var playerRect = getBoundingClientRect(this.player_.el());\n      var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n      // for example, if the player isn't in the DOM for testing\n\n      if (!playerRect || !tooltipRect) {\n        return;\n      } // This is the space left of the `seekBarPoint` available within the bounds\n      // of the player. We calculate any gap between the left edge of the player\n      // and the left edge of the `SeekBar` and add the number of pixels in the\n      // `SeekBar` before hitting the `seekBarPoint`\n\n\n      var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n      // of the player. We calculate the number of pixels from the `seekBarPoint`\n      // to the right edge of the `SeekBar` and add to that any gap between the\n      // right edge of the `SeekBar` and the player.\n\n      var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n      // further to the right to center it over the `seekBarPoint`.\n\n      var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n      // the results of the space calculations above.\n\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      } // Due to the imprecision of decimal/ratio based calculations and varying\n      // rounding behaviors, there are cases where the spacing adjustment is off\n      // by a pixel or two. This adds insurance to these calculations.\n\n\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      } // prevent small width fluctuations within 0.4px from\n      // changing the value below.\n      // This really helps for live to prevent the play\n      // progress time tooltip from jittering\n\n\n      pullTooltipBy = Math.round(pullTooltipBy);\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n      this.write(content);\n    }\n    /**\n     * Write the time to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted time for the tooltip.\n     */\n    ;\n\n    _proto.write = function write(content) {\n      textContent(this.el_, content);\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     *\n     * @param {number} time\n     *        The time to update the tooltip to, not used during live playback\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    ;\n\n    _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n        var content;\n\n        var duration = _this2.player_.duration();\n\n        if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n          var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n          var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n          content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n        } else {\n          content = formatTime(time, duration);\n        }\n\n        _this2.update(seekBarRect, seekBarPoint, content);\n\n        if (cb) {\n          cb();\n        }\n      });\n    };\n\n    return TimeTooltip;\n  }(Component$1);\n\n  Component$1.registerComponent('TimeTooltip', TimeTooltip);\n\n  /**\n   * Used by {@link SeekBar} to display media playback progress as part of the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var PlayProgressBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(PlayProgressBar, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlayProgressBar(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = PlayProgressBar.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-play-progress vjs-slider-bar'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var timeTooltip = this.getChild('timeTooltip');\n\n      if (!timeTooltip) {\n        return;\n      }\n\n      var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n    };\n\n    return PlayProgressBar;\n  }(Component$1);\n  /**\n   * Default options for {@link PlayProgressBar}.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  PlayProgressBar.prototype.options_ = {\n    children: []\n  }; // Time tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    PlayProgressBar.prototype.options_.children.push('timeTooltip');\n  }\n\n  Component$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n  /**\n   * The {@link MouseTimeDisplay} component tracks mouse movement over the\n   * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n   * indicating the time which is represented by a given point in the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MouseTimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MouseTimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = MouseTimeDisplay.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var _this2 = this;\n\n      var time = seekBarPoint * this.player_.duration();\n      this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n        _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n      });\n    };\n\n    return MouseTimeDisplay;\n  }(Component$1);\n  /**\n   * Default options for `MouseTimeDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  MouseTimeDisplay.prototype.options_ = {\n    children: ['timeTooltip']\n  };\n  Component$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n  var STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\n  var PAGE_KEY_MULTIPLIER = 12;\n  /**\n   * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n   * as its `bar`.\n   *\n   * @extends Slider\n   */\n\n  var SeekBar = /*#__PURE__*/function (_Slider) {\n    inheritsLoose(SeekBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.setEventHandlers_();\n\n      return _this;\n    }\n    /**\n     * Sets the event handlers\n     *\n     * @private\n     */\n\n\n    var _proto = SeekBar.prototype;\n\n    _proto.setEventHandlers_ = function setEventHandlers_() {\n      var _this2 = this;\n\n      this.update_ = bind(this, this.update);\n      this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n      this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n      if (this.player_.liveTracker) {\n        this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n      } // when playing, let's ensure we smoothly update the play progress bar\n      // via an interval\n\n\n      this.updateInterval = null;\n\n      this.enableIntervalHandler_ = function (e) {\n        return _this2.enableInterval_(e);\n      };\n\n      this.disableIntervalHandler_ = function (e) {\n        return _this2.disableInterval_(e);\n      };\n\n      this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.on(document, 'visibilitychange', this.toggleVisibility_);\n      }\n    };\n\n    _proto.toggleVisibility_ = function toggleVisibility_(e) {\n      if (document.visibilityState === 'hidden') {\n        this.cancelNamedAnimationFrame('SeekBar#update');\n        this.cancelNamedAnimationFrame('Slider#update');\n        this.disableInterval_(e);\n      } else {\n        if (!this.player_.ended() && !this.player_.paused()) {\n          this.enableInterval_();\n        } // we just switched back to the page and someone may be looking, so, update ASAP\n\n\n        this.update();\n      }\n    };\n\n    _proto.enableInterval_ = function enableInterval_() {\n      if (this.updateInterval) {\n        return;\n      }\n\n      this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n    };\n\n    _proto.disableInterval_ = function disableInterval_(e) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n        return;\n      }\n\n      if (!this.updateInterval) {\n        return;\n      }\n\n      this.clearInterval(this.updateInterval);\n      this.updateInterval = null;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-holder'\n      }, {\n        'aria-label': this.localize('Progress Bar')\n      });\n    }\n    /**\n     * This function updates the play progress bar and accessibility\n     * attributes to whatever is passed in.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `ended` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     *\n     * @return {number}\n     *          The current percent at a number from 0-1\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var _this3 = this;\n\n      // ignore updates while the tab is hidden\n      if (document.visibilityState === 'hidden') {\n        return;\n      }\n\n      var percent = _Slider.prototype.update.call(this);\n\n      this.requestNamedAnimationFrame('SeekBar#update', function () {\n        var currentTime = _this3.player_.ended() ? _this3.player_.duration() : _this3.getCurrentTime_();\n        var liveTracker = _this3.player_.liveTracker;\n\n        var duration = _this3.player_.duration();\n\n        if (liveTracker && liveTracker.isLive()) {\n          duration = _this3.player_.liveTracker.liveCurrentTime();\n        }\n\n        if (_this3.percent_ !== percent) {\n          // machine readable value of progress bar (percentage complete)\n          _this3.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n          _this3.percent_ = percent;\n        }\n\n        if (_this3.currentTime_ !== currentTime || _this3.duration_ !== duration) {\n          // human readable value of progress bar (time complete)\n          _this3.el_.setAttribute('aria-valuetext', _this3.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n          _this3.currentTime_ = currentTime;\n          _this3.duration_ = duration;\n        } // update the progress bar time tooltip with the current time\n\n\n        if (_this3.bar) {\n          _this3.bar.update(getBoundingClientRect(_this3.el()), _this3.getProgress());\n        }\n      });\n      return percent;\n    }\n    /**\n     * Prevent liveThreshold from causing seeks to seem like they\n     * are not happening from a user perspective.\n     *\n     * @param {number} ct\n     *        current time to seek to\n     */\n    ;\n\n    _proto.userSeek_ = function userSeek_(ct) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        this.player_.liveTracker.nextSeekedFromUser();\n      }\n\n      this.player_.currentTime(ct);\n    }\n    /**\n     * Get the value of current time but allows for smooth scrubbing,\n     * when player can't keep up.\n     *\n     * @return {number}\n     *         The current time value to display\n     *\n     * @private\n     */\n    ;\n\n    _proto.getCurrentTime_ = function getCurrentTime_() {\n      return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    /**\n     * Get the percentage of media played so far.\n     *\n     * @return {number}\n     *         The percentage of media played so far (0 to 1).\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      var currentTime = this.getCurrentTime_();\n      var percent;\n      var liveTracker = this.player_.liveTracker;\n\n      if (liveTracker && liveTracker.isLive()) {\n        percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n        if (liveTracker.atLiveEdge()) {\n          percent = 1;\n        }\n      } else {\n        percent = currentTime / this.player_.duration();\n      }\n\n      return percent;\n    }\n    /**\n     * Handle mouse down on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      } // Stop event propagation to prevent double fire in progress-control.js\n\n\n      event.stopPropagation();\n      this.videoWasPlaying = !this.player_.paused();\n      this.player_.pause();\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle mouse move on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this to run.\n     * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event, mouseDown) {\n      if (mouseDown === void 0) {\n        mouseDown = false;\n      }\n\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      if (!mouseDown && !this.player_.scrubbing()) {\n        this.player_.scrubbing(true);\n      }\n\n      var newTime;\n      var distance = this.calculateDistance(event);\n      var liveTracker = this.player_.liveTracker;\n\n      if (!liveTracker || !liveTracker.isLive()) {\n        newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n        if (newTime === this.player_.duration()) {\n          newTime = newTime - 0.1;\n        }\n      } else {\n        if (distance >= 0.99) {\n          liveTracker.seekToLiveEdge();\n          return;\n        }\n\n        var seekableStart = liveTracker.seekableStart();\n        var seekableEnd = liveTracker.liveCurrentTime();\n        newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n        if (newTime >= seekableEnd) {\n          newTime = seekableEnd;\n        } // Compensate for precision differences so that currentTime is not less\n        // than seekable start\n\n\n        if (newTime <= seekableStart) {\n          newTime = seekableStart + 0.1;\n        } // On android seekableEnd can be Infinity sometimes,\n        // this will cause newTime to be Infinity, which is\n        // not a valid currentTime.\n\n\n        if (newTime === Infinity) {\n          return;\n        }\n      } // Set new time (tell player to seek to new time)\n\n\n      this.userSeek_(newTime);\n    };\n\n    _proto.enable = function enable() {\n      _Slider.prototype.enable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.show();\n    };\n\n    _proto.disable = function disable() {\n      _Slider.prototype.disable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.hide();\n    }\n    /**\n     * Handle mouse up on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseup` event that caused this to run.\n     *\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.player_.scrubbing(false);\n      /**\n       * Trigger timeupdate because we're done seeking and the time has changed.\n       * This is particularly useful for if the player is paused to time the time displays.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n\n      this.player_.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      if (this.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      } else {\n        // We're done seeking and the time has changed.\n        // If the player is paused, make sure we display the correct time on the seek bar.\n        this.update_();\n      }\n    }\n    /**\n     * Move more quickly fast forward for keyboard-only users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n    }\n    /**\n     * Move more quickly rewind for keyboard-only users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n    }\n    /**\n     * Toggles the playback state of the player\n     * This gets called when enter or space is used on the seekbar\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called\n     *\n     */\n    ;\n\n    _proto.handleAction = function handleAction(event) {\n      if (this.player_.paused()) {\n        this.player_.play();\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * Called when this SeekBar has focus and a key gets pressed down.\n     * Supports the following keys:\n     *\n     *   Space or Enter key fire a click event\n     *   Home key moves to start of the timeline\n     *   End key moves to end of the timeline\n     *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n     *   PageDown key moves back a larger step than ArrowDown\n     *   PageUp key moves forward a large step\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      var liveTracker = this.player_.liveTracker;\n\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleAction(event);\n      } else if (keycode.isEventKey(event, 'Home')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(0);\n      } else if (keycode.isEventKey(event, 'End')) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.liveCurrentTime());\n        } else {\n          this.userSeek_(this.player_.duration());\n        }\n      } else if (/^[0-9]$/.test(keycode(event))) {\n        event.preventDefault();\n        event.stopPropagation();\n        var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n        } else {\n          this.userSeek_(this.player_.duration() * gotoFraction);\n        }\n      } else if (keycode.isEventKey(event, 'PgDn')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else if (keycode.isEventKey(event, 'PgUp')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Slider.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      this.disableInterval_();\n      this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n      }\n\n      this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.off(document, 'visibilitychange', this.toggleVisibility_);\n      }\n\n      _Slider.prototype.dispose.call(this);\n    };\n\n    return SeekBar;\n  }(Slider);\n  /**\n   * Default options for the `SeekBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  SeekBar.prototype.options_ = {\n    children: ['loadProgressBar', 'playProgressBar'],\n    barName: 'playProgressBar'\n  }; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n  }\n\n  Component$1.registerComponent('SeekBar', SeekBar);\n\n  /**\n   * The Progress Control component contains the seek bar, load progress,\n   * and play progress.\n   *\n   * @extends Component\n   */\n\n  var ProgressControl = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ProgressControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ProgressControl(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.handleMouseMove = throttle(bind(assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n      _this.throttledHandleMouseSeek = throttle(bind(assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n      _this.handleMouseUpHandler_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.handleMouseDownHandler_ = function (e) {\n        return _this.handleMouseDown(e);\n      };\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = ProgressControl.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-control vjs-control'\n      });\n    }\n    /**\n     * When the mouse moves over the `ProgressControl`, the pointer position\n     * gets passed down to the `MouseTimeDisplay` component.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (!seekBar) {\n        return;\n      }\n\n      var playProgressBar = seekBar.getChild('playProgressBar');\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n      if (!playProgressBar && !mouseTimeDisplay) {\n        return;\n      }\n\n      var seekBarEl = seekBar.el();\n      var seekBarRect = findPosition(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n\n      if (playProgressBar) {\n        playProgressBar.update(seekBarRect, seekBar.getProgress());\n      }\n    }\n    /**\n     * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n     *\n     * @method ProgressControl#throttledHandleMouseSeek\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     * @listen touchmove\n     */\n\n    /**\n     * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseSeek = function handleMouseSeek(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseMove(event);\n      }\n    }\n    /**\n     * Are controls are currently enabled for this progress control.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n    ;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Disable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.children().forEach(function (child) {\n        return child.disable && child.disable();\n      });\n\n      if (!this.enabled()) {\n        return;\n      }\n\n      this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.off(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeListenersAddedOnMousedownAndTouchstart();\n      this.addClass('disabled');\n      this.enabled_ = false; // Restore normal playback state if controls are disabled while scrubbing\n\n      if (this.player_.scrubbing()) {\n        var seekBar = this.getChild('seekBar');\n        this.player_.scrubbing(false);\n\n        if (seekBar.videoWasPlaying) {\n          silencePromise(this.player_.play());\n        }\n      }\n    }\n    /**\n     * Enable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.children().forEach(function (child) {\n        return child.enable && child.enable();\n      });\n\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.on(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeClass('disabled');\n      this.enabled_ = true;\n    }\n    /**\n     * Cleanup listeners after the user finishes interacting with the progress controls\n     */\n    ;\n\n    _proto.removeListenersAddedOnMousedownAndTouchstart = function removeListenersAddedOnMousedownAndTouchstart() {\n      var doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseDown(event);\n      }\n\n      this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseUp(event);\n      }\n\n      this.removeListenersAddedOnMousedownAndTouchstart();\n    };\n\n    return ProgressControl;\n  }(Component$1);\n  /**\n   * Default options for `ProgressControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ProgressControl.prototype.options_ = {\n    children: ['seekBar']\n  };\n  Component$1.registerComponent('ProgressControl', ProgressControl);\n\n  /**\n   * Toggle Picture-in-Picture mode\n   *\n   * @extends Button\n   */\n\n  var PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(PictureInPictureToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    function PictureInPictureToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], function (e) {\n        return _this.handlePictureInPictureChange(e);\n      });\n\n      _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], function (e) {\n        return _this.handlePictureInPictureEnabledChange(e);\n      });\n\n      _this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], function () {\n        // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n        var isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n\n        if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n          if (player.isInPictureInPicture()) {\n            player.exitPictureInPicture();\n          }\n\n          _this.hide();\n        } else {\n          _this.show();\n        }\n      }); // TODO: Deactivate button on player emptied event.\n\n\n      _this.disable();\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = PictureInPictureToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Enables or disables button based on document.pictureInPictureEnabled property value\n     * or on value returned by player.disablePictureInPicture() method.\n     */\n    ;\n\n    _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n      if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n    /**\n     * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    ;\n\n    _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n      if (this.player_.isInPictureInPicture()) {\n        this.controlText('Exit Picture-in-Picture');\n      } else {\n        this.controlText('Picture-in-Picture');\n      }\n\n      this.handlePictureInPictureEnabledChange();\n    }\n    /**\n     * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (!this.player_.isInPictureInPicture()) {\n        this.player_.requestPictureInPicture();\n      } else {\n        this.player_.exitPictureInPicture();\n      }\n    };\n\n    return PictureInPictureToggle;\n  }(Button);\n  /**\n   * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n  Component$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n  /**\n   * Toggle fullscreen video\n   *\n   * @extends Button\n   */\n\n  var FullscreenToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(FullscreenToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function FullscreenToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.on(player, 'fullscreenchange', function (e) {\n        return _this.handleFullscreenChange(e);\n      });\n\n      if (document[player.fsApi_.fullscreenEnabled] === false) {\n        _this.disable();\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = FullscreenToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Handles fullscreenchange on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#fullscreenchange} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n      if (this.player_.isFullscreen()) {\n        this.controlText('Non-Fullscreen');\n      } else {\n        this.controlText('Fullscreen');\n      }\n    }\n    /**\n     * This gets called when an `FullscreenToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (!this.player_.isFullscreen()) {\n        this.player_.requestFullscreen();\n      } else {\n        this.player_.exitFullscreen();\n      }\n    };\n\n    return FullscreenToggle;\n  }(Button);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n  Component$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n  /**\n   * Check if volume control is supported and if it isn't hide the\n   * `Component` that was passed  using the `vjs-hidden` class.\n   *\n   * @param {Component} self\n   *        The component that should be hidden if volume is unsupported\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkVolumeSupport = function checkVolumeSupport(self, player) {\n    // hide volume controls when they're not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresVolumeControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * Shows volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeLevel = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeLevel, _Component);\n\n    function VolumeLevel() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = VolumeLevel.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-level'\n      });\n\n      el.appendChild(_Component.prototype.createEl.call(this, 'span', {\n        className: 'vjs-control-text'\n      }));\n      return el;\n    };\n\n    return VolumeLevel;\n  }(Component$1);\n\n  Component$1.registerComponent('VolumeLevel', VolumeLevel);\n\n  /**\n   * Volume level tooltips display a volume above or side by side the volume bar.\n   *\n   * @extends Component\n   */\n\n  var VolumeLevelTooltip = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeLevelTooltip, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function VolumeLevelTooltip(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the volume tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeLevelTooltip.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Updates the position of the tooltip relative to the `VolumeBar` and\n     * its content text.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    ;\n\n    _proto.update = function update(rangeBarRect, rangeBarPoint, vertical, content) {\n      if (!vertical) {\n        var tooltipRect = getBoundingClientRect(this.el_);\n        var playerRect = getBoundingClientRect(this.player_.el());\n        var volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n\n        if (!playerRect || !tooltipRect) {\n          return;\n        }\n\n        var spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n        var spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n        var pullTooltipBy = tooltipRect.width / 2;\n\n        if (spaceLeftOfPoint < pullTooltipBy) {\n          pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n        } else if (spaceRightOfPoint < pullTooltipBy) {\n          pullTooltipBy = spaceRightOfPoint;\n        }\n\n        if (pullTooltipBy < 0) {\n          pullTooltipBy = 0;\n        } else if (pullTooltipBy > tooltipRect.width) {\n          pullTooltipBy = tooltipRect.width;\n        }\n\n        this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n      }\n\n      this.write(content + \"%\");\n    }\n    /**\n     * Write the volume to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted volume for the tooltip.\n     */\n    ;\n\n    _proto.write = function write(content) {\n      textContent(this.el_, content);\n    }\n    /**\n     * Updates the position of the volume tooltip relative to the `VolumeBar`.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     * @param {number} volume\n     *        The volume level to update the tooltip to\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    ;\n\n    _proto.updateVolume = function updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', function () {\n        _this2.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n\n        if (cb) {\n          cb();\n        }\n      });\n    };\n\n    return VolumeLevelTooltip;\n  }(Component$1);\n\n  Component$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n  /**\n   * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n   * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n   * indicating the volume level which is represented by a given point in the\n   * {@link VolumeBar}.\n   *\n   * @extends Component\n   */\n\n  var MouseVolumeLevelDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MouseVolumeLevelDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MouseVolumeLevelDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = MouseVolumeLevelDisplay.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n    /**\n     * Enquires updates to its own DOM as well as the DOM of its\n     * {@link VolumeLevelTooltip} child.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    ;\n\n    _proto.update = function update(rangeBarRect, rangeBarPoint, vertical) {\n      var _this2 = this;\n\n      var volume = 100 * rangeBarPoint;\n      this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, function () {\n        if (vertical) {\n          _this2.el_.style.bottom = rangeBarRect.height * rangeBarPoint + \"px\";\n        } else {\n          _this2.el_.style.left = rangeBarRect.width * rangeBarPoint + \"px\";\n        }\n      });\n    };\n\n    return MouseVolumeLevelDisplay;\n  }(Component$1);\n  /**\n   * Default options for `MouseVolumeLevelDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  MouseVolumeLevelDisplay.prototype.options_ = {\n    children: ['volumeLevelTooltip']\n  };\n  Component$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n  /**\n   * The bar that contains the volume level and can be clicked on to adjust the level\n   *\n   * @extends Slider\n   */\n\n  var VolumeBar = /*#__PURE__*/function (_Slider) {\n    inheritsLoose(VolumeBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function VolumeBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.on('slideractive', function (e) {\n        return _this.updateLastVolume_(e);\n      });\n\n      _this.on(player, 'volumechange', function (e) {\n        return _this.updateARIAAttributes(e);\n      });\n\n      player.ready(function () {\n        return _this.updateARIAAttributes();\n      });\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeBar.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-bar vjs-slider-bar'\n      }, {\n        'aria-label': this.localize('Volume Level'),\n        'aria-live': 'polite'\n      });\n    }\n    /**\n     * Handle mouse down on volume bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle movement events on the {@link VolumeMenuButton}.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      var mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n\n      if (mouseVolumeLevelDisplay) {\n        var volumeBarEl = this.el();\n        var volumeBarRect = getBoundingClientRect(volumeBarEl);\n        var vertical = this.vertical();\n        var volumeBarPoint = getPointerPosition(volumeBarEl, event);\n        volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x; // The default skin has a gap on either side of the `VolumeBar`. This means\n        // that it's possible to trigger this behavior outside the boundaries of\n        // the `VolumeBar`. This ensures we stay within it at all times.\n\n        volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n        mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n      }\n\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      this.checkMuted();\n      this.player_.volume(this.calculateDistance(event));\n    }\n    /**\n     * If the player is muted unmute it.\n     */\n    ;\n\n    _proto.checkMuted = function checkMuted() {\n      if (this.player_.muted()) {\n        this.player_.muted(false);\n      }\n    }\n    /**\n     * Get percent of volume level\n     *\n     * @return {number}\n     *         Volume level percent as a decimal number.\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      if (this.player_.muted()) {\n        return 0;\n      }\n\n      return this.player_.volume();\n    }\n    /**\n     * Increase volume level for keyboard users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() + 0.1);\n    }\n    /**\n     * Decrease volume level for keyboard users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() - 0.1);\n    }\n    /**\n     * Update ARIA accessibility attributes\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `volumechange` event that caused this function to run.\n     *\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n      var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n      this.el_.setAttribute('aria-valuenow', ariaValue);\n      this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n    }\n    /**\n     * Returns the current value of the player volume as a percentage\n     *\n     * @private\n     */\n    ;\n\n    _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n      return Math.round(this.player_.volume() * 100);\n    }\n    /**\n     * When user starts dragging the VolumeBar, store the volume and listen for\n     * the end of the drag. When the drag ends, if the volume was set to zero,\n     * set lastVolume to the stored volume.\n     *\n     * @listens slideractive\n     * @private\n     */\n    ;\n\n    _proto.updateLastVolume_ = function updateLastVolume_() {\n      var _this2 = this;\n\n      var volumeBeforeDrag = this.player_.volume();\n      this.one('sliderinactive', function () {\n        if (_this2.player_.volume() === 0) {\n          _this2.player_.lastVolume_(volumeBeforeDrag);\n        }\n      });\n    };\n\n    return VolumeBar;\n  }(Slider);\n  /**\n   * Default options for the `VolumeBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeBar.prototype.options_ = {\n    children: ['volumeLevel'],\n    barName: 'volumeLevel'\n  }; // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n  }\n  /**\n   * Call the update event for this Slider when this event happens on the player.\n   *\n   * @type {string}\n   */\n\n\n  VolumeBar.prototype.playerEvent = 'volumechange';\n  Component$1.registerComponent('VolumeBar', VolumeBar);\n\n  /**\n   * The component for controlling the volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeControl = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumeControl(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n      // the VolumeBar is turned on.\n\n      if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n        options.volumeBar = options.volumeBar || {};\n        options.volumeBar.vertical = options.vertical;\n      }\n\n      _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkVolumeSupport(assertThisInitialized(_this), player);\n      _this.throttledHandleMouseMove = throttle(bind(assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n      _this.handleMouseUpHandler_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.on('mousedown', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      _this.on('touchstart', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      _this.on('mousemove', function (e) {\n        return _this.handleMouseMove(e);\n      }); // while the slider is active (the mouse has been pressed down and\n      // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n        _this.volumeBar.addClass('vjs-slider-active');\n\n        _this.addClass('vjs-slider-active');\n\n        _this.trigger('slideractive');\n      });\n\n      _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n        _this.volumeBar.removeClass('vjs-slider-active');\n\n        _this.removeClass('vjs-slider-active');\n\n        _this.trigger('sliderinactive');\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeControl.prototype;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-horizontal';\n\n      if (this.options_.vertical) {\n        orientationClass = 'vjs-volume-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-control vjs-control \" + orientationClass\n      });\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      this.volumeBar.handleMouseMove(event);\n    };\n\n    return VolumeControl;\n  }(Component$1);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeControl.prototype.options_ = {\n    children: ['volumeBar']\n  };\n  Component$1.registerComponent('VolumeControl', VolumeControl);\n\n  /**\n   * Check if muting volume is supported and if it isn't hide the mute toggle\n   * button.\n   *\n   * @param {Component} self\n   *        A reference to the mute toggle button\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkMuteSupport = function checkMuteSupport(self, player) {\n    // hide mute toggle button if it's not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresMuteControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * A button component for muting the audio.\n   *\n   * @extends Button\n   */\n\n  var MuteToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(MuteToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MuteToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkMuteSupport(assertThisInitialized(_this), player);\n\n      _this.on(player, ['loadstart', 'volumechange'], function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = MuteToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `MuteToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var vol = this.player_.volume();\n      var lastVolume = this.player_.lastVolume_();\n\n      if (vol === 0) {\n        var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n        this.player_.volume(volumeToSet);\n        this.player_.muted(false);\n      } else {\n        this.player_.muted(this.player_.muted() ? false : true);\n      }\n    }\n    /**\n     * Update the `MuteToggle` button based on the state of `volume` and `muted`\n     * on the player.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#loadstart} event if this function was called\n     *        through an event.\n     *\n     * @listens Player#loadstart\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.updateIcon_();\n      this.updateControlText_();\n    }\n    /**\n     * Update the appearance of the `MuteToggle` icon.\n     *\n     * Possible states (given `level` variable below):\n     * - 0: crossed out\n     * - 1: zero bars of volume\n     * - 2: one bar of volume\n     * - 3: two bars of volume\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateIcon_ = function updateIcon_() {\n      var vol = this.player_.volume();\n      var level = 3; // in iOS when a player is loaded with muted attribute\n      // and volume is changed with a native mute button\n      // we want to make sure muted state is updated\n\n      if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.muted(this.player_.tech_.el_.muted);\n      }\n\n      if (vol === 0 || this.player_.muted()) {\n        level = 0;\n      } else if (vol < 0.33) {\n        level = 1;\n      } else if (vol < 0.67) {\n        level = 2;\n      } // TODO improve muted icon classes\n\n\n      for (var i = 0; i < 4; i++) {\n        removeClass(this.el_, \"vjs-vol-\" + i);\n      }\n\n      addClass(this.el_, \"vjs-vol-\" + level);\n    }\n    /**\n     * If `muted` has changed on the player, update the control text\n     * (`title` attribute on `vjs-mute-control` element and content of\n     * `vjs-control-text` element).\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateControlText_ = function updateControlText_() {\n      var soundOff = this.player_.muted() || this.player_.volume() === 0;\n      var text = soundOff ? 'Unmute' : 'Mute';\n\n      if (this.controlText() !== text) {\n        this.controlText(text);\n      }\n    };\n\n    return MuteToggle;\n  }(Button);\n  /**\n   * The text that should display over the `MuteToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  MuteToggle.prototype.controlText_ = 'Mute';\n  Component$1.registerComponent('MuteToggle', MuteToggle);\n\n  /**\n   * A Component to contain the MuteToggle and VolumeControl so that\n   * they can work together.\n   *\n   * @extends Component\n   */\n\n  var VolumePanel = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumePanel, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumePanel(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (typeof options.inline !== 'undefined') {\n        options.inline = options.inline;\n      } else {\n        options.inline = true;\n      } // pass the inline option down to the VolumeControl as vertical if\n      // the VolumeControl is on.\n\n\n      if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n        options.volumeControl = options.volumeControl || {};\n        options.volumeControl.vertical = !options.inline;\n      }\n\n      _this = _Component.call(this, player, options) || this; // this handler is used by mouse handler methods below\n\n      _this.handleKeyPressHandler_ = function (e) {\n        return _this.handleKeyPress(e);\n      };\n\n      _this.on(player, ['loadstart'], function (e) {\n        return _this.volumePanelState_(e);\n      });\n\n      _this.on(_this.muteToggle, 'keyup', function (e) {\n        return _this.handleKeyPress(e);\n      });\n\n      _this.on(_this.volumeControl, 'keyup', function (e) {\n        return _this.handleVolumeControlKeyUp(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyPress(e);\n      });\n\n      _this.on('mouseover', function (e) {\n        return _this.handleMouseOver(e);\n      });\n\n      _this.on('mouseout', function (e) {\n        return _this.handleMouseOut(e);\n      }); // while the slider is active (the mouse has been pressed down and\n      // is dragging) we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n      _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n      return _this;\n    }\n    /**\n     * Add vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#slideractive\n     * @private\n     */\n\n\n    var _proto = VolumePanel.prototype;\n\n    _proto.sliderActive_ = function sliderActive_() {\n      this.addClass('vjs-slider-active');\n    }\n    /**\n     * Removes vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#sliderinactive\n     * @private\n     */\n    ;\n\n    _proto.sliderInactive_ = function sliderInactive_() {\n      this.removeClass('vjs-slider-active');\n    }\n    /**\n     * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n     * depending on MuteToggle and VolumeControl state\n     *\n     * @listens Player#loadstart\n     * @private\n     */\n    ;\n\n    _proto.volumePanelState_ = function volumePanelState_() {\n      // hide volume panel if neither volume control or mute toggle\n      // are displayed\n      if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-hidden');\n      } // if only mute toggle is visible we don't want\n      // volume panel expanding when hovered or active\n\n\n      if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-mute-toggle-only');\n      }\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-panel-horizontal';\n\n      if (!this.options_.inline) {\n        orientationClass = 'vjs-volume-panel-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-panel vjs-control \" + orientationClass\n      });\n    }\n    /**\n     * Dispose of the `volume-panel` and all child components.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.handleMouseOut();\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n     * the volume panel and sets focus on `MuteToggle`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keyup` event that caused this function to be called.\n     *\n     * @listens keyup\n     */\n    ;\n\n    _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.muteToggle.focus();\n      }\n    }\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n     * Turns on listening for `mouseover` event. When they happen it\n     * calls `this.handleMouseOver`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseover` event that caused this function to be called.\n     *\n     * @listens mouseover\n     */\n    ;\n\n    _proto.handleMouseOver = function handleMouseOver(event) {\n      this.addClass('vjs-hover');\n      on(document, 'keyup', this.handleKeyPressHandler_);\n    }\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n     * Turns on listening for `mouseout` event. When they happen it\n     * calls `this.handleMouseOut`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseout` event that caused this function to be called.\n     *\n     * @listens mouseout\n     */\n    ;\n\n    _proto.handleMouseOut = function handleMouseOut(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleKeyPressHandler_);\n    }\n    /**\n     * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n     * looking for ESC, which hides the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        The keypress that triggered this event.\n     *\n     * @listens keydown | keyup\n     */\n    ;\n\n    _proto.handleKeyPress = function handleKeyPress(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.handleMouseOut();\n      }\n    };\n\n    return VolumePanel;\n  }(Component$1);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumePanel.prototype.options_ = {\n    children: ['muteToggle', 'volumeControl']\n  };\n  Component$1.registerComponent('VolumePanel', VolumePanel);\n\n  /**\n   * The Menu component is used to build popup menus, including subtitle and\n   * captions selection menus.\n   *\n   * @extends Component\n   */\n\n  var Menu = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Menu, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        the player that this component should attach to\n     *\n     * @param {Object} [options]\n     *        Object of option names and values\n     *\n     */\n    function Menu(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      if (options) {\n        _this.menuButton_ = options.menuButton;\n      }\n\n      _this.focusedChild_ = -1;\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyDown(e);\n      }); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n      _this.boundHandleBlur_ = function (e) {\n        return _this.handleBlur(e);\n      };\n\n      _this.boundHandleTapClick_ = function (e) {\n        return _this.handleTapClick(e);\n      };\n\n      return _this;\n    }\n    /**\n     * Add event listeners to the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to add listeners to.\n     *\n     */\n\n\n    var _proto = Menu.prototype;\n\n    _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n\n      this.on(component, 'blur', this.boundHandleBlur_);\n      this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * Remove event listeners from the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to remove listeners.\n     *\n     */\n    ;\n\n    _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n\n      this.off(component, 'blur', this.boundHandleBlur_);\n      this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * This method will be called indirectly when the component has been added\n     * before the component adds to the new menu instance by `addItem`.\n     * In this case, the original menu instance will remove the component\n     * by calling `removeChild`.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem`\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      this.removeEventListenerForItem(component);\n\n      _Component.prototype.removeChild.call(this, component);\n    }\n    /**\n     * Add a {@link MenuItem} to the menu.\n     *\n     * @param {Object|string} component\n     *        The name or instance of the `MenuItem` to add.\n     *\n     */\n    ;\n\n    _proto.addItem = function addItem(component) {\n      var childComponent = this.addChild(component);\n\n      if (childComponent) {\n        this.addEventListenerForItem(childComponent);\n      }\n    }\n    /**\n     * Create the `Menu`s DOM element.\n     *\n     * @return {Element}\n     *         the element that was created\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var contentElType = this.options_.contentElType || 'ul';\n      this.contentEl_ = createEl(contentElType, {\n        className: 'vjs-menu-content'\n      });\n      this.contentEl_.setAttribute('role', 'menu');\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        append: this.contentEl_,\n        className: 'vjs-menu'\n      });\n\n      el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n      // where a click on the parent is significant\n\n      on(el, 'click', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      });\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.boundHandleBlur_ = null;\n      this.boundHandleTapClick_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Called when a `MenuItem` loses focus.\n     *\n     * @param {EventTarget~Event} event\n     *        The `blur` event that caused this function to be called.\n     *\n     * @listens blur\n     */\n    ;\n\n    _proto.handleBlur = function handleBlur(event) {\n      var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n      if (!this.children().some(function (element) {\n        return element.el() === relatedTarget;\n      })) {\n        var btn = this.menuButton_;\n\n        if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n          btn.unpressButton();\n        }\n      }\n    }\n    /**\n     * Called when a `MenuItem` gets clicked or tapped.\n     *\n     * @param {EventTarget~Event} event\n     *        The `click` or `tap` event that caused this function to be called.\n     *\n     * @listens click,tap\n     */\n    ;\n\n    _proto.handleTapClick = function handleTapClick(event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n        var childComponents = this.children();\n\n        if (!Array.isArray(childComponents)) {\n          return;\n        }\n\n        var foundComponent = childComponents.filter(function (component) {\n          return component.el() === event.target;\n        })[0];\n\n        if (!foundComponent) {\n          return;\n        } // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n\n\n        if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Handle a `keydown` event on this menu. This listener is added in the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        A `keydown` event that happened on the menu.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      }\n    }\n    /**\n     * Move to next (lower) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ + 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Move to previous (higher) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ - 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Set focus on a {@link MenuItem} in the `Menu`.\n     *\n     * @param {Object|string} [item=0]\n     *        Index of child item set focus on.\n     */\n    ;\n\n    _proto.focus = function focus(item) {\n      if (item === void 0) {\n        item = 0;\n      }\n\n      var children = this.children().slice();\n      var haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n\n      if (haveTitle) {\n        children.shift();\n      }\n\n      if (children.length > 0) {\n        if (item < 0) {\n          item = 0;\n        } else if (item >= children.length) {\n          item = children.length - 1;\n        }\n\n        this.focusedChild_ = item;\n        children[item].el_.focus();\n      }\n    };\n\n    return Menu;\n  }(Component$1);\n\n  Component$1.registerComponent('Menu', Menu);\n\n  /**\n   * A `MenuButton` class for any popup {@link Menu}.\n   *\n   * @extends Component\n   */\n\n  var MenuButton = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MenuButton, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function MenuButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Component.call(this, player, options) || this;\n      _this.menuButton_ = new Button(player, options);\n\n      _this.menuButton_.controlText(_this.controlText_);\n\n      _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n      _this.menuButton_.removeClass('vjs-control');\n\n      _this.addChild(_this.menuButton_);\n\n      _this.update();\n\n      _this.enabled_ = true;\n\n      var handleClick = function handleClick(e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleMenuKeyUp_ = function (e) {\n        return _this.handleMenuKeyUp(e);\n      };\n\n      _this.on(_this.menuButton_, 'tap', handleClick);\n\n      _this.on(_this.menuButton_, 'click', handleClick);\n\n      _this.on(_this.menuButton_, 'keydown', function (e) {\n        return _this.handleKeyDown(e);\n      });\n\n      _this.on(_this.menuButton_, 'mouseenter', function () {\n        _this.addClass('vjs-hover');\n\n        _this.menu.show();\n\n        on(document, 'keyup', _this.handleMenuKeyUp_);\n      });\n\n      _this.on('mouseleave', function (e) {\n        return _this.handleMouseLeave(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleSubmenuKeyDown(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     */\n\n\n    var _proto = MenuButton.prototype;\n\n    _proto.update = function update() {\n      var menu = this.createMenu();\n\n      if (this.menu) {\n        this.menu.dispose();\n        this.removeChild(this.menu);\n      }\n\n      this.menu = menu;\n      this.addChild(menu);\n      /**\n       * Track the state of the menu button\n       *\n       * @type {Boolean}\n       * @private\n       */\n\n      this.buttonPressed_ = false;\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n      if (this.items && this.items.length <= this.hideThreshold_) {\n        this.hide();\n        this.menu.contentEl_.removeAttribute('role');\n      } else {\n        this.show();\n        this.menu.contentEl_.setAttribute('role', 'menu');\n      }\n    }\n    /**\n     * Create the menu and add all items to it.\n     *\n     * @return {Menu}\n     *         The constructed menu\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      var menu = new Menu(this.player_, {\n        menuButton: this\n      });\n      /**\n       * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n       * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n       * it here because every time we run `createMenu` we need to reset the value.\n       *\n       * @protected\n       * @type {Number}\n       */\n\n      this.hideThreshold_ = 0; // Add a title list item to the top\n\n      if (this.options_.title) {\n        var titleEl = createEl('li', {\n          className: 'vjs-menu-title',\n          textContent: toTitleCase$1(this.options_.title),\n          tabIndex: -1\n        });\n        var titleComponent = new Component$1(this.player_, {\n          el: titleEl\n        });\n        menu.addItem(titleComponent);\n      }\n\n      this.items = this.createItems();\n\n      if (this.items) {\n        // Add menu items to the menu\n        for (var i = 0; i < this.items.length; i++) {\n          menu.addItem(this.items[i]);\n        }\n      }\n\n      return menu;\n    }\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.createItems = function createItems() {}\n    /**\n     * Create the `MenuButtons`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildWrapperCSSClass()\n      }, {});\n    }\n    /**\n     * Allow sub components to stack CSS class names for the wrapper element\n     *\n     * @return {string}\n     *         The constructed wrapper DOM `className`\n     */\n    ;\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      } // TODO: Fix the CSS so that this isn't necessary\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      }\n\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Get or set the localized control text that will be used for accessibility.\n     *\n     * > NOTE: This will come from the internal `menuButton_` element.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.menuButton_.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.menuButton_.el();\n      }\n\n      return this.menuButton_.controlText(text, el);\n    }\n    /**\n     * Dispose of the `menu-button` and all child components.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.handleMouseLeave();\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Handle a click on a `MenuButton`.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } else {\n        this.pressButton();\n      }\n    }\n    /**\n     * Handle `mouseleave` for `MenuButton`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseleave` event that caused this function to be called.\n     *\n     * @listens mouseleave\n     */\n    ;\n\n    _proto.handleMouseLeave = function handleMouseLeave(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleMenuKeyUp_);\n    }\n    /**\n     * Set the focus to the actual button, not to this element\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.menuButton_.focus();\n    }\n    /**\n     * Remove the focus from the actual button, not this element\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.menuButton_.blur();\n    }\n    /**\n     * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n      } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n        if (!this.buttonPressed_) {\n          event.preventDefault();\n          this.pressButton();\n        }\n      }\n    }\n    /**\n     * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keyup\n     */\n    ;\n\n    _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n      // Escape hides popup menu\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        this.removeClass('vjs-hover');\n      }\n    }\n    /**\n     * This method name now delegates to `handleSubmenuKeyDown`. This means\n     * anyone calling `handleSubmenuKeyPress` will not see their method calls\n     * stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n      this.handleSubmenuKeyDown(event);\n    }\n    /**\n     * Handle a `keydown` event on a sub-menu. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Put the current `MenuButton` into a pressed state.\n     */\n    ;\n\n    _proto.pressButton = function pressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = true;\n        this.menu.show();\n        this.menu.lockShowing();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n        // undesired scrolling behavior when the player is in an iframe\n\n        if (IS_IOS && isInFrame()) {\n          // Return early so that the menu isn't focused\n          return;\n        }\n\n        this.menu.focus();\n      }\n    }\n    /**\n     * Take the current `MenuButton` out of a pressed state.\n     */\n    ;\n\n    _proto.unpressButton = function unpressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = false;\n        this.menu.unlockShowing();\n        this.menu.hide();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n      }\n    }\n    /**\n     * Disable the `MenuButton`. Don't allow it to be clicked.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.unpressButton();\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.menuButton_.disable();\n    }\n    /**\n     * Enable the `MenuButton`. Allow it to be clicked.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.menuButton_.enable();\n    };\n\n    return MenuButton;\n  }(Component$1);\n\n  Component$1.registerComponent('MenuButton', MenuButton);\n\n  /**\n   * The base class for buttons that toggle specific  track types (e.g. subtitles).\n   *\n   * @extends MenuButton\n   */\n\n  var TrackButton = /*#__PURE__*/function (_MenuButton) {\n    inheritsLoose(TrackButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TrackButton(player, options) {\n      var _this;\n\n      var tracks = options.tracks;\n      _this = _MenuButton.call(this, player, options) || this;\n\n      if (_this.items.length <= 1) {\n        _this.hide();\n      }\n\n      if (!tracks) {\n        return assertThisInitialized(_this);\n      }\n\n      var updateHandler = bind(assertThisInitialized(_this), _this.update);\n      tracks.addEventListener('removetrack', updateHandler);\n      tracks.addEventListener('addtrack', updateHandler);\n      tracks.addEventListener('labelchange', updateHandler);\n\n      _this.player_.on('ready', updateHandler);\n\n      _this.player_.on('dispose', function () {\n        tracks.removeEventListener('removetrack', updateHandler);\n        tracks.removeEventListener('addtrack', updateHandler);\n        tracks.removeEventListener('labelchange', updateHandler);\n      });\n\n      return _this;\n    }\n\n    return TrackButton;\n  }(MenuButton);\n\n  Component$1.registerComponent('TrackButton', TrackButton);\n\n  /**\n   * @file menu-keys.js\n   */\n\n  /**\n    * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n    * Note that 'Enter' and 'Space' are not included here (otherwise they would\n    * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n    * @typedef MenuKeys\n    * @array\n    */\n  var MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n  /**\n   * The component for a menu item. `<li>`\n   *\n   * @extends ClickableComponent\n   */\n\n  var MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(MenuItem, _ClickableComponent);\n\n    /**\n     * Creates an instance of the this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     *\n     */\n    function MenuItem(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n      _this.selectable = options.selectable;\n      _this.isSelected_ = options.selected || false;\n      _this.multiSelectable = options.multiSelectable;\n\n      _this.selected(_this.isSelected_);\n\n      if (_this.selectable) {\n        if (_this.multiSelectable) {\n          _this.el_.setAttribute('role', 'menuitemcheckbox');\n        } else {\n          _this.el_.setAttribute('role', 'menuitemradio');\n        }\n      } else {\n        _this.el_.setAttribute('role', 'menuitem');\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `MenuItem's DOM element\n     *\n     * @param {string} [type=li]\n     *        Element's node type, not actually used, always set to `li`.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element\n     *\n     * @param {Object} [attrs={}]\n     *        An object of attributes that should be set on the element\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = MenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      // The control is textual, not just an icon\n      this.nonIconControl = true;\n\n      var el = _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n        className: 'vjs-menu-item',\n        tabIndex: -1\n      }, props), attrs); // swap icon with menu item text.\n\n\n      el.replaceChild(createEl('span', {\n        className: 'vjs-menu-item-text',\n        textContent: this.localize(this.options_.label)\n      }), el.querySelector('.vjs-icon-placeholder'));\n      return el;\n    }\n    /**\n     * Ignore keys which are used by the menu, but pass any other ones up. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (!MenuKeys.some(function (key) {\n        return keycode.isEventKey(event, key);\n      })) {\n        // Pass keydown handling up for unused keys\n        _ClickableComponent.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Any click on a `MenuItem` puts it into the selected state.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      this.selected(true);\n    }\n    /**\n     * Set the state for this menu item as selected or not.\n     *\n     * @param {boolean} selected\n     *        if the menu item is selected or not\n     */\n    ;\n\n    _proto.selected = function selected(_selected) {\n      if (this.selectable) {\n        if (_selected) {\n          this.addClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n          // so indicate selected state to screen reader in the control text.\n\n          this.controlText(', selected');\n          this.isSelected_ = true;\n        } else {\n          this.removeClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n          this.controlText('');\n          this.isSelected_ = false;\n        }\n      }\n    };\n\n    return MenuItem;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('MenuItem', MenuItem);\n\n  /**\n   * The specific menu item type for selecting a language within a text track kind\n   *\n   * @extends MenuItem\n   */\n\n  var TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TextTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.mode === 'showing';\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n      // out empty kinds.\n\n      _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(assertThisInitialized(_this), args);\n      };\n\n      var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        _this.handleSelectedLanguageChange.apply(assertThisInitialized(_this), args);\n      };\n\n      player.on(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.addEventListener('change', changeHandler);\n      tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n      _this.on('dispose', function () {\n        player.off(['loadstart', 'texttrackchange'], changeHandler);\n        tracks.removeEventListener('change', changeHandler);\n        tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n      }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n      // associated track's mode changes. Without something like\n      // Object.observe() (also not present on iOS7), it's not\n      // possible to detect changes to the mode attribute and polyfill\n      // the change event. As a poor substitute, we manually dispatch\n      // change events whenever the controls modify the mode.\n\n\n      if (tracks.onchange === undefined) {\n        var event;\n\n        _this.on(['tap', 'click'], function () {\n          if (typeof window.Event !== 'object') {\n            // Android 2.3 throws an Illegal Constructor error for window.Event\n            try {\n              event = new window.Event('change');\n            } catch (err) {// continue regardless of error\n            }\n          }\n\n          if (!event) {\n            event = document.createEvent('Event');\n            event.initEvent('change', true, true);\n          }\n\n          tracks.dispatchEvent(event);\n        });\n      } // set the default state based on current tracks\n\n\n      _this.handleTracksChange();\n\n      return _this;\n    }\n    /**\n     * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = TextTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      var referenceTrack = this.track;\n      var tracks = this.player_.textTracks();\n\n      _MenuItem.prototype.handleClick.call(this, event);\n\n      if (!tracks) {\n        return;\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n        // skip it. We do not want to affect tracks of incompatible kind(s).\n\n        if (this.kinds.indexOf(track.kind) === -1) {\n          continue;\n        } // If this text track is the component's track and it is not showing,\n        // set it to showing.\n\n\n        if (track === referenceTrack) {\n          if (track.mode !== 'showing') {\n            track.mode = 'showing';\n          } // If this text track is not the component's track and it is not\n          // disabled, set it to disabled.\n\n        } else if (track.mode !== 'disabled') {\n          track.mode = 'disabled';\n        }\n      }\n    }\n    /**\n     * Handle text track list change\n     *\n     * @param {EventTarget~Event} event\n     *        The `change` event that caused this function to be called.\n     *\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      if (this.track.mode === 'showing') {\n        var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n        if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n          return;\n        }\n\n        this.player_.cache_.selectedLanguage = {\n          enabled: true,\n          language: this.track.language,\n          kind: this.track.kind\n        };\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      // remove reference to track object on dispose\n      this.track = null;\n\n      _MenuItem.prototype.dispose.call(this);\n    };\n\n    return TextTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n  /**\n   * A special menu item for turning of a specific type of text track\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function OffTextTrackMenuItem(player, options) {\n      // Create pseudo track info\n      // Requires options['kind']\n      options.track = {\n        player: player,\n        // it is no longer necessary to store `kind` or `kinds` on the track itself\n        // since they are now stored in the `kinds` property of all instances of\n        // TextTrackMenuItem, but this will remain for backwards compatibility\n        kind: options.kind,\n        kinds: options.kinds,\n        \"default\": false,\n        mode: 'disabled'\n      };\n\n      if (!options.kinds) {\n        options.kinds = [options.kind];\n      }\n\n      if (options.label) {\n        options.track.label = options.label;\n      } else {\n        options.track.label = options.kinds.join(' and ') + ' off';\n      } // MenuItem is selectable\n\n\n      options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n      options.multiSelectable = false;\n      return _TextTrackMenuItem.call(this, player, options) || this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     */\n\n\n    var _proto = OffTextTrackMenuItem.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var shouldBeSelected = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n          shouldBeSelected = false;\n          break;\n        }\n      } // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      var tracks = this.player().textTracks();\n      var allHidden = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n          allHidden = false;\n          break;\n        }\n      }\n\n      if (allHidden) {\n        this.player_.cache_.selectedLanguage = {\n          enabled: false\n        };\n      }\n    };\n\n    return OffTextTrackMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific text track types (e.g. subtitles)\n   *\n   * @extends MenuButton\n   */\n\n  var TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n    inheritsLoose(TextTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function TextTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.textTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @param {TextTrackMenuItem[]} [items=[]]\n     *        Existing array of items to use during creation\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items that were created\n     */\n\n\n    var _proto = TextTrackButton.prototype;\n\n    _proto.createItems = function createItems(items, TrackMenuItem) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      if (TrackMenuItem === void 0) {\n        TrackMenuItem = TextTrackMenuItem;\n      }\n\n      // Label is an override for the [track] off label\n      // USed to localise captions/subtitles\n      var label;\n\n      if (this.label_) {\n        label = this.label_ + \" off\";\n      } // Add an OFF menu item to turn all tracks off\n\n\n      items.push(new OffTextTrackMenuItem(this.player_, {\n        kinds: this.kinds_,\n        kind: this.kind_,\n        label: label\n      }));\n      this.hideThreshold_ += 1;\n      var tracks = this.player_.textTracks();\n\n      if (!Array.isArray(this.kinds_)) {\n        this.kinds_ = [this.kind_];\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n        if (this.kinds_.indexOf(track.kind) > -1) {\n          var item = new TrackMenuItem(this.player_, {\n            track: track,\n            kinds: this.kinds_,\n            kind: this.kind_,\n            // MenuItem is selectable\n            selectable: true,\n            // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n            multiSelectable: false\n          });\n          item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n          items.push(item);\n        }\n      }\n\n      return items;\n    };\n\n    return TextTrackButton;\n  }(TrackButton);\n\n  Component$1.registerComponent('TextTrackButton', TextTrackButton);\n\n  /**\n   * The chapter track menu item\n   *\n   * @extends MenuItem\n   */\n\n  var ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ChaptersTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var cue = options.cue;\n      var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n      options.selectable = true;\n      options.multiSelectable = false;\n      options.label = cue.text;\n      options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n      _this.cue = cue;\n      return _this;\n    }\n    /**\n     * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = ChaptersTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player_.currentTime(this.cue.startTime);\n    };\n\n    return ChaptersTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n  /**\n   * The button component for toggling and selecting chapters\n   * Chapters act much differently than other text tracks\n   * Cues are navigation vs. other tracks of alternative languages\n   *\n   * @extends TextTrackButton\n   */\n\n  var ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(ChaptersButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this function is ready.\n     */\n    function ChaptersButton(player, options, ready) {\n      var _this;\n\n      _this = _TextTrackButton.call(this, player, options, ready) || this;\n\n      _this.selectCurrentItem_ = function () {\n        _this.items.forEach(function (item) {\n          item.selected(_this.track_.activeCues[0] === item.cue);\n        });\n      };\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = ChaptersButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     *\n     * @param {EventTarget~Event} [event]\n     *        An event that triggered this function to run.\n     *\n     * @listens TextTrackList#addtrack\n     * @listens TextTrackList#removetrack\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.update = function update(event) {\n      if (event && event.track && event.track.kind !== 'chapters') {\n        return;\n      }\n\n      var track = this.findChaptersTrack();\n\n      if (track !== this.track_) {\n        this.setTrack(track);\n\n        _TextTrackButton.prototype.update.call(this);\n      } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n        // Update the menu initially or if the number of cues has changed since set\n        _TextTrackButton.prototype.update.call(this);\n      }\n    }\n    /**\n     * Set the currently selected track for the chapters button.\n     *\n     * @param {TextTrack} track\n     *        The new track to select. Nothing will change if this is the currently selected\n     *        track.\n     */\n    ;\n\n    _proto.setTrack = function setTrack(track) {\n      if (this.track_ === track) {\n        return;\n      }\n\n      if (!this.updateHandler_) {\n        this.updateHandler_ = this.update.bind(this);\n      } // here this.track_ refers to the old track instance\n\n\n      if (this.track_) {\n        var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (remoteTextTrackEl) {\n          remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n        }\n\n        this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n        this.track_ = null;\n      }\n\n      this.track_ = track; // here this.track_ refers to the new track instance\n\n      if (this.track_) {\n        this.track_.mode = 'hidden';\n\n        var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (_remoteTextTrackEl) {\n          _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n        }\n\n        this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n      }\n    }\n    /**\n     * Find the track object that is currently in use by this ChaptersButton\n     *\n     * @return {TextTrack|undefined}\n     *         The current track or undefined if none was found.\n     */\n    ;\n\n    _proto.findChaptersTrack = function findChaptersTrack() {\n      var tracks = this.player_.textTracks() || [];\n\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        // We will always choose the last track as our chaptersTrack\n        var track = tracks[i];\n\n        if (track.kind === this.kind_) {\n          return track;\n        }\n      }\n    }\n    /**\n     * Get the caption for the ChaptersButton based on the track label. This will also\n     * use the current tracks localized kind as a fallback if a label does not exist.\n     *\n     * @return {string}\n     *         The tracks current label or the localized track kind.\n     */\n    ;\n\n    _proto.getMenuCaption = function getMenuCaption() {\n      if (this.track_ && this.track_.label) {\n        return this.track_.label;\n      }\n\n      return this.localize(toTitleCase$1(this.kind_));\n    }\n    /**\n     * Create menu from chapter track\n     *\n     * @return {Menu}\n     *         New menu for the chapter buttons\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      this.options_.title = this.getMenuCaption();\n      return _TextTrackButton.prototype.createMenu.call(this);\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!this.track_) {\n        return items;\n      }\n\n      var cues = this.track_.cues;\n\n      if (!cues) {\n        return items;\n      }\n\n      for (var i = 0, l = cues.length; i < l; i++) {\n        var cue = cues[i];\n        var mi = new ChaptersTrackMenuItem(this.player_, {\n          track: this.track_,\n          cue: cue\n        });\n        items.push(mi);\n      }\n\n      return items;\n    };\n\n    return ChaptersButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  ChaptersButton.prototype.kind_ = 'chapters';\n  /**\n   * The text that should display over the `ChaptersButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  ChaptersButton.prototype.controlText_ = 'Chapters';\n  Component$1.registerComponent('ChaptersButton', ChaptersButton);\n\n  /**\n   * The button component for toggling and selecting descriptions\n   *\n   * @extends TextTrackButton\n   */\n\n  var DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function DescriptionsButton(player, options, ready) {\n      var _this;\n\n      _this = _TextTrackButton.call(this, player, options, ready) || this;\n      var tracks = player.textTracks();\n      var changeHandler = bind(assertThisInitialized(_this), _this.handleTracksChange);\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     *\n     * @listens TextTrackList#change\n     */\n\n\n    var _proto = DescriptionsButton.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var disabled = false; // Check whether a track of a different kind is showing\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (track.kind !== this.kind_ && track.mode === 'showing') {\n          disabled = true;\n          break;\n        }\n      } // If another track is showing, disable this menu button\n\n\n      if (disabled) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return DescriptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DescriptionsButton.prototype.kind_ = 'descriptions';\n  /**\n   * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  DescriptionsButton.prototype.controlText_ = 'Descriptions';\n  Component$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n  /**\n   * The button component for toggling and selecting subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function SubtitlesButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubtitlesButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return SubtitlesButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  SubtitlesButton.prototype.kind_ = 'subtitles';\n  /**\n   * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubtitlesButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n  /**\n   * The menu item for caption track settings menu\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function CaptionSettingsMenuItem(player, options) {\n      var _this;\n\n      options.track = {\n        player: player,\n        kind: options.kind,\n        label: options.kind + ' settings',\n        selectable: false,\n        \"default\": false,\n        mode: 'disabled'\n      }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n      options.selectable = false;\n      options.name = 'CaptionSettingsMenuItem';\n      _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n      _this.addClass('vjs-texttrack-settings');\n\n      _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n      return _this;\n    }\n    /**\n     * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = CaptionSettingsMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      this.player().getChild('textTrackSettings').open();\n    };\n\n    return CaptionSettingsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions\n   *\n   * @extends TextTrackButton\n   */\n\n  var CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(CaptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function CaptionsButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = CaptionsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.kind_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      return _TextTrackButton.prototype.createItems.call(this, items);\n    };\n\n    return CaptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CaptionsButton.prototype.kind_ = 'captions';\n  /**\n   * The text that should display over the `CaptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  CaptionsButton.prototype.controlText_ = 'Captions';\n  Component$1.registerComponent('CaptionsButton', CaptionsButton);\n\n  /**\n   * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n   * in the SubsCapsMenu.\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n    function SubsCapsMenuItem() {\n      return _TextTrackMenuItem.apply(this, arguments) || this;\n    }\n\n    var _proto = SubsCapsMenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      var el = _TextTrackMenuItem.prototype.createEl.call(this, type, props, attrs);\n\n      var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n      if (this.options_.track.kind === 'captions') {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          // space added as the text will visually flow with the\n          // label\n          textContent: \" \" + this.localize('Captions')\n        }));\n      }\n\n      return el;\n    };\n\n    return SubsCapsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions and/or subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n    function SubsCapsButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n      // \"captions and subtitles\" other locales use \"subtitles\"\n\n      _this.label_ = 'subtitles';\n\n      if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n        _this.label_ = 'captions';\n      }\n\n      _this.menuButton_.controlText(toTitleCase$1(_this.label_));\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubsCapsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption/subtitles menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.label_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n      return items;\n    };\n\n    return SubsCapsButton;\n  }(TextTrackButton);\n  /**\n   * `kind`s of TextTrack to look for to associate it with this menu.\n   *\n   * @type {array}\n   * @private\n   */\n\n\n  SubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n  /**\n   * The text that should display over the `SubsCapsButton`s controls.\n   *\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubsCapsButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n  /**\n   * An {@link AudioTrack} {@link MenuItem}\n   *\n   * @extends MenuItem\n   */\n\n  var AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function AudioTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.enabled;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n\n      _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(assertThisInitialized(_this), args);\n      };\n\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n\n    var _proto = AudioTrackMenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      var el = _MenuItem.prototype.createEl.call(this, type, props, attrs);\n\n      var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n      if (this.options_.track.kind === 'main-desc') {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          textContent: ' ' + this.localize('Descriptions')\n        }));\n      }\n\n      return el;\n    }\n    /**\n     * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this, event); // the audio track list will automatically toggle other tracks\n      // off for us.\n\n\n      this.track.enabled = true; // when native audio tracks are used, we want to make sure that other tracks are turned off\n\n      if (this.player_.tech_.featuresNativeAudioTracks) {\n        var tracks = this.player_.audioTracks();\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i]; // skip the current track since we enabled it above\n\n          if (track === this.track) {\n            continue;\n          }\n\n          track.enabled = track === this.track;\n        }\n      }\n    }\n    /**\n     * Handle any {@link AudioTrack} change.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link AudioTrackList#change} event that caused this to run.\n     *\n     * @listens AudioTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      this.selected(this.track.enabled);\n    };\n\n    return AudioTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific {@link AudioTrack} types.\n   *\n   * @extends TrackButton\n   */\n\n  var AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n    inheritsLoose(AudioTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function AudioTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.audioTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = AudioTrackButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create a menu item for each audio track\n     *\n     * @param {AudioTrackMenuItem[]} [items=[]]\n     *        An array of existing menu items to use.\n     *\n     * @return {AudioTrackMenuItem[]}\n     *         An array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems(items) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      // if there's only one audio track, there no point in showing it\n      this.hideThreshold_ = 1;\n      var tracks = this.player_.audioTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        items.push(new AudioTrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        }));\n      }\n\n      return items;\n    };\n\n    return AudioTrackButton;\n  }(TrackButton);\n  /**\n   * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  AudioTrackButton.prototype.controlText_ = 'Audio Track';\n  Component$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n  /**\n   * The specific menu item type for selecting a playback rate.\n   *\n   * @extends MenuItem\n   */\n\n  var PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuItem(player, options) {\n      var _this;\n\n      var label = options.rate;\n      var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n      options.label = label;\n      options.selected = rate === player.playbackRate();\n      options.selectable = true;\n      options.multiSelectable = false;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.label = label;\n      _this.rate = rate;\n\n      _this.on(player, 'ratechange', function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = PlaybackRateMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player().playbackRate(this.rate);\n    }\n    /**\n     * Update the PlaybackRateMenuItem when the playbackrate changes.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `ratechange` event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.selected(this.player().playbackRate() === this.rate);\n    };\n\n    return PlaybackRateMenuItem;\n  }(MenuItem);\n  /**\n   * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuItem.prototype.contentElType = 'button';\n  Component$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n  /**\n   * The component for controlling the playback rate.\n   *\n   * @extends MenuButton\n   */\n\n  var PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n    inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuButton(player, options) {\n      var _this;\n\n      _this = _MenuButton.call(this, player, options) || this;\n\n      _this.menuButton_.el_.setAttribute('aria-describedby', _this.labelElId_);\n\n      _this.updateVisibility();\n\n      _this.updateLabel();\n\n      _this.on(player, 'loadstart', function (e) {\n        return _this.updateVisibility(e);\n      });\n\n      _this.on(player, 'ratechange', function (e) {\n        return _this.updateLabel(e);\n      });\n\n      _this.on(player, 'playbackrateschange', function (e) {\n        return _this.handlePlaybackRateschange(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = PlaybackRateMenuButton.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _MenuButton.prototype.createEl.call(this);\n\n      this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n      this.labelEl_ = createEl('div', {\n        className: 'vjs-playback-rate-value',\n        id: this.labelElId_,\n        textContent: '1x'\n      });\n      el.appendChild(this.labelEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.labelEl_ = null;\n\n      _MenuButton.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var rates = this.playbackRates();\n      var items = [];\n\n      for (var i = rates.length - 1; i >= 0; i--) {\n        items.push(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n\n      return items;\n    }\n    /**\n     * Updates ARIA accessibility attributes\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes() {\n      // Current playback rate\n      this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // select next rate option\n      var currentRate = this.player().playbackRate();\n      var rates = this.playbackRates();\n      var currentIndex = rates.indexOf(currentRate); // this get the next rate and it will select first one if the last one currently selected\n\n      var newIndex = (currentIndex + 1) % rates.length;\n      this.player().playbackRate(rates[newIndex]);\n    }\n    /**\n     * On playbackrateschange, update the menu to account for the new items.\n     *\n     * @listens Player#playbackrateschange\n     */\n    ;\n\n    _proto.handlePlaybackRateschange = function handlePlaybackRateschange(event) {\n      this.update();\n    }\n    /**\n     * Get possible playback rates\n     *\n     * @return {Array}\n     *         All possible playback rates\n     */\n    ;\n\n    _proto.playbackRates = function playbackRates() {\n      var player = this.player();\n      return player.playbackRates && player.playbackRates() || [];\n    }\n    /**\n     * Get whether playback rates is supported by the tech\n     * and an array of playback rates exists\n     *\n     * @return {boolean}\n     *         Whether changing playback rate is supported\n     */\n    ;\n\n    _proto.playbackRateSupported = function playbackRateSupported() {\n      return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n    }\n    /**\n     * Hide playback rate controls when they're no playback rate options to select\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.updateVisibility = function updateVisibility(event) {\n      if (this.playbackRateSupported()) {\n        this.removeClass('vjs-hidden');\n      } else {\n        this.addClass('vjs-hidden');\n      }\n    }\n    /**\n     * Update button label when rate changed\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.updateLabel = function updateLabel(event) {\n      if (this.playbackRateSupported()) {\n        this.labelEl_.textContent = this.player().playbackRate() + 'x';\n      }\n    };\n\n    return PlaybackRateMenuButton;\n  }(MenuButton);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n  Component$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n  /**\n   * Just an empty spacer element that can be used as an append point for plugins, etc.\n   * Also can be used to create space between elements when necessary.\n   *\n   * @extends Component\n   */\n\n  var Spacer = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Spacer, _Component);\n\n    function Spacer() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = Spacer.prototype;\n\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl(tag, props, attributes) {\n      if (tag === void 0) {\n        tag = 'div';\n      }\n\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      if (!props.className) {\n        props.className = this.buildCSSClass();\n      }\n\n      return _Component.prototype.createEl.call(this, tag, props, attributes);\n    };\n\n    return Spacer;\n  }(Component$1);\n\n  Component$1.registerComponent('Spacer', Spacer);\n\n  /**\n   * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n   *\n   * @extends Spacer\n   */\n\n  var CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n    inheritsLoose(CustomControlSpacer, _Spacer);\n\n    function CustomControlSpacer() {\n      return _Spacer.apply(this, arguments) || this;\n    }\n\n    var _proto = CustomControlSpacer.prototype;\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Spacer.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass(),\n        // No-flex/table-cell mode requires there be some content\n        // in the cell to fill the remaining space of the table.\n        textContent: \"\\xA0\"\n      });\n    };\n\n    return CustomControlSpacer;\n  }(Spacer);\n\n  Component$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n  /**\n   * Container of main controls.\n   *\n   * @extends Component\n   */\n\n  var ControlBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ControlBar, _Component);\n\n    function ControlBar() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = ControlBar.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-control-bar',\n        dir: 'ltr'\n      });\n    };\n\n    return ControlBar;\n  }(Component$1);\n  /**\n   * Default options for `ControlBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ControlBar.prototype.options_ = {\n    children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n  };\n\n  if ('exitPictureInPicture' in document) {\n    ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n  }\n\n  Component$1.registerComponent('ControlBar', ControlBar);\n\n  /**\n   * A display that indicates an error has occurred. This means that the video\n   * is unplayable.\n   *\n   * @extends ModalDialog\n   */\n\n  var ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n    inheritsLoose(ErrorDisplay, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     */\n    function ErrorDisplay(player, options) {\n      var _this;\n\n      _this = _ModalDialog.call(this, player, options) || this;\n\n      _this.on(player, 'error', function (e) {\n        return _this.open(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     *\n     * @deprecated Since version 5.\n     */\n\n\n    var _proto = ErrorDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Gets the localized error message based on the `Player`s error.\n     *\n     * @return {string}\n     *         The `Player`s error message localized or an empty string.\n     */\n    ;\n\n    _proto.content = function content() {\n      var error = this.player().error();\n      return error ? this.localize(error.message) : '';\n    };\n\n    return ErrorDisplay;\n  }(ModalDialog);\n  /**\n   * The default options for an `ErrorDisplay`.\n   *\n   * @private\n   */\n\n\n  ErrorDisplay.prototype.options_ = _extends_1({}, ModalDialog.prototype.options_, {\n    pauseOnOpen: false,\n    fillAlways: true,\n    temporary: false,\n    uncloseable: true\n  });\n  Component$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n  var LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\n  var COLOR_BLACK = ['#000', 'Black'];\n  var COLOR_BLUE = ['#00F', 'Blue'];\n  var COLOR_CYAN = ['#0FF', 'Cyan'];\n  var COLOR_GREEN = ['#0F0', 'Green'];\n  var COLOR_MAGENTA = ['#F0F', 'Magenta'];\n  var COLOR_RED = ['#F00', 'Red'];\n  var COLOR_WHITE = ['#FFF', 'White'];\n  var COLOR_YELLOW = ['#FF0', 'Yellow'];\n  var OPACITY_OPAQUE = ['1', 'Opaque'];\n  var OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\n  var OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n  //\n  // Possible keys include:\n  //\n  // `default`:\n  //   The default option index. Only needs to be provided if not zero.\n  // `parser`:\n  //   A function which is used to parse the value from the selected option in\n  //   a customized way.\n  // `selector`:\n  //   The selector used to find the associated <select> element.\n\n  var selectConfigs = {\n    backgroundColor: {\n      selector: '.vjs-bg-color > select',\n      id: 'captions-background-color-%s',\n      label: 'Color',\n      options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    backgroundOpacity: {\n      selector: '.vjs-bg-opacity > select',\n      id: 'captions-background-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n    },\n    color: {\n      selector: '.vjs-fg-color > select',\n      id: 'captions-foreground-color-%s',\n      label: 'Color',\n      options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    edgeStyle: {\n      selector: '.vjs-edge-style > select',\n      id: '%s',\n      label: 'Text Edge Style',\n      options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n    },\n    fontFamily: {\n      selector: '.vjs-font-family > select',\n      id: 'captions-font-family-%s',\n      label: 'Font Family',\n      options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n    },\n    fontPercent: {\n      selector: '.vjs-font-percent > select',\n      id: 'captions-font-size-%s',\n      label: 'Font Size',\n      options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n      \"default\": 2,\n      parser: function parser(v) {\n        return v === '1.00' ? null : Number(v);\n      }\n    },\n    textOpacity: {\n      selector: '.vjs-text-opacity > select',\n      id: 'captions-foreground-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI]\n    },\n    // Options for this object are defined below.\n    windowColor: {\n      selector: '.vjs-window-color > select',\n      id: 'captions-window-color-%s',\n      label: 'Color'\n    },\n    // Options for this object are defined below.\n    windowOpacity: {\n      selector: '.vjs-window-opacity > select',\n      id: 'captions-window-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n    }\n  };\n  selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n  /**\n   * Get the actual value of an option.\n   *\n   * @param  {string} value\n   *         The value to get\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n  function parseOptionValue(value, parser) {\n    if (parser) {\n      value = parser(value);\n    }\n\n    if (value && value !== 'none') {\n      return value;\n    }\n  }\n  /**\n   * Gets the value of the selected <option> element within a <select> element.\n   *\n   * @param  {Element} el\n   *         the element to look in\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n\n  function getSelectedOptionValue(el, parser) {\n    var value = el.options[el.options.selectedIndex].value;\n    return parseOptionValue(value, parser);\n  }\n  /**\n   * Sets the selected <option> element within a <select> element based on a\n   * given value.\n   *\n   * @param {Element} el\n   *        The element to look in.\n   *\n   * @param {string} value\n   *        the property to look on.\n   *\n   * @param {Function} [parser]\n   *        Optional function to adjust the value before comparing.\n   *\n   * @private\n   */\n\n\n  function setSelectedOption(el, value, parser) {\n    if (!value) {\n      return;\n    }\n\n    for (var i = 0; i < el.options.length; i++) {\n      if (parseOptionValue(el.options[i].value, parser) === value) {\n        el.selectedIndex = i;\n        break;\n      }\n    }\n  }\n  /**\n   * Manipulate Text Tracks settings.\n   *\n   * @extends ModalDialog\n   */\n\n\n  var TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n    inheritsLoose(TextTrackSettings, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *         The key/value store of player options.\n     */\n    function TextTrackSettings(player, options) {\n      var _this;\n\n      options.temporary = false;\n      _this = _ModalDialog.call(this, player, options) || this;\n      _this.updateDisplay = _this.updateDisplay.bind(assertThisInitialized(_this)); // fill the modal and pretend we have opened it\n\n      _this.fill();\n\n      _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n      _this.endDialog = createEl('p', {\n        className: 'vjs-control-text',\n        textContent: _this.localize('End of dialog window.')\n      });\n\n      _this.el().appendChild(_this.endDialog);\n\n      _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n      if (options.persistTextTrackSettings === undefined) {\n        _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n      }\n\n      _this.on(_this.$('.vjs-done-button'), 'click', function () {\n        _this.saveSettings();\n\n        _this.close();\n      });\n\n      _this.on(_this.$('.vjs-default-button'), 'click', function () {\n        _this.setDefaults();\n\n        _this.updateDisplay();\n      });\n\n      each(selectConfigs, function (config) {\n        _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n      });\n\n      if (_this.options_.persistTextTrackSettings) {\n        _this.restoreSettings();\n      }\n\n      return _this;\n    }\n\n    var _proto = TextTrackSettings.prototype;\n\n    _proto.dispose = function dispose() {\n      this.endDialog = null;\n\n      _ModalDialog.prototype.dispose.call(this);\n    }\n    /**\n     * Create a <select> element with configured options.\n     *\n     * @param {string} key\n     *        Configuration key to use during creation.\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n      var _this2 = this;\n\n      if (legendId === void 0) {\n        legendId = '';\n      }\n\n      if (type === void 0) {\n        type = 'label';\n      }\n\n      var config = selectConfigs[key];\n      var id = config.id.replace('%s', this.id_);\n      var selectLabelledbyIds = [legendId, id].join(' ').trim();\n      return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n        var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n        return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n      })).concat('</select>').join('');\n    }\n    /**\n     * Create foreground color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFgColor_ = function createElFgColor_() {\n      var legendId = \"captions-text-legend-\" + this.id_;\n      return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create background color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElBgColor_ = function createElBgColor_() {\n      var legendId = \"captions-background-\" + this.id_;\n      return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create window color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElWinColor_ = function createElWinColor_() {\n      var legendId = \"captions-window-\" + this.id_;\n      return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create color elements for the component\n     *\n     * @return {Element}\n     *         The element that was created\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElColors_ = function createElColors_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-colors',\n        innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n      });\n    }\n    /**\n     * Create font elements for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFont_ = function createElFont_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-font',\n        innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n      });\n    }\n    /**\n     * Create controls for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElControls_ = function createElControls_() {\n      var defaultsDescription = this.localize('restore all settings to the default values');\n      return createEl('div', {\n        className: 'vjs-track-settings-controls',\n        innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n      });\n    };\n\n    _proto.content = function content() {\n      return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n    };\n\n    _proto.label = function label() {\n      return this.localize('Caption Settings Dialog');\n    };\n\n    _proto.description = function description() {\n      return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n    };\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n    }\n    /**\n     * Gets an object of text track settings (or null).\n     *\n     * @return {Object}\n     *         An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.getValues = function getValues() {\n      var _this3 = this;\n\n      return reduce(selectConfigs, function (accum, config, key) {\n        var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n        if (value !== undefined) {\n          accum[key] = value;\n        }\n\n        return accum;\n      }, {});\n    }\n    /**\n     * Sets text track settings from an object of values.\n     *\n     * @param {Object} values\n     *        An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.setValues = function setValues(values) {\n      var _this4 = this;\n\n      each(selectConfigs, function (config, key) {\n        setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n      });\n    }\n    /**\n     * Sets all `<select>` elements to their default values.\n     */\n    ;\n\n    _proto.setDefaults = function setDefaults() {\n      var _this5 = this;\n\n      each(selectConfigs, function (config) {\n        var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n        _this5.$(config.selector).selectedIndex = index;\n      });\n    }\n    /**\n     * Restore texttrack settings from localStorage\n     */\n    ;\n\n    _proto.restoreSettings = function restoreSettings() {\n      var values;\n\n      try {\n        values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n      } catch (err) {\n        log$1.warn(err);\n      }\n\n      if (values) {\n        this.setValues(values);\n      }\n    }\n    /**\n     * Save text track settings to localStorage\n     */\n    ;\n\n    _proto.saveSettings = function saveSettings() {\n      if (!this.options_.persistTextTrackSettings) {\n        return;\n      }\n\n      var values = this.getValues();\n\n      try {\n        if (Object.keys(values).length) {\n          window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n        } else {\n          window.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n        }\n      } catch (err) {\n        log$1.warn(err);\n      }\n    }\n    /**\n     * Update display of text track settings\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n      if (ttDisplay) {\n        ttDisplay.updateDisplay();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the captions button\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      this.previouslyActiveEl_ = null;\n      var cb = this.player_.controlBar;\n      var subsCapsBtn = cb && cb.subsCapsButton;\n      var ccBtn = cb && cb.captionsButton;\n\n      if (subsCapsBtn) {\n        subsCapsBtn.focus();\n      } else if (ccBtn) {\n        ccBtn.focus();\n      }\n    };\n\n    return TextTrackSettings;\n  }(ModalDialog);\n\n  Component$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n  /**\n   * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n   *\n   * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n   *\n   * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n   * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n   * @example <caption>How to disable the resize manager</caption>\n   * const player = videojs('#vid', {\n   *   resizeManager: false\n   * });\n   *\n   * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n   *\n   * @extends Component\n   */\n\n  var ResizeManager = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ResizeManager, _Component);\n\n    /**\n     * Create the ResizeManager.\n     *\n     * @param {Object} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of ResizeManager options.\n     *\n     * @param {Object} [options.ResizeObserver]\n     *        A polyfill for ResizeObserver can be passed in here.\n     *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n     */\n    function ResizeManager(player, options) {\n      var _this;\n\n      var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n      if (options.ResizeObserver === null) {\n        RESIZE_OBSERVER_AVAILABLE = false;\n      } // Only create an element when ResizeObserver isn't available\n\n\n      var options_ = mergeOptions$3({\n        createEl: !RESIZE_OBSERVER_AVAILABLE,\n        reportTouchActivity: false\n      }, options);\n      _this = _Component.call(this, player, options_) || this;\n      _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n      _this.loadListener_ = null;\n      _this.resizeObserver_ = null;\n      _this.debouncedHandler_ = debounce(function () {\n        _this.resizeHandler();\n      }, 100, false, assertThisInitialized(_this));\n\n      if (RESIZE_OBSERVER_AVAILABLE) {\n        _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n        _this.resizeObserver_.observe(player.el());\n      } else {\n        _this.loadListener_ = function () {\n          if (!_this.el_ || !_this.el_.contentWindow) {\n            return;\n          }\n\n          var debouncedHandler_ = _this.debouncedHandler_;\n\n          var unloadListener_ = _this.unloadListener_ = function () {\n            off(this, 'resize', debouncedHandler_);\n            off(this, 'unload', unloadListener_);\n            unloadListener_ = null;\n          }; // safari and edge can unload the iframe before resizemanager dispose\n          // we have to dispose of event handlers correctly before that happens\n\n\n          on(_this.el_.contentWindow, 'unload', unloadListener_);\n          on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n        };\n\n        _this.one('load', _this.loadListener_);\n      }\n\n      return _this;\n    }\n\n    var _proto = ResizeManager.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'iframe', {\n        className: 'vjs-resize-manager',\n        tabIndex: -1,\n        title: this.localize('No content')\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n     *\n     * @fires Player#playerresize\n     */\n    ;\n\n    _proto.resizeHandler = function resizeHandler() {\n      /**\n       * Called when the player size has changed\n       *\n       * @event Player#playerresize\n       * @type {EventTarget~Event}\n       */\n      // make sure player is still around to trigger\n      // prevents this from causing an error after dispose\n      if (!this.player_ || !this.player_.trigger) {\n        return;\n      }\n\n      this.player_.trigger('playerresize');\n    };\n\n    _proto.dispose = function dispose() {\n      if (this.debouncedHandler_) {\n        this.debouncedHandler_.cancel();\n      }\n\n      if (this.resizeObserver_) {\n        if (this.player_.el()) {\n          this.resizeObserver_.unobserve(this.player_.el());\n        }\n\n        this.resizeObserver_.disconnect();\n      }\n\n      if (this.loadListener_) {\n        this.off('load', this.loadListener_);\n      }\n\n      if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n        this.unloadListener_.call(this.el_.contentWindow);\n      }\n\n      this.ResizeObserver = null;\n      this.resizeObserver = null;\n      this.debouncedHandler_ = null;\n      this.loadListener_ = null;\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return ResizeManager;\n  }(Component$1);\n\n  Component$1.registerComponent('ResizeManager', ResizeManager);\n\n  var defaults = {\n    trackingThreshold: 20,\n    liveTolerance: 15\n  };\n  /*\n    track when we are at the live edge, and other helpers for live playback */\n\n  /**\n   * A class for checking live current time and determining when the player\n   * is at or behind the live edge.\n   */\n\n  var LiveTracker = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LiveTracker, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {number} [options.trackingThreshold=20]\n     *        Number of seconds of live window (seekableEnd - seekableStart) that\n     *        media needs to have before the liveui will be shown.\n     *\n     * @param {number} [options.liveTolerance=15]\n     *        Number of seconds behind live that we have to be\n     *        before we will be considered non-live. Note that this will only\n     *        be used when playing at the live edge. This allows large seekable end\n     *        changes to not effect wether we are live or not.\n     */\n    function LiveTracker(player, options) {\n      var _this;\n\n      // LiveTracker does not need an element\n      var options_ = mergeOptions$3(defaults, options, {\n        createEl: false\n      });\n      _this = _Component.call(this, player, options_) || this;\n\n      _this.handleVisibilityChange_ = function (e) {\n        return _this.handleVisibilityChange(e);\n      };\n\n      _this.trackLiveHandler_ = function () {\n        return _this.trackLive_();\n      };\n\n      _this.handlePlay_ = function (e) {\n        return _this.handlePlay(e);\n      };\n\n      _this.handleFirstTimeupdate_ = function (e) {\n        return _this.handleFirstTimeupdate(e);\n      };\n\n      _this.handleSeeked_ = function (e) {\n        return _this.handleSeeked(e);\n      };\n\n      _this.seekToLiveEdge_ = function (e) {\n        return _this.seekToLiveEdge(e);\n      };\n\n      _this.reset_();\n\n      _this.on(_this.player_, 'durationchange', function (e) {\n        return _this.handleDurationchange(e);\n      }); // we should try to toggle tracking on canplay as native playback engines, like Safari\n      // may not have the proper values for things like seekableEnd until then\n\n\n      _this.on(_this.player_, 'canplay', function () {\n        return _this.toggleTracking();\n      }); // we don't need to track live playback if the document is hidden,\n      // also, tracking when the document is hidden can\n      // cause the CPU to spike and eventually crash the page on IE11.\n\n\n      if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n        _this.on(document, 'visibilitychange', _this.handleVisibilityChange_);\n      }\n\n      return _this;\n    }\n    /**\n     * toggle tracking based on document visiblility\n     */\n\n\n    var _proto = LiveTracker.prototype;\n\n    _proto.handleVisibilityChange = function handleVisibilityChange() {\n      if (this.player_.duration() !== Infinity) {\n        return;\n      }\n\n      if (document.hidden) {\n        this.stopTracking();\n      } else {\n        this.startTracking();\n      }\n    }\n    /**\n     * all the functionality for tracking when seek end changes\n     * and for tracking how far past seek end we should be\n     */\n    ;\n\n    _proto.trackLive_ = function trackLive_() {\n      var seekable = this.player_.seekable(); // skip undefined seekable\n\n      if (!seekable || !seekable.length) {\n        return;\n      }\n\n      var newTime = Number(window.performance.now().toFixed(4));\n      var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n      this.lastTime_ = newTime;\n      this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n      var liveCurrentTime = this.liveCurrentTime();\n      var currentTime = this.player_.currentTime(); // we are behind live if any are true\n      // 1. the player is paused\n      // 2. the user seeked to a location 2 seconds away from live\n      // 3. the difference between live and current time is greater\n      //    liveTolerance which defaults to 15s\n\n      var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n      // 1. until we have not seen a timeupdate yet\n      // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n\n      if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n        isBehind = false;\n      }\n\n      if (isBehind !== this.behindLiveEdge_) {\n        this.behindLiveEdge_ = isBehind;\n        this.trigger('liveedgechange');\n      }\n    }\n    /**\n     * handle a durationchange event on the player\n     * and start/stop tracking accordingly.\n     */\n    ;\n\n    _proto.handleDurationchange = function handleDurationchange() {\n      this.toggleTracking();\n    }\n    /**\n     * start/stop tracking\n     */\n    ;\n\n    _proto.toggleTracking = function toggleTracking() {\n      if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n        if (this.player_.options_.liveui) {\n          this.player_.addClass('vjs-liveui');\n        }\n\n        this.startTracking();\n      } else {\n        this.player_.removeClass('vjs-liveui');\n        this.stopTracking();\n      }\n    }\n    /**\n     * start tracking live playback\n     */\n    ;\n\n    _proto.startTracking = function startTracking() {\n      if (this.isTracking()) {\n        return;\n      } // If we haven't seen a timeupdate, we need to check whether playback\n      // began before this component started tracking. This can happen commonly\n      // when using autoplay.\n\n\n      if (!this.timeupdateSeen_) {\n        this.timeupdateSeen_ = this.player_.hasStarted();\n      }\n\n      this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n      this.trackLive_();\n      this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n\n      if (!this.timeupdateSeen_) {\n        this.one(this.player_, 'play', this.handlePlay_);\n        this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      } else {\n        this.on(this.player_, 'seeked', this.handleSeeked_);\n      }\n    }\n    /**\n     * handle the first timeupdate on the player if it wasn't already playing\n     * when live tracker started tracking.\n     */\n    ;\n\n    _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n      this.timeupdateSeen_ = true;\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n    /**\n     * Keep track of what time a seek starts, and listen for seeked\n     * to find where a seek ends.\n     */\n    ;\n\n    _proto.handleSeeked = function handleSeeked() {\n      var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n      this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n      this.nextSeekedFromUser_ = false;\n      this.trackLive_();\n    }\n    /**\n     * handle the first play on the player, and make sure that we seek\n     * right to the live edge.\n     */\n    ;\n\n    _proto.handlePlay = function handlePlay() {\n      this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n    /**\n     * Stop tracking, and set all internal variables to\n     * their initial value.\n     */\n    ;\n\n    _proto.reset_ = function reset_() {\n      this.lastTime_ = -1;\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = -1;\n      this.behindLiveEdge_ = true;\n      this.timeupdateSeen_ = false;\n      this.seekedBehindLive_ = false;\n      this.nextSeekedFromUser_ = false;\n      this.clearInterval(this.trackingInterval_);\n      this.trackingInterval_ = null;\n      this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n      this.off(this.player_, 'seeked', this.handleSeeked_);\n      this.off(this.player_, 'play', this.handlePlay_);\n      this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n    /**\n     * The next seeked event is from the user. Meaning that any seek\n     * > 2s behind live will be considered behind live for real and\n     * liveTolerance will be ignored.\n     */\n    ;\n\n    _proto.nextSeekedFromUser = function nextSeekedFromUser() {\n      this.nextSeekedFromUser_ = true;\n    }\n    /**\n     * stop tracking live playback\n     */\n    ;\n\n    _proto.stopTracking = function stopTracking() {\n      if (!this.isTracking()) {\n        return;\n      }\n\n      this.reset_();\n      this.trigger('liveedgechange');\n    }\n    /**\n     * A helper to get the player seekable end\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The furthest seekable end or Infinity.\n     */\n    ;\n\n    _proto.seekableEnd = function seekableEnd() {\n      var seekable = this.player_.seekable();\n      var seekableEnds = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableEnds.push(seekable.end(i));\n      } // grab the furthest seekable end after sorting, or if there are none\n      // default to Infinity\n\n\n      return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n    }\n    /**\n     * A helper to get the player seekable start\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The earliest seekable start or 0.\n     */\n    ;\n\n    _proto.seekableStart = function seekableStart() {\n      var seekable = this.player_.seekable();\n      var seekableStarts = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableStarts.push(seekable.start(i));\n      } // grab the first seekable start after sorting, or if there are none\n      // default to 0\n\n\n      return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n    }\n    /**\n     * Get the live time window aka\n     * the amount of time between seekable start and\n     * live current time.\n     *\n     * @return {number}\n     *         The amount of seconds that are seekable in\n     *         the live video.\n     */\n    ;\n\n    _proto.liveWindow = function liveWindow() {\n      var liveCurrentTime = this.liveCurrentTime(); // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n\n      if (liveCurrentTime === Infinity) {\n        return 0;\n      }\n\n      return liveCurrentTime - this.seekableStart();\n    }\n    /**\n     * Determines if the player is live, only checks if this component\n     * is tracking live playback or not\n     *\n     * @return {boolean}\n     *         Wether liveTracker is tracking\n     */\n    ;\n\n    _proto.isLive = function isLive() {\n      return this.isTracking();\n    }\n    /**\n     * Determines if currentTime is at the live edge and won't fall behind\n     * on each seekableendchange\n     *\n     * @return {boolean}\n     *         Wether playback is at the live edge\n     */\n    ;\n\n    _proto.atLiveEdge = function atLiveEdge() {\n      return !this.behindLiveEdge();\n    }\n    /**\n     * get what we expect the live current time to be\n     *\n     * @return {number}\n     *         The expected live current time\n     */\n    ;\n\n    _proto.liveCurrentTime = function liveCurrentTime() {\n      return this.pastSeekEnd() + this.seekableEnd();\n    }\n    /**\n     * The number of seconds that have occured after seekable end\n     * changed. This will be reset to 0 once seekable end changes.\n     *\n     * @return {number}\n     *         Seconds past the current seekable end\n     */\n    ;\n\n    _proto.pastSeekEnd = function pastSeekEnd() {\n      var seekableEnd = this.seekableEnd();\n\n      if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n        this.pastSeekEnd_ = 0;\n      }\n\n      this.lastSeekEnd_ = seekableEnd;\n      return this.pastSeekEnd_;\n    }\n    /**\n     * If we are currently behind the live edge, aka currentTime will be\n     * behind on a seekableendchange\n     *\n     * @return {boolean}\n     *         If we are behind the live edge\n     */\n    ;\n\n    _proto.behindLiveEdge = function behindLiveEdge() {\n      return this.behindLiveEdge_;\n    }\n    /**\n     * Wether live tracker is currently tracking or not.\n     */\n    ;\n\n    _proto.isTracking = function isTracking() {\n      return typeof this.trackingInterval_ === 'number';\n    }\n    /**\n     * Seek to the live edge if we are behind the live edge\n     */\n    ;\n\n    _proto.seekToLiveEdge = function seekToLiveEdge() {\n      this.seekedBehindLive_ = false;\n\n      if (this.atLiveEdge()) {\n        return;\n      }\n\n      this.nextSeekedFromUser_ = false;\n      this.player_.currentTime(this.liveCurrentTime());\n    }\n    /**\n     * Dispose of liveTracker\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.off(document, 'visibilitychange', this.handleVisibilityChange_);\n      this.stopTracking();\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return LiveTracker;\n  }(Component$1);\n\n  Component$1.registerComponent('LiveTracker', LiveTracker);\n\n  /**\n   * This function is used to fire a sourceset when there is something\n   * similar to `mediaEl.load()` being called. It will try to find the source via\n   * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n   * with the source that was found or empty string if we cannot know. If it cannot\n   * find a source then `sourceset` will not be fired.\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset was setup on\n   *\n   * @return {boolean}\n   *         returns false if the sourceset was not fired and true otherwise.\n   */\n\n  var sourcesetLoad = function sourcesetLoad(tech) {\n    var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n    if (el.hasAttribute('src')) {\n      tech.triggerSourceset(el.src);\n      return true;\n    }\n    /**\n     * Since there isn't a src property on the media element, source elements will be used for\n     * implementing the source selection algorithm. This happens asynchronously and\n     * for most cases were there is more than one source we cannot tell what source will\n     * be loaded, without re-implementing the source selection algorithm. At this time we are not\n     * going to do that. There are three special cases that we do handle here though:\n     *\n     * 1. If there are no sources, do not fire `sourceset`.\n     * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n     * 3. If there is more than one `<source>` but all of them have the same `src` url.\n     *    That will be our src.\n     */\n\n\n    var sources = tech.$$('source');\n    var srcUrls = [];\n    var src = ''; // if there are no sources, do not fire sourceset\n\n    if (!sources.length) {\n      return false;\n    } // only count valid/non-duplicate source elements\n\n\n    for (var i = 0; i < sources.length; i++) {\n      var url = sources[i].src;\n\n      if (url && srcUrls.indexOf(url) === -1) {\n        srcUrls.push(url);\n      }\n    } // there were no valid sources\n\n\n    if (!srcUrls.length) {\n      return false;\n    } // there is only one valid source element url\n    // use that\n\n\n    if (srcUrls.length === 1) {\n      src = srcUrls[0];\n    }\n\n    tech.triggerSourceset(src);\n    return true;\n  };\n  /**\n   * our implementation of an `innerHTML` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n      dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n      var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      } // remove content\n\n\n      this.innerText = ''; // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n\n      window.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n      return this.innerHTML;\n    }\n  });\n  /**\n   * Get a property descriptor given a list of priorities and the\n   * property to get.\n   */\n\n  var getDescriptor = function getDescriptor(priority, prop) {\n    var descriptor = {};\n\n    for (var i = 0; i < priority.length; i++) {\n      descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n      if (descriptor && descriptor.set && descriptor.get) {\n        break;\n      }\n    }\n\n    descriptor.enumerable = true;\n    descriptor.configurable = true;\n    return descriptor;\n  };\n\n  var getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n    return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n  };\n  /**\n   * Patches browser internal functions so that we can tell synchronously\n   * if a `<source>` was appended to the media element. For some reason this\n   * causes a `sourceset` if the the media element is ready and has no source.\n   * This happens when:\n   * - The page has just loaded and the media element does not have a source.\n   * - The media element was emptied of all sources, then `load()` was called.\n   *\n   * It does this by patching the following functions/properties when they are supported:\n   *\n   * - `append()` - can be used to add a `<source>` element to the media element\n   * - `appendChild()` - can be used to add a `<source>` element to the media element\n   * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n   * - `innerHTML` -  can be used to add a `<source>` element to the media element\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset is being setup on.\n   */\n\n\n  var firstSourceWatch = function firstSourceWatch(tech) {\n    var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n    if (el.resetSourceWatch_) {\n      return;\n    }\n\n    var old = {};\n    var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n    var appendWrapper = function appendWrapper(appendFn) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var retval = appendFn.apply(el, args);\n        sourcesetLoad(tech);\n        return retval;\n      };\n    };\n\n    ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n      if (!el[k]) {\n        return;\n      } // store the old function\n\n\n      old[k] = el[k]; // call the old function with a sourceset if a source\n      // was loaded\n\n      el[k] = appendWrapper(old[k]);\n    });\n    Object.defineProperty(el, 'innerHTML', mergeOptions$3(innerDescriptor, {\n      set: appendWrapper(innerDescriptor.set)\n    }));\n\n    el.resetSourceWatch_ = function () {\n      el.resetSourceWatch_ = null;\n      Object.keys(old).forEach(function (k) {\n        el[k] = old[k];\n      });\n      Object.defineProperty(el, 'innerHTML', innerDescriptor);\n    }; // on the first sourceset, we need to revert our changes\n\n\n    tech.one('sourceset', el.resetSourceWatch_);\n  };\n  /**\n   * our implementation of a `src` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n      return v;\n    }\n  });\n\n  var getSrcDescriptor = function getSrcDescriptor(tech) {\n    return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n  };\n  /**\n   * setup `sourceset` handling on the `Html5` tech. This function\n   * patches the following element properties/functions:\n   *\n   * - `src` - to determine when `src` is set\n   * - `setAttribute()` - to determine when `src` is set\n   * - `load()` - this re-triggers the source selection algorithm, and can\n   *              cause a sourceset.\n   *\n   * If there is no source when we are adding `sourceset` support or during a `load()`\n   * we also patch the functions listed in `firstSourceWatch`.\n   *\n   * @param {Html5} tech\n   *        The tech to patch\n   */\n\n\n  var setupSourceset = function setupSourceset(tech) {\n    if (!tech.featuresSourceset) {\n      return;\n    }\n\n    var el = tech.el(); // make sure sourceset isn't setup twice.\n\n    if (el.resetSourceset_) {\n      return;\n    }\n\n    var srcDescriptor = getSrcDescriptor(tech);\n    var oldSetAttribute = el.setAttribute;\n    var oldLoad = el.load;\n    Object.defineProperty(el, 'src', mergeOptions$3(srcDescriptor, {\n      set: function set(v) {\n        var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n        tech.triggerSourceset(el.src);\n        return retval;\n      }\n    }));\n\n    el.setAttribute = function (n, v) {\n      var retval = oldSetAttribute.call(el, n, v);\n\n      if (/src/i.test(n)) {\n        tech.triggerSourceset(el.src);\n      }\n\n      return retval;\n    };\n\n    el.load = function () {\n      var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n      // sourceset on. We have to watch for a source append\n      // as that can trigger a `sourceset` when the media element\n      // has no source\n\n      if (!sourcesetLoad(tech)) {\n        tech.triggerSourceset('');\n        firstSourceWatch(tech);\n      }\n\n      return retval;\n    };\n\n    if (el.currentSrc) {\n      tech.triggerSourceset(el.currentSrc);\n    } else if (!sourcesetLoad(tech)) {\n      firstSourceWatch(tech);\n    }\n\n    el.resetSourceset_ = function () {\n      el.resetSourceset_ = null;\n      el.load = oldLoad;\n      el.setAttribute = oldSetAttribute;\n      Object.defineProperty(el, 'src', srcDescriptor);\n\n      if (el.resetSourceWatch_) {\n        el.resetSourceWatch_();\n      }\n    };\n  };\n\n  /**\n   * Object.defineProperty but \"lazy\", which means that the value is only set after\n   * it retrieved the first time, rather than being set right away.\n   *\n   * @param {Object} obj the object to set the property on\n   * @param {string} key the key for the property to set\n   * @param {Function} getValue the function used to get the value when it is needed.\n   * @param {boolean} setter wether a setter shoould be allowed or not\n   */\n  var defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n    if (setter === void 0) {\n      setter = true;\n    }\n\n    var set = function set(value) {\n      return Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        writable: true\n      });\n    };\n\n    var options = {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        var value = getValue();\n        set(value);\n        return value;\n      }\n    };\n\n    if (setter) {\n      options.set = set;\n    }\n\n    return Object.defineProperty(obj, key, options);\n  };\n\n  /**\n   * HTML5 Media Controller - Wrapper for HTML5 Media API\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   * @extends Tech\n   */\n\n  var Html5 = /*#__PURE__*/function (_Tech) {\n    inheritsLoose(Html5, _Tech);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Html5(options, ready) {\n      var _this;\n\n      _this = _Tech.call(this, options, ready) || this;\n      var source = options.source;\n      var crossoriginTracks = false;\n      _this.featuresVideoFrameCallback = _this.featuresVideoFrameCallback && _this.el_.tagName === 'VIDEO'; // Set the source if one is provided\n      // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n      // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n      // anyway so the error gets fired.\n\n      if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n        _this.setSource(source);\n      } else {\n        _this.handleLateInit_(_this.el_);\n      } // setup sourceset after late sourceset/init\n\n\n      if (options.enableSourceset) {\n        _this.setupSourcesetHandling_();\n      }\n\n      _this.isScrubbing_ = false;\n\n      if (_this.el_.hasChildNodes()) {\n        var nodes = _this.el_.childNodes;\n        var nodesLength = nodes.length;\n        var removeNodes = [];\n\n        while (nodesLength--) {\n          var node = nodes[nodesLength];\n          var nodeName = node.nodeName.toLowerCase();\n\n          if (nodeName === 'track') {\n            if (!_this.featuresNativeTextTracks) {\n              // Empty video tag tracks so the built-in player doesn't use them also.\n              // This may not be fast enough to stop HTML5 browsers from reading the tags\n              // so we'll need to turn off any default tracks if we're manually doing\n              // captions and subtitles. videoElement.textTracks\n              removeNodes.push(node);\n            } else {\n              // store HTMLTrackElement and TextTrack to remote list\n              _this.remoteTextTrackEls().addTrackElement_(node);\n\n              _this.remoteTextTracks().addTrack(node.track);\n\n              _this.textTracks().addTrack(node.track);\n\n              if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n                crossoriginTracks = true;\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < removeNodes.length; i++) {\n          _this.el_.removeChild(removeNodes[i]);\n        }\n      }\n\n      _this.proxyNativeTracks_();\n\n      if (_this.featuresNativeTextTracks && crossoriginTracks) {\n        log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n      } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n      _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n      // Our goal should be to get the custom controls on mobile solid everywhere\n      // so we can remove this all together. Right now this will block custom\n      // controls on touch enabled laptops like the Chrome Pixel\n\n\n      if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n        _this.setControls(true);\n      } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n      // into a `fullscreenchange` event\n\n\n      _this.proxyWebkitFullscreen_();\n\n      _this.triggerReady();\n\n      return _this;\n    }\n    /**\n     * Dispose of `HTML5` media element and remove all tracks.\n     */\n\n\n    var _proto = Html5.prototype;\n\n    _proto.dispose = function dispose() {\n      if (this.el_ && this.el_.resetSourceset_) {\n        this.el_.resetSourceset_();\n      }\n\n      Html5.disposeMediaElement(this.el_);\n      this.options_ = null; // tech will handle clearing of the emulated track list\n\n      _Tech.prototype.dispose.call(this);\n    }\n    /**\n     * Modify the media element so that we can detect when\n     * the source is changed. Fires `sourceset` just after the source has changed\n     */\n    ;\n\n    _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n      setupSourceset(this);\n    }\n    /**\n     * When a captions track is enabled in the iOS Safari native player, all other\n     * tracks are disabled (including metadata tracks), which nulls all of their\n     * associated cue points. This will restore metadata tracks to their pre-fullscreen\n     * state in those cases so that cue points are not needlessly lost.\n     *\n     * @private\n     */\n    ;\n\n    _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n      var textTracks = this.textTracks();\n      var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n      var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n        metadataTracksPreFullscreenState = [];\n\n        for (var i = 0; i < textTracks.length; i++) {\n          var track = textTracks[i];\n\n          if (track.kind === 'metadata') {\n            metadataTracksPreFullscreenState.push({\n              track: track,\n              storedMode: track.mode\n            });\n          }\n        }\n      }; // snapshot each metadata track's initial state, and update the snapshot\n      // each time there is a track 'change' event\n\n\n      takeMetadataTrackSnapshot();\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n      this.on('dispose', function () {\n        return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      });\n\n      var restoreTrackMode = function restoreTrackMode() {\n        for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n          var storedTrack = metadataTracksPreFullscreenState[i];\n\n          if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n            storedTrack.track.mode = storedTrack.storedMode;\n          }\n        } // we only want this handler to be executed on the first 'change' event\n\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      }; // when we enter fullscreen playback, stop updating the snapshot and\n      // restore all track modes to their pre-fullscreen state\n\n\n      this.on('webkitbeginfullscreen', function () {\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n        textTracks.addEventListener('change', restoreTrackMode);\n      }); // start updating the snapshot again after leaving fullscreen\n\n      this.on('webkitendfullscreen', function () {\n        // remove the listener before adding it just in case it wasn't previously removed\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n        textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      });\n    }\n    /**\n     * Attempt to force override of tracks for the given type\n     *\n     * @param {string} type - Track type to override, possible values include 'Audio',\n     * 'Video', and 'Text'.\n     * @param {boolean} override - If set to true native audio/video will be overridden,\n     * otherwise native audio/video will potentially be used.\n     * @private\n     */\n    ;\n\n    _proto.overrideNative_ = function overrideNative_(type, override) {\n      var _this2 = this;\n\n      // If there is no behavioral change don't add/remove listeners\n      if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n        return;\n      }\n\n      var lowerCaseType = type.toLowerCase();\n\n      if (this[lowerCaseType + \"TracksListeners_\"]) {\n        Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n          var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n          elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n        });\n      }\n\n      this[\"featuresNative\" + type + \"Tracks\"] = !override;\n      this[lowerCaseType + \"TracksListeners_\"] = null;\n      this.proxyNativeTracksForType_(lowerCaseType);\n    }\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n      this.overrideNative_('Audio', override);\n    }\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n      this.overrideNative_('Video', override);\n    }\n    /**\n     * Proxy native track list events for the given type to our track\n     * lists if the browser we are playing in supports that type of track list.\n     *\n     * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n      var _this3 = this;\n\n      var props = NORMAL[name];\n      var elTracks = this.el()[props.getterName];\n      var techTracks = this[props.getterName]();\n\n      if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n\n      var listeners = {\n        change: function change(e) {\n          var event = {\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          };\n          techTracks.trigger(event); // if we are a text track change event, we should also notify the\n          // remote text track list. This can potentially cause a false positive\n          // if we were to get a change event on a non-remote track and\n          // we triggered the event on the remote text track list which doesn't\n          // contain that track. However, best practices mean looping through the\n          // list of tracks and searching for the appropriate mode value, so,\n          // this shouldn't pose an issue\n\n          if (name === 'text') {\n            _this3[REMOTE.remoteText.getterName]().trigger(event);\n          }\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      this[props.getterName + 'Listeners_'] = listeners;\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n        elTracks.addEventListener(eventName, listener);\n\n        _this3.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      }); // Remove (native) tracks that are not used anymore\n\n      this.on('loadstart', removeOldTracks);\n      this.on('dispose', function (e) {\n        return _this3.off('loadstart', removeOldTracks);\n      });\n    }\n    /**\n     * Proxy all native track list events to our track lists if the browser we are playing\n     * in supports that type of track list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n      var _this4 = this;\n\n      NORMAL.names.forEach(function (name) {\n        _this4.proxyNativeTracksForType_(name);\n      });\n    }\n    /**\n     * Create the `Html5` Tech's DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n      // On the iPhone video will break if you move the element,\n      // So we have to create a brand new element.\n      // If we ingested the player div, we do not need to move the media element.\n\n      if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n        // If the original tag is still there, clone and remove it.\n        if (el) {\n          var clone = el.cloneNode(true);\n\n          if (el.parentNode) {\n            el.parentNode.insertBefore(clone, el);\n          }\n\n          Html5.disposeMediaElement(el);\n          el = clone;\n        } else {\n          el = document.createElement('video'); // determine if native controls should be used\n\n          var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n          var attributes = mergeOptions$3({}, tagAttributes);\n\n          if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n            delete attributes.controls;\n          }\n\n          setAttributes(el, assign(attributes, {\n            id: this.options_.techId,\n            \"class\": 'vjs-tech'\n          }));\n        }\n\n        el.playerId = this.options_.playerId;\n      }\n\n      if (typeof this.options_.preload !== 'undefined') {\n        setAttribute(el, 'preload', this.options_.preload);\n      }\n\n      if (this.options_.disablePictureInPicture !== undefined) {\n        el.disablePictureInPicture = this.options_.disablePictureInPicture;\n      } // Update specific tag settings, in case they were overridden\n      // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n      // when iOS/Safari or other browsers attempt to autoplay.\n\n\n      var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n      for (var i = 0; i < settingsAttrs.length; i++) {\n        var attr = settingsAttrs[i];\n        var value = this.options_[attr];\n\n        if (typeof value !== 'undefined') {\n          if (value) {\n            setAttribute(el, attr, attr);\n          } else {\n            removeAttribute(el, attr);\n          }\n\n          el[attr] = value;\n        }\n      }\n\n      return el;\n    }\n    /**\n     * This will be triggered if the loadstart event has already fired, before videojs was\n     * ready. Two known examples of when this can happen are:\n     * 1. If we're loading the playback object after it has started loading\n     * 2. The media is already playing the (often with autoplay on) then\n     *\n     * This function will fire another loadstart so that videojs can catchup.\n     *\n     * @fires Tech#loadstart\n     *\n     * @return {undefined}\n     *         returns nothing.\n     */\n    ;\n\n    _proto.handleLateInit_ = function handleLateInit_(el) {\n      if (el.networkState === 0 || el.networkState === 3) {\n        // The video element hasn't started loading the source yet\n        // or didn't find a source\n        return;\n      }\n\n      if (el.readyState === 0) {\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        var loadstartFired = false;\n\n        var setLoadstartFired = function setLoadstartFired() {\n          loadstartFired = true;\n        };\n\n        this.on('loadstart', setLoadstartFired);\n\n        var triggerLoadstart = function triggerLoadstart() {\n          // We did miss the original loadstart. Make sure the player\n          // sees loadstart before loadedmetadata\n          if (!loadstartFired) {\n            this.trigger('loadstart');\n          }\n        };\n\n        this.on('loadedmetadata', triggerLoadstart);\n        this.ready(function () {\n          this.off('loadstart', setLoadstartFired);\n          this.off('loadedmetadata', triggerLoadstart);\n\n          if (!loadstartFired) {\n            // We did miss the original native loadstart. Fire it now.\n            this.trigger('loadstart');\n          }\n        });\n        return;\n      } // From here on we know that loadstart already fired and we missed it.\n      // The other readyState events aren't as much of a problem if we double\n      // them, so not going to go to as much trouble as loadstart to prevent\n      // that unless we find reason to.\n\n\n      var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n      eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n      if (el.readyState >= 2) {\n        eventsToTrigger.push('loadeddata');\n      } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n      if (el.readyState >= 3) {\n        eventsToTrigger.push('canplay');\n      } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n      if (el.readyState >= 4) {\n        eventsToTrigger.push('canplaythrough');\n      } // We still need to give the player time to add event listeners\n\n\n      this.ready(function () {\n        eventsToTrigger.forEach(function (type) {\n          this.trigger(type);\n        }, this);\n      });\n    }\n    /**\n     * Set whether we are scrubbing or not.\n     * This is used to decide whether we should use `fastSeek` or not.\n     * `fastSeek` is used to provide trick play on Safari browsers.\n     *\n     * @param {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    ;\n\n    _proto.setScrubbing = function setScrubbing(isScrubbing) {\n      this.isScrubbing_ = isScrubbing;\n    }\n    /**\n     * Get whether we are scrubbing or not.\n     *\n     * @return {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing() {\n      return this.isScrubbing_;\n    }\n    /**\n     * Set current time for the `HTML5` tech.\n     *\n     * @param {number} seconds\n     *        Set the current time of the media to this.\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(seconds) {\n      try {\n        if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n          this.el_.fastSeek(seconds);\n        } else {\n          this.el_.currentTime = seconds;\n        }\n      } catch (e) {\n        log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n      }\n    }\n    /**\n     * Get the current duration of the HTML5 media element.\n     *\n     * @return {number}\n     *         The duration of the media or 0 if there is no duration.\n     */\n    ;\n\n    _proto.duration = function duration() {\n      var _this5 = this;\n\n      // Android Chrome will report duration as Infinity for VOD HLS until after\n      // playback has started, which triggers the live display erroneously.\n      // Return NaN if playback has not started and trigger a durationupdate once\n      // the duration can be reliably known.\n      if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n        // Wait for the first `timeupdate` with currentTime > 0 - there may be\n        // several with 0\n        var checkProgress = function checkProgress() {\n          if (_this5.el_.currentTime > 0) {\n            // Trigger durationchange for genuinely live video\n            if (_this5.el_.duration === Infinity) {\n              _this5.trigger('durationchange');\n            }\n\n            _this5.off('timeupdate', checkProgress);\n          }\n        };\n\n        this.on('timeupdate', checkProgress);\n        return NaN;\n      }\n\n      return this.el_.duration || NaN;\n    }\n    /**\n     * Get the current width of the HTML5 media element.\n     *\n     * @return {number}\n     *         The width of the HTML5 media element.\n     */\n    ;\n\n    _proto.width = function width() {\n      return this.el_.offsetWidth;\n    }\n    /**\n     * Get the current height of the HTML5 media element.\n     *\n     * @return {number}\n     *         The height of the HTML5 media element.\n     */\n    ;\n\n    _proto.height = function height() {\n      return this.el_.offsetHeight;\n    }\n    /**\n     * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n     * `fullscreenchange` event.\n     *\n     * @private\n     * @fires fullscreenchange\n     * @listens webkitendfullscreen\n     * @listens webkitbeginfullscreen\n     * @listens webkitbeginfullscreen\n     */\n    ;\n\n    _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n      var _this6 = this;\n\n      if (!('webkitDisplayingFullscreen' in this.el_)) {\n        return;\n      }\n\n      var endFn = function endFn() {\n        this.trigger('fullscreenchange', {\n          isFullscreen: false\n        }); // Safari will sometimes set contols on the videoelement when existing fullscreen.\n\n        if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n          this.el_.controls = false;\n        }\n      };\n\n      var beginFn = function beginFn() {\n        if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n          this.one('webkitendfullscreen', endFn);\n          this.trigger('fullscreenchange', {\n            isFullscreen: true,\n            // set a flag in case another tech triggers fullscreenchange\n            nativeIOSFullscreen: true\n          });\n        }\n      };\n\n      this.on('webkitbeginfullscreen', beginFn);\n      this.on('dispose', function () {\n        _this6.off('webkitbeginfullscreen', beginFn);\n\n        _this6.off('webkitendfullscreen', endFn);\n      });\n    }\n    /**\n     * Check if fullscreen is supported on the current playback device.\n     *\n     * @return {boolean}\n     *         - True if fullscreen is supported.\n     *         - False if fullscreen is not supported.\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      if (typeof this.el_.webkitEnterFullScreen === 'function') {\n        var userAgent = window.navigator && window.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n        if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Request that the `HTML5` Tech enter fullscreen.\n     */\n    ;\n\n    _proto.enterFullScreen = function enterFullScreen() {\n      var video = this.el_;\n\n      if (video.paused && video.networkState <= video.HAVE_METADATA) {\n        // attempt to prime the video element for programmatic access\n        // this isn't necessary on the desktop but shouldn't hurt\n        silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n        // can get iOS ~6.1 devices into a play/pause loop\n\n        this.setTimeout(function () {\n          video.pause();\n\n          try {\n            video.webkitEnterFullScreen();\n          } catch (e) {\n            this.trigger('fullscreenerror', e);\n          }\n        }, 0);\n      } else {\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }\n    }\n    /**\n     * Request that the `HTML5` Tech exit fullscreen.\n     */\n    ;\n\n    _proto.exitFullScreen = function exitFullScreen() {\n      if (!this.el_.webkitDisplayingFullscreen) {\n        this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n        return;\n      }\n\n      this.el_.webkitExitFullScreen();\n    }\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      return this.el_.requestPictureInPicture();\n    }\n    /**\n     * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n     * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n     * Needs to be checked later than the constructor\n     * This will be a false positive for clear sources loaded after a Fairplay source\n     *\n     * @param {function} cb function to call\n     * @return {number} id of request\n     */\n    ;\n\n    _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n      if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n        return this.el_.requestVideoFrameCallback(cb);\n      }\n\n      return _Tech.prototype.requestVideoFrameCallback.call(this, cb);\n    }\n    /**\n     * Native or fallback requestVideoFrameCallback\n     *\n     * @param {number} id request id to cancel\n     */\n    ;\n\n    _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n      if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n        this.el_.cancelVideoFrameCallback(id);\n      } else {\n        _Tech.prototype.cancelVideoFrameCallback.call(this, id);\n      }\n    }\n    /**\n     * A getter/setter for the `Html5` Tech's source object.\n     * > Note: Please use {@link Html5#setSource}\n     *\n     * @param {Tech~SourceObject} [src]\n     *        The source object you want to set on the `HTML5` techs element.\n     *\n     * @return {Tech~SourceObject|undefined}\n     *         - The current source object when a source is not passed in.\n     *         - undefined when setting\n     *\n     * @deprecated Since version 5.\n     */\n    ;\n\n    _proto.src = function src(_src) {\n      if (_src === undefined) {\n        return this.el_.src;\n      } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n      this.setSrc(_src);\n    }\n    /**\n     * Reset the tech by removing all sources and then calling\n     * {@link Html5.resetMediaElement}.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      Html5.resetMediaElement(this.el_);\n    }\n    /**\n     * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n     * the HTML5 media element.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object from the HTML5 tech. With a fallback to the\n     *         elements source.\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      if (this.currentSource_) {\n        return this.currentSource_.src;\n      }\n\n      return this.el_.currentSrc;\n    }\n    /**\n     * Set controls attribute for the HTML5 media Element.\n     *\n     * @param {string} val\n     *        Value to set the controls attribute to\n     */\n    ;\n\n    _proto.setControls = function setControls(val) {\n      this.el_.controls = !!val;\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n      }\n\n      return this.el_.addTextTrack(kind, label, language);\n    }\n    /**\n     * Creates either native TextTrack or an emulated TextTrack depending\n     * on the value of `featuresNativeTextTracks`\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label]\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @param {boolean} [options.default]\n     *        Default this track to on.\n     *\n     * @param {string} [options.id]\n     *        The internal id to assign this track.\n     *\n     * @param {string} [options.src]\n     *        A source url for the track.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.createRemoteTextTrack.call(this, options);\n      }\n\n      var htmlTrackElement = document.createElement('track');\n\n      if (options.kind) {\n        htmlTrackElement.kind = options.kind;\n      }\n\n      if (options.label) {\n        htmlTrackElement.label = options.label;\n      }\n\n      if (options.language || options.srclang) {\n        htmlTrackElement.srclang = options.language || options.srclang;\n      }\n\n      if (options[\"default\"]) {\n        htmlTrackElement[\"default\"] = options[\"default\"];\n      }\n\n      if (options.id) {\n        htmlTrackElement.id = options.id;\n      }\n\n      if (options.src) {\n        htmlTrackElement.src = options.src;\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * @param {Object} options The object should contain values for\n     * kind, language, label, and src (location of the WebVTT file)\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     * automatically removed from the video element whenever the source changes\n     * @return {HTMLTrackElement} An Html Track Element.\n     * This can be an emulated {@link HTMLTrackElement} or a native one.\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     * to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n      if (this.featuresNativeTextTracks) {\n        this.el().appendChild(htmlTrackElement);\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove remote `TextTrack` from `TextTrackList` object\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` object to remove\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n      if (this.featuresNativeTextTracks) {\n        var tracks = this.$$('track');\n        var i = tracks.length;\n\n        while (i--) {\n          if (track === tracks[i] || track === tracks[i].track) {\n            this.el().removeChild(tracks[i]);\n          }\n        }\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      if (typeof this.el().getVideoPlaybackQuality === 'function') {\n        return this.el().getVideoPlaybackQuality();\n      }\n\n      var videoPlaybackQuality = {};\n\n      if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n        videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n        videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n      }\n\n      if (window.performance && typeof window.performance.now === 'function') {\n        videoPlaybackQuality.creationTime = window.performance.now();\n      } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n        videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n      }\n\n      return videoPlaybackQuality;\n    };\n\n    return Html5;\n  }(Tech);\n  /* HTML5 Support Testing ---------------------------------------------------- */\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n\n\n  defineLazyProperty(Html5, 'TEST_VID', function () {\n    if (!isReal()) {\n      return;\n    }\n\n    var video = document.createElement('video');\n    var track = document.createElement('track');\n    track.kind = 'captions';\n    track.srclang = 'en';\n    track.label = 'English';\n    video.appendChild(track);\n    return video;\n  });\n  /**\n   * Check if HTML5 media is supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if HTML5 media is supported.\n   *         - False if HTML5 media is not supported.\n   */\n\n  Html5.isSupported = function () {\n    // IE with no Media Player is a LIAR! (#984)\n    try {\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n\n    return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n  };\n  /**\n   * Check if the tech can support the given type\n   *\n   * @param {string} type\n   *        The mimetype to check\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlayType = function (type) {\n    return Html5.TEST_VID.canPlayType(type);\n  };\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlaySource = function (srcObj, options) {\n    return Html5.canPlayType(srcObj.type);\n  };\n  /**\n   * Check if the volume can be changed in this browser/device.\n   * Volume cannot be changed in a lot of mobile devices.\n   * Specifically, it can't be changed from 1 on iOS.\n   *\n   * @return {boolean}\n   *         - True if volume can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlVolume = function () {\n    // IE will error if Windows Media Player not installed #3315\n    try {\n      var volume = Html5.TEST_VID.volume;\n      Html5.TEST_VID.volume = volume / 2 + 0.1;\n      var canControl = volume !== Html5.TEST_VID.volume; // With the introduction of iOS 15, there are cases where the volume is read as\n      // changed but reverts back to its original state at the start of the next tick.\n      // To determine whether volume can be controlled on iOS,\n      // a timeout is set and the volume is checked asynchronously.\n      // Since `features` doesn't currently work asynchronously, the value is manually set.\n\n      if (canControl && IS_IOS) {\n        window.setTimeout(function () {\n          if (Html5 && Html5.prototype) {\n            Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n          }\n        }); // default iOS to false, which will be updated in the timeout above.\n\n        return false;\n      }\n\n      return canControl;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the volume can be muted in this browser/device.\n   * Some devices, e.g. iOS, don't allow changing volume\n   * but permits muting/unmuting.\n   *\n   * @return {bolean}\n   *      - True if volume can be muted\n   *      - False otherwise\n   */\n\n\n  Html5.canMuteVolume = function () {\n    try {\n      var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n      // work, so we want to set both property and attribute\n\n      Html5.TEST_VID.muted = !muted;\n\n      if (Html5.TEST_VID.muted) {\n        setAttribute(Html5.TEST_VID, 'muted', 'muted');\n      } else {\n        removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n      }\n\n      return muted !== Html5.TEST_VID.muted;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the playback rate can be changed in this browser/device.\n   *\n   * @return {boolean}\n   *         - True if playback rate can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlPlaybackRate = function () {\n    // Playback rate API is implemented in Android Chrome, but doesn't do anything\n    // https://github.com/videojs/video.js/issues/3180\n    if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n      return false;\n    } // IE will error if Windows Media Player not installed #3315\n\n\n    try {\n      var playbackRate = Html5.TEST_VID.playbackRate;\n      Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n      return playbackRate !== Html5.TEST_VID.playbackRate;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if we can override a video/audio elements attributes, with\n   * Object.defineProperty.\n   *\n   * @return {boolean}\n   *         - True if builtin attributes can be overridden\n   *         - False otherwise\n   */\n\n\n  Html5.canOverrideAttributes = function () {\n    // if we cannot overwrite the src/innerHTML property, there is no support\n    // iOS 7 safari for instance cannot do this.\n    try {\n      var noop = function noop() {};\n\n      Object.defineProperty(document.createElement('video'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('video'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Check to see if native `TextTrack`s are supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if native `TextTrack`s are supported.\n   *         - False otherwise\n   */\n\n\n  Html5.supportsNativeTextTracks = function () {\n    return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n  };\n  /**\n   * Check to see if native `VideoTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `VideoTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeVideoTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n  };\n  /**\n   * Check to see if native `AudioTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `AudioTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeAudioTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n  };\n  /**\n   * An array of events available on the Html5 tech.\n   *\n   * @private\n   * @type {Array}\n   */\n\n\n  Html5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default {@link Html5.canMuteVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the media\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlPlaybackRate}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeTextTracks}\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeVideoTracks}\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeAudioTracks}\n   */\n\n  [['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n    var key = _ref[0],\n        fn = _ref[1];\n    defineLazyProperty(Html5.prototype, key, function () {\n      return Html5[fn]();\n    }, true);\n  });\n  Html5.prototype.featuresVolumeControl = Html5.canControlVolume();\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the media element\n   * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n   * false there. Everywhere else this should be true.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n  //       Is this true?\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n   * when going into fullscreen.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresFullscreenResize = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n   * If this is false, manual `progress` events will be triggered instead.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresProgressEvents = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n   * If this is false, manual `timeupdate` events will be triggered instead.\n   *\n   * @default\n   */\n\n  Html5.prototype.featuresTimeupdateEvents = true;\n  /**\n   * Whether the HTML5 el supports `requestVideoFrameCallback`\n   *\n   * @type {boolean}\n   */\n\n  Html5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\n  var canPlayType;\n\n  Html5.patchCanPlayType = function () {\n    // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n    // Firefox and Chrome report correctly\n    if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n      canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n      Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n        var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n        if (type && mpegurlRE.test(type)) {\n          return 'maybe';\n        }\n\n        return canPlayType.call(this, type);\n      };\n    }\n  };\n\n  Html5.unpatchCanPlayType = function () {\n    var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    if (canPlayType) {\n      Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n    }\n\n    return r;\n  }; // by default, patch the media element\n\n\n  Html5.patchCanPlayType();\n\n  Html5.disposeMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    } // remove any child track or source nodes to prevent their loading\n\n\n    while (el.hasChildNodes()) {\n      el.removeChild(el.firstChild);\n    } // remove any src reference. not setting `src=''` because that causes a warning\n    // in firefox\n\n\n    el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n    // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// not supported\n        }\n      })();\n    }\n  };\n\n  Html5.resetMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    var sources = el.querySelectorAll('source');\n    var i = sources.length;\n\n    while (i--) {\n      el.removeChild(sources[i]);\n    } // remove any src reference.\n    // not setting `src=''` because that throws an error\n\n\n    el.removeAttribute('src');\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// satisfy linter\n        }\n      })();\n    }\n  };\n  /* Native HTML5 element property wrapping ----------------------------------- */\n  // Wrap native boolean attributes with getters that check both property and attribute\n  // The list is as followed:\n  // muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n  [\n  /**\n   * Get the value of `muted` from the media element. `muted` indicates\n   * that the volume for the media should be set to silent. This does not actually change\n   * the `volume` attribute.\n   *\n   * @method Html5#muted\n   * @return {boolean}\n   *         - True if the value of `volume` should be ignored and the audio set to silent.\n   *         - False if the value of `volume` should be used.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n   * whether the media should start muted or not. Only changes the default state of the\n   * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n   * current state.\n   *\n   * @method Html5#defaultMuted\n   * @return {boolean}\n   *         - The value of `defaultMuted` from the media element.\n   *         - True indicates that the media should start muted.\n   *         - False indicates that the media should not start muted\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Get the value of `autoplay` from the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#autoplay\n   * @return {boolean}\n   *         - The value of `autoplay` from the media element.\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Get the value of `controls` from the media element. `controls` indicates\n   * whether the native media controls should be shown or hidden.\n   *\n   * @method Html5#controls\n   * @return {boolean}\n   *         - The value of `controls` from the media element.\n   *         - True indicates that native controls should be showing.\n   *         - False indicates that native controls should be hidden.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n   */\n  'controls',\n  /**\n   * Get the value of `loop` from the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#loop\n   * @return {boolean}\n   *         - The value of `loop` from the media element.\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Get the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#playsinline\n   * @return {boolean}\n   *         - The value of `playsinline` from the media element.\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop] || this.el_.hasAttribute(prop);\n    };\n  }); // Wrap native boolean attributes with setters that set both property and attribute\n  // The list is as followed:\n  // setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n  // setControls is special-cased above\n\n  [\n  /**\n   * Set the value of `muted` on the media element. `muted` indicates that the current\n   * audio level should be silent.\n   *\n   * @method Html5#setMuted\n   * @param {boolean} muted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n   * audio level should be silent, but will only effect the muted level on initial playback..\n   *\n   * @method Html5.prototype.setDefaultMuted\n   * @param {boolean} defaultMuted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Set the value of `autoplay` on the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#setAutoplay\n   * @param {boolean} autoplay\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Set the value of `loop` on the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#setLoop\n   * @param {boolean} loop\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Set the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#setPlaysinline\n   * @param {boolean} playsinline\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n\n      if (v) {\n        this.el_.setAttribute(prop, prop);\n      } else {\n        this.el_.removeAttribute(prop);\n      }\n    };\n  }); // Wrap native properties with a getter\n  // The list is as followed\n  // paused, currentTime, buffered, volume, poster, preload, error, seeking\n  // seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n  // played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n  [\n  /**\n   * Get the value of `paused` from the media element. `paused` indicates whether the media element\n   * is currently paused or not.\n   *\n   * @method Html5#paused\n   * @return {boolean}\n   *         The value of `paused` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n   */\n  'paused',\n  /**\n   * Get the value of `currentTime` from the media element. `currentTime` indicates\n   * the current second that the media is at in playback.\n   *\n   * @method Html5#currentTime\n   * @return {number}\n   *         The value of `currentTime` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n   */\n  'currentTime',\n  /**\n   * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n   * object that represents the parts of the media that are already downloaded and\n   * available for playback.\n   *\n   * @method Html5#buffered\n   * @return {TimeRange}\n   *         The value of `buffered` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n   */\n  'buffered',\n  /**\n   * Get the value of `volume` from the media element. `volume` indicates\n   * the current playback volume of audio for a media. `volume` will be a value from 0\n   * (silent) to 1 (loudest and default).\n   *\n   * @method Html5#volume\n   * @return {number}\n   *         The value of `volume` from the media element. Value will be between 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Get the value of `poster` from the media element. `poster` indicates\n   * that the url of an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#poster\n   * @return {string}\n   *         The value of `poster` from the media element. Value will be a url to an\n   *         image.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n   */\n  'poster',\n  /**\n   * Get the value of `preload` from the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#preload\n   * @return {string}\n   *         The value of `preload` from the media element. Will be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Get the value of the `error` from the media element. `error` indicates any\n   * MediaError that may have occurred during playback. If error returns null there is no\n   * current error.\n   *\n   * @method Html5#error\n   * @return {MediaError|null}\n   *         The value of `error` from the media element. Will be `MediaError` if there\n   *         is a current error and null otherwise.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n   */\n  'error',\n  /**\n   * Get the value of `seeking` from the media element. `seeking` indicates whether the\n   * media is currently seeking to a new position or not.\n   *\n   * @method Html5#seeking\n   * @return {boolean}\n   *         - The value of `seeking` from the media element.\n   *         - True indicates that the media is currently seeking to a new position.\n   *         - False indicates that the media is not seeking to a new position at this time.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n   */\n  'seeking',\n  /**\n   * Get the value of `seekable` from the media element. `seekable` returns a\n   * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n   *\n   * @method Html5#seekable\n   * @return {TimeRange}\n   *         The value of `seekable` from the media element. A `TimeRange` object\n   *         indicating the current ranges of time that can be seeked to.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n   */\n  'seekable',\n  /**\n   * Get the value of `ended` from the media element. `ended` indicates whether\n   * the media has reached the end or not.\n   *\n   * @method Html5#ended\n   * @return {boolean}\n   *         - The value of `ended` from the media element.\n   *         - True indicates that the media has ended.\n   *         - False indicates that the media has not ended.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n   */\n  'ended',\n  /**\n   * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n   * the rate at which the media is currently playing back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#playbackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media is currently playing back. This value will not indicate the current\n   * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n   *\n   * Examples:\n   *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n   *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.defaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Get the value of 'disablePictureInPicture' from the video element.\n   *\n   * @method Html5#disablePictureInPicture\n   * @return {boolean} value\n   *         - The value of `disablePictureInPicture` from the video element.\n   *         - True indicates that the video can't be played in Picture-In-Picture mode\n   *         - False indicates that the video can be played in Picture-In-Picture mode\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Get the value of `played` from the media element. `played` returns a `TimeRange`\n   * object representing points in the media timeline that have been played.\n   *\n   * @method Html5#played\n   * @return {TimeRange}\n   *         The value of `played` from the media element. A `TimeRange` object indicating\n   *         the ranges of time that have been played.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n   */\n  'played',\n  /**\n   * Get the value of `networkState` from the media element. `networkState` indicates\n   * the current network state. It returns an enumeration from the following list:\n   * - 0: NETWORK_EMPTY\n   * - 1: NETWORK_IDLE\n   * - 2: NETWORK_LOADING\n   * - 3: NETWORK_NO_SOURCE\n   *\n   * @method Html5#networkState\n   * @return {number}\n   *         The value of `networkState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n   */\n  'networkState',\n  /**\n   * Get the value of `readyState` from the media element. `readyState` indicates\n   * the current state of the media element. It returns an enumeration from the\n   * following list:\n   * - 0: HAVE_NOTHING\n   * - 1: HAVE_METADATA\n   * - 2: HAVE_CURRENT_DATA\n   * - 3: HAVE_FUTURE_DATA\n   * - 4: HAVE_ENOUGH_DATA\n   *\n   * @method Html5#readyState\n   * @return {number}\n   *         The value of `readyState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n   */\n  'readyState',\n  /**\n   * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n   * the current width of the video in css pixels.\n   *\n   * @method Html5#videoWidth\n   * @return {number}\n   *         The value of `videoWidth` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoWidth',\n  /**\n   * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n   * the current height of the video in css pixels.\n   *\n   * @method Html5#videoHeight\n   * @return {number}\n   *         The value of `videoHeight` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoHeight',\n  /**\n   * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#crossOrigin\n   * @return {string}\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop];\n    };\n  }); // Wrap native properties with a setter in this format:\n  // set + toTitleCase(name)\n  // The list is as follows:\n  // setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n  // setDisablePictureInPicture, setCrossOrigin\n\n  [\n  /**\n   * Set the value of `volume` on the media element. `volume` indicates the current\n   * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n   * so on.\n   *\n   * @method Html5#setVolume\n   * @param {number} percentAsDecimal\n   *        The volume percent as a decimal. Valid range is from 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Set the value of `src` on the media element. `src` indicates the current\n   * {@link Tech~SourceObject} for the media.\n   *\n   * @method Html5#setSrc\n   * @param {Tech~SourceObject} src\n   *        The source object to set as the current source.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n   */\n  'src',\n  /**\n   * Set the value of `poster` on the media element. `poster` is the url to\n   * an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#setPoster\n   * @param {string} poster\n   *        The url to an image that should be used as the `poster` for the media\n   *        element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n   */\n  'poster',\n  /**\n   * Set the value of `preload` on the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#setPreload\n   * @param {string} preload\n   *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n   * the rate at which the media should play back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#setPlaybackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media should play back upon initial startup. Changing this value\n   * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n   *\n   * Example Values:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.setDefaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Prevents the browser from suggesting a Picture-in-Picture context menu\n   * or to request Picture-in-Picture automatically in some cases.\n   *\n   * @method Html5#setDisablePictureInPicture\n   * @param {boolean} value\n   *         The true value will disable Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#setCrossOrigin\n   * @param {string} crossOrigin\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n    };\n  }); // wrap native functions with a function\n  // The list is as follows:\n  // pause, load, play\n\n  [\n  /**\n   * A wrapper around the media elements `pause` function. This will call the `HTML5`\n   * media elements `pause` function.\n   *\n   * @method Html5#pause\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n   */\n  'pause',\n  /**\n   * A wrapper around the media elements `load` function. This will call the `HTML5`s\n   * media element `load` function.\n   *\n   * @method Html5#load\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n   */\n  'load',\n  /**\n   * A wrapper around the media elements `play` function. This will call the `HTML5`s\n   * media element `play` function.\n   *\n   * @method Html5#play\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n   */\n  'play'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop]();\n    };\n  });\n  Tech.withSourceHandlers(Html5);\n  /**\n   * Native source handler for Html5, simply passes the source to the media element.\n   *\n   * @property {Tech~SourceObject} source\n   *        The source object\n   *\n   * @property {Html5} tech\n   *        The instance of the HTML5 tech.\n   */\n\n  Html5.nativeSourceHandler = {};\n  /**\n   * Check if the media element can play the given mime type.\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n  Html5.nativeSourceHandler.canPlayType = function (type) {\n    // IE without MediaPlayer throws an error (#519)\n    try {\n      return Html5.TEST_VID.canPlayType(type);\n    } catch (e) {\n      return '';\n    }\n  };\n  /**\n   * Check if the media element can handle a source natively.\n   *\n   * @param {Tech~SourceObject} source\n   *         The source object\n   *\n   * @param {Object} [options]\n   *         Options to be passed to the tech.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string).\n   */\n\n\n  Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n    // If a type was provided we should rely on that\n    if (source.type) {\n      return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n    } else if (source.src) {\n      var ext = getFileExtension(source.src);\n      return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n    }\n\n    return '';\n  };\n  /**\n   * Pass the source to the native media element.\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Html5} tech\n   *        The instance of the Html5 tech\n   *\n   * @param {Object} [options]\n   *        The options to pass to the source\n   */\n\n\n  Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n    tech.setSrc(source.src);\n  };\n  /**\n   * A noop for the native dispose function, as cleanup is not needed.\n   */\n\n\n  Html5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\n  Html5.registerSourceHandler(Html5.nativeSourceHandler);\n  Tech.registerTech('Html5', Html5);\n\n  // on the player when they happen\n\n  var TECH_EVENTS_RETRIGGER = [\n  /**\n   * Fired while the user agent is downloading media data.\n   *\n   * @event Player#progress\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `progress` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechProgress_\n   * @fires Player#progress\n   * @listens Tech#progress\n   */\n  'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted.\n   *\n   * @event Player#abort\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `abort` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechAbort_\n   * @fires Player#abort\n   * @listens Tech#abort\n   */\n  'abort',\n  /**\n   * Fires when the browser is intentionally not getting media data.\n   *\n   * @event Player#suspend\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechSuspend_\n   * @fires Player#suspend\n   * @listens Tech#suspend\n   */\n  'suspend',\n  /**\n   * Fires when the current playlist is empty.\n   *\n   * @event Player#emptied\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechEmptied_\n   * @fires Player#emptied\n   * @listens Tech#emptied\n   */\n  'emptied',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available.\n   *\n   * @event Player#stalled\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechStalled_\n   * @fires Player#stalled\n   * @listens Tech#stalled\n   */\n  'stalled',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video.\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoadedmetadata_\n   * @fires Player#loadedmetadata\n   * @listens Tech#loadedmetadata\n   */\n  'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video.\n   *\n   * @event Player#loadeddata\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoaddeddata_\n   * @fires Player#loadeddata\n   * @listens Tech#loadeddata\n   */\n  'loadeddata',\n  /**\n   * Fires when the current playback position has changed.\n   *\n   * @event Player#timeupdate\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTimeUpdate_\n   * @fires Player#timeupdate\n   * @listens Tech#timeupdate\n   */\n  'timeupdate',\n  /**\n   * Fires when the video's intrinsic dimensions change\n   *\n   * @event Player#resize\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `resize` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechResize_\n   * @fires Player#resize\n   * @listens Tech#resize\n   */\n  'resize',\n  /**\n   * Fires when the volume has been changed\n   *\n   * @event Player#volumechange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechVolumechange_\n   * @fires Player#volumechange\n   * @listens Tech#volumechange\n   */\n  'volumechange',\n  /**\n   * Fires when the text track has been changed\n   *\n   * @event Player#texttrackchange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTexttrackchange_\n   * @fires Player#texttrackchange\n   * @listens Tech#texttrackchange\n   */\n  'texttrackchange']; // events to queue when playback rate is zero\n  // this is a hash for the sole purpose of mapping non-camel-cased event names\n  // to camel-cased function names\n\n  var TECH_EVENTS_QUEUE = {\n    canplay: 'CanPlay',\n    canplaythrough: 'CanPlayThrough',\n    playing: 'Playing',\n    seeked: 'Seeked'\n  };\n  var BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\n  var BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n  // grep: vjs-layout-x-small\n  // grep: vjs-layout-small\n  // grep: vjs-layout-medium\n  // grep: vjs-layout-large\n  // grep: vjs-layout-x-large\n  // grep: vjs-layout-huge\n\n  BREAKPOINT_ORDER.forEach(function (k) {\n    var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n    BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n  });\n  var DEFAULT_BREAKPOINTS = {\n    tiny: 210,\n    xsmall: 320,\n    small: 425,\n    medium: 768,\n    large: 1440,\n    xlarge: 2560,\n    huge: Infinity\n  };\n  /**\n   * An instance of the `Player` class is created when any of the Video.js setup methods\n   * are used to initialize a video.\n   *\n   * After an instance has been created it can be accessed globally in two ways:\n   * 1. By calling `videojs('example_video_1');`\n   * 2. By using it directly via  `videojs.players.example_video_1;`\n   *\n   * @extends Component\n   */\n\n  var Player = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Player, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Element} tag\n     *        The original video DOM element used for configuring options.\n     *\n     * @param {Object} [options]\n     *        Object of option names and values.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Ready callback function.\n     */\n    function Player(tag, options, ready) {\n      var _this;\n\n      // Make sure tag ID exists\n      tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n      // The options argument overrides options set in the video tag\n      // which overrides globally set options.\n      // This latter part coincides with the load order\n      // (tag must exist before Player)\n\n      options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n      // player properties first, and can't use `this` before `super()`\n\n      options.initChildren = false; // Same with creating the element\n\n      options.createEl = false; // don't auto mixin the evented mixin\n\n      options.evented = false; // we don't want the player to report touch activity on itself\n      // see enableTouchActivity in Component\n\n      options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n      if (!options.language) {\n        if (typeof tag.closest === 'function') {\n          var closest = tag.closest('[lang]');\n\n          if (closest && closest.getAttribute) {\n            options.language = closest.getAttribute('lang');\n          }\n        } else {\n          var element = tag;\n\n          while (element && element.nodeType === 1) {\n            if (getAttributes(element).hasOwnProperty('lang')) {\n              options.language = element.getAttribute('lang');\n              break;\n            }\n\n            element = element.parentNode;\n          }\n        }\n      } // Run base component initializing with new options\n\n\n      _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n      _this.boundDocumentFullscreenChange_ = function (e) {\n        return _this.documentFullscreenChange_(e);\n      };\n\n      _this.boundFullWindowOnEscKey_ = function (e) {\n        return _this.fullWindowOnEscKey(e);\n      };\n\n      _this.boundUpdateStyleEl_ = function (e) {\n        return _this.updateStyleEl_(e);\n      };\n\n      _this.boundApplyInitTime_ = function (e) {\n        return _this.applyInitTime_(e);\n      };\n\n      _this.boundUpdateCurrentBreakpoint_ = function (e) {\n        return _this.updateCurrentBreakpoint_(e);\n      };\n\n      _this.boundHandleTechClick_ = function (e) {\n        return _this.handleTechClick_(e);\n      };\n\n      _this.boundHandleTechDoubleClick_ = function (e) {\n        return _this.handleTechDoubleClick_(e);\n      };\n\n      _this.boundHandleTechTouchStart_ = function (e) {\n        return _this.handleTechTouchStart_(e);\n      };\n\n      _this.boundHandleTechTouchMove_ = function (e) {\n        return _this.handleTechTouchMove_(e);\n      };\n\n      _this.boundHandleTechTouchEnd_ = function (e) {\n        return _this.handleTechTouchEnd_(e);\n      };\n\n      _this.boundHandleTechTap_ = function (e) {\n        return _this.handleTechTap_(e);\n      }; // default isFullscreen_ to false\n\n\n      _this.isFullscreen_ = false; // create logger\n\n      _this.log = createLogger(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n      _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n      _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n      // and a seek is happening\n\n      _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      _this.isReady_ = false; // Init state hasStarted_\n\n      _this.hasStarted_ = false; // Init state userActive_\n\n      _this.userActive_ = false; // Init debugEnabled_\n\n      _this.debugEnabled_ = false; // Init state audioOnlyMode_\n\n      _this.audioOnlyMode_ = false; // Init state audioPosterMode_\n\n      _this.audioPosterMode_ = false; // Init state audioOnlyCache_\n\n      _this.audioOnlyCache_ = {\n        playerHeight: null,\n        hiddenChildren: []\n      }; // if the global option object was accidentally blown away by\n      // someone, bail early with an informative error\n\n      if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n        throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n      } // Store the original tag used to set options\n\n\n      _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n      _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n      _this.language(_this.options_.language); // Update Supported Languages\n\n\n      if (options.languages) {\n        // Normalise player option languages to lowercase\n        var languagesToLower = {};\n        Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n          languagesToLower[name.toLowerCase()] = options.languages[name];\n        });\n        _this.languages_ = languagesToLower;\n      } else {\n        _this.languages_ = Player.prototype.options_.languages;\n      }\n\n      _this.resetCache_(); // Set poster\n\n\n      _this.poster_ = options.poster || ''; // Set controls\n\n      _this.controls_ = !!options.controls; // Original tag settings stored in options\n      // now remove immediately so native controls don't flash.\n      // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n      tag.controls = false;\n      tag.removeAttribute('controls');\n      _this.changingSrc_ = false;\n      _this.playCallbacks_ = [];\n      _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n      if (tag.hasAttribute('autoplay')) {\n        _this.autoplay(true);\n      } else {\n        // otherwise use the setter to validate and\n        // set the correct value.\n        _this.autoplay(_this.options_.autoplay);\n      } // check plugins\n\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name) {\n          if (typeof _this[name] !== 'function') {\n            throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n          }\n        });\n      }\n      /*\n       * Store the internal state of scrubbing\n       *\n       * @private\n       * @return {Boolean} True if the user is scrubbing\n       */\n\n\n      _this.scrubbing_ = false;\n      _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n      evented(assertThisInitialized(_this), {\n        eventBusKey: 'el_'\n      }); // listen to document and player fullscreenchange handlers so we receive those events\n      // before a user can receive them so we can update isFullscreen appropriately.\n      // make sure that we listen to fullscreenchange events before everything else to make sure that\n      // our isFullscreen method is updated properly for internal components as well as external.\n\n      if (_this.fsApi_.requestFullscreen) {\n        on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n        _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n      }\n\n      if (_this.fluid_) {\n        _this.on(['playerreset', 'resize'], _this.boundUpdateStyleEl_);\n      } // We also want to pass the original player options to each component and plugin\n      // as well so they don't need to reach back into the player for options later.\n      // We also need to do another copy of this.options_ so we don't end up with\n      // an infinite loop.\n\n\n      var playerOptionsCopy = mergeOptions$3(_this.options_); // Load plugins\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name) {\n          _this[name](options.plugins[name]);\n        });\n      } // Enable debug mode to fire debugon event for all plugins.\n\n\n      if (options.debug) {\n        _this.debug(true);\n      }\n\n      _this.options_.playerOptions = playerOptionsCopy;\n      _this.middleware_ = [];\n\n      _this.playbackRates(options.playbackRates);\n\n      _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n      _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n      // set because the element doesn't exist yet.\n\n\n      if (_this.controls()) {\n        _this.addClass('vjs-controls-enabled');\n      } else {\n        _this.addClass('vjs-controls-disabled');\n      } // Set ARIA label and region role depending on player type\n\n\n      _this.el_.setAttribute('role', 'region');\n\n      if (_this.isAudio()) {\n        _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n      } else {\n        _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n      }\n\n      if (_this.isAudio()) {\n        _this.addClass('vjs-audio');\n      }\n\n      if (_this.flexNotSupported_()) {\n        _this.addClass('vjs-no-flex');\n      } // TODO: Make this smarter. Toggle user state between touching/mousing\n      // using events, since devices can have both touch and mouse events.\n      // TODO: Make this check be performed again when the window switches between monitors\n      // (See https://github.com/videojs/video.js/issues/5683)\n\n\n      if (TOUCH_ENABLED) {\n        _this.addClass('vjs-touch-enabled');\n      } // iOS Safari has broken hover handling\n\n\n      if (!IS_IOS) {\n        _this.addClass('vjs-workinghover');\n      } // Make player easily findable by ID\n\n\n      Player.players[_this.id_] = assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n      var majorVersion = version$5.split('.')[0];\n\n      _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n      // like the control bar show themselves if needed\n\n\n      _this.userActive(true);\n\n      _this.reportUserActivity();\n\n      _this.one('play', function (e) {\n        return _this.listenForUserActivity_(e);\n      });\n\n      _this.on('stageclick', function (e) {\n        return _this.handleStageClick_(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyDown(e);\n      });\n\n      _this.on('languagechange', function (e) {\n        return _this.handleLanguagechange(e);\n      });\n\n      _this.breakpoints(_this.options_.breakpoints);\n\n      _this.responsive(_this.options_.responsive); // Calling both the audio mode methods after the player is fully\n      // setup to be able to listen to the events triggered by them\n\n\n      _this.on('ready', function () {\n        // Calling the audioPosterMode method first so that\n        // the audioOnlyMode can take precedence when both options are set to true\n        _this.audioPosterMode(_this.options_.audioPosterMode);\n\n        _this.audioOnlyMode(_this.options_.audioOnlyMode);\n      });\n\n      return _this;\n    }\n    /**\n     * Destroys the video player and does any necessary cleanup.\n     *\n     * This is especially helpful if you are dynamically adding and removing videos\n     * to/from the DOM.\n     *\n     * @fires Player#dispose\n     */\n\n\n    var _proto = Player.prototype;\n\n    _proto.dispose = function dispose() {\n      var _this2 = this;\n\n      /**\n       * Called when the player is being disposed of.\n       *\n       * @event Player#dispose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('dispose'); // prevent dispose from being called twice\n\n      this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n      if (this.styleEl_ && this.styleEl_.parentNode) {\n        this.styleEl_.parentNode.removeChild(this.styleEl_);\n        this.styleEl_ = null;\n      } // Kill reference to this player\n\n\n      Player.players[this.id_] = null;\n\n      if (this.tag && this.tag.player) {\n        this.tag.player = null;\n      }\n\n      if (this.el_ && this.el_.player) {\n        this.el_.player = null;\n      }\n\n      if (this.tech_) {\n        this.tech_.dispose();\n        this.isPosterFromTech_ = false;\n        this.poster_ = '';\n      }\n\n      if (this.playerElIngest_) {\n        this.playerElIngest_ = null;\n      }\n\n      if (this.tag) {\n        this.tag = null;\n      }\n\n      clearCacheForPlayer(this); // remove all event handlers for track lists\n      // all tracks and track listeners are removed on\n      // tech dispose\n\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n\n        var list = _this2[props.getterName](); // if it is not a native list\n        // we have to manually remove event listeners\n\n\n        if (list && list.off) {\n          list.off();\n        }\n      }); // the actual .el_ is removed here, or replaced if\n\n      _Component.prototype.dispose.call(this, {\n        restoreEl: this.options_.restoreEl\n      });\n    }\n    /**\n     * Create the `Player`'s DOM element.\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var tag = this.tag;\n      var el;\n      var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n      var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n      if (playerElIngest) {\n        el = this.el_ = tag.parentNode;\n      } else if (!divEmbed) {\n        el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n      } // Copy over all the attributes from the tag, including ID and class\n      // ID will now reference player box, not the video tag\n\n\n      var attrs = getAttributes(tag);\n\n      if (divEmbed) {\n        el = this.el_ = tag;\n        tag = this.tag = document.createElement('video');\n\n        while (el.children.length) {\n          tag.appendChild(el.firstChild);\n        }\n\n        if (!hasClass(el, 'video-js')) {\n          addClass(el, 'video-js');\n        }\n\n        el.appendChild(tag);\n        playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n        // to our new `video` element. This will move things like\n        // `src` or `controls` that were set via js before the player\n        // was initialized.\n\n        Object.keys(el).forEach(function (k) {\n          try {\n            tag[k] = el[k];\n          } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n          }\n        });\n      } // set tabindex to -1 to remove the video element from the focus order\n\n\n      tag.setAttribute('tabindex', '-1');\n      attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n      // for the same issue with Chrome (on Windows) with JAWS.\n      // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n      // Note that we can't detect if JAWS is being used, but this ARIA attribute\n      //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n      if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n        tag.setAttribute('role', 'application');\n        attrs.role = 'application';\n      } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n      tag.removeAttribute('width');\n      tag.removeAttribute('height');\n\n      if ('width' in attrs) {\n        delete attrs.width;\n      }\n\n      if ('height' in attrs) {\n        delete attrs.height;\n      }\n\n      Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n        // don't copy over the class attribute to the player element when we're in a div embed\n        // the class is already set up properly in the divEmbed case\n        // and we want to make sure that the `video-js` class doesn't get lost\n        if (!(divEmbed && attr === 'class')) {\n          el.setAttribute(attr, attrs[attr]);\n        }\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }); // Update tag id/class for use as HTML5 playback tech\n      // Might think we should do this after embedding in container so .vjs-tech class\n      // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n      tag.playerId = tag.id;\n      tag.id += '_html5_api';\n      tag.className = 'vjs-tech'; // Make player findable on elements\n\n      tag.player = el.player = this; // Default state of video is paused\n\n      this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n      // of the player in a way that's still overrideable by CSS, just like the\n      // video element\n\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n        this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n        var defaultsStyleEl = $('.vjs-styles-defaults');\n        var head = $('head');\n        head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n      }\n\n      this.fill_ = false;\n      this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n      this.width(this.options_.width);\n      this.height(this.options_.height);\n      this.fill(this.options_.fill);\n      this.fluid(this.options_.fluid);\n      this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n      this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n      // because IE doesn't hide them completely from screen readers.\n\n      var links = tag.getElementsByTagName('a');\n\n      for (var i = 0; i < links.length; i++) {\n        var linkEl = links.item(i);\n        addClass(linkEl, 'vjs-hidden');\n        linkEl.setAttribute('hidden', 'hidden');\n      } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n      // keep track of the original for later so we can know if the source originally failed\n\n\n      tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n      if (tag.parentNode && !playerElIngest) {\n        tag.parentNode.insertBefore(el, tag);\n      } // insert the tag as the first child of the player element\n      // then manually add it to the children array so that this.addChild\n      // will work properly for other components\n      //\n      // Breaks iPhone, fixed in HTML5 setup.\n\n\n      prependTo(tag, el);\n      this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n      // if it's been set to something different to the doc\n\n      this.el_.setAttribute('lang', this.language_);\n      this.el_.setAttribute('translate', 'no');\n      this.el_ = el;\n      return el;\n    }\n    /**\n     * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n     * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n     * behavior.\n     *\n     * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n     *\n     * @param {string} [value]\n     *        The value to set the `Player`'s crossOrigin to. If an argument is\n     *        given, must be one of `anonymous` or `use-credentials`.\n     *\n     * @return {string|undefined}\n     *         - The current crossOrigin value of the `Player` when getting.\n     *         - undefined when setting\n     */\n    ;\n\n    _proto.crossOrigin = function crossOrigin(value) {\n      if (!value) {\n        return this.techGet_('crossOrigin');\n      }\n\n      if (value !== 'anonymous' && value !== 'use-credentials') {\n        log$1.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n        return;\n      }\n\n      this.techCall_('setCrossOrigin', value);\n      return;\n    }\n    /**\n     * A getter/setter for the `Player`'s width. Returns the player's configured value.\n     * To get the current width use `currentWidth()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s width to.\n     *\n     * @return {number}\n     *         The current width of the `Player` when getting.\n     */\n    ;\n\n    _proto.width = function width(value) {\n      return this.dimension('width', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s height. Returns the player's configured value.\n     * To get the current height use `currentheight()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s heigth to.\n     *\n     * @return {number}\n     *         The current height of the `Player` when getting.\n     */\n    ;\n\n    _proto.height = function height(value) {\n      return this.dimension('height', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s width & height.\n     *\n     * @param {string} dimension\n     *        This string can be:\n     *        - 'width'\n     *        - 'height'\n     *\n     * @param {number} [value]\n     *        Value for dimension specified in the first argument.\n     *\n     * @return {number}\n     *         The dimension arguments value when getting (width/height).\n     */\n    ;\n\n    _proto.dimension = function dimension(_dimension, value) {\n      var privDimension = _dimension + '_';\n\n      if (value === undefined) {\n        return this[privDimension] || 0;\n      }\n\n      if (value === '' || value === 'auto') {\n        // If an empty string is given, reset the dimension to be automatic\n        this[privDimension] = undefined;\n        this.updateStyleEl_();\n        return;\n      }\n\n      var parsedVal = parseFloat(value);\n\n      if (isNaN(parsedVal)) {\n        log$1.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n        return;\n      }\n\n      this[privDimension] = parsedVal;\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n     *\n     * Turning this on will turn off fill mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fluid = function fluid(bool) {\n      var _this3 = this;\n\n      if (bool === undefined) {\n        return !!this.fluid_;\n      }\n\n      this.fluid_ = !!bool;\n\n      if (isEvented(this)) {\n        this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      }\n\n      if (bool) {\n        this.addClass('vjs-fluid');\n        this.fill(false);\n        addEventedCallback(this, function () {\n          _this3.on(['playerreset', 'resize'], _this3.boundUpdateStyleEl_);\n        });\n      } else {\n        this.removeClass('vjs-fluid');\n      }\n\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n     *\n     * Turning this on will turn off fluid mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fill = function fill(bool) {\n      if (bool === undefined) {\n        return !!this.fill_;\n      }\n\n      this.fill_ = !!bool;\n\n      if (bool) {\n        this.addClass('vjs-fill');\n        this.fluid(false);\n      } else {\n        this.removeClass('vjs-fill');\n      }\n    }\n    /**\n     * Get/Set the aspect ratio\n     *\n     * @param {string} [ratio]\n     *        Aspect ratio for player\n     *\n     * @return {string|undefined}\n     *         returns the current aspect ratio when getting\n     */\n\n    /**\n     * A getter/setter for the `Player`'s aspect ratio.\n     *\n     * @param {string} [ratio]\n     *        The value to set the `Player`'s aspect ratio to.\n     *\n     * @return {string|undefined}\n     *         - The current aspect ratio of the `Player` when getting.\n     *         - undefined when setting\n     */\n    ;\n\n    _proto.aspectRatio = function aspectRatio(ratio) {\n      if (ratio === undefined) {\n        return this.aspectRatio_;\n      } // Check for width:height format\n\n\n      if (!/^\\d+\\:\\d+$/.test(ratio)) {\n        throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n      }\n\n      this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n      // because in fixed mode you could calculate width and height yourself.\n\n      this.fluid(true);\n      this.updateStyleEl_();\n    }\n    /**\n     * Update styles of the `Player` element (height, width and aspect ratio).\n     *\n     * @private\n     * @listens Tech#loadedmetadata\n     */\n    ;\n\n    _proto.updateStyleEl_ = function updateStyleEl_() {\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n        var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n        var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n        var techEl = this.tech_ && this.tech_.el();\n\n        if (techEl) {\n          if (_width >= 0) {\n            techEl.width = _width;\n          }\n\n          if (_height >= 0) {\n            techEl.height = _height;\n          }\n        }\n\n        return;\n      }\n\n      var width;\n      var height;\n      var aspectRatio;\n      var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n      if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n        // Use any aspectRatio that's been specifically set\n        aspectRatio = this.aspectRatio_;\n      } else if (this.videoWidth() > 0) {\n        // Otherwise try to get the aspect ratio from the video metadata\n        aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n      } else {\n        // Or use a default. The video element's is 2:1, but 16:9 is more common.\n        aspectRatio = '16:9';\n      } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n      var ratioParts = aspectRatio.split(':');\n      var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n      if (this.width_ !== undefined) {\n        // Use any width that's been specifically set\n        width = this.width_;\n      } else if (this.height_ !== undefined) {\n        // Or calulate the width from the aspect ratio if a height has been set\n        width = this.height_ / ratioMultiplier;\n      } else {\n        // Or use the video's metadata, or use the video el's default of 300\n        width = this.videoWidth() || 300;\n      }\n\n      if (this.height_ !== undefined) {\n        // Use any height that's been specifically set\n        height = this.height_;\n      } else {\n        // Otherwise calculate the height from the ratio and the width\n        height = width * ratioMultiplier;\n      } // Ensure the CSS class is valid by starting with an alpha character\n\n\n      if (/^[^a-zA-Z]/.test(this.id())) {\n        idClass = 'dimensions-' + this.id();\n      } else {\n        idClass = this.id() + '-dimensions';\n      } // Ensure the right class is still on the player for the style element\n\n\n      this.addClass(idClass);\n      setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n    }\n    /**\n     * Load/Create an instance of playback {@link Tech} including element\n     * and API methods. Then append the `Tech` element in `Player` as a child.\n     *\n     * @param {string} techName\n     *        name of the playback technology\n     *\n     * @param {string} source\n     *        video source\n     *\n     * @private\n     */\n    ;\n\n    _proto.loadTech_ = function loadTech_(techName, source) {\n      var _this4 = this;\n\n      // Pause and remove current playback technology\n      if (this.tech_) {\n        this.unloadTech_();\n      }\n\n      var titleTechName = toTitleCase$1(techName);\n      var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n      if (titleTechName !== 'Html5' && this.tag) {\n        Tech.getTech('Html5').disposeMediaElement(this.tag);\n        this.tag.player = null;\n        this.tag = null;\n      }\n\n      this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      this.isReady_ = false;\n      var autoplay = this.autoplay(); // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n      // because the player is going to handle autoplay on `loadstart`\n\n      if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n        autoplay = false;\n      } // Grab tech-specific options from player options and add source and parent element to use.\n\n\n      var techOptions = {\n        source: source,\n        autoplay: autoplay,\n        'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n        'playerId': this.id(),\n        'techId': this.id() + \"_\" + camelTechName + \"_api\",\n        'playsinline': this.options_.playsinline,\n        'preload': this.options_.preload,\n        'loop': this.options_.loop,\n        'disablePictureInPicture': this.options_.disablePictureInPicture,\n        'muted': this.options_.muted,\n        'poster': this.poster(),\n        'language': this.language(),\n        'playerElIngest': this.playerElIngest_ || false,\n        'vtt.js': this.options_['vtt.js'],\n        'canOverridePoster': !!this.options_.techCanOverridePoster,\n        'enableSourceset': this.options_.enableSourceset,\n        'Promise': this.options_.Promise\n      };\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n        techOptions[props.getterName] = _this4[props.privateName];\n      });\n      assign(techOptions, this.options_[titleTechName]);\n      assign(techOptions, this.options_[camelTechName]);\n      assign(techOptions, this.options_[techName.toLowerCase()]);\n\n      if (this.tag) {\n        techOptions.tag = this.tag;\n      }\n\n      if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n        techOptions.startTime = this.cache_.currentTime;\n      } // Initialize tech instance\n\n\n      var TechClass = Tech.getTech(techName);\n\n      if (!TechClass) {\n        throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n      }\n\n      this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n      this.tech_.ready(bind(this, this.handleTechReady_), true);\n      textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n      TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        _this4.on(_this4.tech_, event, function (e) {\n          return _this4[\"handleTech\" + toTitleCase$1(event) + \"_\"](e);\n        });\n      });\n      Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n        _this4.on(_this4.tech_, event, function (eventObj) {\n          if (_this4.tech_.playbackRate() === 0 && _this4.tech_.seeking()) {\n            _this4.queuedCallbacks_.push({\n              callback: _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this4),\n              event: eventObj\n            });\n\n            return;\n          }\n\n          _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n        });\n      });\n      this.on(this.tech_, 'loadstart', function (e) {\n        return _this4.handleTechLoadStart_(e);\n      });\n      this.on(this.tech_, 'sourceset', function (e) {\n        return _this4.handleTechSourceset_(e);\n      });\n      this.on(this.tech_, 'waiting', function (e) {\n        return _this4.handleTechWaiting_(e);\n      });\n      this.on(this.tech_, 'ended', function (e) {\n        return _this4.handleTechEnded_(e);\n      });\n      this.on(this.tech_, 'seeking', function (e) {\n        return _this4.handleTechSeeking_(e);\n      });\n      this.on(this.tech_, 'play', function (e) {\n        return _this4.handleTechPlay_(e);\n      });\n      this.on(this.tech_, 'firstplay', function (e) {\n        return _this4.handleTechFirstPlay_(e);\n      });\n      this.on(this.tech_, 'pause', function (e) {\n        return _this4.handleTechPause_(e);\n      });\n      this.on(this.tech_, 'durationchange', function (e) {\n        return _this4.handleTechDurationChange_(e);\n      });\n      this.on(this.tech_, 'fullscreenchange', function (e, data) {\n        return _this4.handleTechFullscreenChange_(e, data);\n      });\n      this.on(this.tech_, 'fullscreenerror', function (e, err) {\n        return _this4.handleTechFullscreenError_(e, err);\n      });\n      this.on(this.tech_, 'enterpictureinpicture', function (e) {\n        return _this4.handleTechEnterPictureInPicture_(e);\n      });\n      this.on(this.tech_, 'leavepictureinpicture', function (e) {\n        return _this4.handleTechLeavePictureInPicture_(e);\n      });\n      this.on(this.tech_, 'error', function (e) {\n        return _this4.handleTechError_(e);\n      });\n      this.on(this.tech_, 'posterchange', function (e) {\n        return _this4.handleTechPosterChange_(e);\n      });\n      this.on(this.tech_, 'textdata', function (e) {\n        return _this4.handleTechTextData_(e);\n      });\n      this.on(this.tech_, 'ratechange', function (e) {\n        return _this4.handleTechRateChange_(e);\n      });\n      this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n      this.usingNativeControls(this.techGet_('controls'));\n\n      if (this.controls() && !this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      } // Add the tech element in the DOM if it was not already there\n      // Make sure to not insert the original video element if using Html5\n\n\n      if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n        prependTo(this.tech_.el(), this.el());\n      } // Get rid of the original video tag reference after the first tech is loaded\n\n\n      if (this.tag) {\n        this.tag.player = null;\n        this.tag = null;\n      }\n    }\n    /**\n     * Unload and dispose of the current playback {@link Tech}.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unloadTech_ = function unloadTech_() {\n      var _this5 = this;\n\n      // Save the current text tracks so that we can reuse the same text tracks with the next tech\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n        _this5[props.privateName] = _this5[props.getterName]();\n      });\n      this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n      this.isReady_ = false;\n      this.tech_.dispose();\n      this.tech_ = false;\n\n      if (this.isPosterFromTech_) {\n        this.poster_ = '';\n        this.trigger('posterchange');\n      }\n\n      this.isPosterFromTech_ = false;\n    }\n    /**\n     * Return a reference to the current {@link Tech}.\n     * It will print a warning by default about the danger of using the tech directly\n     * but any argument that is passed in will silence the warning.\n     *\n     * @param {*} [safety]\n     *        Anything passed in to silence the warning\n     *\n     * @return {Tech}\n     *         The Tech\n     */\n    ;\n\n    _proto.tech = function tech(safety) {\n      if (safety === undefined) {\n        log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n      }\n\n      return this.tech_;\n    }\n    /**\n     * Set up click and touch listeners for the playback element\n     *\n     * - On desktops: a click on the video itself will toggle playback\n     * - On mobile devices: a click on the video toggles controls\n     *   which is done by toggling the user state between active and\n     *   inactive\n     * - A tap can signal that a user has become active or has become inactive\n     *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n     *   quick tap should hide them again (signaling the user is in an inactive\n     *   viewing state)\n     * - In addition to this, we still want the user to be considered inactive after\n     *   a few seconds of inactivity.\n     *\n     * > Note: the only part of iOS interaction we can't mimic with this setup\n     * is a touch and hold on the video element counting as activity in order to\n     * keep the controls showing, but that shouldn't be an issue. A touch and hold\n     * on any controls will still keep the user active\n     *\n     * @private\n     */\n    ;\n\n    _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n      // Make sure to remove all the previous listeners in case we are called multiple times.\n      this.removeTechControlsListeners_();\n      this.on(this.tech_, 'click', this.boundHandleTechClick_);\n      this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n      // so we'll check if the controls were already showing before reporting user\n      // activity\n\n      this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n      // listener cancels out any reportedUserActivity when setting userActive(false)\n\n      this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n    }\n    /**\n     * Remove the listeners used for click and tap controls. This is needed for\n     * toggling to controls disabled, where a tap/touch should do nothing.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n      // We don't want to just use `this.off()` because there might be other needed\n      // listeners added by techs that extend this.\n      this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n      this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n      this.off(this.tech_, 'click', this.boundHandleTechClick_);\n      this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n    }\n    /**\n     * Player waits for the tech to be ready\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleTechReady_ = function handleTechReady_() {\n      this.triggerReady(); // Keep the same volume as before\n\n      if (this.cache_.volume) {\n        this.techCall_('setVolume', this.cache_.volume);\n      } // Look if the tech found a higher resolution poster while loading\n\n\n      this.handleTechPosterChange_(); // Update the duration if available\n\n      this.handleTechDurationChange_();\n    }\n    /**\n     * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n     * function will also trigger {@link Player#firstplay} if it is the first loadstart\n     * for a video.\n     *\n     * @fires Player#loadstart\n     * @fires Player#firstplay\n     * @listens Tech#loadstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n      // TODO: Update to use `emptied` event instead. See #1277.\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-seeking'); // reset the error state\n\n      this.error(null); // Update the duration\n\n      this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n      // The firstplay event relies on both the play and loadstart events\n      // which can happen in any order for a new source\n\n      if (!this.paused()) {\n        /**\n         * Fired when the user agent begins looking for media data\n         *\n         * @event Player#loadstart\n         * @type {EventTarget~Event}\n         */\n        this.trigger('loadstart');\n        this.trigger('firstplay');\n      } else {\n        // reset the hasStarted state\n        this.hasStarted(false);\n        this.trigger('loadstart');\n      } // autoplay happens after loadstart for the browser,\n      // so we mimic that behavior\n\n\n      this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n    }\n    /**\n     * Handle autoplay string values, rather than the typical boolean\n     * values that should be handled by the tech. Note that this is not\n     * part of any specification. Valid values and what they do can be\n     * found on the autoplay getter at Player#autoplay()\n     */\n    ;\n\n    _proto.manualAutoplay_ = function manualAutoplay_(type) {\n      var _this6 = this;\n\n      if (!this.tech_ || typeof type !== 'string') {\n        return;\n      } // Save original muted() value, set muted to true, and attempt to play().\n      // On promise rejection, restore muted from saved value\n\n\n      var resolveMuted = function resolveMuted() {\n        var previouslyMuted = _this6.muted();\n\n        _this6.muted(true);\n\n        var restoreMuted = function restoreMuted() {\n          _this6.muted(previouslyMuted);\n        }; // restore muted on play terminatation\n\n\n        _this6.playTerminatedQueue_.push(restoreMuted);\n\n        var mutedPromise = _this6.play();\n\n        if (!isPromise(mutedPromise)) {\n          return;\n        }\n\n        return mutedPromise[\"catch\"](function (err) {\n          restoreMuted();\n          throw new Error(\"Rejection at manualAutoplay. Restoring muted value. \" + (err ? err : ''));\n        });\n      };\n\n      var promise; // if muted defaults to true\n      // the only thing we can do is call play\n\n      if (type === 'any' && !this.muted()) {\n        promise = this.play();\n\n        if (isPromise(promise)) {\n          promise = promise[\"catch\"](resolveMuted);\n        }\n      } else if (type === 'muted' && !this.muted()) {\n        promise = resolveMuted();\n      } else {\n        promise = this.play();\n      }\n\n      if (!isPromise(promise)) {\n        return;\n      }\n\n      return promise.then(function () {\n        _this6.trigger({\n          type: 'autoplay-success',\n          autoplay: type\n        });\n      })[\"catch\"](function () {\n        _this6.trigger({\n          type: 'autoplay-failure',\n          autoplay: type\n        });\n      });\n    }\n    /**\n     * Update the internal source caches so that we return the correct source from\n     * `src()`, `currentSource()`, and `currentSources()`.\n     *\n     * > Note: `currentSources` will not be updated if the source that is passed in exists\n     *         in the current `currentSources` cache.\n     *\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        A string or object source to update our caches to.\n     */\n    ;\n\n    _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n      if (srcObj === void 0) {\n        srcObj = '';\n      }\n\n      var src = srcObj;\n      var type = '';\n\n      if (typeof src !== 'string') {\n        src = srcObj.src;\n        type = srcObj.type;\n      } // make sure all the caches are set to default values\n      // to prevent null checking\n\n\n      this.cache_.source = this.cache_.source || {};\n      this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n      if (src && !type) {\n        type = findMimetype(this, src);\n      } // update `currentSource` cache always\n\n\n      this.cache_.source = mergeOptions$3({}, srcObj, {\n        src: src,\n        type: type\n      });\n      var matchingSources = this.cache_.sources.filter(function (s) {\n        return s.src && s.src === src;\n      });\n      var sourceElSources = [];\n      var sourceEls = this.$$('source');\n      var matchingSourceEls = [];\n\n      for (var i = 0; i < sourceEls.length; i++) {\n        var sourceObj = getAttributes(sourceEls[i]);\n        sourceElSources.push(sourceObj);\n\n        if (sourceObj.src && sourceObj.src === src) {\n          matchingSourceEls.push(sourceObj.src);\n        }\n      } // if we have matching source els but not matching sources\n      // the current source cache is not up to date\n\n\n      if (matchingSourceEls.length && !matchingSources.length) {\n        this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n        // sources cache to the `currentSource` cache\n      } else if (!matchingSources.length) {\n        this.cache_.sources = [this.cache_.source];\n      } // update the tech `src` cache\n\n\n      this.cache_.src = src;\n    }\n    /**\n     * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n     * causing the media element to reload.\n     *\n     * It will fire for the initial source and each subsequent source.\n     * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n     *\n     * The event object for this event contains a `src` property that will contain the source\n     * that was available when the event was triggered. This is generally only necessary if Video.js\n     * is switching techs while the source was being changed.\n     *\n     * It is also fired when `load` is called on the player (or media element)\n     * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n     * says that the resource selection algorithm needs to be aborted and restarted.\n     * In this case, it is very likely that the `src` property will be set to the\n     * empty string `\"\"` to indicate we do not know what the source will be but\n     * that it is changing.\n     *\n     * *This event is currently still experimental and may change in minor releases.*\n     * __To use this, pass `enableSourceset` option to the player.__\n     *\n     * @event Player#sourceset\n     * @type {EventTarget~Event}\n     * @prop {string} src\n     *                The source url available when the `sourceset` was triggered.\n     *                It will be an empty string if we cannot know what the source is\n     *                but know that the source will change.\n     */\n\n    /**\n     * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#sourceset\n     * @listens Tech#sourceset\n     * @private\n     */\n    ;\n\n    _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n      var _this7 = this;\n\n      // only update the source cache when the source\n      // was not updated using the player api\n      if (!this.changingSrc_) {\n        var updateSourceCaches = function updateSourceCaches(src) {\n          return _this7.updateSourceCaches_(src);\n        };\n\n        var playerSrc = this.currentSource().src;\n        var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n        if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n          // if both the tech source and the player source were updated we assume\n          // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n          if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n            updateSourceCaches = function updateSourceCaches() {};\n          }\n        } // update the source to the initial source right away\n        // in some cases this will be empty string\n\n\n        updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n        // wait for a `loadstart` to update the cache to `currentSrc`.\n        // If a sourceset happens before a `loadstart`, we reset the state\n\n        if (!event.src) {\n          this.tech_.any(['sourceset', 'loadstart'], function (e) {\n            // if a sourceset happens before a `loadstart` there\n            // is nothing to do as this `handleTechSourceset_`\n            // will be called again and this will be handled there.\n            if (e.type === 'sourceset') {\n              return;\n            }\n\n            var techSrc = _this7.techGet('currentSrc');\n\n            _this7.lastSource_.tech = techSrc;\n\n            _this7.updateSourceCaches_(techSrc);\n          });\n        }\n      }\n\n      this.lastSource_ = {\n        player: this.currentSource().src,\n        tech: event.src\n      };\n      this.trigger({\n        src: event.src,\n        type: 'sourceset'\n      });\n    }\n    /**\n     * Add/remove the vjs-has-started class\n     *\n     * @fires Player#firstplay\n     *\n     * @param {boolean} request\n     *        - true: adds the class\n     *        - false: remove the class\n     *\n     * @return {boolean}\n     *         the boolean value of hasStarted_\n     */\n    ;\n\n    _proto.hasStarted = function hasStarted(request) {\n      if (request === undefined) {\n        // act as getter, if we have no request to change\n        return this.hasStarted_;\n      }\n\n      if (request === this.hasStarted_) {\n        return;\n      }\n\n      this.hasStarted_ = request;\n\n      if (this.hasStarted_) {\n        this.addClass('vjs-has-started');\n        this.trigger('firstplay');\n      } else {\n        this.removeClass('vjs-has-started');\n      }\n    }\n    /**\n     * Fired whenever the media begins or resumes playback\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n     * @fires Player#play\n     * @listens Tech#play\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlay_ = function handleTechPlay_() {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n      this.hasStarted(true);\n      /**\n       * Triggered whenever an {@link Tech#play} event happens. Indicates that\n       * playback has started or resumed.\n       *\n       * @event Player#play\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('play');\n    }\n    /**\n     * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n     *\n     * If there were any events queued while the playback rate was zero, fire\n     * those events now.\n     *\n     * @private\n     * @method Player#handleTechRateChange_\n     * @fires Player#ratechange\n     * @listens Tech#ratechange\n     */\n    ;\n\n    _proto.handleTechRateChange_ = function handleTechRateChange_() {\n      if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n        this.queuedCallbacks_.forEach(function (queued) {\n          return queued.callback(queued.event);\n        });\n        this.queuedCallbacks_ = [];\n      }\n\n      this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n      /**\n       * Fires when the playing speed of the audio/video is changed\n       *\n       * @event Player#ratechange\n       * @type {event}\n       */\n\n      this.trigger('ratechange');\n    }\n    /**\n     * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#waiting\n     * @listens Tech#waiting\n     * @private\n     */\n    ;\n\n    _proto.handleTechWaiting_ = function handleTechWaiting_() {\n      var _this8 = this;\n\n      this.addClass('vjs-waiting');\n      /**\n       * A readyState change on the DOM element has caused playback to stop.\n       *\n       * @event Player#waiting\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n      // premature removal of the waiting class, wait for the time to change.\n\n      var timeWhenWaiting = this.currentTime();\n\n      var timeUpdateListener = function timeUpdateListener() {\n        if (timeWhenWaiting !== _this8.currentTime()) {\n          _this8.removeClass('vjs-waiting');\n\n          _this8.off('timeupdate', timeUpdateListener);\n        }\n      };\n\n      this.on('timeupdate', timeUpdateListener);\n    }\n    /**\n     * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n     * > Note: This is not consistent between browsers. See #1351\n     *\n     * @fires Player#canplay\n     * @listens Tech#canplay\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_FUTURE_DATA or greater.\n       *\n       * @event Player#canplay\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplay');\n    }\n    /**\n     * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#canplaythrough\n     * @listens Tech#canplaythrough\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n       * entire media file can be played without buffering.\n       *\n       * @event Player#canplaythrough\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplaythrough');\n    }\n    /**\n     * Retrigger the `playing` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#playing\n     * @listens Tech#playing\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlaying_ = function handleTechPlaying_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media is no longer blocked from playback, and has started playing.\n       *\n       * @event Player#playing\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('playing');\n    }\n    /**\n     * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeking\n     * @listens Tech#seeking\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeking_ = function handleTechSeeking_() {\n      this.addClass('vjs-seeking');\n      /**\n       * Fired whenever the player is jumping to a new time\n       *\n       * @event Player#seeking\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeking');\n    }\n    /**\n     * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeked\n     * @listens Tech#seeked\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeked_ = function handleTechSeeked_() {\n      this.removeClass('vjs-seeking');\n      this.removeClass('vjs-ended');\n      /**\n       * Fired when the player has finished jumping to a new time\n       *\n       * @event Player#seeked\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeked');\n    }\n    /**\n     * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#firstplay\n     * @listens Tech#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n     * @private\n     */\n    ;\n\n    _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n      // If the first starttime attribute is specified\n      // then we will start at the given offset in seconds\n      if (this.options_.starttime) {\n        log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n        this.currentTime(this.options_.starttime);\n      }\n\n      this.addClass('vjs-has-started');\n      /**\n       * Fired the first time a video is played. Not part of the HLS spec, and this is\n       * probably not the best implementation yet, so use sparingly. If you don't have a\n       * reason to prevent playback, use `myPlayer.one('play');` instead.\n       *\n       * @event Player#firstplay\n       * @deprecated As of 6.0 firstplay event is deprecated.\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('firstplay');\n    }\n    /**\n     * Retrigger the `pause` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#pause\n     * @listens Tech#pause\n     * @private\n     */\n    ;\n\n    _proto.handleTechPause_ = function handleTechPause_() {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      /**\n       * Fired whenever the media has been paused\n       *\n       * @event Player#pause\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('pause');\n    }\n    /**\n     * Retrigger the `ended` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#ended\n     * @listens Tech#ended\n     * @private\n     */\n    ;\n\n    _proto.handleTechEnded_ = function handleTechEnded_() {\n      this.addClass('vjs-ended');\n      this.removeClass('vjs-waiting');\n\n      if (this.options_.loop) {\n        this.currentTime(0);\n        this.play();\n      } else if (!this.paused()) {\n        this.pause();\n      }\n      /**\n       * Fired when the end of the media resource is reached (currentTime == duration)\n       *\n       * @event Player#ended\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ended');\n    }\n    /**\n     * Fired when the duration of the media resource is first known or changed\n     *\n     * @listens Tech#durationchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n      this.duration(this.techGet_('duration'));\n    }\n    /**\n     * Handle a click on the media element to play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#click\n     * @private\n     */\n    ;\n\n    _proto.handleTechClick_ = function handleTechClick_(event) {\n      // When controls are disabled a click should not toggle playback because\n      // the click is considered a control\n      if (!this.controls_) {\n        return;\n      }\n\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n          this.options_.userActions.click.call(this, event);\n        } else if (this.paused()) {\n          silencePromise(this.play());\n        } else {\n          this.pause();\n        }\n      }\n    }\n    /**\n     * Handle a double-click on the media element to enter/exit fullscreen\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#dblclick\n     * @private\n     */\n    ;\n\n    _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n      if (!this.controls_) {\n        return;\n      } // we do not want to toggle fullscreen state\n      // when double-clicking inside a control bar or a modal\n\n\n      var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n        return el.contains(event.target);\n      });\n\n      if (!inAllowedEls) {\n        /*\n         * options.userActions.doubleClick\n         *\n         * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n         * Set to `false` to disable double-click handling\n         * Set to a function to substitute an external double-click handler\n         */\n        if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n          if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n            this.options_.userActions.doubleClick.call(this, event);\n          } else if (this.isFullscreen()) {\n            this.exitFullscreen();\n          } else {\n            this.requestFullscreen();\n          }\n        }\n      }\n    }\n    /**\n     * Handle a tap on the media element. It will toggle the user\n     * activity state, which hides and shows the controls.\n     *\n     * @listens Tech#tap\n     * @private\n     */\n    ;\n\n    _proto.handleTechTap_ = function handleTechTap_() {\n      this.userActive(!this.userActive());\n    }\n    /**\n     * Handle touch to start\n     *\n     * @listens Tech#touchstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n      this.userWasActive = this.userActive();\n    }\n    /**\n     * Handle touch to move\n     *\n     * @listens Tech#touchmove\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n      if (this.userWasActive) {\n        this.reportUserActivity();\n      }\n    }\n    /**\n     * Handle touch to end\n     *\n     * @param {EventTarget~Event} event\n     *        the touchend event that triggered\n     *        this function\n     *\n     * @listens Tech#touchend\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n      // Stop the mouse events from also happening\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * native click events on the SWF aren't triggered on IE11, Win8.1RT\n     * use stageclick events triggered from inside the SWF instead\n     *\n     * @private\n     * @listens stageclick\n     */\n    ;\n\n    _proto.handleStageClick_ = function handleStageClick_() {\n      this.reportUserActivity();\n    }\n    /**\n     * @private\n     */\n    ;\n\n    _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n      if (this.isFullscreen()) {\n        this.addClass('vjs-fullscreen');\n      } else {\n        this.removeClass('vjs-fullscreen');\n      }\n    }\n    /**\n     * when the document fschange event triggers it calls this\n     */\n    ;\n\n    _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n      var targetPlayer = e.target.player; // if another player was fullscreen\n      // do a null check for targetPlayer because older firefox's would put document as e.target\n\n      if (targetPlayer && targetPlayer !== this) {\n        return;\n      }\n\n      var el = this.el();\n      var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n      if (!isFs && el.matches) {\n        isFs = el.matches(':' + this.fsApi_.fullscreen);\n      } else if (!isFs && el.msMatchesSelector) {\n        isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n      }\n\n      this.isFullscreen(isFs);\n    }\n    /**\n     * Handle Tech Fullscreen Change\n     *\n     * @param {EventTarget~Event} event\n     *        the fullscreenchange event that triggered this function\n     *\n     * @param {Object} data\n     *        the data that was sent with the event\n     *\n     * @private\n     * @listens Tech#fullscreenchange\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n      var _this9 = this;\n\n      if (data) {\n        if (data.nativeIOSFullscreen) {\n          this.addClass('vjs-ios-native-fs');\n          this.tech_.one('webkitendfullscreen', function () {\n            _this9.removeClass('vjs-ios-native-fs');\n          });\n        }\n\n        this.isFullscreen(data.isFullscreen);\n      }\n    };\n\n    _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n      this.trigger('fullscreenerror', err);\n    }\n    /**\n     * @private\n     */\n    ;\n\n    _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n      if (this.isInPictureInPicture()) {\n        this.addClass('vjs-picture-in-picture');\n      } else {\n        this.removeClass('vjs-picture-in-picture');\n      }\n    }\n    /**\n     * Handle Tech Enter Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the enterpictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#enterpictureinpicture\n     */\n    ;\n\n    _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n      this.isInPictureInPicture(true);\n    }\n    /**\n     * Handle Tech Leave Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the leavepictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#leavepictureinpicture\n     */\n    ;\n\n    _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n      this.isInPictureInPicture(false);\n    }\n    /**\n     * Fires when an error occurred during the loading of an audio/video.\n     *\n     * @private\n     * @listens Tech#error\n     */\n    ;\n\n    _proto.handleTechError_ = function handleTechError_() {\n      var error = this.tech_.error();\n      this.error(error);\n    }\n    /**\n     * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#textdata\n     * @listens Tech#textdata\n     * @private\n     */\n    ;\n\n    _proto.handleTechTextData_ = function handleTechTextData_() {\n      var data = null;\n\n      if (arguments.length > 1) {\n        data = arguments[1];\n      }\n      /**\n       * Fires when we get a textdata event from tech\n       *\n       * @event Player#textdata\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('textdata', data);\n    }\n    /**\n     * Get object for cached values.\n     *\n     * @return {Object}\n     *         get the current object cache\n     */\n    ;\n\n    _proto.getCache = function getCache() {\n      return this.cache_;\n    }\n    /**\n     * Resets the internal cache object.\n     *\n     * Using this function outside the player constructor or reset method may\n     * have unintended side-effects.\n     *\n     * @private\n     */\n    ;\n\n    _proto.resetCache_ = function resetCache_() {\n      this.cache_ = {\n        // Right now, the currentTime is not _really_ cached because it is always\n        // retrieved from the tech (see: currentTime). However, for completeness,\n        // we set it to zero here to ensure that if we do start actually caching\n        // it, we reset it along with everything else.\n        currentTime: 0,\n        initTime: 0,\n        inactivityTimeout: this.options_.inactivityTimeout,\n        duration: NaN,\n        lastVolume: 1,\n        lastPlaybackRate: this.defaultPlaybackRate(),\n        media: null,\n        src: '',\n        source: {},\n        sources: [],\n        playbackRates: [],\n        volume: 1\n      };\n    }\n    /**\n     * Pass values to the playback tech\n     *\n     * @param {string} [method]\n     *        the method to call\n     *\n     * @param {Object} arg\n     *        the argument to pass\n     *\n     * @private\n     */\n    ;\n\n    _proto.techCall_ = function techCall_(method, arg) {\n      // If it's not ready yet, call method when it is\n      this.ready(function () {\n        if (method in allowedSetters) {\n          return set(this.middleware_, this.tech_, method, arg);\n        } else if (method in allowedMediators) {\n          return mediate(this.middleware_, this.tech_, method, arg);\n        }\n\n        try {\n          if (this.tech_) {\n            this.tech_[method](arg);\n          }\n        } catch (e) {\n          log$1(e);\n          throw e;\n        }\n      }, true);\n    }\n    /**\n     * Get calls can't wait for the tech, and sometimes don't need to.\n     *\n     * @param {string} method\n     *        Tech method\n     *\n     * @return {Function|undefined}\n     *         the method or undefined\n     *\n     * @private\n     */\n    ;\n\n    _proto.techGet_ = function techGet_(method) {\n      if (!this.tech_ || !this.tech_.isReady_) {\n        return;\n      }\n\n      if (method in allowedGetters) {\n        return get(this.middleware_, this.tech_, method);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method);\n      } // Flash likes to die and reload when you hide or reposition it.\n      // In these cases the object methods go away and we get errors.\n      // TODO: Is this needed for techs other than Flash?\n      // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n      try {\n        return this.tech_[method]();\n      } catch (e) {\n        // When building additional tech libs, an expected method may not be defined yet\n        if (this.tech_[method] === undefined) {\n          log$1(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n          throw e;\n        } // When a method isn't available on the object it throws a TypeError\n\n\n        if (e.name === 'TypeError') {\n          log$1(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n          this.tech_.isReady_ = false;\n          throw e;\n        } // If error unknown, just log and throw\n\n\n        log$1(e);\n        throw e;\n      }\n    }\n    /**\n     * Attempt to begin playback at the first opportunity.\n     *\n     * @return {Promise|undefined}\n     *         Returns a promise if the browser supports Promises (or one\n     *         was passed in as an option). This promise will be resolved on\n     *         the return value of play. If this is undefined it will fulfill the\n     *         promise chain otherwise the promise chain will be fulfilled when\n     *         the promise from play is fulfilled.\n     */\n    ;\n\n    _proto.play = function play() {\n      var _this10 = this;\n\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        return new PromiseClass(function (resolve) {\n          _this10.play_(resolve);\n        });\n      }\n\n      return this.play_();\n    }\n    /**\n     * The actual logic for play, takes a callback that will be resolved on the\n     * return value of play. This allows us to resolve to the play promise if there\n     * is one on modern browsers.\n     *\n     * @private\n     * @param {Function} [callback]\n     *        The callback that should be called when the techs play is actually called\n     */\n    ;\n\n    _proto.play_ = function play_(callback) {\n      var _this11 = this;\n\n      if (callback === void 0) {\n        callback = silencePromise;\n      }\n\n      this.playCallbacks_.push(callback);\n      var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n      if (this.waitToPlay_) {\n        this.off(['ready', 'loadstart'], this.waitToPlay_);\n        this.waitToPlay_ = null;\n      } // if the player/tech is not ready or the src itself is not ready\n      // queue up a call to play on `ready` or `loadstart`\n\n\n      if (!this.isReady_ || !isSrcReady) {\n        this.waitToPlay_ = function (e) {\n          _this11.play_();\n        };\n\n        this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n        // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n        if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n          this.load();\n        }\n\n        return;\n      } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n      var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n      if (val === null) {\n        this.runPlayTerminatedQueue_();\n      } else {\n        this.runPlayCallbacks_(val);\n      }\n    }\n    /**\n     * These functions will be run when if play is terminated. If play\n     * runPlayCallbacks_ is run these function will not be run. This allows us\n     * to differenciate between a terminated play and an actual call to play.\n     */\n    ;\n\n    _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n      var queue = this.playTerminatedQueue_.slice(0);\n      this.playTerminatedQueue_ = [];\n      queue.forEach(function (q) {\n        q();\n      });\n    }\n    /**\n     * When a callback to play is delayed we have to run these\n     * callbacks when play is actually called on the tech. This function\n     * runs the callbacks that were delayed and accepts the return value\n     * from the tech.\n     *\n     * @param {undefined|Promise} val\n     *        The return value from the tech.\n     */\n    ;\n\n    _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n      var callbacks = this.playCallbacks_.slice(0);\n      this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n      this.playTerminatedQueue_ = [];\n      callbacks.forEach(function (cb) {\n        cb(val);\n      });\n    }\n    /**\n     * Pause the video playback\n     *\n     * @return {Player}\n     *         A reference to the player object this function was called on\n     */\n    ;\n\n    _proto.pause = function pause() {\n      this.techCall_('pause');\n    }\n    /**\n     * Check if the player is paused or has yet to play\n     *\n     * @return {boolean}\n     *         - false: if the media is currently playing\n     *         - true: if media is not currently playing\n     */\n    ;\n\n    _proto.paused = function paused() {\n      // The initial state of paused should be true (in Safari it's actually false)\n      return this.techGet_('paused') === false ? false : true;\n    }\n    /**\n     * Get a TimeRange object representing the current ranges of time that the user\n     * has played.\n     *\n     * @return {TimeRange}\n     *         A time range object that represents all the increments of time that have\n     *         been played.\n     */\n    ;\n\n    _proto.played = function played() {\n      return this.techGet_('played') || createTimeRanges(0, 0);\n    }\n    /**\n     * Returns whether or not the user is \"scrubbing\". Scrubbing is\n     * when the user has clicked the progress bar handle and is\n     * dragging it along the progress bar.\n     *\n     * @param {boolean} [isScrubbing]\n     *        whether the user is or is not scrubbing\n     *\n     * @return {boolean}\n     *         The value of scrubbing when getting\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing(isScrubbing) {\n      if (typeof isScrubbing === 'undefined') {\n        return this.scrubbing_;\n      }\n\n      this.scrubbing_ = !!isScrubbing;\n      this.techCall_('setScrubbing', this.scrubbing_);\n\n      if (isScrubbing) {\n        this.addClass('vjs-scrubbing');\n      } else {\n        this.removeClass('vjs-scrubbing');\n      }\n    }\n    /**\n     * Get or set the current time (in seconds)\n     *\n     * @param {number|string} [seconds]\n     *        The time to seek to in seconds\n     *\n     * @return {number}\n     *         - the current time in seconds when getting\n     */\n    ;\n\n    _proto.currentTime = function currentTime(seconds) {\n      if (typeof seconds !== 'undefined') {\n        if (seconds < 0) {\n          seconds = 0;\n        }\n\n        if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n          this.cache_.initTime = seconds;\n          this.off('canplay', this.boundApplyInitTime_);\n          this.one('canplay', this.boundApplyInitTime_);\n          return;\n        }\n\n        this.techCall_('setCurrentTime', seconds);\n        this.cache_.initTime = 0;\n        return;\n      } // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit afterall.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n\n\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    /**\n     * Apply the value of initTime stored in cache as currentTime.\n     *\n     * @private\n     */\n    ;\n\n    _proto.applyInitTime_ = function applyInitTime_() {\n      this.currentTime(this.cache_.initTime);\n    }\n    /**\n     * Normally gets the length in time of the video in seconds;\n     * in all but the rarest use cases an argument will NOT be passed to the method\n     *\n     * > **NOTE**: The video must have started loading before the duration can be\n     * known, and depending on preload behaviour may not be known until the video starts\n     * playing.\n     *\n     * @fires Player#durationchange\n     *\n     * @param {number} [seconds]\n     *        The duration of the video to set in seconds\n     *\n     * @return {number}\n     *         - The duration of the video in seconds when getting\n     */\n    ;\n\n    _proto.duration = function duration(seconds) {\n      if (seconds === undefined) {\n        // return NaN if the duration is not known\n        return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n      }\n\n      seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n      if (seconds < 0) {\n        seconds = Infinity;\n      }\n\n      if (seconds !== this.cache_.duration) {\n        // Cache the last set value for optimized scrubbing (esp. Flash)\n        // TODO: Required for techs other than Flash?\n        this.cache_.duration = seconds;\n\n        if (seconds === Infinity) {\n          this.addClass('vjs-live');\n        } else {\n          this.removeClass('vjs-live');\n        }\n\n        if (!isNaN(seconds)) {\n          // Do not fire durationchange unless the duration value is known.\n          // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n          /**\n           * @event Player#durationchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('durationchange');\n        }\n      }\n    }\n    /**\n     * Calculates how much time is left in the video. Not part\n     * of the native video API.\n     *\n     * @return {number}\n     *         The time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTime = function remainingTime() {\n      return this.duration() - this.currentTime();\n    }\n    /**\n     * A remaining time function that is intented to be used when\n     * the time is to be displayed directly to the user.\n     *\n     * @return {number}\n     *         The rounded time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n      return Math.floor(this.duration()) - Math.floor(this.currentTime());\n    } //\n    // Kind of like an array of portions of the video that have been downloaded.\n\n    /**\n     * Get a TimeRange object with an array of the times of the video\n     * that have been downloaded. If you just want the percent of the\n     * video that's been downloaded, use bufferedPercent.\n     *\n     * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n     *\n     * @return {TimeRange}\n     *         A mock TimeRange object (following HTML spec)\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      var buffered = this.techGet_('buffered');\n\n      if (!buffered || !buffered.length) {\n        buffered = createTimeRanges(0, 0);\n      }\n\n      return buffered;\n    }\n    /**\n     * Get the percent (as a decimal) of the video that's been downloaded.\n     * This method is not a part of the native HTML video API.\n     *\n     * @return {number}\n     *         A decimal between 0 and 1 representing the percent\n     *         that is buffered 0 being 0% and 1 being 100%\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$1() {\n      return bufferedPercent(this.buffered(), this.duration());\n    }\n    /**\n     * Get the ending time of the last buffered time range\n     * This is used in the progress bar to encapsulate all time ranges.\n     *\n     * @return {number}\n     *         The end of the last buffered time range\n     */\n    ;\n\n    _proto.bufferedEnd = function bufferedEnd() {\n      var buffered = this.buffered();\n      var duration = this.duration();\n      var end = buffered.end(buffered.length - 1);\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      return end;\n    }\n    /**\n     * Get or set the current volume of the media\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         The current volume as a percent when getting\n     */\n    ;\n\n    _proto.volume = function volume(percentAsDecimal) {\n      var vol;\n\n      if (percentAsDecimal !== undefined) {\n        // Force value to between 0 and 1\n        vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n        this.cache_.volume = vol;\n        this.techCall_('setVolume', vol);\n\n        if (vol > 0) {\n          this.lastVolume_(vol);\n        }\n\n        return;\n      } // Default to 1 when returning current volume.\n\n\n      vol = parseFloat(this.techGet_('volume'));\n      return isNaN(vol) ? 1 : vol;\n    }\n    /**\n     * Get the current muted state, or turn mute on or off\n     *\n     * @param {boolean} [muted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean}\n     *         - true if mute is on and getting\n     *         - false if mute is off and getting\n     */\n    ;\n\n    _proto.muted = function muted(_muted) {\n      if (_muted !== undefined) {\n        this.techCall_('setMuted', _muted);\n        return;\n      }\n\n      return this.techGet_('muted') || false;\n    }\n    /**\n     * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n     * indicates the state of muted on initial playback.\n     *\n     * ```js\n     *   var myPlayer = videojs('some-player-id');\n     *\n     *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n     *\n     *   // get, should be false\n     *   console.log(myPlayer.defaultMuted());\n     *   // set to true\n     *   myPlayer.defaultMuted(true);\n     *   // get should be true\n     *   console.log(myPlayer.defaultMuted());\n     * ```\n     *\n     * @param {boolean} [defaultMuted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean|Player}\n     *         - true if defaultMuted is on and getting\n     *         - false if defaultMuted is off and getting\n     *         - A reference to the current player when setting\n     */\n    ;\n\n    _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n      if (_defaultMuted !== undefined) {\n        return this.techCall_('setDefaultMuted', _defaultMuted);\n      }\n\n      return this.techGet_('defaultMuted') || false;\n    }\n    /**\n     * Get the last volume, or set it\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new last volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         the current value of lastVolume as a percent when getting\n     *\n     * @private\n     */\n    ;\n\n    _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n      if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n        this.cache_.lastVolume = percentAsDecimal;\n        return;\n      }\n\n      return this.cache_.lastVolume;\n    }\n    /**\n     * Check if current tech can support native fullscreen\n     * (e.g. with built in controls like iOS)\n     *\n     * @return {boolean}\n     *         if native fullscreen is supported\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      return this.techGet_('supportsFullScreen') || false;\n    }\n    /**\n     * Check if the player is in fullscreen mode or tell the player that it\n     * is or is not in fullscreen mode.\n     *\n     * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n     * property and instead document.fullscreenElement is used. But isFullscreen is\n     * still a valuable property for internal player workings.\n     *\n     * @param  {boolean} [isFS]\n     *         Set the players current fullscreen state\n     *\n     * @return {boolean}\n     *         - true if fullscreen is on and getting\n     *         - false if fullscreen is off and getting\n     */\n    ;\n\n    _proto.isFullscreen = function isFullscreen(isFS) {\n      if (isFS !== undefined) {\n        var oldValue = this.isFullscreen_;\n        this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n        // this is the only place where we trigger fullscreenchange events for older browsers\n        // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n        if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n          /**\n             * @event Player#fullscreenchange\n             * @type {EventTarget~Event}\n             */\n          this.trigger('fullscreenchange');\n        }\n\n        this.toggleFullscreenClass_();\n        return;\n      }\n\n      return this.isFullscreen_;\n    }\n    /**\n     * Increase the size of the video to full screen\n     * In some browsers, full screen is not supported natively, so it enters\n     * \"full window mode\", where the video fills the browser window.\n     * In browsers and devices that support native full screen, sometimes the\n     * browser's default controls will be shown, and not the Video.js custom skin.\n     * This includes most mobile devices (iOS, Android) and older versions of\n     * Safari.\n     *\n     * @param  {Object} [fullscreenOptions]\n     *         Override the player fullscreen options\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        var self = this;\n        return new PromiseClass(function (resolve, reject) {\n          function offHandler() {\n            self.off('fullscreenerror', errorHandler);\n            self.off('fullscreenchange', changeHandler);\n          }\n\n          function changeHandler() {\n            offHandler();\n            resolve();\n          }\n\n          function errorHandler(e, err) {\n            offHandler();\n            reject(err);\n          }\n\n          self.one('fullscreenchange', changeHandler);\n          self.one('fullscreenerror', errorHandler);\n          var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n          if (promise) {\n            promise.then(offHandler, offHandler);\n            promise.then(resolve, reject);\n          }\n        });\n      }\n\n      return this.requestFullscreenHelper_();\n    };\n\n    _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n      var _this12 = this;\n\n      var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n      // Use defaults or player configured option unless passed directly to this method.\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      } // This method works as follows:\n      // 1. if a fullscreen api is available, use it\n      //   1. call requestFullscreen with potential options\n      //   2. if we got a promise from above, use it to update isFullscreen()\n      // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n      //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n      // 3. otherwise, use \"fullWindow\" mode\n\n\n      if (this.fsApi_.requestFullscreen) {\n        var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n        if (promise) {\n          promise.then(function () {\n            return _this12.isFullscreen(true);\n          }, function () {\n            return _this12.isFullscreen(false);\n          });\n        }\n\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        // we can't take the video.js controls fullscreen but we can go fullscreen\n        // with native controls\n        this.techCall_('enterFullScreen');\n      } else {\n        // fullscreen isn't supported so we'll just stretch the video element to\n        // fill the viewport\n        this.enterFullWindow();\n      }\n    }\n    /**\n     * Return the video to its normal size after having been in full screen mode\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.exitFullscreen = function exitFullscreen() {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        var self = this;\n        return new PromiseClass(function (resolve, reject) {\n          function offHandler() {\n            self.off('fullscreenerror', errorHandler);\n            self.off('fullscreenchange', changeHandler);\n          }\n\n          function changeHandler() {\n            offHandler();\n            resolve();\n          }\n\n          function errorHandler(e, err) {\n            offHandler();\n            reject(err);\n          }\n\n          self.one('fullscreenchange', changeHandler);\n          self.one('fullscreenerror', errorHandler);\n          var promise = self.exitFullscreenHelper_();\n\n          if (promise) {\n            promise.then(offHandler, offHandler); // map the promise to our resolve/reject methods\n\n            promise.then(resolve, reject);\n          }\n        });\n      }\n\n      return this.exitFullscreenHelper_();\n    };\n\n    _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n      var _this13 = this;\n\n      if (this.fsApi_.requestFullscreen) {\n        var promise = document[this.fsApi_.exitFullscreen]();\n\n        if (promise) {\n          // we're splitting the promise here, so, we want to catch the\n          // potential error so that this chain doesn't have unhandled errors\n          silencePromise(promise.then(function () {\n            return _this13.isFullscreen(false);\n          }));\n        }\n\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        this.techCall_('exitFullScreen');\n      } else {\n        this.exitFullWindow();\n      }\n    }\n    /**\n     * When fullscreen isn't supported we can stretch the\n     * video container to as wide as the browser will let us.\n     *\n     * @fires Player#enterFullWindow\n     */\n    ;\n\n    _proto.enterFullWindow = function enterFullWindow() {\n      this.isFullscreen(true);\n      this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n      this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n      on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n      document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n      addClass(document.body, 'vjs-full-window');\n      /**\n       * @event Player#enterFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('enterFullWindow');\n    }\n    /**\n     * Check for call to either exit full window or\n     * full screen on ESC key\n     *\n     * @param {string} event\n     *        Event to check for key press\n     */\n    ;\n\n    _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        if (this.isFullscreen() === true) {\n          if (!this.isFullWindow) {\n            this.exitFullscreen();\n          } else {\n            this.exitFullWindow();\n          }\n        }\n      }\n    }\n    /**\n     * Exit full window\n     *\n     * @fires Player#exitFullWindow\n     */\n    ;\n\n    _proto.exitFullWindow = function exitFullWindow() {\n      this.isFullscreen(false);\n      this.isFullWindow = false;\n      off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n      document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n      removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n      // this.positionAll();\n\n      /**\n       * @event Player#exitFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('exitFullWindow');\n    }\n    /**\n     * Disable Picture-in-Picture mode.\n     *\n     * @param {boolean} value\n     *                  - true will disable Picture-in-Picture mode\n     *                  - false will enable Picture-in-Picture mode\n     */\n    ;\n\n    _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n      if (value === undefined) {\n        return this.techGet_('disablePictureInPicture');\n      }\n\n      this.techCall_('setDisablePictureInPicture', value);\n      this.options_.disablePictureInPicture = value;\n      this.trigger('disablepictureinpicturechanged');\n    }\n    /**\n     * Check if the player is in Picture-in-Picture mode or tell the player that it\n     * is or is not in Picture-in-Picture mode.\n     *\n     * @param  {boolean} [isPiP]\n     *         Set the players current Picture-in-Picture state\n     *\n     * @return {boolean}\n     *         - true if Picture-in-Picture is on and getting\n     *         - false if Picture-in-Picture is off and getting\n     */\n    ;\n\n    _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n      if (isPiP !== undefined) {\n        this.isInPictureInPicture_ = !!isPiP;\n        this.togglePictureInPictureClass_();\n        return;\n      }\n\n      return !!this.isInPictureInPicture_;\n    }\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#enterpictureinpicture\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n        /**\n         * This event fires when the player enters picture in picture mode\n         *\n         * @event Player#enterpictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return this.techGet_('requestPictureInPicture');\n      }\n    }\n    /**\n     * Exit Picture-in-Picture mode.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#leavepictureinpicture\n     *\n     * @return {Promise}\n     *         A promise.\n     */\n    ;\n\n    _proto.exitPictureInPicture = function exitPictureInPicture() {\n      if ('pictureInPictureEnabled' in document) {\n        /**\n         * This event fires when the player leaves picture in picture mode\n         *\n         * @event Player#leavepictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return document.exitPictureInPicture();\n      }\n    }\n    /**\n     * Called when this Player has focus and a key gets pressed down, or when\n     * any Component of this player receives a key press that it doesn't handle.\n     * This allows player-wide hotkeys (either as defined below, or optionally\n     * by an external function).\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n      if (!userActions || !userActions.hotkeys) {\n        return;\n      } // Function that determines whether or not to exclude an element from\n      // hotkeys handling.\n\n\n      var excludeElement = function excludeElement(el) {\n        var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n        if (el.isContentEditable) {\n          return true;\n        } // Inputs matching these types will still trigger hotkey handling as\n        // they are not text inputs.\n\n\n        var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n        if (tagName === 'input') {\n          return allowedInputTypes.indexOf(el.type) === -1;\n        } // The final test is by tag name. These tags will be excluded entirely.\n\n\n        var excludedTags = ['textarea'];\n        return excludedTags.indexOf(tagName) !== -1;\n      }; // Bail out if the user is focused on an interactive form element.\n\n\n      if (excludeElement(this.el_.ownerDocument.activeElement)) {\n        return;\n      }\n\n      if (typeof userActions.hotkeys === 'function') {\n        userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n    /**\n     * Called when this Player receives a hotkey keydown event.\n     * Supported player-wide hotkeys are:\n     *\n     *   f          - toggle fullscreen\n     *   m          - toggle mute\n     *   k or Space - toggle play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleHotkeys = function handleHotkeys(event) {\n      var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n      var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n          fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'f');\n      } : _hotkeys$fullscreenKe,\n          _hotkeys$muteKey = hotkeys.muteKey,\n          muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'm');\n      } : _hotkeys$muteKey,\n          _hotkeys$playPauseKey = hotkeys.playPauseKey,\n          playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n      } : _hotkeys$playPauseKey;\n\n      if (fullscreenKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var FSToggle = Component$1.getComponent('FullscreenToggle');\n\n        if (document[this.fsApi_.fullscreenEnabled] !== false) {\n          FSToggle.prototype.handleClick.call(this, event);\n        }\n      } else if (muteKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var MuteToggle = Component$1.getComponent('MuteToggle');\n        MuteToggle.prototype.handleClick.call(this, event);\n      } else if (playPauseKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var PlayToggle = Component$1.getComponent('PlayToggle');\n        PlayToggle.prototype.handleClick.call(this, event);\n      }\n    }\n    /**\n     * Check whether the player can play a given mimetype\n     *\n     * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n     *\n     * @param {string} type\n     *        The mimetype to check\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType(type) {\n      var can; // Loop through each playback technology in the options order\n\n      for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n        var techName = j[i];\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!tech) {\n          tech = Component$1.getComponent(techName);\n        } // Check if the current tech is defined before continuing\n\n\n        if (!tech) {\n          log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n          continue;\n        } // Check if the browser supports this technology\n\n\n        if (tech.isSupported()) {\n          can = tech.canPlayType(type);\n\n          if (can) {\n            return can;\n          }\n        }\n      }\n\n      return '';\n    }\n    /**\n     * Select source based on tech-order or source-order\n     * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n     * defaults to tech-order selection\n     *\n     * @param {Array} sources\n     *        The sources for a media asset\n     *\n     * @return {Object|boolean}\n     *         Object of source and tech order or false\n     */\n    ;\n\n    _proto.selectSource = function selectSource(sources) {\n      var _this14 = this;\n\n      // Get only the techs specified in `techOrder` that exist and are supported by the\n      // current platform\n      var techs = this.options_.techOrder.map(function (techName) {\n        return [techName, Tech.getTech(techName)];\n      }).filter(function (_ref) {\n        var techName = _ref[0],\n            tech = _ref[1];\n\n        // Check if the current tech is defined before continuing\n        if (tech) {\n          // Check if the browser supports this technology\n          return tech.isSupported();\n        }\n\n        log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        return false;\n      }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n      // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n      // that value.\n\n      var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n        var found;\n        outerArray.some(function (outerChoice) {\n          return innerArray.some(function (innerChoice) {\n            found = tester(outerChoice, innerChoice);\n\n            if (found) {\n              return true;\n            }\n          });\n        });\n        return found;\n      };\n\n      var foundSourceAndTech;\n\n      var flip = function flip(fn) {\n        return function (a, b) {\n          return fn(b, a);\n        };\n      };\n\n      var finder = function finder(_ref2, source) {\n        var techName = _ref2[0],\n            tech = _ref2[1];\n\n        if (tech.canPlaySource(source, _this14.options_[techName.toLowerCase()])) {\n          return {\n            source: source,\n            tech: techName\n          };\n        }\n      }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n      // to select from them based on their priority.\n\n\n      if (this.options_.sourceOrder) {\n        // Source-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n      } else {\n        // Tech-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n      }\n\n      return foundSourceAndTech || false;\n    }\n    /**\n     * Executes source setting and getting logic\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     * @param {boolean} isRetry\n     *        Indicates whether this is being called internally as a result of a retry\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    ;\n\n    _proto.handleSrc_ = function handleSrc_(source, isRetry) {\n      var _this15 = this;\n\n      // getter usage\n      if (typeof source === 'undefined') {\n        return this.cache_.src || '';\n      } // Reset retry behavior for new source\n\n\n      if (this.resetRetryOnError_) {\n        this.resetRetryOnError_();\n      } // filter out invalid sources and turn our source into\n      // an array of source objects\n\n\n      var sources = filterSource(source); // if a source was passed in then it is invalid because\n      // it was filtered to a zero length Array. So we have to\n      // show an error\n\n      if (!sources.length) {\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n        return;\n      } // initial sources\n\n\n      this.changingSrc_ = true; // Only update the cached source list if we are not retrying a new source after error,\n      // since in that case we want to include the failed source(s) in the cache\n\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n\n      this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n      setSource(this, sources[0], function (middlewareSource, mws) {\n        _this15.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n        // the source that is selected could be out of order from the cache update above this callback.\n\n        if (!isRetry) {\n          _this15.cache_.sources = sources;\n        }\n\n        _this15.updateSourceCaches_(middlewareSource);\n\n        var err = _this15.src_(middlewareSource);\n\n        if (err) {\n          if (sources.length > 1) {\n            return _this15.handleSrc_(sources.slice(1));\n          }\n\n          _this15.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n          _this15.setTimeout(function () {\n            this.error({\n              code: 4,\n              message: this.options_.notSupportedMessage\n            });\n          }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n          // this needs a better comment about why this is needed\n\n\n          _this15.triggerReady();\n\n          return;\n        }\n\n        setTech(mws, _this15.tech_);\n      }); // Try another available source if this one fails before playback.\n\n      if (this.options_.retryOnError && sources.length > 1) {\n        var retry = function retry() {\n          // Remove the error modal\n          _this15.error(null);\n\n          _this15.handleSrc_(sources.slice(1), true);\n        };\n\n        var stopListeningForErrors = function stopListeningForErrors() {\n          _this15.off('error', retry);\n        };\n\n        this.one('error', retry);\n        this.one('playing', stopListeningForErrors);\n\n        this.resetRetryOnError_ = function () {\n          _this15.off('error', retry);\n\n          _this15.off('playing', stopListeningForErrors);\n        };\n      }\n    }\n    /**\n     * Get or set the video source.\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    ;\n\n    _proto.src = function src(source) {\n      return this.handleSrc_(source, false);\n    }\n    /**\n     * Set the source object on the tech, returns a boolean that indicates whether\n     * there is a tech that can play the source or not\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object to set on the Tech\n     *\n     * @return {boolean}\n     *         - True if there is no Tech to playback this source\n     *         - False otherwise\n     *\n     * @private\n     */\n    ;\n\n    _proto.src_ = function src_(source) {\n      var _this16 = this;\n\n      var sourceTech = this.selectSource([source]);\n\n      if (!sourceTech) {\n        return true;\n      }\n\n      if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n        this.changingSrc_ = true; // load this technology with the chosen source\n\n        this.loadTech_(sourceTech.tech, sourceTech.source);\n        this.tech_.ready(function () {\n          _this16.changingSrc_ = false;\n        });\n        return false;\n      } // wait until the tech is ready to set the source\n      // and set it synchronously if possible (#2326)\n\n\n      this.ready(function () {\n        // The setSource tech method was added with source handlers\n        // so older techs won't support it\n        // We need to check the direct prototype for the case where subclasses\n        // of the tech do not support source handlers\n        if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n          this.techCall_('setSource', source);\n        } else {\n          this.techCall_('src', source.src);\n        }\n\n        this.changingSrc_ = false;\n      }, true);\n      return false;\n    }\n    /**\n     * Begin loading the src data.\n     */\n    ;\n\n    _proto.load = function load() {\n      this.techCall_('load');\n    }\n    /**\n     * Reset the player. Loads the first tech in the techOrder,\n     * removes all the text tracks in the existing `tech`,\n     * and calls `reset` on the `tech`.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      var _this17 = this;\n\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (this.paused() || !PromiseClass) {\n        this.doReset_();\n      } else {\n        var playPromise = this.play();\n        silencePromise(playPromise.then(function () {\n          return _this17.doReset_();\n        }));\n      }\n    };\n\n    _proto.doReset_ = function doReset_() {\n      if (this.tech_) {\n        this.tech_.clearTracks('text');\n      }\n\n      this.resetCache_();\n      this.poster('');\n      this.loadTech_(this.options_.techOrder[0], null);\n      this.techCall_('reset');\n      this.resetControlBarUI_();\n\n      if (isEvented(this)) {\n        this.trigger('playerreset');\n      }\n    }\n    /**\n     * Reset Control Bar's UI by calling sub-methods that reset\n     * all of Control Bar's components\n     */\n    ;\n\n    _proto.resetControlBarUI_ = function resetControlBarUI_() {\n      this.resetProgressBar_();\n      this.resetPlaybackRate_();\n      this.resetVolumeBar_();\n    }\n    /**\n     * Reset tech's progress so progress bar is reset in the UI\n     */\n    ;\n\n    _proto.resetProgressBar_ = function resetProgressBar_() {\n      this.currentTime(0);\n\n      var _ref3 = this.controlBar || {},\n          durationDisplay = _ref3.durationDisplay,\n          remainingTimeDisplay = _ref3.remainingTimeDisplay;\n\n      if (durationDisplay) {\n        durationDisplay.updateContent();\n      }\n\n      if (remainingTimeDisplay) {\n        remainingTimeDisplay.updateContent();\n      }\n    }\n    /**\n     * Reset Playback ratio\n     */\n    ;\n\n    _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n      this.playbackRate(this.defaultPlaybackRate());\n      this.handleTechRateChange_();\n    }\n    /**\n     * Reset Volume bar\n     */\n    ;\n\n    _proto.resetVolumeBar_ = function resetVolumeBar_() {\n      this.volume(1.0);\n      this.trigger('volumechange');\n    }\n    /**\n     * Returns all of the current source objects.\n     *\n     * @return {Tech~SourceObject[]}\n     *         The current source objects\n     */\n    ;\n\n    _proto.currentSources = function currentSources() {\n      var source = this.currentSource();\n      var sources = []; // assume `{}` or `{ src }`\n\n      if (Object.keys(source).length !== 0) {\n        sources.push(source);\n      }\n\n      return this.cache_.sources || sources;\n    }\n    /**\n     * Returns the current source object.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object\n     */\n    ;\n\n    _proto.currentSource = function currentSource() {\n      return this.cache_.source || {};\n    }\n    /**\n     * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n     * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n     *\n     * @return {string}\n     *         The current source\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      return this.currentSource() && this.currentSource().src || '';\n    }\n    /**\n     * Get the current source type e.g. video/mp4\n     * This can allow you rebuild the current source object so that you could load the same\n     * source and tech later\n     *\n     * @return {string}\n     *         The source MIME type\n     */\n    ;\n\n    _proto.currentType = function currentType() {\n      return this.currentSource() && this.currentSource().type || '';\n    }\n    /**\n     * Get or set the preload attribute\n     *\n     * @param {boolean} [value]\n     *        - true means that we should preload\n     *        - false means that we should not preload\n     *\n     * @return {string}\n     *         The preload attribute value when getting\n     */\n    ;\n\n    _proto.preload = function preload(value) {\n      if (value !== undefined) {\n        this.techCall_('setPreload', value);\n        this.options_.preload = value;\n        return;\n      }\n\n      return this.techGet_('preload');\n    }\n    /**\n     * Get or set the autoplay option. When this is a boolean it will\n     * modify the attribute on the tech. When this is a string the attribute on\n     * the tech will be removed and `Player` will handle autoplay on loadstarts.\n     *\n     * @param {boolean|string} [value]\n     *        - true: autoplay using the browser behavior\n     *        - false: do not autoplay\n     *        - 'play': call play() on every loadstart\n     *        - 'muted': call muted() then play() on every loadstart\n     *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n     *        - *: values other than those listed here will be set `autoplay` to true\n     *\n     * @return {boolean|string}\n     *         The current value of autoplay when getting\n     */\n    ;\n\n    _proto.autoplay = function autoplay(value) {\n      // getter usage\n      if (value === undefined) {\n        return this.options_.autoplay || false;\n      }\n\n      var techAutoplay; // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n\n      if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n        this.options_.autoplay = value;\n        this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n        techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n        // lets do the same\n      } else if (!value) {\n        this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n      } else {\n        this.options_.autoplay = true;\n      }\n\n      techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n      // a setAutoplay call on tech ready. We do this because the\n      // autoplay option will be passed in the constructor and we\n      // do not need to set it twice\n\n      if (this.tech_) {\n        this.techCall_('setAutoplay', techAutoplay);\n      }\n    }\n    /**\n     * Set or unset the playsinline attribute.\n     * Playsinline tells the browser that non-fullscreen playback is preferred.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should try to play inline by default\n     *        - false means that we should use the browser's default playback mode,\n     *          which in most cases is inline. iOS Safari is a notable exception\n     *          and plays fullscreen by default.\n     *\n     * @return {string|Player}\n     *         - the current value of playsinline\n     *         - the player when setting\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n     */\n    ;\n\n    _proto.playsinline = function playsinline(value) {\n      if (value !== undefined) {\n        this.techCall_('setPlaysinline', value);\n        this.options_.playsinline = value;\n        return this;\n      }\n\n      return this.techGet_('playsinline');\n    }\n    /**\n     * Get or set the loop attribute on the video element.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should loop the video\n     *        - false means that we should not loop the video\n     *\n     * @return {boolean}\n     *         The current value of loop when getting\n     */\n    ;\n\n    _proto.loop = function loop(value) {\n      if (value !== undefined) {\n        this.techCall_('setLoop', value);\n        this.options_.loop = value;\n        return;\n      }\n\n      return this.techGet_('loop');\n    }\n    /**\n     * Get or set the poster image source url\n     *\n     * @fires Player#posterchange\n     *\n     * @param {string} [src]\n     *        Poster image source URL\n     *\n     * @return {string}\n     *         The current value of poster when getting\n     */\n    ;\n\n    _proto.poster = function poster(src) {\n      if (src === undefined) {\n        return this.poster_;\n      } // The correct way to remove a poster is to set as an empty string\n      // other falsey values will throw errors\n\n\n      if (!src) {\n        src = '';\n      }\n\n      if (src === this.poster_) {\n        return;\n      } // update the internal poster variable\n\n\n      this.poster_ = src; // update the tech's poster\n\n      this.techCall_('setPoster', src);\n      this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n      /**\n       * This event fires when the poster image is changed on the player.\n       *\n       * @event Player#posterchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('posterchange');\n    }\n    /**\n     * Some techs (e.g. YouTube) can provide a poster source in an\n     * asynchronous way. We want the poster component to use this\n     * poster source so that it covers up the tech's controls.\n     * (YouTube's play button). However we only want to use this\n     * source if the player user hasn't set a poster through\n     * the normal APIs.\n     *\n     * @fires Player#posterchange\n     * @listens Tech#posterchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n      if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n        var newPoster = this.tech_.poster() || '';\n\n        if (newPoster !== this.poster_) {\n          this.poster_ = newPoster;\n          this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n          this.trigger('posterchange');\n        }\n      }\n    }\n    /**\n     * Get or set whether or not the controls are showing.\n     *\n     * @fires Player#controlsenabled\n     *\n     * @param {boolean} [bool]\n     *        - true to turn controls on\n     *        - false to turn controls off\n     *\n     * @return {boolean}\n     *         The current value of controls when getting\n     */\n    ;\n\n    _proto.controls = function controls(bool) {\n      if (bool === undefined) {\n        return !!this.controls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.controls_ === bool) {\n        return;\n      }\n\n      this.controls_ = bool;\n\n      if (this.usingNativeControls()) {\n        this.techCall_('setControls', bool);\n      }\n\n      if (this.controls_) {\n        this.removeClass('vjs-controls-disabled');\n        this.addClass('vjs-controls-enabled');\n        /**\n         * @event Player#controlsenabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsenabled');\n\n        if (!this.usingNativeControls()) {\n          this.addTechControlsListeners_();\n        }\n      } else {\n        this.removeClass('vjs-controls-enabled');\n        this.addClass('vjs-controls-disabled');\n        /**\n         * @event Player#controlsdisabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsdisabled');\n\n        if (!this.usingNativeControls()) {\n          this.removeTechControlsListeners_();\n        }\n      }\n    }\n    /**\n     * Toggle native controls on/off. Native controls are the controls built into\n     * devices (e.g. default iPhone controls) or other techs\n     * (e.g. Vimeo Controls)\n     * **This should only be set by the current tech, because only the tech knows\n     * if it can support native controls**\n     *\n     * @fires Player#usingnativecontrols\n     * @fires Player#usingcustomcontrols\n     *\n     * @param {boolean} [bool]\n     *        - true to turn native controls on\n     *        - false to turn native controls off\n     *\n     * @return {boolean}\n     *         The current value of native controls when getting\n     */\n    ;\n\n    _proto.usingNativeControls = function usingNativeControls(bool) {\n      if (bool === undefined) {\n        return !!this.usingNativeControls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.usingNativeControls_ === bool) {\n        return;\n      }\n\n      this.usingNativeControls_ = bool;\n\n      if (this.usingNativeControls_) {\n        this.addClass('vjs-using-native-controls');\n        /**\n         * player is using the native device controls\n         *\n         * @event Player#usingnativecontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingnativecontrols');\n      } else {\n        this.removeClass('vjs-using-native-controls');\n        /**\n         * player is using the custom HTML controls\n         *\n         * @event Player#usingcustomcontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingcustomcontrols');\n      }\n    }\n    /**\n     * Set or get the current MediaError\n     *\n     * @fires Player#error\n     *\n     * @param  {MediaError|string|number} [err]\n     *         A MediaError or a string/number to be turned\n     *         into a MediaError\n     *\n     * @return {MediaError|null}\n     *         The current MediaError when getting (or null)\n     */\n    ;\n\n    _proto.error = function error(err) {\n      var _this18 = this;\n\n      if (err === undefined) {\n        return this.error_ || null;\n      } // allow hooks to modify error object\n\n\n      hooks('beforeerror').forEach(function (hookFunction) {\n        var newErr = hookFunction(_this18, err);\n\n        if (!(isObject$1(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n          _this18.log.error('please return a value that MediaError expects in beforeerror hooks');\n\n          return;\n        }\n\n        err = newErr;\n      }); // Suppress the first error message for no compatible source until\n      // user interaction\n\n      if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n        var triggerSuppressedError = function triggerSuppressedError() {\n          this.error(err);\n        };\n\n        this.options_.suppressNotSupportedError = false;\n        this.any(['click', 'touchstart'], triggerSuppressedError);\n        this.one('loadstart', function () {\n          this.off(['click', 'touchstart'], triggerSuppressedError);\n        });\n        return;\n      } // restoring to default\n\n\n      if (err === null) {\n        this.error_ = err;\n        this.removeClass('vjs-error');\n\n        if (this.errorDisplay) {\n          this.errorDisplay.close();\n        }\n\n        return;\n      }\n\n      this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n      this.addClass('vjs-error'); // log the name of the error type and any message\n      // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n      log$1.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n      /**\n       * @event Player#error\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('error'); // notify hooks of the per player error\n\n      hooks('error').forEach(function (hookFunction) {\n        return hookFunction(_this18, _this18.error_);\n      });\n      return;\n    }\n    /**\n     * Report user activity\n     *\n     * @param {Object} event\n     *        Event object\n     */\n    ;\n\n    _proto.reportUserActivity = function reportUserActivity(event) {\n      this.userActivity_ = true;\n    }\n    /**\n     * Get/set if user is active\n     *\n     * @fires Player#useractive\n     * @fires Player#userinactive\n     *\n     * @param {boolean} [bool]\n     *        - true if the user is active\n     *        - false if the user is inactive\n     *\n     * @return {boolean}\n     *         The current value of userActive when getting\n     */\n    ;\n\n    _proto.userActive = function userActive(bool) {\n      if (bool === undefined) {\n        return this.userActive_;\n      }\n\n      bool = !!bool;\n\n      if (bool === this.userActive_) {\n        return;\n      }\n\n      this.userActive_ = bool;\n\n      if (this.userActive_) {\n        this.userActivity_ = true;\n        this.removeClass('vjs-user-inactive');\n        this.addClass('vjs-user-active');\n        /**\n         * @event Player#useractive\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('useractive');\n        return;\n      } // Chrome/Safari/IE have bugs where when you change the cursor it can\n      // trigger a mousemove event. This causes an issue when you're hiding\n      // the cursor when the user is inactive, and a mousemove signals user\n      // activity. Making it impossible to go into inactive mode. Specifically\n      // this happens in fullscreen when we really need to hide the cursor.\n      //\n      // When this gets resolved in ALL browsers it can be removed\n      // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n      if (this.tech_) {\n        this.tech_.one('mousemove', function (e) {\n          e.stopPropagation();\n          e.preventDefault();\n        });\n      }\n\n      this.userActivity_ = false;\n      this.removeClass('vjs-user-active');\n      this.addClass('vjs-user-inactive');\n      /**\n       * @event Player#userinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('userinactive');\n    }\n    /**\n     * Listen for user activity based on timeout value\n     *\n     * @private\n     */\n    ;\n\n    _proto.listenForUserActivity_ = function listenForUserActivity_() {\n      var mouseInProgress;\n      var lastMoveX;\n      var lastMoveY;\n      var handleActivity = bind(this, this.reportUserActivity);\n\n      var handleMouseMove = function handleMouseMove(e) {\n        // #1068 - Prevent mousemove spamming\n        // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n        if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n          lastMoveX = e.screenX;\n          lastMoveY = e.screenY;\n          handleActivity();\n        }\n      };\n\n      var handleMouseDown = function handleMouseDown() {\n        handleActivity(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n        // as the activityCheck interval (250) should ensure we never miss the\n        // next activityCheck\n\n        mouseInProgress = this.setInterval(handleActivity, 250);\n      };\n\n      var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n        handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n        this.clearInterval(mouseInProgress);\n      }; // Any mouse movement will be considered user activity\n\n\n      this.on('mousedown', handleMouseDown);\n      this.on('mousemove', handleMouseMove);\n      this.on('mouseup', handleMouseUpAndMouseLeave);\n      this.on('mouseleave', handleMouseUpAndMouseLeave);\n      var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n      // controlBar would no longer be hidden by default timeout.\n\n      if (controlBar && !IS_IOS && !IS_ANDROID) {\n        controlBar.on('mouseenter', function (event) {\n          if (this.player().options_.inactivityTimeout !== 0) {\n            this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n          }\n\n          this.player().options_.inactivityTimeout = 0;\n        });\n        controlBar.on('mouseleave', function (event) {\n          this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n        });\n      } // Listen for keyboard navigation\n      // Shouldn't need to use inProgress interval because of key repeat\n\n\n      this.on('keydown', handleActivity);\n      this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n      // the mousemove/touchmove function itself, to prevent performance degradation.\n      // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n      // then gets picked up by this loop\n      // http://ejohn.org/blog/learning-from-twitter/\n\n      var inactivityTimeout;\n      this.setInterval(function () {\n        // Check to see if mouse/touch activity has happened\n        if (!this.userActivity_) {\n          return;\n        } // Reset the activity tracker\n\n\n        this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n        this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n        this.clearTimeout(inactivityTimeout);\n        var timeout = this.options_.inactivityTimeout;\n\n        if (timeout <= 0) {\n          return;\n        } // In <timeout> milliseconds, if no more activity has occurred the\n        // user will be considered inactive\n\n\n        inactivityTimeout = this.setTimeout(function () {\n          // Protect against the case where the inactivityTimeout can trigger just\n          // before the next user activity is picked up by the activity check loop\n          // causing a flicker\n          if (!this.userActivity_) {\n            this.userActive(false);\n          }\n        }, timeout);\n      }, 250);\n    }\n    /**\n     * Gets or sets the current playback rate. A playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed\n     * playback, for instance.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n     *\n     * @param {number} [rate]\n     *       New playback rate to set.\n     *\n     * @return {number}\n     *         The current playback rate when getting or 1.0\n     */\n    ;\n\n    _proto.playbackRate = function playbackRate(rate) {\n      if (rate !== undefined) {\n        // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n        // that is registered above\n        this.techCall_('setPlaybackRate', rate);\n        return;\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the current default playback rate. A default playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n     * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n     * not the current playbackRate.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n     *\n     * @param {number} [rate]\n     *       New default playback rate to set.\n     *\n     * @return {number|Player}\n     *         - The default playback rate when getting or 1.0\n     *         - the player when setting\n     */\n    ;\n\n    _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n      if (rate !== undefined) {\n        return this.techCall_('setDefaultPlaybackRate', rate);\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.techGet_('defaultPlaybackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the audio flag\n     *\n     * @param {boolean} bool\n     *        - true signals that this is an audio player\n     *        - false signals that this is not an audio player\n     *\n     * @return {boolean}\n     *         The current value of isAudio when getting\n     */\n    ;\n\n    _proto.isAudio = function isAudio(bool) {\n      if (bool !== undefined) {\n        this.isAudio_ = !!bool;\n        return;\n      }\n\n      return !!this.isAudio_;\n    };\n\n    _proto.enableAudioOnlyUI_ = function enableAudioOnlyUI_() {\n      var _this19 = this;\n\n      // Update styling immediately to show the control bar so we can get its height\n      this.addClass('vjs-audio-only-mode');\n      var playerChildren = this.children();\n      var controlBar = this.getChild('ControlBar');\n      var controlBarHeight = controlBar && controlBar.currentHeight(); // Hide all player components except the control bar. Control bar components\n      // needed only for video are hidden with CSS\n\n      playerChildren.forEach(function (child) {\n        if (child === controlBar) {\n          return;\n        }\n\n        if (child.el_ && !child.hasClass('vjs-hidden')) {\n          child.hide();\n\n          _this19.audioOnlyCache_.hiddenChildren.push(child);\n        }\n      });\n      this.audioOnlyCache_.playerHeight = this.currentHeight(); // Set the player height the same as the control bar\n\n      this.height(controlBarHeight);\n      this.trigger('audioonlymodechange');\n    };\n\n    _proto.disableAudioOnlyUI_ = function disableAudioOnlyUI_() {\n      this.removeClass('vjs-audio-only-mode'); // Show player components that were previously hidden\n\n      this.audioOnlyCache_.hiddenChildren.forEach(function (child) {\n        return child.show();\n      }); // Reset player height\n\n      this.height(this.audioOnlyCache_.playerHeight);\n      this.trigger('audioonlymodechange');\n    }\n    /**\n     * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n     *\n     * Setting this to `true` will hide all player components except the control bar,\n     * as well as control bar components needed only for video.\n     *\n     * @param {boolean} [value]\n     *         The value to set audioOnlyMode to.\n     *\n     * @return {Promise|boolean}\n     *        A Promise is returned when setting the state, and a boolean when getting\n     *        the present state\n     */\n    ;\n\n    _proto.audioOnlyMode = function audioOnlyMode(value) {\n      var _this20 = this;\n\n      if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n        return this.audioOnlyMode_;\n      }\n\n      this.audioOnlyMode_ = value;\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        // Enable Audio Only Mode\n        if (value) {\n          var exitPromises = []; // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n\n          if (this.isInPictureInPicture()) {\n            exitPromises.push(this.exitPictureInPicture());\n          }\n\n          if (this.isFullscreen()) {\n            exitPromises.push(this.exitFullscreen());\n          }\n\n          if (this.audioPosterMode()) {\n            exitPromises.push(this.audioPosterMode(false));\n          }\n\n          return PromiseClass.all(exitPromises).then(function () {\n            return _this20.enableAudioOnlyUI_();\n          });\n        } // Disable Audio Only Mode\n\n\n        return PromiseClass.resolve().then(function () {\n          return _this20.disableAudioOnlyUI_();\n        });\n      }\n\n      if (value) {\n        if (this.isInPictureInPicture()) {\n          this.exitPictureInPicture();\n        }\n\n        if (this.isFullscreen()) {\n          this.exitFullscreen();\n        }\n\n        this.enableAudioOnlyUI_();\n      } else {\n        this.disableAudioOnlyUI_();\n      }\n    };\n\n    _proto.enablePosterModeUI_ = function enablePosterModeUI_() {\n      // Hide the video element and show the poster image to enable posterModeUI\n      var tech = this.tech_ && this.tech_;\n      tech.hide();\n      this.addClass('vjs-audio-poster-mode');\n      this.trigger('audiopostermodechange');\n    };\n\n    _proto.disablePosterModeUI_ = function disablePosterModeUI_() {\n      // Show the video element and hide the poster image to disable posterModeUI\n      var tech = this.tech_ && this.tech_;\n      tech.show();\n      this.removeClass('vjs-audio-poster-mode');\n      this.trigger('audiopostermodechange');\n    }\n    /**\n     * Get the current audioPosterMode state or set audioPosterMode to true or false\n     *\n     * @param {boolean} [value]\n     *         The value to set audioPosterMode to.\n     *\n     * @return {Promise|boolean}\n     *         A Promise is returned when setting the state, and a boolean when getting\n     *        the present state\n     */\n    ;\n\n    _proto.audioPosterMode = function audioPosterMode(value) {\n      var _this21 = this;\n\n      if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n        return this.audioPosterMode_;\n      }\n\n      this.audioPosterMode_ = value;\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        if (value) {\n          if (this.audioOnlyMode()) {\n            var audioOnlyModePromise = this.audioOnlyMode(false);\n            return audioOnlyModePromise.then(function () {\n              // enable audio poster mode after audio only mode is disabled\n              _this21.enablePosterModeUI_();\n            });\n          }\n\n          return PromiseClass.resolve().then(function () {\n            // enable audio poster mode\n            _this21.enablePosterModeUI_();\n          });\n        }\n\n        return PromiseClass.resolve().then(function () {\n          // disable audio poster mode\n          _this21.disablePosterModeUI_();\n        });\n      }\n\n      if (value) {\n        if (this.audioOnlyMode()) {\n          this.audioOnlyMode(false);\n        }\n\n        this.enablePosterModeUI_();\n        return;\n      }\n\n      this.disablePosterModeUI_();\n    }\n    /**\n     * A helper method for adding a {@link TextTrack} to our\n     * {@link TextTrackList}.\n     *\n     * In addition to the W3C settings we allow adding additional info through options.\n     *\n     * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n     *\n     * @param {string} [kind]\n     *        the kind of TextTrack you are adding\n     *\n     * @param {string} [label]\n     *        the label to give the TextTrack label\n     *\n     * @param {string} [language]\n     *        the language to set on the TextTrack\n     *\n     * @return {TextTrack|undefined}\n     *         the TextTrack that was added or undefined\n     *         if there is no tech\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (this.tech_) {\n        return this.tech_.addTextTrack(kind, label, language);\n      }\n    }\n    /**\n     * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n     * When manualCleanup is set to false, the track will be automatically removed\n     * on source changes.\n     *\n     * @param {Object} options\n     *        Options to pass to {@link HTMLTrackElement} during creation. See\n     *        {@link HTMLTrackElement} for object properties that you should use.\n     *\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     *                                       removed on a source change\n     *\n     * @return {HtmlTrackElement}\n     *         the HTMLTrackElement that was created and added\n     *         to the HtmlTrackElementList and the remote\n     *         TextTrackList\n     *\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     *             to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      if (this.tech_) {\n        return this.tech_.addRemoteTextTrack(options, manualCleanup);\n      }\n    }\n    /**\n     * Remove a remote {@link TextTrack} from the respective\n     * {@link TextTrackList} and {@link HtmlTrackElementList}.\n     *\n     * @param {Object} track\n     *        Remote {@link TextTrack} to remove\n     *\n     * @return {undefined}\n     *         does not return anything\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n      if (obj === void 0) {\n        obj = {};\n      }\n\n      var _obj = obj,\n          track = _obj.track;\n\n      if (!track) {\n        track = obj;\n      } // destructure the input into an object with a track argument, defaulting to arguments[0]\n      // default the whole argument to an empty object if nothing was passed in\n\n\n      if (this.tech_) {\n        return this.tech_.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object|undefined}\n     *         An object with supported media playback quality metrics or undefined if there\n     *         is no tech or the tech does not support it.\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return this.techGet_('getVideoPlaybackQuality');\n    }\n    /**\n     * Get video width\n     *\n     * @return {number}\n     *         current video width\n     */\n    ;\n\n    _proto.videoWidth = function videoWidth() {\n      return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n    }\n    /**\n     * Get video height\n     *\n     * @return {number}\n     *         current video height\n     */\n    ;\n\n    _proto.videoHeight = function videoHeight() {\n      return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n    }\n    /**\n     * The player's language code.\n     *\n     * Changing the language will trigger\n     * [languagechange]{@link Player#event:languagechange}\n     * which Components can use to update control text.\n     * ClickableComponent will update its control text by default on\n     * [languagechange]{@link Player#event:languagechange}.\n     *\n     * @fires Player#languagechange\n     *\n     * @param {string} [code]\n     *        the language code to set the player to\n     *\n     * @return {string}\n     *         The current language code when getting\n     */\n    ;\n\n    _proto.language = function language(code) {\n      if (code === undefined) {\n        return this.language_;\n      }\n\n      if (this.language_ !== String(code).toLowerCase()) {\n        this.language_ = String(code).toLowerCase(); // during first init, it's possible some things won't be evented\n\n        if (isEvented(this)) {\n          /**\n          * fires when the player language change\n          *\n          * @event Player#languagechange\n          * @type {EventTarget~Event}\n          */\n          this.trigger('languagechange');\n        }\n      }\n    }\n    /**\n     * Get the player's language dictionary\n     * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n     * Languages specified directly in the player options have precedence\n     *\n     * @return {Array}\n     *         An array of of supported languages\n     */\n    ;\n\n    _proto.languages = function languages() {\n      return mergeOptions$3(Player.prototype.options_.languages, this.languages_);\n    }\n    /**\n     * returns a JavaScript object reperesenting the current track\n     * information. **DOES not return it as JSON**\n     *\n     * @return {Object}\n     *         Object representing the current of track info\n     */\n    ;\n\n    _proto.toJSON = function toJSON() {\n      var options = mergeOptions$3(this.options_);\n      var tracks = options.tracks;\n      options.tracks = [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n        track = mergeOptions$3(track);\n        track.player = undefined;\n        options.tracks[i] = track;\n      }\n\n      return options;\n    }\n    /**\n     * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n     * component) that immediately overlays the player with arbitrary\n     * content and removes itself when closed.\n     *\n     * @param {string|Function|Element|Array|null} content\n     *        Same as {@link ModalDialog#content}'s param of the same name.\n     *        The most straight-forward usage is to provide a string or DOM\n     *        element.\n     *\n     * @param {Object} [options]\n     *        Extra options which will be passed on to the {@link ModalDialog}.\n     *\n     * @return {ModalDialog}\n     *         the {@link ModalDialog} that was created\n     */\n    ;\n\n    _proto.createModal = function createModal(content, options) {\n      var _this22 = this;\n\n      options = options || {};\n      options.content = content || '';\n      var modal = new ModalDialog(this, options);\n      this.addChild(modal);\n      modal.on('dispose', function () {\n        _this22.removeChild(modal);\n      });\n      modal.open();\n      return modal;\n    }\n    /**\n     * Change breakpoint classes when the player resizes.\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n      if (!this.responsive()) {\n        return;\n      }\n\n      var currentBreakpoint = this.currentBreakpoint();\n      var currentWidth = this.currentWidth();\n\n      for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n        var candidateBreakpoint = BREAKPOINT_ORDER[i];\n        var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n        if (currentWidth <= maxWidth) {\n          // The current breakpoint did not change, nothing to do.\n          if (currentBreakpoint === candidateBreakpoint) {\n            return;\n          } // Only remove a class if there is a current breakpoint.\n\n\n          if (currentBreakpoint) {\n            this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n          }\n\n          this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n          this.breakpoint_ = candidateBreakpoint;\n          break;\n        }\n      }\n    }\n    /**\n     * Removes the current breakpoint.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n      var className = this.currentBreakpointClass();\n      this.breakpoint_ = '';\n\n      if (className) {\n        this.removeClass(className);\n      }\n    }\n    /**\n     * Get or set breakpoints on the player.\n     *\n     * Calling this method with an object or `true` will remove any previous\n     * custom breakpoints and start from the defaults again.\n     *\n     * @param  {Object|boolean} [breakpoints]\n     *         If an object is given, it can be used to provide custom\n     *         breakpoints. If `true` is given, will set default breakpoints.\n     *         If this argument is not given, will simply return the current\n     *         breakpoints.\n     *\n     * @param  {number} [breakpoints.tiny]\n     *         The maximum width for the \"vjs-layout-tiny\" class.\n     *\n     * @param  {number} [breakpoints.xsmall]\n     *         The maximum width for the \"vjs-layout-x-small\" class.\n     *\n     * @param  {number} [breakpoints.small]\n     *         The maximum width for the \"vjs-layout-small\" class.\n     *\n     * @param  {number} [breakpoints.medium]\n     *         The maximum width for the \"vjs-layout-medium\" class.\n     *\n     * @param  {number} [breakpoints.large]\n     *         The maximum width for the \"vjs-layout-large\" class.\n     *\n     * @param  {number} [breakpoints.xlarge]\n     *         The maximum width for the \"vjs-layout-x-large\" class.\n     *\n     * @param  {number} [breakpoints.huge]\n     *         The maximum width for the \"vjs-layout-huge\" class.\n     *\n     * @return {Object}\n     *         An object mapping breakpoint names to maximum width values.\n     */\n    ;\n\n    _proto.breakpoints = function breakpoints(_breakpoints) {\n      // Used as a getter.\n      if (_breakpoints === undefined) {\n        return assign(this.breakpoints_);\n      }\n\n      this.breakpoint_ = '';\n      this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n      // selected breakpoint.\n\n      this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n      return assign(this.breakpoints_);\n    }\n    /**\n     * Get or set a flag indicating whether or not this player should adjust\n     * its UI based on its dimensions.\n     *\n     * @param  {boolean} value\n     *         Should be `true` if the player should adjust its UI based on its\n     *         dimensions; otherwise, should be `false`.\n     *\n     * @return {boolean}\n     *         Will be `true` if this player should adjust its UI based on its\n     *         dimensions; otherwise, will be `false`.\n     */\n    ;\n\n    _proto.responsive = function responsive(value) {\n      // Used as a getter.\n      if (value === undefined) {\n        return this.responsive_;\n      }\n\n      value = Boolean(value);\n      var current = this.responsive_; // Nothing changed.\n\n      if (value === current) {\n        return;\n      } // The value actually changed, set it.\n\n\n      this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n      // player is now responsive.\n\n      if (value) {\n        this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n      } else {\n        this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.removeCurrentBreakpoint_();\n      }\n\n      return value;\n    }\n    /**\n     * Get current breakpoint name, if any.\n     *\n     * @return {string}\n     *         If there is currently a breakpoint set, returns a the key from the\n     *         breakpoints object matching it. Otherwise, returns an empty string.\n     */\n    ;\n\n    _proto.currentBreakpoint = function currentBreakpoint() {\n      return this.breakpoint_;\n    }\n    /**\n     * Get the current breakpoint class name.\n     *\n     * @return {string}\n     *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n     *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n     *         there is no current breakpoint.\n     */\n    ;\n\n    _proto.currentBreakpointClass = function currentBreakpointClass() {\n      return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n    }\n    /**\n     * An object that describes a single piece of media.\n     *\n     * Properties that are not part of this type description will be retained; so,\n     * this can be viewed as a generic metadata storage mechanism as well.\n     *\n     * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n     * @typedef  {Object} Player~MediaObject\n     *\n     * @property {string} [album]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {string} [artist]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [artwork]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API. If not specified, will be populated via the `poster`, if\n     *           available.\n     *\n     * @property {string} [poster]\n     *           URL to an image that will display before playback.\n     *\n     * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n     *           A single source object, an array of source objects, or a string\n     *           referencing a URL to a media source. It is _highly recommended_\n     *           that an object or array of objects is used here, so that source\n     *           selection algorithms can take the `type` into account.\n     *\n     * @property {string} [title]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [textTracks]\n     *           An array of objects to be used to create text tracks, following\n     *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n     *           For ease of removal, these will be created as \"remote\" text\n     *           tracks and set to automatically clean up on source changes.\n     *\n     *           These objects may have properties like `src`, `kind`, `label`,\n     *           and `language`, see {@link Tech#createRemoteTextTrack}.\n     */\n\n    /**\n     * Populate the player using a {@link Player~MediaObject|MediaObject}.\n     *\n     * @param  {Player~MediaObject} media\n     *         A media object.\n     *\n     * @param  {Function} ready\n     *         A callback to be called when the player is ready.\n     */\n    ;\n\n    _proto.loadMedia = function loadMedia(media, ready) {\n      var _this23 = this;\n\n      if (!media || typeof media !== 'object') {\n        return;\n      }\n\n      this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n      this.cache_.media = mergeOptions$3(media);\n      var _this$cache_$media = this.cache_.media,\n          artwork = _this$cache_$media.artwork,\n          poster = _this$cache_$media.poster,\n          src = _this$cache_$media.src,\n          textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n      if (!artwork && poster) {\n        this.cache_.media.artwork = [{\n          src: poster,\n          type: getMimetype(poster)\n        }];\n      }\n\n      if (src) {\n        this.src(src);\n      }\n\n      if (poster) {\n        this.poster(poster);\n      }\n\n      if (Array.isArray(textTracks)) {\n        textTracks.forEach(function (tt) {\n          return _this23.addRemoteTextTrack(tt, false);\n        });\n      }\n\n      this.ready(ready);\n    }\n    /**\n     * Get a clone of the current {@link Player~MediaObject} for this player.\n     *\n     * If the `loadMedia` method has not been used, will attempt to return a\n     * {@link Player~MediaObject} based on the current state of the player.\n     *\n     * @return {Player~MediaObject}\n     */\n    ;\n\n    _proto.getMedia = function getMedia() {\n      if (!this.cache_.media) {\n        var poster = this.poster();\n        var src = this.currentSources();\n        var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n          return {\n            kind: tt.kind,\n            label: tt.label,\n            language: tt.language,\n            src: tt.src\n          };\n        });\n        var media = {\n          src: src,\n          textTracks: textTracks\n        };\n\n        if (poster) {\n          media.poster = poster;\n          media.artwork = [{\n            src: media.poster,\n            type: getMimetype(media.poster)\n          }];\n        }\n\n        return media;\n      }\n\n      return mergeOptions$3(this.cache_.media);\n    }\n    /**\n     * Gets tag settings\n     *\n     * @param {Element} tag\n     *        The player tag\n     *\n     * @return {Object}\n     *         An object containing all of the settings\n     *         for a player tag\n     */\n    ;\n\n    Player.getTagSettings = function getTagSettings(tag) {\n      var baseOptions = {\n        sources: [],\n        tracks: []\n      };\n      var tagOptions = getAttributes(tag);\n      var dataSetup = tagOptions['data-setup'];\n\n      if (hasClass(tag, 'vjs-fill')) {\n        tagOptions.fill = true;\n      }\n\n      if (hasClass(tag, 'vjs-fluid')) {\n        tagOptions.fluid = true;\n      } // Check if data-setup attr exists.\n\n\n      if (dataSetup !== null) {\n        // Parse options JSON\n        // If empty string, make it a parsable json object.\n        var _safeParseTuple = tuple(dataSetup || '{}'),\n            err = _safeParseTuple[0],\n            data = _safeParseTuple[1];\n\n        if (err) {\n          log$1.error(err);\n        }\n\n        assign(tagOptions, data);\n      }\n\n      assign(baseOptions, tagOptions); // Get tag children settings\n\n      if (tag.hasChildNodes()) {\n        var children = tag.childNodes;\n\n        for (var i = 0, j = children.length; i < j; i++) {\n          var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n          var childName = child.nodeName.toLowerCase();\n\n          if (childName === 'source') {\n            baseOptions.sources.push(getAttributes(child));\n          } else if (childName === 'track') {\n            baseOptions.tracks.push(getAttributes(child));\n          }\n        }\n      }\n\n      return baseOptions;\n    }\n    /**\n     * Determine whether or not flexbox is supported\n     *\n     * @return {boolean}\n     *         - true if flexbox is supported\n     *         - false if flexbox is not supported\n     */\n    ;\n\n    _proto.flexNotSupported_ = function flexNotSupported_() {\n      var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n      // common flex features that we can rely on when checking for flex support.\n\n      return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n      'msFlexOrder' in elem.style);\n    }\n    /**\n     * Set debug mode to enable/disable logs at info level.\n     *\n     * @param {boolean} enabled\n     * @fires Player#debugon\n     * @fires Player#debugoff\n     */\n    ;\n\n    _proto.debug = function debug(enabled) {\n      if (enabled === undefined) {\n        return this.debugEnabled_;\n      }\n\n      if (enabled) {\n        this.trigger('debugon');\n        this.previousLogLevel_ = this.log.level;\n        this.log.level('debug');\n        this.debugEnabled_ = true;\n      } else {\n        this.trigger('debugoff');\n        this.log.level(this.previousLogLevel_);\n        this.previousLogLevel_ = undefined;\n        this.debugEnabled_ = false;\n      }\n    }\n    /**\n     * Set or get current playback rates.\n     * Takes an array and updates the playback rates menu with the new items.\n     * Pass in an empty array to hide the menu.\n     * Values other than arrays are ignored.\n     *\n     * @fires Player#playbackrateschange\n     * @param {number[]} newRates\n     *                   The new rates that the playback rates menu should update to.\n     *                   An empty array will hide the menu\n     * @return {number[]} When used as a getter will return the current playback rates\n     */\n    ;\n\n    _proto.playbackRates = function playbackRates(newRates) {\n      if (newRates === undefined) {\n        return this.cache_.playbackRates;\n      } // ignore any value that isn't an array\n\n\n      if (!Array.isArray(newRates)) {\n        return;\n      } // ignore any arrays that don't only contain numbers\n\n\n      if (!newRates.every(function (rate) {\n        return typeof rate === 'number';\n      })) {\n        return;\n      }\n\n      this.cache_.playbackRates = newRates;\n      /**\n      * fires when the playback rates in a player are changed\n      *\n      * @event Player#playbackrateschange\n      * @type {EventTarget~Event}\n      */\n\n      this.trigger('playbackrateschange');\n    };\n\n    return Player;\n  }(Component$1);\n  /**\n   * Get the {@link VideoTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n   *\n   * @return {VideoTrackList}\n   *         the current video track list\n   *\n   * @method Player.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n   *\n   * @return {AudioTrackList}\n   *         the current audio track list\n   *\n   * @method Player.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n   *\n   * @return {TextTrackList}\n   *         the current text track list\n   *\n   * @method Player.prototype.textTracks\n   */\n\n  /**\n   * Get the remote {@link TextTrackList}\n   *\n   * @return {TextTrackList}\n   *         The current remote text track list\n   *\n   * @method Player.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote {@link HtmlTrackElementList} tracks.\n   *\n   * @return {HtmlTrackElementList}\n   *         The current remote text track element list\n   *\n   * @method Player.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name) {\n    var props = ALL[name];\n\n    Player.prototype[props.getterName] = function () {\n      if (this.tech_) {\n        return this.tech_[props.getterName]();\n      } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n      // these will be passed to the tech during loading\n\n\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossorigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossorigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n  Player.prototype.crossorigin = Player.prototype.crossOrigin;\n  /**\n   * Global enumeration of players.\n   *\n   * The keys are the player IDs and the values are either the {@link Player}\n   * instance or `null` for disposed players.\n   *\n   * @type {Object}\n   */\n\n  Player.players = {};\n  var navigator = window.navigator;\n  /*\n   * Player instance options, surfaced using options\n   * options = Player.prototype.options_\n   * Make changes in options, not here.\n   *\n   * @type {Object}\n   * @private\n   */\n\n  Player.prototype.options_ = {\n    // Default order of fallback technology\n    techOrder: Tech.defaultTechOrder_,\n    html5: {},\n    // default inactivity timeout\n    inactivityTimeout: 2000,\n    // default playback rates\n    playbackRates: [],\n    // Add playback rate selection by adding rates\n    // 'playbackRates': [0.5, 1, 1.5, 2],\n    liveui: false,\n    // Included control sets\n    children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n    language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n    // locales and their language translations\n    languages: {},\n    // Default message to show when a video cannot be played.\n    notSupportedMessage: 'No compatible source was found for this media.',\n    normalizeAutoplay: false,\n    fullscreen: {\n      options: {\n        navigationUI: 'hide'\n      }\n    },\n    breakpoints: {},\n    responsive: false,\n    audioOnlyMode: false,\n    audioPosterMode: false\n  };\n  [\n  /**\n   * Returns whether or not the player is in the \"ended\" state.\n   *\n   * @return {Boolean} True if the player is in the ended state, false if not.\n   * @method Player#ended\n   */\n  'ended',\n  /**\n   * Returns whether or not the player is in the \"seeking\" state.\n   *\n   * @return {Boolean} True if the player is in the seeking state, false if not.\n   * @method Player#seeking\n   */\n  'seeking',\n  /**\n   * Returns the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @return {TimeRanges} the seekable intervals of the media timeline\n   * @method Player#seekable\n   */\n  'seekable',\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   * @method Player#networkState\n   */\n  'networkState',\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   * @method Player#readyState\n   */\n  'readyState'].forEach(function (fn) {\n    Player.prototype[fn] = function () {\n      return this.techGet_(fn);\n    };\n  });\n  TECH_EVENTS_RETRIGGER.forEach(function (event) {\n    Player.prototype[\"handleTech\" + toTitleCase$1(event) + \"_\"] = function () {\n      return this.trigger(event);\n    };\n  });\n  /**\n   * Fired when the player has initial duration and dimension information\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the player has downloaded data at the current playback position\n   *\n   * @event Player#loadeddata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the current playback position has changed *\n   * During playback this is fired every 15-250 milliseconds, depending on the\n   * playback technology in use.\n   *\n   * @event Player#timeupdate\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the volume changes\n   *\n   * @event Player#volumechange\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Reports whether or not a player has a plugin available.\n   *\n   * This does not report whether or not the plugin has ever been initialized\n   * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n   *\n   * @method Player#hasPlugin\n   * @param  {string}  name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player has the requested plugin available.\n   */\n\n  /**\n   * Reports whether or not a player is using a plugin by name.\n   *\n   * For basic plugins, this only reports whether the plugin has _ever_ been\n   * initialized on this player.\n   *\n   * @method Player#usingPlugin\n   * @param  {string} name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player is using the requested plugin.\n   */\n\n  Component$1.registerComponent('Player', Player);\n\n  var setPrototypeOf = createCommonjsModule(function (module) {\n    function _setPrototypeOf(o, p) {\n      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      return _setPrototypeOf(o, p);\n    }\n\n    module.exports = _setPrototypeOf;\n  });\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  var isNativeReflectConstruct = _isNativeReflectConstruct;\n\n  var construct = createCommonjsModule(function (module) {\n    function _construct(Parent, args, Class) {\n      if (isNativeReflectConstruct()) {\n        module.exports = _construct = Reflect.construct;\n      } else {\n        module.exports = _construct = function _construct(Parent, args, Class) {\n          var a = [null];\n          a.push.apply(a, args);\n          var Constructor = Function.bind.apply(Parent, a);\n          var instance = new Constructor();\n          if (Class) setPrototypeOf(instance, Class.prototype);\n          return instance;\n        };\n      }\n\n      return _construct.apply(null, arguments);\n    }\n\n    module.exports = _construct;\n  });\n\n  /**\n   * The base plugin name.\n   *\n   * @private\n   * @constant\n   * @type {string}\n   */\n\n  var BASE_PLUGIN_NAME = 'plugin';\n  /**\n   * The key on which a player's active plugins cache is stored.\n   *\n   * @private\n   * @constant\n   * @type     {string}\n   */\n\n  var PLUGIN_CACHE_KEY = 'activePlugins_';\n  /**\n   * Stores registered plugins in a private space.\n   *\n   * @private\n   * @type    {Object}\n   */\n\n  var pluginStorage = {};\n  /**\n   * Reports whether or not a plugin has been registered.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {boolean}\n   *          Whether or not the plugin has been registered.\n   */\n\n  var pluginExists = function pluginExists(name) {\n    return pluginStorage.hasOwnProperty(name);\n  };\n  /**\n   * Get a single registered plugin by name.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {Function|undefined}\n   *          The plugin (or undefined).\n   */\n\n\n  var getPlugin = function getPlugin(name) {\n    return pluginExists(name) ? pluginStorage[name] : undefined;\n  };\n  /**\n   * Marks a plugin as \"active\" on a player.\n   *\n   * Also, ensures that the player has an object for tracking active plugins.\n   *\n   * @private\n   * @param   {Player} player\n   *          A Video.js player instance.\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   */\n\n\n  var markPluginAsActive = function markPluginAsActive(player, name) {\n    player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n    player[PLUGIN_CACHE_KEY][name] = true;\n  };\n  /**\n   * Triggers a pair of plugin setup events.\n   *\n   * @private\n   * @param  {Player} player\n   *         A Video.js player instance.\n   *\n   * @param  {Plugin~PluginEventHash} hash\n   *         A plugin event hash.\n   *\n   * @param  {boolean} [before]\n   *         If true, prefixes the event name with \"before\". In other words,\n   *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n   */\n\n\n  var triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n    var eventName = (before ? 'before' : '') + 'pluginsetup';\n    player.trigger(eventName, hash);\n    player.trigger(eventName + ':' + hash.name, hash);\n  };\n  /**\n   * Takes a basic plugin function and returns a wrapper function which marks\n   * on the player that the plugin has been activated.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Function} plugin\n   *          The basic plugin.\n   *\n   * @return {Function}\n   *          A wrapper function for the given plugin.\n   */\n\n\n  var createBasicPlugin = function createBasicPlugin(name, plugin) {\n    var basicPluginWrapper = function basicPluginWrapper() {\n      // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n      // regardless, but we want the hash to be consistent with the hash provided\n      // for advanced plugins.\n      //\n      // The only potentially counter-intuitive thing here is the `instance` in\n      // the \"pluginsetup\" event is the value returned by the `plugin` function.\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: null\n      }, true);\n      var instance = plugin.apply(this, arguments);\n      markPluginAsActive(this, name);\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: instance\n      });\n      return instance;\n    };\n\n    Object.keys(plugin).forEach(function (prop) {\n      basicPluginWrapper[prop] = plugin[prop];\n    });\n    return basicPluginWrapper;\n  };\n  /**\n   * Takes a plugin sub-class and returns a factory function for generating\n   * instances of it.\n   *\n   * This factory function will replace itself with an instance of the requested\n   * sub-class of Plugin.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Plugin} PluginSubClass\n   *          The advanced plugin.\n   *\n   * @return {Function}\n   */\n\n\n  var createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n    // Add a `name` property to the plugin prototype so that each plugin can\n    // refer to itself by name.\n    PluginSubClass.prototype.name = name;\n    return function () {\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: PluginSubClass,\n        instance: null\n      }, true);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var instance = construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n      this[name] = function () {\n        return instance;\n      };\n\n      triggerSetupEvent(this, instance.getEventHash());\n      return instance;\n    };\n  };\n  /**\n   * Parent class for all advanced plugins.\n   *\n   * @mixes   module:evented~EventedMixin\n   * @mixes   module:stateful~StatefulMixin\n   * @fires   Player#beforepluginsetup\n   * @fires   Player#beforepluginsetup:$name\n   * @fires   Player#pluginsetup\n   * @fires   Player#pluginsetup:$name\n   * @listens Player#dispose\n   * @throws  {Error}\n   *          If attempting to instantiate the base {@link Plugin} class\n   *          directly instead of via a sub-class.\n   */\n\n\n  var Plugin = /*#__PURE__*/function () {\n    /**\n     * Creates an instance of this class.\n     *\n     * Sub-classes should call `super` to ensure plugins are properly initialized.\n     *\n     * @param {Player} player\n     *        A Video.js player instance.\n     */\n    function Plugin(player) {\n      if (this.constructor === Plugin) {\n        throw new Error('Plugin must be sub-classed; not directly instantiated.');\n      }\n\n      this.player = player;\n\n      if (!this.log) {\n        this.log = this.player.log.createLogger(this.name);\n      } // Make this object evented, but remove the added `trigger` method so we\n      // use the prototype version instead.\n\n\n      evented(this);\n      delete this.trigger;\n      stateful(this, this.constructor.defaultState);\n      markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n      // it later easily.\n\n      this.dispose = this.dispose.bind(this); // If the player is disposed, dispose the plugin.\n\n      player.on('dispose', this.dispose);\n    }\n    /**\n     * Get the version of the plugin that was set on <pluginName>.VERSION\n     */\n\n\n    var _proto = Plugin.prototype;\n\n    _proto.version = function version() {\n      return this.constructor.VERSION;\n    }\n    /**\n     * Each event triggered by plugins includes a hash of additional data with\n     * conventional properties.\n     *\n     * This returns that object or mutates an existing hash.\n     *\n     * @param   {Object} [hash={}]\n     *          An object to be used as event an event hash.\n     *\n     * @return {Plugin~PluginEventHash}\n     *          An event hash object with provided properties mixed-in.\n     */\n    ;\n\n    _proto.getEventHash = function getEventHash(hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      hash.name = this.name;\n      hash.plugin = this.constructor;\n      hash.instance = this;\n      return hash;\n    }\n    /**\n     * Triggers an event on the plugin object and overrides\n     * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash={}]\n     *          Additional data hash to merge with a\n     *          {@link Plugin~PluginEventHash|PluginEventHash}.\n     *\n     * @return {boolean}\n     *          Whether or not default was prevented.\n     */\n    ;\n\n    _proto.trigger = function trigger$1(event, hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n    }\n    /**\n     * Handles \"statechanged\" events on the plugin. No-op by default, override by\n     * subclassing.\n     *\n     * @abstract\n     * @param    {Event} e\n     *           An event object provided by a \"statechanged\" event.\n     *\n     * @param    {Object} e.changes\n     *           An object describing changes that occurred with the \"statechanged\"\n     *           event.\n     */\n    ;\n\n    _proto.handleStateChanged = function handleStateChanged(e) {}\n    /**\n     * Disposes a plugin.\n     *\n     * Subclasses can override this if they want, but for the sake of safety,\n     * it's probably best to subscribe the \"dispose\" event.\n     *\n     * @fires Plugin#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var name = this.name,\n          player = this.player;\n      /**\n       * Signals that a advanced plugin is about to be disposed.\n       *\n       * @event Plugin#dispose\n       * @type  {EventTarget~Event}\n       */\n\n      this.trigger('dispose');\n      this.off();\n      player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n      // references between the player and the plugin instance and nulling out\n      // the plugin's state and replacing methods with a function that throws.\n\n      player[PLUGIN_CACHE_KEY][name] = false;\n      this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n      // function, so that the plugin is ready to be set up again.\n\n      player[name] = createPluginFactory(name, pluginStorage[name]);\n    }\n    /**\n     * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n     *\n     * @param   {string|Function} plugin\n     *          If a string, matches the name of a plugin. If a function, will be\n     *          tested directly.\n     *\n     * @return {boolean}\n     *          Whether or not a plugin is a basic plugin.\n     */\n    ;\n\n    Plugin.isBasic = function isBasic(plugin) {\n      var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n      return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n    }\n    /**\n     * Register a Video.js plugin.\n     *\n     * @param   {string} name\n     *          The name of the plugin to be registered. Must be a string and\n     *          must not match an existing plugin or a method on the `Player`\n     *          prototype.\n     *\n     * @param   {Function} plugin\n     *          A sub-class of `Plugin` or a function for basic plugins.\n     *\n     * @return {Function}\n     *          For advanced plugins, a factory function for that plugin. For\n     *          basic plugins, a wrapper function that initializes the plugin.\n     */\n    ;\n\n    Plugin.registerPlugin = function registerPlugin(name, plugin) {\n      if (typeof name !== 'string') {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n      }\n\n      if (pluginExists(name)) {\n        log$1.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n      } else if (Player.prototype.hasOwnProperty(name)) {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n      }\n\n      if (typeof plugin !== 'function') {\n        throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n      }\n\n      pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n      // the base Plugin class).\n\n      if (name !== BASE_PLUGIN_NAME) {\n        if (Plugin.isBasic(plugin)) {\n          Player.prototype[name] = createBasicPlugin(name, plugin);\n        } else {\n          Player.prototype[name] = createPluginFactory(name, plugin);\n        }\n      }\n\n      return plugin;\n    }\n    /**\n     * De-register a Video.js plugin.\n     *\n     * @param  {string} name\n     *         The name of the plugin to be de-registered. Must be a string that\n     *         matches an existing plugin.\n     *\n     * @throws {Error}\n     *         If an attempt is made to de-register the base plugin.\n     */\n    ;\n\n    Plugin.deregisterPlugin = function deregisterPlugin(name) {\n      if (name === BASE_PLUGIN_NAME) {\n        throw new Error('Cannot de-register base plugin.');\n      }\n\n      if (pluginExists(name)) {\n        delete pluginStorage[name];\n        delete Player.prototype[name];\n      }\n    }\n    /**\n     * Gets an object containing multiple Video.js plugins.\n     *\n     * @param   {Array} [names]\n     *          If provided, should be an array of plugin names. Defaults to _all_\n     *          plugin names.\n     *\n     * @return {Object|undefined}\n     *          An object containing plugin(s) associated with their name(s) or\n     *          `undefined` if no matching plugins exist).\n     */\n    ;\n\n    Plugin.getPlugins = function getPlugins(names) {\n      if (names === void 0) {\n        names = Object.keys(pluginStorage);\n      }\n\n      var result;\n      names.forEach(function (name) {\n        var plugin = getPlugin(name);\n\n        if (plugin) {\n          result = result || {};\n          result[name] = plugin;\n        }\n      });\n      return result;\n    }\n    /**\n     * Gets a plugin's version, if available\n     *\n     * @param   {string} name\n     *          The name of a plugin.\n     *\n     * @return {string}\n     *          The plugin's version or an empty string.\n     */\n    ;\n\n    Plugin.getPluginVersion = function getPluginVersion(name) {\n      var plugin = getPlugin(name);\n      return plugin && plugin.VERSION || '';\n    };\n\n    return Plugin;\n  }();\n  /**\n   * Gets a plugin by name if it exists.\n   *\n   * @static\n   * @method   getPlugin\n   * @memberOf Plugin\n   * @param    {string} name\n   *           The name of a plugin.\n   *\n   * @returns  {Function|undefined}\n   *           The plugin (or `undefined`).\n   */\n\n\n  Plugin.getPlugin = getPlugin;\n  /**\n   * The name of the base plugin class as it is registered.\n   *\n   * @type {string}\n   */\n\n  Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n  Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n  Player.prototype.usingPlugin = function (name) {\n    return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n  };\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n\n  Player.prototype.hasPlugin = function (name) {\n    return !!pluginExists(name);\n  };\n  /**\n   * Signals that a plugin is about to be set up on a player.\n   *\n   * @event    Player#beforepluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin is about to be set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#beforepluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player.\n   *\n   * @event    Player#pluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#pluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * @typedef  {Object} Plugin~PluginEventHash\n   *\n   * @property {string} instance\n   *           For basic plugins, the return value of the plugin function. For\n   *           advanced plugins, the plugin instance on which the event is fired.\n   *\n   * @property {string} name\n   *           The name of the plugin.\n   *\n   * @property {string} plugin\n   *           For basic plugins, the plugin function. For advanced plugins, the\n   *           plugin class/constructor.\n   */\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) setPrototypeOf(subClass, superClass);\n  }\n\n  var inherits = _inherits;\n\n  /**\n   * @file extend.js\n   * @module extend\n   */\n  /**\n   * Used to subclass an existing class by emulating ES subclassing using the\n   * `extends` keyword.\n   *\n   * @function\n   * @example\n   * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n   *   myCustomMethod: function() {\n   *     // Do things in my method.\n   *   }\n   * });\n   *\n   * @param    {Function} superClass\n   *           The class to inherit from\n   *\n   * @param    {Object}   [subClassMethods={}]\n   *           Methods of the new class\n   *\n   * @return   {Function}\n   *           The new class with subClassMethods that inherited superClass.\n   */\n\n  var extend = function extend(superClass, subClassMethods) {\n    if (subClassMethods === void 0) {\n      subClassMethods = {};\n    }\n\n    var subClass = function subClass() {\n      superClass.apply(this, arguments);\n    };\n\n    var methods = {};\n\n    if (typeof subClassMethods === 'object') {\n      if (subClassMethods.constructor !== Object.prototype.constructor) {\n        subClass = subClassMethods.constructor;\n      }\n\n      methods = subClassMethods;\n    } else if (typeof subClassMethods === 'function') {\n      subClass = subClassMethods;\n    }\n\n    inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n    if (superClass) {\n      subClass.super_ = superClass;\n    } // Extend subObj's prototype with functions and other properties from props\n\n\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        subClass.prototype[name] = methods[name];\n      }\n    }\n\n    return subClass;\n  };\n\n  /**\n   * @file video.js\n   * @module videojs\n   */\n  /**\n   * Normalize an `id` value by trimming off a leading `#`\n   *\n   * @private\n   * @param   {string} id\n   *          A string, maybe with a leading `#`.\n   *\n   * @return {string}\n   *          The string, without any leading `#`.\n   */\n\n  var normalizeId = function normalizeId(id) {\n    return id.indexOf('#') === 0 ? id.slice(1) : id;\n  };\n  /**\n   * The `videojs()` function doubles as the main function for users to create a\n   * {@link Player} instance as well as the main library namespace.\n   *\n   * It can also be used as a getter for a pre-existing {@link Player} instance.\n   * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n   * purpose because it avoids any potential for unintended initialization.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### id\n   * string|Element, **required**\n   *\n   * Video element or video element ID.\n   *\n   * ##### options\n   * Object, optional\n   *\n   * Options object for providing settings.\n   * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * ##### ready\n   * {@link Component~ReadyCallback}, optional\n   *\n   * A function to be called when the {@link Player} and {@link Tech} are ready.\n   *\n   * #### Return Value\n   *\n   * The `videojs()` function returns a {@link Player} instance.\n   *\n   * @namespace\n   *\n   * @borrows AudioTrack as AudioTrack\n   * @borrows Component.getComponent as getComponent\n   * @borrows module:computed-style~computedStyle as computedStyle\n   * @borrows module:events.on as on\n   * @borrows module:events.one as one\n   * @borrows module:events.off as off\n   * @borrows module:events.trigger as trigger\n   * @borrows EventTarget as EventTarget\n   * @borrows module:extend~extend as extend\n   * @borrows module:fn.bind as bind\n   * @borrows module:format-time.formatTime as formatTime\n   * @borrows module:format-time.resetFormatTime as resetFormatTime\n   * @borrows module:format-time.setFormatTime as setFormatTime\n   * @borrows module:merge-options.mergeOptions as mergeOptions\n   * @borrows module:middleware.use as use\n   * @borrows Player.players as players\n   * @borrows Plugin.registerPlugin as registerPlugin\n   * @borrows Plugin.deregisterPlugin as deregisterPlugin\n   * @borrows Plugin.getPlugins as getPlugins\n   * @borrows Plugin.getPlugin as getPlugin\n   * @borrows Plugin.getPluginVersion as getPluginVersion\n   * @borrows Tech.getTech as getTech\n   * @borrows Tech.registerTech as registerTech\n   * @borrows TextTrack as TextTrack\n   * @borrows module:time-ranges.createTimeRanges as createTimeRange\n   * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n   * @borrows module:url.isCrossOrigin as isCrossOrigin\n   * @borrows module:url.parseUrl as parseUrl\n   * @borrows VideoTrack as VideoTrack\n   *\n   * @param  {string|Element} id\n   *         Video element or video element ID.\n   *\n   * @param  {Object} [options]\n   *         Options object for providing settings.\n   *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * @param  {Component~ReadyCallback} [ready]\n   *         A function to be called when the {@link Player} and {@link Tech} are\n   *         ready.\n   *\n   * @return {Player}\n   *         The `videojs()` function returns a {@link Player|Player} instance.\n   */\n\n\n  function videojs(id, options, ready) {\n    var player = videojs.getPlayer(id);\n\n    if (player) {\n      if (options) {\n        log$1.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n      }\n\n      if (ready) {\n        player.ready(ready);\n      }\n\n      return player;\n    }\n\n    var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n    if (!isEl(el)) {\n      throw new TypeError('The element or ID supplied is not valid. (videojs)');\n    } // document.body.contains(el) will only check if el is contained within that one document.\n    // This causes problems for elements in iframes.\n    // Instead, use the element's ownerDocument instead of the global document.\n    // This will make sure that the element is indeed in the dom of that document.\n    // Additionally, check that the document in question has a default view.\n    // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n    if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n      log$1.warn('The element supplied is not included in the DOM');\n    }\n\n    options = options || {}; // Store a copy of the el before modification, if it is to be restored in destroy()\n    // If div ingest, store the parent div\n\n    if (options.restoreEl === true) {\n      options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n    }\n\n    hooks('beforesetup').forEach(function (hookFunction) {\n      var opts = hookFunction(el, mergeOptions$3(options));\n\n      if (!isObject$1(opts) || Array.isArray(opts)) {\n        log$1.error('please return an object in beforesetup hooks');\n        return;\n      }\n\n      options = mergeOptions$3(options, opts);\n    }); // We get the current \"Player\" component here in case an integration has\n    // replaced it with a custom player.\n\n    var PlayerComponent = Component$1.getComponent('Player');\n    player = new PlayerComponent(el, options, ready);\n    hooks('setup').forEach(function (hookFunction) {\n      return hookFunction(player);\n    });\n    return player;\n  }\n\n  videojs.hooks_ = hooks_;\n  videojs.hooks = hooks;\n  videojs.hook = hook;\n  videojs.hookOnce = hookOnce;\n  videojs.removeHook = removeHook; // Add default styles\n\n  if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n    var style = $('.vjs-styles-defaults');\n\n    if (!style) {\n      style = createStyleElement('vjs-styles-defaults');\n      var head = $('head');\n\n      if (head) {\n        head.insertBefore(style, head.firstChild);\n      }\n\n      setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: 56.25%\\n      }\\n    \");\n    }\n  } // Run Auto-load players\n  // You have to wait at least once in case this script is loaded after your\n  // video in the DOM (weird behavior only with minified version)\n\n\n  autoSetupTimeout(1, videojs);\n  /**\n   * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n   *\n   * @type {string}\n   */\n\n  videojs.VERSION = version$5;\n  /**\n   * The global options object. These are the settings that take effect\n   * if no overrides are specified when the player is created.\n   *\n   * @type {Object}\n   */\n\n  videojs.options = Player.prototype.options_;\n  /**\n   * Get an object with the currently created players, keyed by player ID\n   *\n   * @return {Object}\n   *         The created players\n   */\n\n  videojs.getPlayers = function () {\n    return Player.players;\n  };\n  /**\n   * Get a single player based on an ID or DOM element.\n   *\n   * This is useful if you want to check if an element or ID has an associated\n   * Video.js player, but not create one if it doesn't.\n   *\n   * @param   {string|Element} id\n   *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n   *          or a string matching the `id` of such an element.\n   *\n   * @return {Player|undefined}\n   *          A player instance or `undefined` if there is no player instance\n   *          matching the argument.\n   */\n\n\n  videojs.getPlayer = function (id) {\n    var players = Player.players;\n    var tag;\n\n    if (typeof id === 'string') {\n      var nId = normalizeId(id);\n      var player = players[nId];\n\n      if (player) {\n        return player;\n      }\n\n      tag = $('#' + nId);\n    } else {\n      tag = id;\n    }\n\n    if (isEl(tag)) {\n      var _tag = tag,\n          _player = _tag.player,\n          playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n      // player instance. If so, return that.\n\n      if (_player || players[playerId]) {\n        return _player || players[playerId];\n      }\n    }\n  };\n  /**\n   * Returns an array of all current players.\n   *\n   * @return {Array}\n   *         An array of all players. The array will be in the order that\n   *         `Object.keys` provides, which could potentially vary between\n   *         JavaScript engines.\n   *\n   */\n\n\n  videojs.getAllPlayers = function () {\n    return (// Disposed players leave a key with a `null` value, so we need to make sure\n      // we filter those out.\n      Object.keys(Player.players).map(function (k) {\n        return Player.players[k];\n      }).filter(Boolean)\n    );\n  };\n\n  videojs.players = Player.players;\n  videojs.getComponent = Component$1.getComponent;\n  /**\n   * Register a component so it can referred to by name. Used when adding to other\n   * components, either through addChild `component.addChild('myComponent')` or through\n   * default children options  `{ children: ['myComponent'] }`.\n   *\n   * > NOTE: You could also just initialize the component before adding.\n   * `component.addChild(new MyComponent());`\n   *\n   * @param {string} name\n   *        The class name of the component\n   *\n   * @param {Component} comp\n   *        The component class\n   *\n   * @return {Component}\n   *         The newly registered component\n   */\n\n  videojs.registerComponent = function (name, comp) {\n    if (Tech.isTech(comp)) {\n      log$1.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n    }\n\n    Component$1.registerComponent.call(Component$1, name, comp);\n  };\n\n  videojs.getTech = Tech.getTech;\n  videojs.registerTech = Tech.registerTech;\n  videojs.use = use;\n  /**\n   * An object that can be returned by a middleware to signify\n   * that the middleware is being terminated.\n   *\n   * @type {object}\n   * @property {object} middleware.TERMINATOR\n   */\n\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n  /**\n   * A reference to the {@link module:browser|browser utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:browser|browser}\n   */\n\n  videojs.browser = browser;\n  /**\n   * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n   * included for backward-compatibility with 4.x.\n   *\n   * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n   * @type {boolean}\n   */\n\n  videojs.TOUCH_ENABLED = TOUCH_ENABLED;\n  videojs.extend = extend;\n  videojs.mergeOptions = mergeOptions$3;\n  videojs.bind = bind;\n  videojs.registerPlugin = Plugin.registerPlugin;\n  videojs.deregisterPlugin = Plugin.deregisterPlugin;\n  /**\n   * Deprecated method to register a plugin with Video.js\n   *\n   * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n   *\n   * @param {string} name\n   *        The plugin name\n   *\n   * @param {Plugin|Function} plugin\n   *         The plugin sub-class or function\n   */\n\n  videojs.plugin = function (name, plugin) {\n    log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n    return Plugin.registerPlugin(name, plugin);\n  };\n\n  videojs.getPlugins = Plugin.getPlugins;\n  videojs.getPlugin = Plugin.getPlugin;\n  videojs.getPluginVersion = Plugin.getPluginVersion;\n  /**\n   * Adding languages so that they're available to all players.\n   * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n   *\n   * @param {string} code\n   *        The language code or dictionary property\n   *\n   * @param {Object} data\n   *        The data values to be translated\n   *\n   * @return {Object}\n   *         The resulting language dictionary object\n   */\n\n  videojs.addLanguage = function (code, data) {\n    var _mergeOptions;\n\n    code = ('' + code).toLowerCase();\n    videojs.options.languages = mergeOptions$3(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n    return videojs.options.languages[code];\n  };\n  /**\n   * A reference to the {@link module:log|log utility module} as an object.\n   *\n   * @type {Function}\n   * @see  {@link module:log|log}\n   */\n\n\n  videojs.log = log$1;\n  videojs.createLogger = createLogger;\n  videojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n  videojs.formatTime = formatTime;\n  videojs.setFormatTime = setFormatTime;\n  videojs.resetFormatTime = resetFormatTime;\n  videojs.parseUrl = parseUrl;\n  videojs.isCrossOrigin = isCrossOrigin;\n  videojs.EventTarget = EventTarget$2;\n  videojs.on = on;\n  videojs.one = one;\n  videojs.off = off;\n  videojs.trigger = trigger;\n  /**\n   * A cross-browser XMLHttpRequest wrapper.\n   *\n   * @function\n   * @param    {Object} options\n   *           Settings for the request.\n   *\n   * @return   {XMLHttpRequest|XDomainRequest}\n   *           The request object.\n   *\n   * @see      https://github.com/Raynos/xhr\n   */\n\n  videojs.xhr = lib;\n  videojs.TextTrack = TextTrack;\n  videojs.AudioTrack = AudioTrack;\n  videojs.VideoTrack = VideoTrack;\n  ['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n    videojs[k] = function () {\n      log$1.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n      return Dom[k].apply(null, arguments);\n    };\n  });\n  videojs.computedStyle = computedStyle;\n  /**\n   * A reference to the {@link module:dom|DOM utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:dom|dom}\n   */\n\n  videojs.dom = Dom;\n  /**\n   * A reference to the {@link module:url|URL utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:url|url}\n   */\n\n  videojs.url = Url;\n  videojs.defineLazyProperty = defineLazyProperty; // Adding less ambiguous text for fullscreen button.\n  // In a major update this could become the default text and key.\n\n  videojs.addLanguage('en', {\n    'Non-Fullscreen': 'Exit Fullscreen'\n  });\n\n  var urlToolkit = createCommonjsModule(function (module, exports) {\n    // see https://tools.ietf.org/html/rfc1808\n    (function (root) {\n      var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/?#]*\\/)*[^;?#]*)?(;[^?#]*)?(\\?[^#]*)?(#[^]*)?$/;\n      var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)([^]*)$/;\n      var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n      var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n      var URLToolkit = {\n        // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n        // E.g\n        // With opts.alwaysNormalize = false (default, spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n        // With opts.alwaysNormalize = true (not spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n        buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n          opts = opts || {}; // remove any remaining space and CRLF\n\n          baseURL = baseURL.trim();\n          relativeURL = relativeURL.trim();\n\n          if (!relativeURL) {\n            // 2a) If the embedded URL is entirely empty, it inherits the\n            // entire base URL (i.e., is set equal to the base URL)\n            // and we are done.\n            if (!opts.alwaysNormalize) {\n              return baseURL;\n            }\n\n            var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n            if (!basePartsForNormalise) {\n              throw new Error('Error trying to parse base URL.');\n            }\n\n            basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n            return URLToolkit.buildURLFromParts(basePartsForNormalise);\n          }\n\n          var relativeParts = URLToolkit.parseURL(relativeURL);\n\n          if (!relativeParts) {\n            throw new Error('Error trying to parse relative URL.');\n          }\n\n          if (relativeParts.scheme) {\n            // 2b) If the embedded URL starts with a scheme name, it is\n            // interpreted as an absolute URL and we are done.\n            if (!opts.alwaysNormalize) {\n              return relativeURL;\n            }\n\n            relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n            return URLToolkit.buildURLFromParts(relativeParts);\n          }\n\n          var baseParts = URLToolkit.parseURL(baseURL);\n\n          if (!baseParts) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n            // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n            // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n            var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n            baseParts.netLoc = pathParts[1];\n            baseParts.path = pathParts[2];\n          }\n\n          if (baseParts.netLoc && !baseParts.path) {\n            baseParts.path = '/';\n          }\n\n          var builtParts = {\n            // 2c) Otherwise, the embedded URL inherits the scheme of\n            // the base URL.\n            scheme: baseParts.scheme,\n            netLoc: relativeParts.netLoc,\n            path: null,\n            params: relativeParts.params,\n            query: relativeParts.query,\n            fragment: relativeParts.fragment\n          };\n\n          if (!relativeParts.netLoc) {\n            // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n            // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n            // (if any) of the base URL.\n            builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n            // path is not relative and we skip to Step 7.\n\n            if (relativeParts.path[0] !== '/') {\n              if (!relativeParts.path) {\n                // 5) If the embedded URL path is empty (and not preceded by a\n                // slash), then the embedded URL inherits the base URL path\n                builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <params> of the base\n                // URL (if any) and\n\n                if (!relativeParts.params) {\n                  builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                  // step 7; otherwise, it inherits the <query> of the base\n                  // URL (if any) and we skip to step 7.\n\n                  if (!relativeParts.query) {\n                    builtParts.query = baseParts.query;\n                  }\n                }\n              } else {\n                // 6) The last segment of the base URL's path (anything\n                // following the rightmost slash \"/\", or the entire path if no\n                // slash is present) is removed and the embedded URL's path is\n                // appended in its place.\n                var baseURLPath = baseParts.path;\n                var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n                builtParts.path = URLToolkit.normalizePath(newPath);\n              }\n            }\n          }\n\n          if (builtParts.path === null) {\n            builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n          }\n\n          return URLToolkit.buildURLFromParts(builtParts);\n        },\n        parseURL: function parseURL(url) {\n          var parts = URL_REGEX.exec(url);\n\n          if (!parts) {\n            return null;\n          }\n\n          return {\n            scheme: parts[1] || '',\n            netLoc: parts[2] || '',\n            path: parts[3] || '',\n            params: parts[4] || '',\n            query: parts[5] || '',\n            fragment: parts[6] || ''\n          };\n        },\n        normalizePath: function normalizePath(path) {\n          // The following operations are\n          // then applied, in order, to the new path:\n          // 6a) All occurrences of \"./\", where \".\" is a complete path\n          // segment, are removed.\n          // 6b) If the path ends with \".\" as a complete path segment,\n          // that \".\" is removed.\n          path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n          // complete path segment not equal to \"..\", are removed.\n          // Removal of these path segments is performed iteratively,\n          // removing the leftmost matching pattern on each iteration,\n          // until no matching pattern remains.\n          // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n          // complete path segment not equal to \"..\", that\n          // \"<segment>/..\" is removed.\n\n          while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {}\n\n          return path.split('').reverse().join('');\n        },\n        buildURLFromParts: function buildURLFromParts(parts) {\n          return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n        }\n      };\n      module.exports = URLToolkit;\n    })();\n  });\n\n  var DEFAULT_LOCATION$1 = 'http://example.com';\n\n  var resolveUrl$2 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION$1);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION$1.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n\n      return newUrl.href;\n    }\n\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    var _proto = Stream.prototype;\n\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */\n    ;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */\n    ;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    ;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n\n  var atob$1 = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n\n  function decodeB64ToUint8Array$1(b64Text) {\n    var decodedString = atob$1(b64Text);\n    var array = new Uint8Array(decodedString.length);\n\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n\n    return array;\n  }\n\n  /*! @name m3u8-parser @version 4.7.1 @license Apache-2.0 */\n  /**\n   * A stream that buffers string input and generates a `data` event for each\n   * line.\n   *\n   * @class LineStream\n   * @extends Stream\n   */\n\n  var LineStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(LineStream, _Stream);\n\n    function LineStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.buffer = '';\n      return _this;\n    }\n    /**\n     * Add new data to be parsed.\n     *\n     * @param {string} data the text to process\n     */\n\n\n    var _proto = LineStream.prototype;\n\n    _proto.push = function push(data) {\n      var nextNewline;\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    };\n\n    return LineStream;\n  }(Stream);\n\n  var TAB = String.fromCharCode(0x09);\n\n  var parseByterange = function parseByterange(byterangeString) {\n    // optionally match and capture 0+ digits before `@`\n    // optionally match and capture 0+ digits after `@`\n    var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n    var result = {};\n\n    if (match[1]) {\n      result.length = parseInt(match[1], 10);\n    }\n\n    if (match[2]) {\n      result.offset = parseInt(match[2], 10);\n    }\n\n    return result;\n  };\n  /**\n   * \"forgiving\" attribute list psuedo-grammar:\n   * attributes -> keyvalue (',' keyvalue)*\n   * keyvalue   -> key '=' value\n   * key        -> [^=]*\n   * value      -> '\"' [^\"]* '\"' | [^,]*\n   */\n\n\n  var attributeSeparator = function attributeSeparator() {\n    var key = '[^=]*';\n    var value = '\"[^\"]*\"|[^,]*';\n    var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n    return new RegExp('(?:^|,)(' + keyvalue + ')');\n  };\n  /**\n   * Parse attributes from a line given the separator\n   *\n   * @param {string} attributes the attribute line to parse\n   */\n\n\n  var parseAttributes$1 = function parseAttributes(attributes) {\n    // split the string using attributes as the separator\n    var attrs = attributes.split(attributeSeparator());\n    var result = {};\n    var i = attrs.length;\n    var attr;\n\n    while (i--) {\n      // filter out unmatched portions of the string\n      if (attrs[i] === '') {\n        continue;\n      } // split the key and value\n\n\n      attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n      attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n      result[attr[0]] = attr[1];\n    }\n\n    return result;\n  };\n  /**\n   * A line-level M3U8 parser event stream. It expects to receive input one\n   * line at a time and performs a context-free parse of its contents. A stream\n   * interpretation of a manifest can be useful if the manifest is expected to\n   * be too large to fit comfortably into memory or the entirety of the input\n   * is not immediately available. Otherwise, it's probably much easier to work\n   * with a regular `Parser` object.\n   *\n   * Produces `data` events with an object that captures the parser's\n   * interpretation of the input. That object has a property `tag` that is one\n   * of `uri`, `comment`, or `tag`. URIs only have a single additional\n   * property, `line`, which captures the entirety of the input without\n   * interpretation. Comments similarly have a single additional property\n   * `text` which is the input without the leading `#`.\n   *\n   * Tags always have a property `tagType` which is the lower-cased version of\n   * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n   * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n   * tags are given the tag type `unknown` and a single additional property\n   * `data` with the remainder of the input.\n   *\n   * @class ParseStream\n   * @extends Stream\n   */\n\n\n  var ParseStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(ParseStream, _Stream);\n\n    function ParseStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.customParsers = [];\n      _this.tagMappers = [];\n      return _this;\n    }\n    /**\n     * Parses an additional line of input.\n     *\n     * @param {string} line a single line of an M3U8 file to parse\n     */\n\n\n    var _proto = ParseStream.prototype;\n\n    _proto.push = function push(line) {\n      var _this2 = this;\n\n      var match;\n      var event; // strip whitespace\n\n      line = line.trim();\n\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      } // URIs\n\n\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      } // map tags\n\n\n      var newLines = this.tagMappers.reduce(function (acc, mapper) {\n        var mappedLine = mapper(line); // skip if unchanged\n\n        if (mappedLine === line) {\n          return acc;\n        }\n\n        return acc.concat([mappedLine]);\n      }, [line]);\n      newLines.forEach(function (newLine) {\n        for (var i = 0; i < _this2.customParsers.length; i++) {\n          if (_this2.customParsers[i].call(_this2, newLine)) {\n            return;\n          }\n        } // Comments\n\n\n        if (newLine.indexOf('#EXT') !== 0) {\n          _this2.trigger('data', {\n            type: 'comment',\n            text: newLine.slice(1)\n          });\n\n          return;\n        } // strip off any carriage returns here so the regex matching\n        // doesn't have to account for them.\n\n\n        newLine = newLine.replace('\\r', ''); // Tags\n\n        match = /^#EXTM3U/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'm3u'\n          });\n\n          return;\n        }\n\n        match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'inf'\n          };\n\n          if (match[1]) {\n            event.duration = parseFloat(match[1]);\n          }\n\n          if (match[2]) {\n            event.title = match[2];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'targetduration'\n          };\n\n          if (match[1]) {\n            event.duration = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'version'\n          };\n\n          if (match[1]) {\n            event.version = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'discontinuity-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'playlist-type'\n          };\n\n          if (match[1]) {\n            event.playlistType = match[1];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = _extends_1(parseByterange(match[1]), {\n            type: 'tag',\n            tagType: 'byterange'\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'allow-cache'\n          };\n\n          if (match[1]) {\n            event.allowed = !/NO/.test(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'map'\n          };\n\n          if (match[1]) {\n            var attributes = parseAttributes$1(match[1]);\n\n            if (attributes.URI) {\n              event.uri = attributes.URI;\n            }\n\n            if (attributes.BYTERANGE) {\n              event.byterange = parseByterange(attributes.BYTERANGE);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'stream-inf'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n\n            if (event.attributes.RESOLUTION) {\n              var split = event.attributes.RESOLUTION.split('x');\n              var resolution = {};\n\n              if (split[0]) {\n                resolution.width = parseInt(split[0], 10);\n              }\n\n              if (split[1]) {\n                resolution.height = parseInt(split[1], 10);\n              }\n\n              event.attributes.RESOLUTION = resolution;\n            }\n\n            if (event.attributes.BANDWIDTH) {\n              event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n            }\n\n            if (event.attributes['PROGRAM-ID']) {\n              event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'endlist'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'discontinuity'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'program-date-time'\n          };\n\n          if (match[1]) {\n            event.dateTimeString = match[1];\n            event.dateTimeObject = new Date(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'key'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]); // parse the IV string into a Uint32Array\n\n            if (event.attributes.IV) {\n              if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n                event.attributes.IV = event.attributes.IV.substring(2);\n              }\n\n              event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n              event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n              event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n              event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n              event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n              event.attributes.IV = new Uint32Array(event.attributes.IV);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'start'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n            event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n            event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out-cont'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-in'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'skip'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n\n          if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n            event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n          }\n\n          if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n            event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['DURATION'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['INDEPENDENT', 'GAP'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n\n          if (event.attributes.hasOwnProperty('BYTERANGE')) {\n            event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'server-control'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part-inf'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['PART-TARGET'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'preload-hint'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n              var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n              event.attributes.byterange = event.attributes.byterange || {};\n              event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n              delete event.attributes[key];\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'rendition-report'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        } // unknown tag type\n\n\n        _this2.trigger('data', {\n          type: 'tag',\n          data: newLine.slice(4)\n        });\n      });\n    }\n    /**\n     * Add a parser for custom headers\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n    ;\n\n    _proto.addParser = function addParser(_ref) {\n      var _this3 = this;\n\n      var expression = _ref.expression,\n          customType = _ref.customType,\n          dataParser = _ref.dataParser,\n          segment = _ref.segment;\n\n      if (typeof dataParser !== 'function') {\n        dataParser = function dataParser(line) {\n          return line;\n        };\n      }\n\n      this.customParsers.push(function (line) {\n        var match = expression.exec(line);\n\n        if (match) {\n          _this3.trigger('data', {\n            type: 'custom',\n            data: dataParser(line),\n            customType: customType,\n            segment: segment\n          });\n\n          return true;\n        }\n      });\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n    ;\n\n    _proto.addTagMapper = function addTagMapper(_ref2) {\n      var expression = _ref2.expression,\n          map = _ref2.map;\n\n      var mapFn = function mapFn(line) {\n        if (expression.test(line)) {\n          return map(line);\n        }\n\n        return line;\n      };\n\n      this.tagMappers.push(mapFn);\n    };\n\n    return ParseStream;\n  }(Stream);\n\n  var camelCase = function camelCase(str) {\n    return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n      return a[1].toUpperCase();\n    });\n  };\n\n  var camelCaseKeys = function camelCaseKeys(attributes) {\n    var result = {};\n    Object.keys(attributes).forEach(function (key) {\n      result[camelCase(key)] = attributes[key];\n    });\n    return result;\n  }; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n  // we need this helper because defaults are based upon targetDuration and\n  // partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n  // target durations are set.\n\n\n  var setHoldBack = function setHoldBack(manifest) {\n    var serverControl = manifest.serverControl,\n        targetDuration = manifest.targetDuration,\n        partTargetDuration = manifest.partTargetDuration;\n\n    if (!serverControl) {\n      return;\n    }\n\n    var tag = '#EXT-X-SERVER-CONTROL';\n    var hb = 'holdBack';\n    var phb = 'partHoldBack';\n    var minTargetDuration = targetDuration && targetDuration * 3;\n    var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n    if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n      serverControl[hb] = minTargetDuration;\n      this.trigger('info', {\n        message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n      });\n    }\n\n    if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n      this.trigger('warn', {\n        message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n      });\n      serverControl[hb] = minTargetDuration;\n    } // default no part hold back to part target duration * 3\n\n\n    if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n      serverControl[phb] = partTargetDuration * 3;\n      this.trigger('info', {\n        message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n      });\n    } // if part hold back is too small default it to part target duration * 2\n\n\n    if (partTargetDuration && serverControl[phb] < minPartDuration) {\n      this.trigger('warn', {\n        message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n      });\n      serverControl[phb] = minPartDuration;\n    }\n  };\n  /**\n   * A parser for M3U8 files. The current interpretation of the input is\n   * exposed as a property `manifest` on parser objects. It's just two lines to\n   * create and parse a manifest once you have the contents available as a string:\n   *\n   * ```js\n   * var parser = new m3u8.Parser();\n   * parser.push(xhr.responseText);\n   * ```\n   *\n   * New input can later be applied to update the manifest object by calling\n   * `push` again.\n   *\n   * The parser attempts to create a usable manifest object even if the\n   * underlying input is somewhat nonsensical. It emits `info` and `warning`\n   * events during the parse if it encounters input that seems invalid or\n   * requires some property of the manifest object to be defaulted.\n   *\n   * @class Parser\n   * @extends Stream\n   */\n\n\n  var Parser = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(Parser, _Stream);\n\n    function Parser() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.lineStream = new LineStream();\n      _this.parseStream = new ParseStream();\n\n      _this.lineStream.pipe(_this.parseStream);\n      /* eslint-disable consistent-this */\n\n\n      var self = assertThisInitialized(_this);\n      /* eslint-enable consistent-this */\n\n\n      var uris = [];\n      var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n      var currentMap; // if specified, the active decryption key\n\n      var _key;\n\n      var hasParts = false;\n\n      var noop = function noop() {};\n\n      var defaultMediaGroups = {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n      // used in MPDs with Widevine encrypted streams.\n\n      var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n      var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n      _this.manifest = {\n        allowCache: true,\n        discontinuityStarts: [],\n        segments: []\n      }; // keep track of the last seen segment's byte range end, as segments are not required\n      // to provide the offset, in which case it defaults to the next byte after the\n      // previous segment\n\n      var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n      var lastPartByterangeEnd = 0;\n\n      _this.on('end', function () {\n        // only add preloadSegment if we don't yet have a uri for it.\n        // and we actually have parts/preloadHints\n        if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n          return;\n        }\n\n        if (!currentUri.map && currentMap) {\n          currentUri.map = currentMap;\n        }\n\n        if (!currentUri.key && _key) {\n          currentUri.key = _key;\n        }\n\n        if (!currentUri.timeline && typeof currentTimeline === 'number') {\n          currentUri.timeline = currentTimeline;\n        }\n\n        _this.manifest.preloadSegment = currentUri;\n      }); // update the manifest with the m3u8 entry from the parse stream\n\n\n      _this.parseStream.on('data', function (entry) {\n        var mediaGroup;\n        var rendition;\n        ({\n          tag: function tag() {\n            // switch based on the tag type\n            (({\n              version: function version() {\n                if (entry.version) {\n                  this.manifest.version = entry.version;\n                }\n              },\n              'allow-cache': function allowCache() {\n                this.manifest.allowCache = entry.allowed;\n\n                if (!('allowed' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting allowCache to YES'\n                  });\n                  this.manifest.allowCache = true;\n                }\n              },\n              byterange: function byterange() {\n                var byterange = {};\n\n                if ('length' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.length = entry.length;\n\n                  if (!('offset' in entry)) {\n                    /*\n                     * From the latest spec (as of this writing):\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                     *\n                     * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                     *\n                     * \"If o [offset] is not present, the sub-range begins at the next byte\n                     * following the sub-range of the previous media segment.\"\n                     */\n                    entry.offset = lastByterangeEnd;\n                  }\n                }\n\n                if ('offset' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.offset = entry.offset;\n                }\n\n                lastByterangeEnd = byterange.offset + byterange.length;\n              },\n              endlist: function endlist() {\n                this.manifest.endList = true;\n              },\n              inf: function inf() {\n                if (!('mediaSequence' in this.manifest)) {\n                  this.manifest.mediaSequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting media sequence to zero'\n                  });\n                }\n\n                if (!('discontinuitySequence' in this.manifest)) {\n                  this.manifest.discontinuitySequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting discontinuity sequence to zero'\n                  });\n                }\n\n                if (entry.duration > 0) {\n                  currentUri.duration = entry.duration;\n                }\n\n                if (entry.duration === 0) {\n                  currentUri.duration = 0.01;\n                  this.trigger('info', {\n                    message: 'updating zero segment duration to a small value'\n                  });\n                }\n\n                this.manifest.segments = uris;\n              },\n              key: function key() {\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without attribute list'\n                  });\n                  return;\n                } // clear the active encryption key\n\n\n                if (entry.attributes.METHOD === 'NONE') {\n                  _key = null;\n                  return;\n                }\n\n                if (!entry.attributes.URI) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without URI'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                    attributes: entry.attributes\n                  };\n                  return;\n                }\n\n                if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.microsoft.playready'] = {\n                    uri: entry.attributes.URI\n                  };\n                  return;\n                } // check if the content is encrypted for Widevine\n                // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n                if (entry.attributes.KEYFORMAT === widevineUuid) {\n                  var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                  if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                    this.trigger('warn', {\n                      message: 'invalid key method provided for Widevine'\n                    });\n                    return;\n                  }\n\n                  if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                    this.trigger('warn', {\n                      message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                    });\n                  }\n\n                  if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                    this.trigger('warn', {\n                      message: 'invalid key URI provided for Widevine'\n                    });\n                    return;\n                  }\n\n                  if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                    this.trigger('warn', {\n                      message: 'invalid key ID provided for Widevine'\n                    });\n                    return;\n                  } // if Widevine key attributes are valid, store them as `contentProtection`\n                  // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                  this.manifest.contentProtection = this.manifest.contentProtection || {};\n                  this.manifest.contentProtection['com.widevine.alpha'] = {\n                    attributes: {\n                      schemeIdUri: entry.attributes.KEYFORMAT,\n                      // remove '0x' from the key id string\n                      keyId: entry.attributes.KEYID.substring(2)\n                    },\n                    // decode the base64-encoded PSSH box\n                    pssh: decodeB64ToUint8Array$1(entry.attributes.URI.split(',')[1])\n                  };\n                  return;\n                }\n\n                if (!entry.attributes.METHOD) {\n                  this.trigger('warn', {\n                    message: 'defaulting key method to AES-128'\n                  });\n                } // setup an encryption key for upcoming segments\n\n\n                _key = {\n                  method: entry.attributes.METHOD || 'AES-128',\n                  uri: entry.attributes.URI\n                };\n\n                if (typeof entry.attributes.IV !== 'undefined') {\n                  _key.iv = entry.attributes.IV;\n                }\n              },\n              'media-sequence': function mediaSequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid media sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.mediaSequence = entry.number;\n              },\n              'discontinuity-sequence': function discontinuitySequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.discontinuitySequence = entry.number;\n                currentTimeline = entry.number;\n              },\n              'playlist-type': function playlistType() {\n                if (!/VOD|EVENT/.test(entry.playlistType)) {\n                  this.trigger('warn', {\n                    message: 'ignoring unknown playlist type: ' + entry.playlist\n                  });\n                  return;\n                }\n\n                this.manifest.playlistType = entry.playlistType;\n              },\n              map: function map() {\n                currentMap = {};\n\n                if (entry.uri) {\n                  currentMap.uri = entry.uri;\n                }\n\n                if (entry.byterange) {\n                  currentMap.byterange = entry.byterange;\n                }\n\n                if (_key) {\n                  currentMap.key = _key;\n                }\n              },\n              'stream-inf': function streamInf() {\n                this.manifest.playlists = uris;\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring empty stream-inf attributes'\n                  });\n                  return;\n                }\n\n                if (!currentUri.attributes) {\n                  currentUri.attributes = {};\n                }\n\n                _extends_1(currentUri.attributes, entry.attributes);\n              },\n              media: function media() {\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                  this.trigger('warn', {\n                    message: 'ignoring incomplete or missing media group'\n                  });\n                  return;\n                } // find the media group, creating defaults as necessary\n\n\n                var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n                mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n                mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n                rendition = {\n                  \"default\": /yes/i.test(entry.attributes.DEFAULT)\n                };\n\n                if (rendition[\"default\"]) {\n                  rendition.autoselect = true;\n                } else {\n                  rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n                }\n\n                if (entry.attributes.LANGUAGE) {\n                  rendition.language = entry.attributes.LANGUAGE;\n                }\n\n                if (entry.attributes.URI) {\n                  rendition.uri = entry.attributes.URI;\n                }\n\n                if (entry.attributes['INSTREAM-ID']) {\n                  rendition.instreamId = entry.attributes['INSTREAM-ID'];\n                }\n\n                if (entry.attributes.CHARACTERISTICS) {\n                  rendition.characteristics = entry.attributes.CHARACTERISTICS;\n                }\n\n                if (entry.attributes.FORCED) {\n                  rendition.forced = /yes/i.test(entry.attributes.FORCED);\n                } // insert the new rendition\n\n\n                mediaGroup[entry.attributes.NAME] = rendition;\n              },\n              discontinuity: function discontinuity() {\n                currentTimeline += 1;\n                currentUri.discontinuity = true;\n                this.manifest.discontinuityStarts.push(uris.length);\n              },\n              'program-date-time': function programDateTime() {\n                if (typeof this.manifest.dateTimeString === 'undefined') {\n                  // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                  // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                  // to the manifest object\n                  // TODO: Consider removing this in future major version\n                  this.manifest.dateTimeString = entry.dateTimeString;\n                  this.manifest.dateTimeObject = entry.dateTimeObject;\n                }\n\n                currentUri.dateTimeString = entry.dateTimeString;\n                currentUri.dateTimeObject = entry.dateTimeObject;\n              },\n              targetduration: function targetduration() {\n                if (!isFinite(entry.duration) || entry.duration < 0) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid target duration: ' + entry.duration\n                  });\n                  return;\n                }\n\n                this.manifest.targetDuration = entry.duration;\n                setHoldBack.call(this, this.manifest);\n              },\n              start: function start() {\n                if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                  this.trigger('warn', {\n                    message: 'ignoring start declaration without appropriate attribute list'\n                  });\n                  return;\n                }\n\n                this.manifest.start = {\n                  timeOffset: entry.attributes['TIME-OFFSET'],\n                  precise: entry.attributes.PRECISE\n                };\n              },\n              'cue-out': function cueOut() {\n                currentUri.cueOut = entry.data;\n              },\n              'cue-out-cont': function cueOutCont() {\n                currentUri.cueOutCont = entry.data;\n              },\n              'cue-in': function cueIn() {\n                currentUri.cueIn = entry.data;\n              },\n              'skip': function skip() {\n                this.manifest.skip = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n              },\n              'part': function part() {\n                var _this2 = this;\n\n                hasParts = true; // parts are always specifed before a segment\n\n                var segmentIndex = this.manifest.segments.length;\n                var part = camelCaseKeys(entry.attributes);\n                currentUri.parts = currentUri.parts || [];\n                currentUri.parts.push(part);\n\n                if (part.byterange) {\n                  if (!part.byterange.hasOwnProperty('offset')) {\n                    part.byterange.offset = lastPartByterangeEnd;\n                  }\n\n                  lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n                }\n\n                var partIndex = currentUri.parts.length - 1;\n                this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n                if (this.manifest.renditionReports) {\n                  this.manifest.renditionReports.forEach(function (r, i) {\n                    if (!r.hasOwnProperty('lastPart')) {\n                      _this2.trigger('warn', {\n                        message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                      });\n                    }\n                  });\n                }\n              },\n              'server-control': function serverControl() {\n                var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n                if (!attrs.hasOwnProperty('canBlockReload')) {\n                  attrs.canBlockReload = false;\n                  this.trigger('info', {\n                    message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                  });\n                }\n\n                setHoldBack.call(this, this.manifest);\n\n                if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                  this.trigger('warn', {\n                    message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                  });\n                }\n              },\n              'preload-hint': function preloadHint() {\n                // parts are always specifed before a segment\n                var segmentIndex = this.manifest.segments.length;\n                var hint = camelCaseKeys(entry.attributes);\n                var isPart = hint.type && hint.type === 'PART';\n                currentUri.preloadHints = currentUri.preloadHints || [];\n                currentUri.preloadHints.push(hint);\n\n                if (hint.byterange) {\n                  if (!hint.byterange.hasOwnProperty('offset')) {\n                    // use last part byterange end or zero if not a part.\n                    hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                    if (isPart) {\n                      lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                    }\n                  }\n                }\n\n                var index = currentUri.preloadHints.length - 1;\n                this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n                if (!hint.type) {\n                  return;\n                } // search through all preload hints except for the current one for\n                // a duplicate type.\n\n\n                for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                  var otherHint = currentUri.preloadHints[i];\n\n                  if (!otherHint.type) {\n                    continue;\n                  }\n\n                  if (otherHint.type === hint.type) {\n                    this.trigger('warn', {\n                      message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                    });\n                  }\n                }\n              },\n              'rendition-report': function renditionReport() {\n                var report = camelCaseKeys(entry.attributes);\n                this.manifest.renditionReports = this.manifest.renditionReports || [];\n                this.manifest.renditionReports.push(report);\n                var index = this.manifest.renditionReports.length - 1;\n                var required = ['LAST-MSN', 'URI'];\n\n                if (hasParts) {\n                  required.push('LAST-PART');\n                }\n\n                this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n              },\n              'part-inf': function partInf() {\n                this.manifest.partInf = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n                if (this.manifest.partInf.partTarget) {\n                  this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n                }\n\n                setHoldBack.call(this, this.manifest);\n              }\n            })[entry.tagType] || noop).call(self);\n          },\n          uri: function uri() {\n            currentUri.uri = entry.uri;\n            uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n            if (this.manifest.targetDuration && !('duration' in currentUri)) {\n              this.trigger('warn', {\n                message: 'defaulting segment duration to the target duration'\n              });\n              currentUri.duration = this.manifest.targetDuration;\n            } // annotate with encryption information, if necessary\n\n\n            if (_key) {\n              currentUri.key = _key;\n            }\n\n            currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n            if (currentMap) {\n              currentUri.map = currentMap;\n            } // reset the last byterange end as it needs to be 0 between parts\n\n\n            lastPartByterangeEnd = 0; // prepare for the next URI\n\n            currentUri = {};\n          },\n          comment: function comment() {// comments are not important for playback\n          },\n          custom: function custom() {\n            // if this is segment-level data attach the output to the segment\n            if (entry.segment) {\n              currentUri.custom = currentUri.custom || {};\n              currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n            } else {\n              this.manifest.custom = this.manifest.custom || {};\n              this.manifest.custom[entry.customType] = entry.data;\n            }\n          }\n        })[entry.type].call(self);\n      });\n\n      return _this;\n    }\n\n    var _proto = Parser.prototype;\n\n    _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n      var missing = [];\n      required.forEach(function (key) {\n        if (!attributes.hasOwnProperty(key)) {\n          missing.push(key);\n        }\n      });\n\n      if (missing.length) {\n        this.trigger('warn', {\n          message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n        });\n      }\n    }\n    /**\n     * Parse the input string and update the manifest object.\n     *\n     * @param {string} chunk a potentially incomplete portion of the manifest\n     */\n    ;\n\n    _proto.push = function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n    ;\n\n    _proto.end = function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n      this.trigger('end');\n    }\n    /**\n     * Add an additional parser for non-standard tags\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.type         the type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n    ;\n\n    _proto.addParser = function addParser(options) {\n      this.parseStream.addParser(options);\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n    ;\n\n    _proto.addTagMapper = function addTagMapper(options) {\n      this.parseStream.addTagMapper(options);\n    };\n\n    return Parser;\n  }(Stream);\n\n  var regexs = {\n    // to determine mime types\n    mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n    webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n    ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n    // to determine if a codec is audio or video\n    video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n    audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n    text: /^(stpp.ttml.im1t)/,\n    // mux.js support regex\n    muxerVideo: /^(avc0?1)/,\n    muxerAudio: /^(mp4a)/,\n    // match nothing as muxer does not support text right now.\n    // there cannot never be a character before the start of a string\n    // so this matches nothing.\n    muxerText: /a^/\n  };\n  var mediaTypes = ['video', 'audio', 'text'];\n  var upperMediaTypes = ['Video', 'Audio', 'Text'];\n  /**\n   * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n   * `avc1.<hhhhhh>`\n   *\n   * @param {string} codec\n   *        Codec string to translate\n   * @return {string}\n   *         The translated codec string\n   */\n\n  var translateLegacyCodec = function translateLegacyCodec(codec) {\n    if (!codec) {\n      return codec;\n    }\n\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  };\n  /**\n   * @typedef {Object} ParsedCodecInfo\n   * @property {number} codecCount\n   *           Number of codecs parsed\n   * @property {string} [videoCodec]\n   *           Parsed video codec (if found)\n   * @property {string} [videoObjectTypeIndicator]\n   *           Video object type indicator (if found)\n   * @property {string|null} audioProfile\n   *           Audio profile\n   */\n\n  /**\n   * Parses a codec string to retrieve the number of codecs specified, the video codec and\n   * object type indicator, and the audio profile.\n   *\n   * @param {string} [codecString]\n   *        The codec string to parse\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var parseCodecs = function parseCodecs(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    var codecs = codecString.split(',');\n    var result = [];\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n      var codecType;\n      mediaTypes.forEach(function (name) {\n        var match = regexs[name].exec(codec.toLowerCase());\n\n        if (!match || match.length <= 1) {\n          return;\n        }\n\n        codecType = name; // maintain codec case\n\n        var type = codec.substring(0, match[1].length);\n        var details = codec.replace(type, '');\n        result.push({\n          type: type,\n          details: details,\n          mediaType: name\n        });\n      });\n\n      if (!codecType) {\n        result.push({\n          type: codec,\n          details: '',\n          mediaType: 'unknown'\n        });\n      }\n    });\n    return result;\n  };\n  /**\n   * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n   * a default alternate audio playlist for the provided audio group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   * @param {string} audioGroupId\n   *        ID of the audio group for which to find the default codec info\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n    if (!master.mediaGroups.AUDIO || !audioGroupId) {\n      return null;\n    }\n\n    var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n    if (!audioGroup) {\n      return null;\n    }\n\n    for (var name in audioGroup) {\n      var audioType = audioGroup[name];\n\n      if (audioType[\"default\"] && audioType.playlists) {\n        // codec should be the same for all playlists within the audio type\n        return parseCodecs(audioType.playlists[0].attributes.CODECS);\n      }\n    }\n\n    return null;\n  };\n  var isAudioCodec = function isAudioCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n\n    return regexs.audio.test(codec.trim().toLowerCase());\n  };\n  var isTextCodec = function isTextCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n\n    return regexs.text.test(codec.trim().toLowerCase());\n  };\n  var getMimeForCodec = function getMimeForCodec(codecString) {\n    if (!codecString || typeof codecString !== 'string') {\n      return;\n    }\n\n    var codecs = codecString.toLowerCase().split(',').map(function (c) {\n      return translateLegacyCodec(c.trim());\n    }); // default to video type\n\n    var type = 'video'; // only change to audio type if the only codec we have is\n    // audio\n\n    if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n      type = 'audio';\n    } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n      // text uses application/<container> for now\n      type = 'application';\n    } // default the container to mp4\n\n\n    var container = 'mp4'; // every codec must be able to go into the container\n    // for that container to be the correct one\n\n    if (codecs.every(function (c) {\n      return regexs.mp4.test(c);\n    })) {\n      container = 'mp4';\n    } else if (codecs.every(function (c) {\n      return regexs.webm.test(c);\n    })) {\n      container = 'webm';\n    } else if (codecs.every(function (c) {\n      return regexs.ogg.test(c);\n    })) {\n      container = 'ogg';\n    }\n\n    return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n  };\n  var browserSupportsCodec = function browserSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n  };\n  var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    return codecString.toLowerCase().split(',').every(function (codec) {\n      codec = codec.trim(); // any match is supported.\n\n      for (var i = 0; i < upperMediaTypes.length; i++) {\n        var type = upperMediaTypes[i];\n\n        if (regexs[\"muxer\" + type].test(codec)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  };\n  var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\n  var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';\n\n  var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n  var DASH_REGEX = /^application\\/dash\\+xml/i;\n  /**\n   * Returns a string that describes the type of source based on a video source object's\n   * media type.\n   *\n   * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n   *\n   * @param {string} type\n   *        Video source object media type\n   * @return {('hls'|'dash'|'vhs-json'|null)}\n   *         VHS source type string\n   */\n\n  var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n    if (MPEGURL_REGEX.test(type)) {\n      return 'hls';\n    }\n\n    if (DASH_REGEX.test(type)) {\n      return 'dash';\n    } // Denotes the special case of a manifest object passed to http-streaming instead of a\n    // source URL.\n    //\n    // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n    //\n    // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n    // project, and the +json suffix identifies the structure of the media type.\n\n\n    if (type === 'application/vnd.videojs.vhs+json') {\n      return 'vhs-json';\n    }\n\n    return null;\n  };\n\n  // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n  // we used to do this with log2 but BigInt does not support builtin math\n  // Math.ceil(log2(x));\n\n\n  var countBits = function countBits(x) {\n    return x.toString(2).length;\n  }; // count the number of whole bytes it would take to represent a number\n\n  var countBytes = function countBytes(x) {\n    return Math.ceil(countBits(x) / 8);\n  };\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var isTypedArray = function isTypedArray(obj) {\n    return isArrayBufferView(obj);\n  };\n  var toUint8 = function toUint8(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return bytes;\n    }\n\n    if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n      // any non-number or NaN leads to empty uint8array\n      // eslint-disable-next-line\n      if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n        bytes = 0;\n      } else {\n        bytes = [bytes];\n      }\n    }\n\n    return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n  };\n  var BigInt = window.BigInt || Number;\n  var BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  var bytesToNumber = function bytesToNumber(bytes, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$signed = _ref.signed,\n        signed = _ref$signed === void 0 ? false : _ref$signed,\n        _ref$le = _ref.le,\n        le = _ref$le === void 0 ? false : _ref$le;\n\n    bytes = toUint8(bytes);\n    var fn = le ? 'reduce' : 'reduceRight';\n    var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n    var number = obj.call(bytes, function (total, _byte, i) {\n      var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n      return total + BigInt(_byte) * BYTE_TABLE[exponent];\n    }, BigInt(0));\n\n    if (signed) {\n      var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n      number = BigInt(number);\n\n      if (number > max) {\n        number -= max;\n        number -= max;\n        number -= BigInt(2);\n      }\n    }\n\n    return Number(number);\n  };\n  var numberToBytes = function numberToBytes(number, _temp2) {\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$le = _ref2.le,\n        le = _ref2$le === void 0 ? false : _ref2$le; // eslint-disable-next-line\n\n\n    if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n      number = 0;\n    }\n\n    number = BigInt(number);\n    var byteCount = countBytes(number);\n    var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n    for (var i = 0; i < byteCount; i++) {\n      var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n      bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n      if (number < 0) {\n        bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n        bytes[byteIndex] -= i === 0 ? 1 : 2;\n      }\n    }\n\n    return bytes;\n  };\n  var stringToBytes = function stringToBytes(string, stringIsBytes) {\n    if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n      string = string.toString();\n    }\n\n    if (typeof string !== 'string') {\n      return new Uint8Array();\n    } // If the string already is bytes, we don't have to do this\n    // otherwise we do this so that we split multi length characters\n    // into individual bytes\n\n\n    if (!stringIsBytes) {\n      string = unescape(encodeURIComponent(string));\n    }\n\n    var view = new Uint8Array(string.length);\n\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n\n    return view;\n  };\n  var concatTypedArrays = function concatTypedArrays() {\n    for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n      buffers[_key] = arguments[_key];\n    }\n\n    buffers = buffers.filter(function (b) {\n      return b && (b.byteLength || b.length) && typeof b !== 'string';\n    });\n\n    if (buffers.length <= 1) {\n      // for 0 length we will return empty uint8\n      // for 1 length we return the first uint8\n      return toUint8(buffers[0]);\n    }\n\n    var totalLen = buffers.reduce(function (total, buf, i) {\n      return total + (buf.byteLength || buf.length);\n    }, 0);\n    var tempBuffer = new Uint8Array(totalLen);\n    var offset = 0;\n    buffers.forEach(function (buf) {\n      buf = toUint8(buf);\n      tempBuffer.set(buf, offset);\n      offset += buf.byteLength;\n    });\n    return tempBuffer;\n  };\n  /**\n   * Check if the bytes \"b\" are contained within bytes \"a\".\n   *\n   * @param {Uint8Array|Array} a\n   *        Bytes to check in\n   *\n   * @param {Uint8Array|Array} b\n   *        Bytes to check for\n   *\n   * @param {Object} options\n   *        options\n   *\n   * @param {Array|Uint8Array} [offset=0]\n   *        offset to use when looking at bytes in a\n   *\n   * @param {Array|Uint8Array} [mask=[]]\n   *        mask to use on bytes before comparison.\n   *\n   * @return {boolean}\n   *         If all bytes in b are inside of a, taking into account\n   *         bit masks.\n   */\n\n  var bytesMatch = function bytesMatch(a, b, _temp3) {\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n        _ref3$offset = _ref3.offset,\n        offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n        _ref3$mask = _ref3.mask,\n        mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n    a = toUint8(a);\n    b = toUint8(b); // ie 11 does not support uint8 every\n\n    var fn = b.every ? b.every : Array.prototype.every;\n    return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n    fn.call(b, function (bByte, i) {\n      var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n      return bByte === aByte;\n    });\n  };\n\n  var DEFAULT_LOCATION = 'http://example.com';\n\n  var resolveUrl$1 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n\n      return newUrl.href;\n    }\n\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * Loops through all supported media groups in master and calls the provided\n   * callback for each group\n   *\n   * @param {Object} master\n   *        The parsed master manifest object\n   * @param {string[]} groups\n   *        The media groups to call the callback for\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n  var forEachMediaGroup$1 = function forEachMediaGroup(master, groups, callback) {\n    groups.forEach(function (mediaType) {\n      for (var groupKey in master.mediaGroups[mediaType]) {\n        for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n          var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n\n  var atob = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n\n  function decodeB64ToUint8Array(b64Text) {\n    var decodedString = atob(b64Text);\n    var array = new Uint8Array(decodedString.length);\n\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n\n    return array;\n  }\n\n  /**\n   * \"Shallow freezes\" an object to render it immutable.\n   * Uses `Object.freeze` if available,\n   * otherwise the immutability is only in the type.\n   *\n   * Is used to create \"enum like\" objects.\n   *\n   * @template T\n   * @param {T} object the object to freeze\n   * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n   * \t\t\t\tallows to inject custom object constructor for tests\n   * @returns {Readonly<T>}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n   */\n\n  function freeze(object, oc) {\n    if (oc === undefined) {\n      oc = Object;\n    }\n\n    return oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object;\n  }\n  /**\n   * All mime types that are allowed as input to `DOMParser.parseFromString`\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n   * @see DOMParser.prototype.parseFromString\n   */\n\n\n  var MIME_TYPE = freeze({\n    /**\n     * `text/html`, the only mime type that triggers treating an XML document as HTML.\n     *\n     * @see DOMParser.SupportedType.isHTML\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n     */\n    HTML: 'text/html',\n\n    /**\n     * Helper method to check a mime type if it indicates an HTML document\n     *\n     * @param {string} [value]\n     * @returns {boolean}\n     *\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n    isHTML: function isHTML(value) {\n      return value === MIME_TYPE.HTML;\n    },\n\n    /**\n     * `application/xml`, the standard mime type for XML documents.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n     * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_APPLICATION: 'application/xml',\n\n    /**\n     * `text/html`, an alias for `application/xml`.\n     *\n     * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n     * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_TEXT: 'text/xml',\n\n    /**\n     * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n     * but is parsed as an XML document.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n     * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n     */\n    XML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n    /**\n     * `image/svg+xml`,\n     *\n     * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n     * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n     * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n     */\n    XML_SVG_IMAGE: 'image/svg+xml'\n  });\n  /**\n   * Namespaces that are used in this code base.\n   *\n   * @see http://www.w3.org/TR/REC-xml-names\n   */\n\n  var NAMESPACE$3 = freeze({\n    /**\n     * The XHTML namespace.\n     *\n     * @see http://www.w3.org/1999/xhtml\n     */\n    HTML: 'http://www.w3.org/1999/xhtml',\n\n    /**\n     * Checks if `uri` equals `NAMESPACE.HTML`.\n     *\n     * @param {string} [uri]\n     *\n     * @see NAMESPACE.HTML\n     */\n    isHTML: function isHTML(uri) {\n      return uri === NAMESPACE$3.HTML;\n    },\n\n    /**\n     * The SVG namespace.\n     *\n     * @see http://www.w3.org/2000/svg\n     */\n    SVG: 'http://www.w3.org/2000/svg',\n\n    /**\n     * The `xml:` namespace.\n     *\n     * @see http://www.w3.org/XML/1998/namespace\n     */\n    XML: 'http://www.w3.org/XML/1998/namespace',\n\n    /**\n     * The `xmlns:` namespace\n     *\n     * @see https://www.w3.org/2000/xmlns/\n     */\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n  });\n  var freeze_1 = freeze;\n  var MIME_TYPE_1 = MIME_TYPE;\n  var NAMESPACE_1 = NAMESPACE$3;\n  var conventions = {\n    freeze: freeze_1,\n    MIME_TYPE: MIME_TYPE_1,\n    NAMESPACE: NAMESPACE_1\n  };\n\n  var NAMESPACE$2 = conventions.NAMESPACE;\n  /**\n   * A prerequisite for `[].filter`, to drop elements that are empty\n   * @param {string} input\n   * @returns {boolean}\n   */\n\n  function notEmptyString(input) {\n    return input !== '';\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n   * @see https://infra.spec.whatwg.org/#ascii-whitespace\n   *\n   * @param {string} input\n   * @returns {string[]} (can be empty)\n   */\n\n\n  function splitOnASCIIWhitespace(input) {\n    // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n    return input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n  }\n  /**\n   * Adds element as a key to current if it is not already present.\n   *\n   * @param {Record<string, boolean | undefined>} current\n   * @param {string} element\n   * @returns {Record<string, boolean | undefined>}\n   */\n\n\n  function orderedSetReducer(current, element) {\n    if (!current.hasOwnProperty(element)) {\n      current[element] = true;\n    }\n\n    return current;\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#ordered-set\n   * @param {string} input\n   * @returns {string[]}\n   */\n\n\n  function toOrderedSet(input) {\n    if (!input) return [];\n    var list = splitOnASCIIWhitespace(input);\n    return Object.keys(list.reduce(orderedSetReducer, {}));\n  }\n  /**\n   * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n   * which we can not rely on being available.\n   *\n   * @param {any[]} list\n   * @returns {function(any): boolean}\n   */\n\n\n  function arrayIncludes(list) {\n    return function (element) {\n      return list && list.indexOf(element) !== -1;\n    };\n  }\n\n  function copy(src, dest) {\n    for (var p in src) {\n      dest[p] = src[p];\n    }\n  }\n  /**\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n   */\n\n\n  function _extends(Class, Super) {\n    var pt = Class.prototype;\n\n    if (!(pt instanceof Super)) {\n      var t = function t() {};\n      t.prototype = Super.prototype;\n      t = new t();\n      copy(pt, t);\n      Class.prototype = pt = t;\n    }\n\n    if (pt.constructor != Class) {\n      if (typeof Class != 'function') {\n        console.error(\"unknown Class:\" + Class);\n      }\n\n      pt.constructor = Class;\n    }\n  } // Node Types\n\n\n  var NodeType = {};\n  var ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;\n  var ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;\n  var TEXT_NODE = NodeType.TEXT_NODE = 3;\n  var CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;\n  var ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;\n  var ENTITY_NODE = NodeType.ENTITY_NODE = 6;\n  var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\n  var COMMENT_NODE = NodeType.COMMENT_NODE = 8;\n  var DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;\n  var DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;\n  var DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;\n  var NOTATION_NODE = NodeType.NOTATION_NODE = 12; // ExceptionCode\n\n  var ExceptionCode = {};\n  var ExceptionMessage = {};\n  ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = \"Index size error\", 1);\n  ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = \"DOMString size error\", 2);\n  var HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = \"Hierarchy request error\", 3);\n  ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = \"Wrong document\", 4);\n  ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = \"Invalid character\", 5);\n  ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = \"No data allowed\", 6);\n  ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = \"No modification allowed\", 7);\n  var NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = \"Not found\", 8);\n  ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = \"Not supported\", 9);\n  var INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = \"Attribute in use\", 10); //level2\n\n  ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = \"Invalid state\", 11);\n  ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = \"Syntax error\", 12);\n  ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = \"Invalid modification\", 13);\n  ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = \"Invalid namespace\", 14);\n  ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = \"Invalid access\", 15);\n  /**\n   * DOM Level 2\n   * Object DOMException\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n   * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n   */\n\n  function DOMException(code, message) {\n    if (message instanceof Error) {\n      var error = message;\n    } else {\n      error = this;\n      Error.call(this, ExceptionMessage[code]);\n      this.message = ExceptionMessage[code];\n      if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n    }\n\n    error.code = code;\n    if (message) this.message = this.message + \": \" + message;\n    return error;\n  }\n  DOMException.prototype = Error.prototype;\n  copy(ExceptionCode, DOMException);\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n   * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n   * The items in the NodeList are accessible via an integral index, starting from 0.\n   */\n\n  function NodeList() {}\n  NodeList.prototype = {\n    /**\n     * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n     * @standard level1\n     */\n    length: 0,\n\n    /**\n     * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n     * @standard level1\n     * @param index  unsigned long \n     *   Index into the collection.\n     * @return Node\n     * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n     */\n    item: function item(index) {\n      return this[index] || null;\n    },\n    toString: function toString(isHTML, nodeFilter) {\n      for (var buf = [], i = 0; i < this.length; i++) {\n        serializeToString(this[i], buf, isHTML, nodeFilter);\n      }\n\n      return buf.join('');\n    }\n  };\n\n  function LiveNodeList(node, refresh) {\n    this._node = node;\n    this._refresh = refresh;\n\n    _updateLiveList(this);\n  }\n\n  function _updateLiveList(list) {\n    var inc = list._node._inc || list._node.ownerDocument._inc;\n\n    if (list._inc != inc) {\n      var ls = list._refresh(list._node); //console.log(ls.length)\n\n\n      __set__(list, 'length', ls.length);\n\n      copy(ls, list);\n      list._inc = inc;\n    }\n  }\n\n  LiveNodeList.prototype.item = function (i) {\n    _updateLiveList(this);\n\n    return this[i];\n  };\n\n  _extends(LiveNodeList, NodeList);\n  /**\n   * Objects implementing the NamedNodeMap interface are used\n   * to represent collections of nodes that can be accessed by name.\n   * Note that NamedNodeMap does not inherit from NodeList;\n   * NamedNodeMaps are not maintained in any particular order.\n   * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n   * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n   * and does not imply that the DOM specifies an order to these Nodes.\n   * NamedNodeMap objects in the DOM are live.\n   * used for attributes or DocumentType entities \n   */\n\n\n  function NamedNodeMap() {}\n\n  function _findNodeIndex(list, node) {\n    var i = list.length;\n\n    while (i--) {\n      if (list[i] === node) {\n        return i;\n      }\n    }\n  }\n\n  function _addNamedNode(el, list, newAttr, oldAttr) {\n    if (oldAttr) {\n      list[_findNodeIndex(list, oldAttr)] = newAttr;\n    } else {\n      list[list.length++] = newAttr;\n    }\n\n    if (el) {\n      newAttr.ownerElement = el;\n      var doc = el.ownerDocument;\n\n      if (doc) {\n        oldAttr && _onRemoveAttribute(doc, el, oldAttr);\n\n        _onAddAttribute(doc, el, newAttr);\n      }\n    }\n  }\n\n  function _removeNamedNode(el, list, attr) {\n    //console.log('remove attr:'+attr)\n    var i = _findNodeIndex(list, attr);\n\n    if (i >= 0) {\n      var lastIndex = list.length - 1;\n\n      while (i < lastIndex) {\n        list[i] = list[++i];\n      }\n\n      list.length = lastIndex;\n\n      if (el) {\n        var doc = el.ownerDocument;\n\n        if (doc) {\n          _onRemoveAttribute(doc, el, attr);\n\n          attr.ownerElement = null;\n        }\n      }\n    } else {\n      throw DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));\n    }\n  }\n\n  NamedNodeMap.prototype = {\n    length: 0,\n    item: NodeList.prototype.item,\n    getNamedItem: function getNamedItem(key) {\n      //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n      //\t\t\treturn null;\n      //\t\t}\n      //console.log()\n      var i = this.length;\n\n      while (i--) {\n        var attr = this[i]; //console.log(attr.nodeName,key)\n\n        if (attr.nodeName == key) {\n          return attr;\n        }\n      }\n    },\n    setNamedItem: function setNamedItem(attr) {\n      var el = attr.ownerElement;\n\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n\n      var oldAttr = this.getNamedItem(attr.nodeName);\n\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n      return oldAttr;\n    },\n\n    /* returns Node */\n    setNamedItemNS: function setNamedItemNS(attr) {\n      // raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n      var el = attr.ownerElement,\n          oldAttr;\n\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n\n      oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n      return oldAttr;\n    },\n\n    /* returns Node */\n    removeNamedItem: function removeNamedItem(key) {\n      var attr = this.getNamedItem(key);\n\n      _removeNamedNode(this._ownerElement, this, attr);\n\n      return attr;\n    },\n    // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n    //for level2\n    removeNamedItemNS: function removeNamedItemNS(namespaceURI, localName) {\n      var attr = this.getNamedItemNS(namespaceURI, localName);\n\n      _removeNamedNode(this._ownerElement, this, attr);\n\n      return attr;\n    },\n    getNamedItemNS: function getNamedItemNS(namespaceURI, localName) {\n      var i = this.length;\n\n      while (i--) {\n        var node = this[i];\n\n        if (node.localName == localName && node.namespaceURI == namespaceURI) {\n          return node;\n        }\n      }\n\n      return null;\n    }\n  };\n  /**\n   * The DOMImplementation interface represents an object providing methods\n   * which are not dependent on any particular document.\n   * Such an object is returned by the `Document.implementation` property.\n   *\n   * __The individual methods describe the differences compared to the specs.__\n   *\n   * @constructor\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n   * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n   * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n   */\n\n  function DOMImplementation$1() {}\n\n  DOMImplementation$1.prototype = {\n    /**\n     * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n     * The different implementations fairly diverged in what kind of features were reported.\n     * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n     *\n     * @deprecated It is deprecated and modern browsers return true in all cases.\n     *\n     * @param {string} feature\n     * @param {string} [version]\n     * @returns {boolean} always true\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n     * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n     */\n    hasFeature: function hasFeature(feature, version) {\n      return true;\n    },\n\n    /**\n     * Creates an XML Document object of the specified type with its document element.\n     *\n     * __It behaves slightly different from the description in the living standard__:\n     * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n     * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string|null} namespaceURI\n     * @param {string} qualifiedName\n     * @param {DocumentType=null} doctype\n     * @returns {Document}\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocument: function createDocument(namespaceURI, qualifiedName, doctype) {\n      var doc = new Document();\n      doc.implementation = this;\n      doc.childNodes = new NodeList();\n      doc.doctype = doctype || null;\n\n      if (doctype) {\n        doc.appendChild(doctype);\n      }\n\n      if (qualifiedName) {\n        var root = doc.createElementNS(namespaceURI, qualifiedName);\n        doc.appendChild(root);\n      }\n\n      return doc;\n    },\n\n    /**\n     * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n     *\n     * __This behavior is slightly different from the in the specs__:\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string} qualifiedName\n     * @param {string} [publicId]\n     * @param {string} [systemId]\n     * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n     * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocumentType: function createDocumentType(qualifiedName, publicId, systemId) {\n      var node = new DocumentType();\n      node.name = qualifiedName;\n      node.nodeName = qualifiedName;\n      node.publicId = publicId || '';\n      node.systemId = systemId || '';\n      return node;\n    }\n  };\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n   */\n\n  function Node() {}\n  Node.prototype = {\n    firstChild: null,\n    lastChild: null,\n    previousSibling: null,\n    nextSibling: null,\n    attributes: null,\n    parentNode: null,\n    childNodes: null,\n    ownerDocument: null,\n    nodeValue: null,\n    namespaceURI: null,\n    prefix: null,\n    localName: null,\n    // Modified in DOM Level 2:\n    insertBefore: function insertBefore(newChild, refChild) {\n      //raises \n      return _insertBefore(this, newChild, refChild);\n    },\n    replaceChild: function replaceChild(newChild, oldChild) {\n      //raises \n      this.insertBefore(newChild, oldChild);\n\n      if (oldChild) {\n        this.removeChild(oldChild);\n      }\n    },\n    removeChild: function removeChild(oldChild) {\n      return _removeChild(this, oldChild);\n    },\n    appendChild: function appendChild(newChild) {\n      return this.insertBefore(newChild, null);\n    },\n    hasChildNodes: function hasChildNodes() {\n      return this.firstChild != null;\n    },\n    cloneNode: function cloneNode(deep) {\n      return _cloneNode(this.ownerDocument || this, this, deep);\n    },\n    // Modified in DOM Level 2:\n    normalize: function normalize() {\n      var child = this.firstChild;\n\n      while (child) {\n        var next = child.nextSibling;\n\n        if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n          this.removeChild(next);\n          child.appendData(next.data);\n        } else {\n          child.normalize();\n          child = next;\n        }\n      }\n    },\n    // Introduced in DOM Level 2:\n    isSupported: function isSupported(feature, version) {\n      return this.ownerDocument.implementation.hasFeature(feature, version);\n    },\n    // Introduced in DOM Level 2:\n    hasAttributes: function hasAttributes() {\n      return this.attributes.length > 0;\n    },\n\n    /**\n     * Look up the prefix associated to the given namespace URI, starting from this node.\n     * **The default namespace declarations are ignored by this method.**\n     * See Namespace Prefix Lookup for details on the algorithm used by this method.\n     *\n     * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n     *\n     * @param {string | null} namespaceURI\n     * @returns {string | null}\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n     * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n     * @see https://github.com/xmldom/xmldom/issues/322\n     */\n    lookupPrefix: function lookupPrefix(namespaceURI) {\n      var el = this;\n\n      while (el) {\n        var map = el._nsMap; //console.dir(map)\n\n        if (map) {\n          for (var n in map) {\n            if (map[n] == namespaceURI) {\n              return n;\n            }\n          }\n        }\n\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI: function lookupNamespaceURI(prefix) {\n      var el = this;\n\n      while (el) {\n        var map = el._nsMap; //console.dir(map)\n\n        if (map) {\n          if (prefix in map) {\n            return map[prefix];\n          }\n        }\n\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace: function isDefaultNamespace(namespaceURI) {\n      var prefix = this.lookupPrefix(namespaceURI);\n      return prefix == null;\n    }\n  };\n\n  function _xmlEncoder(c) {\n    return c == '<' && '&lt;' || c == '>' && '&gt;' || c == '&' && '&amp;' || c == '\"' && '&quot;' || '&#' + c.charCodeAt() + ';';\n  }\n\n  copy(NodeType, Node);\n  copy(NodeType, Node.prototype);\n  /**\n   * @param callback return true for continue,false for break\n   * @return boolean true: break visit;\n   */\n\n  function _visitNode(node, callback) {\n    if (callback(node)) {\n      return true;\n    }\n\n    if (node = node.firstChild) {\n      do {\n        if (_visitNode(node, callback)) {\n          return true;\n        }\n      } while (node = node.nextSibling);\n    }\n  }\n\n  function Document() {}\n\n  function _onAddAttribute(doc, el, newAttr) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n    }\n  }\n\n  function _onRemoveAttribute(doc, el, newAttr, remove) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n    }\n  }\n\n  function _onUpdateChild(doc, el, newChild) {\n    if (doc && doc._inc) {\n      doc._inc++; //update childNodes\n\n      var cs = el.childNodes;\n\n      if (newChild) {\n        cs[cs.length++] = newChild;\n      } else {\n        //console.log(1)\n        var child = el.firstChild;\n        var i = 0;\n\n        while (child) {\n          cs[i++] = child;\n          child = child.nextSibling;\n        }\n\n        cs.length = i;\n      }\n    }\n  }\n  /**\n   * attributes;\n   * children;\n   * \n   * writeable properties:\n   * nodeValue,Attr:value,CharacterData:data\n   * prefix\n   */\n\n\n  function _removeChild(parentNode, child) {\n    var previous = child.previousSibling;\n    var next = child.nextSibling;\n\n    if (previous) {\n      previous.nextSibling = next;\n    } else {\n      parentNode.firstChild = next;\n    }\n\n    if (next) {\n      next.previousSibling = previous;\n    } else {\n      parentNode.lastChild = previous;\n    }\n\n    _onUpdateChild(parentNode.ownerDocument, parentNode);\n\n    return child;\n  }\n  /**\n   * preformance key(refChild == null)\n   */\n\n\n  function _insertBefore(parentNode, newChild, nextChild) {\n    var cp = newChild.parentNode;\n\n    if (cp) {\n      cp.removeChild(newChild); //remove and update\n    }\n\n    if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      var newFirst = newChild.firstChild;\n\n      if (newFirst == null) {\n        return newChild;\n      }\n\n      var newLast = newChild.lastChild;\n    } else {\n      newFirst = newLast = newChild;\n    }\n\n    var pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n    newFirst.previousSibling = pre;\n    newLast.nextSibling = nextChild;\n\n    if (pre) {\n      pre.nextSibling = newFirst;\n    } else {\n      parentNode.firstChild = newFirst;\n    }\n\n    if (nextChild == null) {\n      parentNode.lastChild = newLast;\n    } else {\n      nextChild.previousSibling = newLast;\n    }\n\n    do {\n      newFirst.parentNode = parentNode;\n    } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n\n    _onUpdateChild(parentNode.ownerDocument || parentNode, parentNode); //console.log(parentNode.lastChild.nextSibling == null)\n\n\n    if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n      newChild.firstChild = newChild.lastChild = null;\n    }\n\n    return newChild;\n  }\n\n  function _appendSingleChild(parentNode, newChild) {\n    var cp = newChild.parentNode;\n\n    if (cp) {\n      var pre = parentNode.lastChild;\n      cp.removeChild(newChild); //remove and update\n\n      var pre = parentNode.lastChild;\n    }\n\n    var pre = parentNode.lastChild;\n    newChild.parentNode = parentNode;\n    newChild.previousSibling = pre;\n    newChild.nextSibling = null;\n\n    if (pre) {\n      pre.nextSibling = newChild;\n    } else {\n      parentNode.firstChild = newChild;\n    }\n\n    parentNode.lastChild = newChild;\n\n    _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\n    return newChild; //console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n  }\n\n  Document.prototype = {\n    //implementation : null,\n    nodeName: '#document',\n    nodeType: DOCUMENT_NODE,\n\n    /**\n     * The DocumentType node of the document.\n     *\n     * @readonly\n     * @type DocumentType\n     */\n    doctype: null,\n    documentElement: null,\n    _inc: 1,\n    insertBefore: function insertBefore(newChild, refChild) {\n      //raises\n      if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n        var child = newChild.firstChild;\n\n        while (child) {\n          var next = child.nextSibling;\n          this.insertBefore(child, refChild);\n          child = next;\n        }\n\n        return newChild;\n      }\n\n      if (this.documentElement == null && newChild.nodeType == ELEMENT_NODE) {\n        this.documentElement = newChild;\n      }\n\n      return _insertBefore(this, newChild, refChild), newChild.ownerDocument = this, newChild;\n    },\n    removeChild: function removeChild(oldChild) {\n      if (this.documentElement == oldChild) {\n        this.documentElement = null;\n      }\n\n      return _removeChild(this, oldChild);\n    },\n    // Introduced in DOM Level 2:\n    importNode: function importNode(importedNode, deep) {\n      return _importNode(this, importedNode, deep);\n    },\n    // Introduced in DOM Level 2:\n    getElementById: function getElementById(id) {\n      var rtv = null;\n\n      _visitNode(this.documentElement, function (node) {\n        if (node.nodeType == ELEMENT_NODE) {\n          if (node.getAttribute('id') == id) {\n            rtv = node;\n            return true;\n          }\n        }\n      });\n\n      return rtv;\n    },\n\n    /**\n     * The `getElementsByClassName` method of `Document` interface returns an array-like object\n     * of all child elements which have **all** of the given class name(s).\n     *\n     * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n     *\n     *\n     * Warning: This is a live LiveNodeList.\n     * Changes in the DOM will reflect in the array as the changes occur.\n     * If an element selected by this array no longer qualifies for the selector,\n     * it will automatically be removed. Be aware of this for iteration purposes.\n     *\n     * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n     * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n     */\n    getElementsByClassName: function getElementsByClassName(classNames) {\n      var classNamesSet = toOrderedSet(classNames);\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        if (classNamesSet.length > 0) {\n          _visitNode(base.documentElement, function (node) {\n            if (node !== base && node.nodeType === ELEMENT_NODE) {\n              var nodeClassNames = node.getAttribute('class'); // can be null if the attribute does not exist\n\n              if (nodeClassNames) {\n                // before splitting and iterating just compare them for the most common case\n                var matches = classNames === nodeClassNames;\n\n                if (!matches) {\n                  var nodeClassNamesSet = toOrderedSet(nodeClassNames);\n                  matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n                }\n\n                if (matches) {\n                  ls.push(node);\n                }\n              }\n            }\n          });\n        }\n\n        return ls;\n      });\n    },\n    //document factory method:\n    createElement: function createElement(tagName) {\n      var node = new Element();\n      node.ownerDocument = this;\n      node.nodeName = tagName;\n      node.tagName = tagName;\n      node.localName = tagName;\n      node.childNodes = new NodeList();\n      var attrs = node.attributes = new NamedNodeMap();\n      attrs._ownerElement = node;\n      return node;\n    },\n    createDocumentFragment: function createDocumentFragment() {\n      var node = new DocumentFragment();\n      node.ownerDocument = this;\n      node.childNodes = new NodeList();\n      return node;\n    },\n    createTextNode: function createTextNode(data) {\n      var node = new Text();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createComment: function createComment(data) {\n      var node = new Comment();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createCDATASection: function createCDATASection(data) {\n      var node = new CDATASection();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createProcessingInstruction: function createProcessingInstruction(target, data) {\n      var node = new ProcessingInstruction();\n      node.ownerDocument = this;\n      node.tagName = node.target = target;\n      node.nodeValue = node.data = data;\n      return node;\n    },\n    createAttribute: function createAttribute(name) {\n      var node = new Attr();\n      node.ownerDocument = this;\n      node.name = name;\n      node.nodeName = name;\n      node.localName = name;\n      node.specified = true;\n      return node;\n    },\n    createEntityReference: function createEntityReference(name) {\n      var node = new EntityReference();\n      node.ownerDocument = this;\n      node.nodeName = name;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createElementNS: function createElementNS(namespaceURI, qualifiedName) {\n      var node = new Element();\n      var pl = qualifiedName.split(':');\n      var attrs = node.attributes = new NamedNodeMap();\n      node.childNodes = new NodeList();\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.tagName = qualifiedName;\n      node.namespaceURI = namespaceURI;\n\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n\n      attrs._ownerElement = node;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createAttributeNS: function createAttributeNS(namespaceURI, qualifiedName) {\n      var node = new Attr();\n      var pl = qualifiedName.split(':');\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.name = qualifiedName;\n      node.namespaceURI = namespaceURI;\n      node.specified = true;\n\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n\n      return node;\n    }\n  };\n\n  _extends(Document, Node);\n\n  function Element() {\n    this._nsMap = {};\n  }\n  Element.prototype = {\n    nodeType: ELEMENT_NODE,\n    hasAttribute: function hasAttribute(name) {\n      return this.getAttributeNode(name) != null;\n    },\n    getAttribute: function getAttribute(name) {\n      var attr = this.getAttributeNode(name);\n      return attr && attr.value || '';\n    },\n    getAttributeNode: function getAttributeNode(name) {\n      return this.attributes.getNamedItem(name);\n    },\n    setAttribute: function setAttribute(name, value) {\n      var attr = this.ownerDocument.createAttribute(name);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    removeAttribute: function removeAttribute(name) {\n      var attr = this.getAttributeNode(name);\n      attr && this.removeAttributeNode(attr);\n    },\n    //four real opeartion method\n    appendChild: function appendChild(newChild) {\n      if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n        return this.insertBefore(newChild, null);\n      } else {\n        return _appendSingleChild(this, newChild);\n      }\n    },\n    setAttributeNode: function setAttributeNode(newAttr) {\n      return this.attributes.setNamedItem(newAttr);\n    },\n    setAttributeNodeNS: function setAttributeNodeNS(newAttr) {\n      return this.attributes.setNamedItemNS(newAttr);\n    },\n    removeAttributeNode: function removeAttributeNode(oldAttr) {\n      //console.log(this == oldAttr.ownerElement)\n      return this.attributes.removeNamedItem(oldAttr.nodeName);\n    },\n    //get real attribute name,and remove it by removeAttributeNode\n    removeAttributeNS: function removeAttributeNS(namespaceURI, localName) {\n      var old = this.getAttributeNodeNS(namespaceURI, localName);\n      old && this.removeAttributeNode(old);\n    },\n    hasAttributeNS: function hasAttributeNS(namespaceURI, localName) {\n      return this.getAttributeNodeNS(namespaceURI, localName) != null;\n    },\n    getAttributeNS: function getAttributeNS(namespaceURI, localName) {\n      var attr = this.getAttributeNodeNS(namespaceURI, localName);\n      return attr && attr.value || '';\n    },\n    setAttributeNS: function setAttributeNS(namespaceURI, qualifiedName, value) {\n      var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    getAttributeNodeNS: function getAttributeNodeNS(namespaceURI, localName) {\n      return this.attributes.getNamedItemNS(namespaceURI, localName);\n    },\n    getElementsByTagName: function getElementsByTagName(tagName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {\n            ls.push(node);\n          }\n        });\n\n        return ls;\n      });\n    },\n    getElementsByTagNameNS: function getElementsByTagNameNS(namespaceURI, localName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {\n            ls.push(node);\n          }\n        });\n\n        return ls;\n      });\n    }\n  };\n  Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\n  Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n  _extends(Element, Node);\n\n  function Attr() {}\n  Attr.prototype.nodeType = ATTRIBUTE_NODE;\n\n  _extends(Attr, Node);\n\n  function CharacterData() {}\n  CharacterData.prototype = {\n    data: '',\n    substringData: function substringData(offset, count) {\n      return this.data.substring(offset, offset + count);\n    },\n    appendData: function appendData(text) {\n      text = this.data + text;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    },\n    insertData: function insertData(offset, text) {\n      this.replaceData(offset, 0, text);\n    },\n    appendChild: function appendChild(newChild) {\n      throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);\n    },\n    deleteData: function deleteData(offset, count) {\n      this.replaceData(offset, count, \"\");\n    },\n    replaceData: function replaceData(offset, count, text) {\n      var start = this.data.substring(0, offset);\n      var end = this.data.substring(offset + count);\n      text = start + text + end;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    }\n  };\n\n  _extends(CharacterData, Node);\n\n  function Text() {}\n  Text.prototype = {\n    nodeName: \"#text\",\n    nodeType: TEXT_NODE,\n    splitText: function splitText(offset) {\n      var text = this.data;\n      var newText = text.substring(offset);\n      text = text.substring(0, offset);\n      this.data = this.nodeValue = text;\n      this.length = text.length;\n      var newNode = this.ownerDocument.createTextNode(newText);\n\n      if (this.parentNode) {\n        this.parentNode.insertBefore(newNode, this.nextSibling);\n      }\n\n      return newNode;\n    }\n  };\n\n  _extends(Text, CharacterData);\n\n  function Comment() {}\n  Comment.prototype = {\n    nodeName: \"#comment\",\n    nodeType: COMMENT_NODE\n  };\n\n  _extends(Comment, CharacterData);\n\n  function CDATASection() {}\n  CDATASection.prototype = {\n    nodeName: \"#cdata-section\",\n    nodeType: CDATA_SECTION_NODE\n  };\n\n  _extends(CDATASection, CharacterData);\n\n  function DocumentType() {}\n  DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n\n  _extends(DocumentType, Node);\n\n  function Notation() {}\n  Notation.prototype.nodeType = NOTATION_NODE;\n\n  _extends(Notation, Node);\n\n  function Entity() {}\n  Entity.prototype.nodeType = ENTITY_NODE;\n\n  _extends(Entity, Node);\n\n  function EntityReference() {}\n  EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n\n  _extends(EntityReference, Node);\n\n  function DocumentFragment() {}\n  DocumentFragment.prototype.nodeName = \"#document-fragment\";\n  DocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n\n  _extends(DocumentFragment, Node);\n\n  function ProcessingInstruction() {}\n\n  ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n\n  _extends(ProcessingInstruction, Node);\n\n  function XMLSerializer$1() {}\n\n  XMLSerializer$1.prototype.serializeToString = function (node, isHtml, nodeFilter) {\n    return nodeSerializeToString.call(node, isHtml, nodeFilter);\n  };\n\n  Node.prototype.toString = nodeSerializeToString;\n\n  function nodeSerializeToString(isHtml, nodeFilter) {\n    var buf = [];\n    var refNode = this.nodeType == 9 && this.documentElement || this;\n    var prefix = refNode.prefix;\n    var uri = refNode.namespaceURI;\n\n    if (uri && prefix == null) {\n      //console.log(prefix)\n      var prefix = refNode.lookupPrefix(uri);\n\n      if (prefix == null) {\n        //isHTML = true;\n        var visibleNamespaces = [{\n          namespace: uri,\n          prefix: null\n        } //{namespace:uri,prefix:''}\n        ];\n      }\n    }\n\n    serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces); //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\n    return buf.join('');\n  }\n\n  function needNamespaceDefine(node, isHTML, visibleNamespaces) {\n    var prefix = node.prefix || '';\n    var uri = node.namespaceURI; // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n    // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n    // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n    // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n    // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n    // > [...] Furthermore, the attribute value [...] must not be an empty string.\n    // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\n    if (!uri) {\n      return false;\n    }\n\n    if (prefix === \"xml\" && uri === NAMESPACE$2.XML || uri === NAMESPACE$2.XMLNS) {\n      return false;\n    }\n\n    var i = visibleNamespaces.length;\n\n    while (i--) {\n      var ns = visibleNamespaces[i]; // get namespace prefix\n\n      if (ns.prefix === prefix) {\n        return ns.namespace !== uri;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Well-formed constraint: No < in Attribute Values\n   * The replacement text of any entity referred to directly or indirectly in an attribute value must not contain a <.\n   * @see https://www.w3.org/TR/xml/#CleanAttrVals\n   * @see https://www.w3.org/TR/xml/#NT-AttValue\n   */\n\n\n  function addSerializedAttribute(buf, qualifiedName, value) {\n    buf.push(' ', qualifiedName, '=\"', value.replace(/[<&\"]/g, _xmlEncoder), '\"');\n  }\n\n  function serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n    if (!visibleNamespaces) {\n      visibleNamespaces = [];\n    }\n\n    if (nodeFilter) {\n      node = nodeFilter(node);\n\n      if (node) {\n        if (typeof node == 'string') {\n          buf.push(node);\n          return;\n        }\n      } else {\n        return;\n      } //buf.sort.apply(attrs, attributeSorter);\n\n    }\n\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var len = attrs.length;\n        var child = node.firstChild;\n        var nodeName = node.tagName;\n        isHTML = NAMESPACE$2.isHTML(node.namespaceURI) || isHTML;\n        var prefixedNodeName = nodeName;\n\n        if (!isHTML && !node.prefix && node.namespaceURI) {\n          var defaultNS; // lookup current default ns from `xmlns` attribute\n\n          for (var ai = 0; ai < attrs.length; ai++) {\n            if (attrs.item(ai).name === 'xmlns') {\n              defaultNS = attrs.item(ai).value;\n              break;\n            }\n          }\n\n          if (!defaultNS) {\n            // lookup current default ns in visibleNamespaces\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n\n              if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n                defaultNS = namespace.namespace;\n                break;\n              }\n            }\n          }\n\n          if (defaultNS !== node.namespaceURI) {\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n\n              if (namespace.namespace === node.namespaceURI) {\n                if (namespace.prefix) {\n                  prefixedNodeName = namespace.prefix + ':' + nodeName;\n                }\n\n                break;\n              }\n            }\n          }\n        }\n\n        buf.push('<', prefixedNodeName);\n\n        for (var i = 0; i < len; i++) {\n          // add namespaces for attributes\n          var attr = attrs.item(i);\n\n          if (attr.prefix == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: attr.localName,\n              namespace: attr.value\n            });\n          } else if (attr.nodeName == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: '',\n              namespace: attr.value\n            });\n          }\n        }\n\n        for (var i = 0; i < len; i++) {\n          var attr = attrs.item(i);\n\n          if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n            var prefix = attr.prefix || '';\n            var uri = attr.namespaceURI;\n            addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n            visibleNamespaces.push({\n              prefix: prefix,\n              namespace: uri\n            });\n          }\n\n          serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n        } // add namespace for current node\t\t\n\n\n        if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n          var prefix = node.prefix || '';\n          var uri = node.namespaceURI;\n          addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n          visibleNamespaces.push({\n            prefix: prefix,\n            namespace: uri\n          });\n        }\n\n        if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n          buf.push('>'); //if is cdata child node\n\n          if (isHTML && /^script$/i.test(nodeName)) {\n            while (child) {\n              if (child.data) {\n                buf.push(child.data);\n              } else {\n                serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              }\n\n              child = child.nextSibling;\n            }\n          } else {\n            while (child) {\n              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              child = child.nextSibling;\n            }\n          }\n\n          buf.push('</', prefixedNodeName, '>');\n        } else {\n          buf.push('/>');\n        } // remove added visible namespaces\n        //visibleNamespaces.length = startVisibleNamespaces;\n\n\n        return;\n\n      case DOCUMENT_NODE:\n      case DOCUMENT_FRAGMENT_NODE:\n        var child = node.firstChild;\n\n        while (child) {\n          serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n          child = child.nextSibling;\n        }\n\n        return;\n\n      case ATTRIBUTE_NODE:\n        return addSerializedAttribute(buf, node.name, node.value);\n\n      case TEXT_NODE:\n        /**\n         * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n         * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n         * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n         * `&amp;` and `&lt;` respectively.\n         * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n         * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n         * when that string is not marking the end of a CDATA section.\n         *\n         * In the content of elements, character data is any string of characters\n         * which does not contain the start-delimiter of any markup\n         * and does not include the CDATA-section-close delimiter, `]]>`.\n         *\n         * @see https://www.w3.org/TR/xml/#NT-CharData\n         */\n        return buf.push(node.data.replace(/[<&]/g, _xmlEncoder).replace(/]]>/g, ']]&gt;'));\n\n      case CDATA_SECTION_NODE:\n        return buf.push('<![CDATA[', node.data, ']]>');\n\n      case COMMENT_NODE:\n        return buf.push(\"<!--\", node.data, \"-->\");\n\n      case DOCUMENT_TYPE_NODE:\n        var pubid = node.publicId;\n        var sysid = node.systemId;\n        buf.push('<!DOCTYPE ', node.name);\n\n        if (pubid) {\n          buf.push(' PUBLIC ', pubid);\n\n          if (sysid && sysid != '.') {\n            buf.push(' ', sysid);\n          }\n\n          buf.push('>');\n        } else if (sysid && sysid != '.') {\n          buf.push(' SYSTEM ', sysid, '>');\n        } else {\n          var sub = node.internalSubset;\n\n          if (sub) {\n            buf.push(\" [\", sub, \"]\");\n          }\n\n          buf.push(\">\");\n        }\n\n        return;\n\n      case PROCESSING_INSTRUCTION_NODE:\n        return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n\n      case ENTITY_REFERENCE_NODE:\n        return buf.push('&', node.nodeName, ';');\n      //case ENTITY_NODE:\n      //case NOTATION_NODE:\n\n      default:\n        buf.push('??', node.nodeName);\n    }\n  }\n\n  function _importNode(doc, node, deep) {\n    var node2;\n\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        node2 = node.cloneNode(false);\n        node2.ownerDocument = doc;\n      //var attrs = node2.attributes;\n      //var len = attrs.length;\n      //for(var i=0;i<len;i++){\n      //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n      //}\n\n      case DOCUMENT_FRAGMENT_NODE:\n        break;\n\n      case ATTRIBUTE_NODE:\n        deep = true;\n        break;\n      //case ENTITY_REFERENCE_NODE:\n      //case PROCESSING_INSTRUCTION_NODE:\n      ////case TEXT_NODE:\n      //case CDATA_SECTION_NODE:\n      //case COMMENT_NODE:\n      //\tdeep = false;\n      //\tbreak;\n      //case DOCUMENT_NODE:\n      //case DOCUMENT_TYPE_NODE:\n      //cannot be imported.\n      //case ENTITY_NODE:\n      //case NOTATION_NODE：\n      //can not hit in level3\n      //default:throw e;\n    }\n\n    if (!node2) {\n      node2 = node.cloneNode(false); //false\n    }\n\n    node2.ownerDocument = doc;\n    node2.parentNode = null;\n\n    if (deep) {\n      var child = node.firstChild;\n\n      while (child) {\n        node2.appendChild(_importNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n\n    return node2;\n  } //\n  //var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n  //\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\n\n\n  function _cloneNode(doc, node, deep) {\n    var node2 = new node.constructor();\n\n    for (var n in node) {\n      var v = node[n];\n\n      if (typeof v != 'object') {\n        if (v != node2[n]) {\n          node2[n] = v;\n        }\n      }\n    }\n\n    if (node.childNodes) {\n      node2.childNodes = new NodeList();\n    }\n\n    node2.ownerDocument = doc;\n\n    switch (node2.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var attrs2 = node2.attributes = new NamedNodeMap();\n        var len = attrs.length;\n        attrs2._ownerElement = node2;\n\n        for (var i = 0; i < len; i++) {\n          node2.setAttributeNode(_cloneNode(doc, attrs.item(i), true));\n        }\n\n        break;\n\n      case ATTRIBUTE_NODE:\n        deep = true;\n    }\n\n    if (deep) {\n      var child = node.firstChild;\n\n      while (child) {\n        node2.appendChild(_cloneNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n\n    return node2;\n  }\n\n  function __set__(object, key, value) {\n    object[key] = value;\n  } //do dynamic\n\n\n  try {\n    if (Object.defineProperty) {\n      var getTextContent = function getTextContent(node) {\n        switch (node.nodeType) {\n          case ELEMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            var buf = [];\n            node = node.firstChild;\n\n            while (node) {\n              if (node.nodeType !== 7 && node.nodeType !== 8) {\n                buf.push(getTextContent(node));\n              }\n\n              node = node.nextSibling;\n            }\n\n            return buf.join('');\n\n          default:\n            return node.nodeValue;\n        }\n      };\n\n      Object.defineProperty(LiveNodeList.prototype, 'length', {\n        get: function get() {\n          _updateLiveList(this);\n\n          return this.$$length;\n        }\n      });\n      Object.defineProperty(Node.prototype, 'textContent', {\n        get: function get() {\n          return getTextContent(this);\n        },\n        set: function set(data) {\n          switch (this.nodeType) {\n            case ELEMENT_NODE:\n            case DOCUMENT_FRAGMENT_NODE:\n              while (this.firstChild) {\n                this.removeChild(this.firstChild);\n              }\n\n              if (data || String(data)) {\n                this.appendChild(this.ownerDocument.createTextNode(data));\n              }\n\n              break;\n\n            default:\n              this.data = data;\n              this.value = data;\n              this.nodeValue = data;\n          }\n        }\n      });\n\n      __set__ = function __set__(object, key, value) {\n        //console.log(value)\n        object['$$' + key] = value;\n      };\n    }\n  } catch (e) {//ie8\n  } //if(typeof require == 'function'){\n\n\n  var DocumentType_1 = DocumentType;\n  var DOMException_1 = DOMException;\n  var DOMImplementation_1$1 = DOMImplementation$1;\n  var Element_1 = Element;\n  var Node_1 = Node;\n  var NodeList_1 = NodeList;\n  var XMLSerializer_1 = XMLSerializer$1; //}\n\n  var dom = {\n    DocumentType: DocumentType_1,\n    DOMException: DOMException_1,\n    DOMImplementation: DOMImplementation_1$1,\n    Element: Element_1,\n    Node: Node_1,\n    NodeList: NodeList_1,\n    XMLSerializer: XMLSerializer_1\n  };\n\n  var entities = createCommonjsModule(function (module, exports) {\n    var freeze = conventions.freeze;\n    /**\n     * The entities that are predefined in every XML document.\n     *\n     * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n     * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n     */\n\n    exports.XML_ENTITIES = freeze({\n      amp: '&',\n      apos: \"'\",\n      gt: '>',\n      lt: '<',\n      quot: '\"'\n    });\n    /**\n     * A map of currently 241 entities that are detected in an HTML document.\n     * They contain all entries from `XML_ENTITIES`.\n     *\n     * @see XML_ENTITIES\n     * @see DOMParser.parseFromString\n     * @see DOMImplementation.prototype.createHTMLDocument\n     * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n     * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n     * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n     */\n\n    exports.HTML_ENTITIES = freeze({\n      lt: '<',\n      gt: '>',\n      amp: '&',\n      quot: '\"',\n      apos: \"'\",\n      Agrave: \"À\",\n      Aacute: \"Á\",\n      Acirc: \"Â\",\n      Atilde: \"Ã\",\n      Auml: \"Ä\",\n      Aring: \"Å\",\n      AElig: \"Æ\",\n      Ccedil: \"Ç\",\n      Egrave: \"È\",\n      Eacute: \"É\",\n      Ecirc: \"Ê\",\n      Euml: \"Ë\",\n      Igrave: \"Ì\",\n      Iacute: \"Í\",\n      Icirc: \"Î\",\n      Iuml: \"Ï\",\n      ETH: \"Ð\",\n      Ntilde: \"Ñ\",\n      Ograve: \"Ò\",\n      Oacute: \"Ó\",\n      Ocirc: \"Ô\",\n      Otilde: \"Õ\",\n      Ouml: \"Ö\",\n      Oslash: \"Ø\",\n      Ugrave: \"Ù\",\n      Uacute: \"Ú\",\n      Ucirc: \"Û\",\n      Uuml: \"Ü\",\n      Yacute: \"Ý\",\n      THORN: \"Þ\",\n      szlig: \"ß\",\n      agrave: \"à\",\n      aacute: \"á\",\n      acirc: \"â\",\n      atilde: \"ã\",\n      auml: \"ä\",\n      aring: \"å\",\n      aelig: \"æ\",\n      ccedil: \"ç\",\n      egrave: \"è\",\n      eacute: \"é\",\n      ecirc: \"ê\",\n      euml: \"ë\",\n      igrave: \"ì\",\n      iacute: \"í\",\n      icirc: \"î\",\n      iuml: \"ï\",\n      eth: \"ð\",\n      ntilde: \"ñ\",\n      ograve: \"ò\",\n      oacute: \"ó\",\n      ocirc: \"ô\",\n      otilde: \"õ\",\n      ouml: \"ö\",\n      oslash: \"ø\",\n      ugrave: \"ù\",\n      uacute: \"ú\",\n      ucirc: \"û\",\n      uuml: \"ü\",\n      yacute: \"ý\",\n      thorn: \"þ\",\n      yuml: \"ÿ\",\n      nbsp: \"\\xA0\",\n      iexcl: \"¡\",\n      cent: \"¢\",\n      pound: \"£\",\n      curren: \"¤\",\n      yen: \"¥\",\n      brvbar: \"¦\",\n      sect: \"§\",\n      uml: \"¨\",\n      copy: \"©\",\n      ordf: \"ª\",\n      laquo: \"«\",\n      not: \"¬\",\n      shy: \"­­\",\n      reg: \"®\",\n      macr: \"¯\",\n      deg: \"°\",\n      plusmn: \"±\",\n      sup2: \"²\",\n      sup3: \"³\",\n      acute: \"´\",\n      micro: \"µ\",\n      para: \"¶\",\n      middot: \"·\",\n      cedil: \"¸\",\n      sup1: \"¹\",\n      ordm: \"º\",\n      raquo: \"»\",\n      frac14: \"¼\",\n      frac12: \"½\",\n      frac34: \"¾\",\n      iquest: \"¿\",\n      times: \"×\",\n      divide: \"÷\",\n      forall: \"∀\",\n      part: \"∂\",\n      exist: \"∃\",\n      empty: \"∅\",\n      nabla: \"∇\",\n      isin: \"∈\",\n      notin: \"∉\",\n      ni: \"∋\",\n      prod: \"∏\",\n      sum: \"∑\",\n      minus: \"−\",\n      lowast: \"∗\",\n      radic: \"√\",\n      prop: \"∝\",\n      infin: \"∞\",\n      ang: \"∠\",\n      and: \"∧\",\n      or: \"∨\",\n      cap: \"∩\",\n      cup: \"∪\",\n      'int': \"∫\",\n      there4: \"∴\",\n      sim: \"∼\",\n      cong: \"≅\",\n      asymp: \"≈\",\n      ne: \"≠\",\n      equiv: \"≡\",\n      le: \"≤\",\n      ge: \"≥\",\n      sub: \"⊂\",\n      sup: \"⊃\",\n      nsub: \"⊄\",\n      sube: \"⊆\",\n      supe: \"⊇\",\n      oplus: \"⊕\",\n      otimes: \"⊗\",\n      perp: \"⊥\",\n      sdot: \"⋅\",\n      Alpha: \"Α\",\n      Beta: \"Β\",\n      Gamma: \"Γ\",\n      Delta: \"Δ\",\n      Epsilon: \"Ε\",\n      Zeta: \"Ζ\",\n      Eta: \"Η\",\n      Theta: \"Θ\",\n      Iota: \"Ι\",\n      Kappa: \"Κ\",\n      Lambda: \"Λ\",\n      Mu: \"Μ\",\n      Nu: \"Ν\",\n      Xi: \"Ξ\",\n      Omicron: \"Ο\",\n      Pi: \"Π\",\n      Rho: \"Ρ\",\n      Sigma: \"Σ\",\n      Tau: \"Τ\",\n      Upsilon: \"Υ\",\n      Phi: \"Φ\",\n      Chi: \"Χ\",\n      Psi: \"Ψ\",\n      Omega: \"Ω\",\n      alpha: \"α\",\n      beta: \"β\",\n      gamma: \"γ\",\n      delta: \"δ\",\n      epsilon: \"ε\",\n      zeta: \"ζ\",\n      eta: \"η\",\n      theta: \"θ\",\n      iota: \"ι\",\n      kappa: \"κ\",\n      lambda: \"λ\",\n      mu: \"μ\",\n      nu: \"ν\",\n      xi: \"ξ\",\n      omicron: \"ο\",\n      pi: \"π\",\n      rho: \"ρ\",\n      sigmaf: \"ς\",\n      sigma: \"σ\",\n      tau: \"τ\",\n      upsilon: \"υ\",\n      phi: \"φ\",\n      chi: \"χ\",\n      psi: \"ψ\",\n      omega: \"ω\",\n      thetasym: \"ϑ\",\n      upsih: \"ϒ\",\n      piv: \"ϖ\",\n      OElig: \"Œ\",\n      oelig: \"œ\",\n      Scaron: \"Š\",\n      scaron: \"š\",\n      Yuml: \"Ÿ\",\n      fnof: \"ƒ\",\n      circ: \"ˆ\",\n      tilde: \"˜\",\n      ensp: \" \",\n      emsp: \" \",\n      thinsp: \" \",\n      zwnj: \"‌\",\n      zwj: \"‍\",\n      lrm: \"‎\",\n      rlm: \"‏\",\n      ndash: \"–\",\n      mdash: \"—\",\n      lsquo: \"‘\",\n      rsquo: \"’\",\n      sbquo: \"‚\",\n      ldquo: \"“\",\n      rdquo: \"”\",\n      bdquo: \"„\",\n      dagger: \"†\",\n      Dagger: \"‡\",\n      bull: \"•\",\n      hellip: \"…\",\n      permil: \"‰\",\n      prime: \"′\",\n      Prime: \"″\",\n      lsaquo: \"‹\",\n      rsaquo: \"›\",\n      oline: \"‾\",\n      euro: \"€\",\n      trade: \"™\",\n      larr: \"←\",\n      uarr: \"↑\",\n      rarr: \"→\",\n      darr: \"↓\",\n      harr: \"↔\",\n      crarr: \"↵\",\n      lceil: \"⌈\",\n      rceil: \"⌉\",\n      lfloor: \"⌊\",\n      rfloor: \"⌋\",\n      loz: \"◊\",\n      spades: \"♠\",\n      clubs: \"♣\",\n      hearts: \"♥\",\n      diams: \"♦\"\n    });\n    /**\n     * @deprecated use `HTML_ENTITIES` instead\n     * @see HTML_ENTITIES\n     */\n\n    exports.entityMap = exports.HTML_ENTITIES;\n  });\n  entities.XML_ENTITIES;\n  entities.HTML_ENTITIES;\n  entities.entityMap;\n\n  var NAMESPACE$1 = conventions.NAMESPACE; //[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n  //[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n  //[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\n\n  var nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/; //\\u10000-\\uEFFFF\n\n  var nameChar = new RegExp(\"[\\\\-\\\\.0-9\" + nameStartChar.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\n  var tagNamePattern = new RegExp('^' + nameStartChar.source + nameChar.source + '*(?:\\:' + nameStartChar.source + nameChar.source + '*)?$'); //var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n  //var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n  //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n  //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\n  var S_TAG = 0; //tag name offerring\n\n  var S_ATTR = 1; //attr name offerring \n\n  var S_ATTR_SPACE = 2; //attr name end and space offer\n\n  var S_EQ = 3; //=space?\n\n  var S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\n\n  var S_ATTR_END = 5; //attr value end and no space(quot end)\n\n  var S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\n\n  var S_TAG_CLOSE = 7; //closed el<el />\n\n  /**\n   * Creates an error that will not be caught by XMLReader aka the SAX parser.\n   *\n   * @param {string} message\n   * @param {any?} locator Optional, can provide details about the location in the source\n   * @constructor\n   */\n\n  function ParseError$1(message, locator) {\n    this.message = message;\n    this.locator = locator;\n    if (Error.captureStackTrace) Error.captureStackTrace(this, ParseError$1);\n  }\n\n  ParseError$1.prototype = new Error();\n  ParseError$1.prototype.name = ParseError$1.name;\n\n  function XMLReader$1() {}\n\n  XMLReader$1.prototype = {\n    parse: function parse(source, defaultNSMap, entityMap) {\n      var domBuilder = this.domBuilder;\n      domBuilder.startDocument();\n\n      _copy(defaultNSMap, defaultNSMap = {});\n\n      _parse(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n\n      domBuilder.endDocument();\n    }\n  };\n\n  function _parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n    function fixedFromCharCode(code) {\n      // String.prototype.fromCharCode does not supports\n      // > 2 bytes unicode chars directly\n      if (code > 0xffff) {\n        code -= 0x10000;\n        var surrogate1 = 0xd800 + (code >> 10),\n            surrogate2 = 0xdc00 + (code & 0x3ff);\n        return String.fromCharCode(surrogate1, surrogate2);\n      } else {\n        return String.fromCharCode(code);\n      }\n    }\n\n    function entityReplacer(a) {\n      var k = a.slice(1, -1);\n\n      if (k in entityMap) {\n        return entityMap[k];\n      } else if (k.charAt(0) === '#') {\n        return fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));\n      } else {\n        errorHandler.error('entity not found:' + a);\n        return a;\n      }\n    }\n\n    function appendText(end) {\n      //has some bugs\n      if (end > start) {\n        var xt = source.substring(start, end).replace(/&#?\\w+;/g, entityReplacer);\n        locator && position(start);\n        domBuilder.characters(xt, 0, end - start);\n        start = end;\n      }\n    }\n\n    function position(p, m) {\n      while (p >= lineEnd && (m = linePattern.exec(source))) {\n        lineStart = m.index;\n        lineEnd = lineStart + m[0].length;\n        locator.lineNumber++; //console.log('line++:',locator,startPos,endPos)\n      }\n\n      locator.columnNumber = p - lineStart + 1;\n    }\n\n    var lineStart = 0;\n    var lineEnd = 0;\n    var linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n    var locator = domBuilder.locator;\n    var parseStack = [{\n      currentNSMap: defaultNSMapCopy\n    }];\n    var closeMap = {};\n    var start = 0;\n\n    while (true) {\n      try {\n        var tagStart = source.indexOf('<', start);\n\n        if (tagStart < 0) {\n          if (!source.substr(start).match(/^\\s*$/)) {\n            var doc = domBuilder.doc;\n            var text = doc.createTextNode(source.substr(start));\n            doc.appendChild(text);\n            domBuilder.currentElement = text;\n          }\n\n          return;\n        }\n\n        if (tagStart > start) {\n          appendText(tagStart);\n        }\n\n        switch (source.charAt(tagStart + 1)) {\n          case '/':\n            var end = source.indexOf('>', tagStart + 3);\n            var tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n            var config = parseStack.pop();\n\n            if (end < 0) {\n              tagName = source.substring(tagStart + 2).replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' is not complete:' + config.tagName);\n              end = tagStart + 1 + tagName.length;\n            } else if (tagName.match(/\\s</)) {\n              tagName = tagName.replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' maybe not complete');\n              end = tagStart + 1 + tagName.length;\n            }\n\n            var localNSMap = config.localNSMap;\n            var endMatch = config.tagName == tagName;\n            var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();\n\n            if (endIgnoreCaseMach) {\n              domBuilder.endElement(config.uri, config.localName, tagName);\n\n              if (localNSMap) {\n                for (var prefix in localNSMap) {\n                  domBuilder.endPrefixMapping(prefix);\n                }\n              }\n\n              if (!endMatch) {\n                errorHandler.fatalError(\"end tag name: \" + tagName + ' is not match the current start tagName:' + config.tagName); // No known test case\n              }\n            } else {\n              parseStack.push(config);\n            }\n\n            end++;\n            break;\n          // end elment\n\n          case '?':\n            // <?...?>\n            locator && position(tagStart);\n            end = parseInstruction(source, tagStart, domBuilder);\n            break;\n\n          case '!':\n            // <!doctype,<![CDATA,<!--\n            locator && position(tagStart);\n            end = parseDCC(source, tagStart, domBuilder, errorHandler);\n            break;\n\n          default:\n            locator && position(tagStart);\n            var el = new ElementAttributes();\n            var currentNSMap = parseStack[parseStack.length - 1].currentNSMap; //elStartEnd\n\n            var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);\n            var len = el.length;\n\n            if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {\n              el.closed = true;\n\n              if (!entityMap.nbsp) {\n                errorHandler.warning('unclosed xml attribute');\n              }\n            }\n\n            if (locator && len) {\n              var locator2 = copyLocator(locator, {}); //try{//attribute position fixed\n\n              for (var i = 0; i < len; i++) {\n                var a = el[i];\n                position(a.offset);\n                a.locator = copyLocator(locator, {});\n              }\n\n              domBuilder.locator = locator2;\n\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n\n              domBuilder.locator = locator;\n            } else {\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n            }\n\n            if (NAMESPACE$1.isHTML(el.uri) && !el.closed) {\n              end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n            } else {\n              end++;\n            }\n\n        }\n      } catch (e) {\n        if (e instanceof ParseError$1) {\n          throw e;\n        }\n\n        errorHandler.error('element parse error: ' + e);\n        end = -1;\n      }\n\n      if (end > start) {\n        start = end;\n      } else {\n        //TODO: 这里有可能sax回退，有位置错误风险\n        appendText(Math.max(tagStart, start) + 1);\n      }\n    }\n  }\n\n  function copyLocator(f, t) {\n    t.lineNumber = f.lineNumber;\n    t.columnNumber = f.columnNumber;\n    return t;\n  }\n  /**\n   * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n   * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n   */\n\n\n  function parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {\n    /**\n     * @param {string} qname\n     * @param {string} value\n     * @param {number} startIndex\n     */\n    function addAttribute(qname, value, startIndex) {\n      if (el.attributeNames.hasOwnProperty(qname)) {\n        errorHandler.fatalError('Attribute ' + qname + ' redefined');\n      }\n\n      el.addValue(qname, value, startIndex);\n    }\n\n    var attrName;\n    var value;\n    var p = ++start;\n    var s = S_TAG; //status\n\n    while (true) {\n      var c = source.charAt(p);\n\n      switch (c) {\n        case '=':\n          if (s === S_ATTR) {\n            //attrName\n            attrName = source.slice(start, p);\n            s = S_EQ;\n          } else if (s === S_ATTR_SPACE) {\n            s = S_EQ;\n          } else {\n            //fatalError: equal must after attrName or space after attrName\n            throw new Error('attribute equal must after attrName'); // No known test case\n          }\n\n          break;\n\n        case '\\'':\n        case '\"':\n          if (s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n          ) {\n              //equal\n              if (s === S_ATTR) {\n                errorHandler.warning('attribute value must after \"=\"');\n                attrName = source.slice(start, p);\n              }\n\n              start = p + 1;\n              p = source.indexOf(c, start);\n\n              if (p > 0) {\n                value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n                addAttribute(attrName, value, start - 1);\n                s = S_ATTR_END;\n              } else {\n                //fatalError: no end quot match\n                throw new Error('attribute value no end \\'' + c + '\\' match');\n              }\n            } else if (s == S_ATTR_NOQUOT_VALUE) {\n            value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer); //console.log(attrName,value,start,p)\n\n            addAttribute(attrName, value, start); //console.dir(el)\n\n            errorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + ')!!');\n            start = p + 1;\n            s = S_ATTR_END;\n          } else {\n            //fatalError: no equal before\n            throw new Error('attribute value must after \"=\"'); // No known test case\n          }\n\n          break;\n\n        case '/':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              s = S_TAG_CLOSE;\n              el.closed = true;\n\n            case S_ATTR_NOQUOT_VALUE:\n            case S_ATTR:\n            case S_ATTR_SPACE:\n              break;\n            //case S_EQ:\n\n            default:\n              throw new Error(\"attribute invalid close char('/')\");\n            // No known test case\n          }\n\n          break;\n\n        case '':\n          //end document\n          errorHandler.error('unexpected end of input');\n\n          if (s == S_TAG) {\n            el.setTagName(source.slice(start, p));\n          }\n\n          return p;\n\n        case '>':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              break;\n            //normal\n\n            case S_ATTR_NOQUOT_VALUE: //Compatible state\n\n            case S_ATTR:\n              value = source.slice(start, p);\n\n              if (value.slice(-1) === '/') {\n                el.closed = true;\n                value = value.slice(0, -1);\n              }\n\n            case S_ATTR_SPACE:\n              if (s === S_ATTR_SPACE) {\n                value = attrName;\n              }\n\n              if (s == S_ATTR_NOQUOT_VALUE) {\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n                addAttribute(attrName, value.replace(/&#?\\w+;/g, entityReplacer), start);\n              } else {\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n                }\n\n                addAttribute(value, value, start);\n              }\n\n              break;\n\n            case S_EQ:\n              throw new Error('attribute value missed!!');\n          } //\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\n\n          return p;\n\n        /*xml space '\\x20' | #x9 | #xD | #xA; */\n\n        case \"\\x80\":\n          c = ' ';\n\n        default:\n          if (c <= ' ') {\n            //space\n            switch (s) {\n              case S_TAG:\n                el.setTagName(source.slice(start, p)); //tagName\n\n                s = S_TAG_SPACE;\n                break;\n\n              case S_ATTR:\n                attrName = source.slice(start, p);\n                s = S_ATTR_SPACE;\n                break;\n\n              case S_ATTR_NOQUOT_VALUE:\n                var value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n                addAttribute(attrName, value, start);\n\n              case S_ATTR_END:\n                s = S_TAG_SPACE;\n                break;\n              //case S_TAG_SPACE:\n              //case S_EQ:\n              //case S_ATTR_SPACE:\n              //\tvoid();break;\n              //case S_TAG_CLOSE:\n              //ignore warning\n            }\n          } else {\n            //not space\n            //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n            //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n            switch (s) {\n              //case S_TAG:void();break;\n              //case S_ATTR:void();break;\n              //case S_ATTR_NOQUOT_VALUE:void();break;\n              case S_ATTR_SPACE:\n                el.tagName;\n\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n                }\n\n                addAttribute(attrName, attrName, start);\n                start = p;\n                s = S_ATTR;\n                break;\n\n              case S_ATTR_END:\n                errorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n\n              case S_TAG_SPACE:\n                s = S_ATTR;\n                start = p;\n                break;\n\n              case S_EQ:\n                s = S_ATTR_NOQUOT_VALUE;\n                start = p;\n                break;\n\n              case S_TAG_CLOSE:\n                throw new Error(\"elements closed character '/' and '>' must be connected to\");\n            }\n          }\n\n      } //end outer switch\n      //console.log('p++',p)\n\n\n      p++;\n    }\n  }\n  /**\n   * @return true if has new namespace define\n   */\n\n\n  function appendElement$1(el, domBuilder, currentNSMap) {\n    var tagName = el.tagName;\n    var localNSMap = null; //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\n    var i = el.length;\n\n    while (i--) {\n      var a = el[i];\n      var qName = a.qName;\n      var value = a.value;\n      var nsp = qName.indexOf(':');\n\n      if (nsp > 0) {\n        var prefix = a.prefix = qName.slice(0, nsp);\n        var localName = qName.slice(nsp + 1);\n        var nsPrefix = prefix === 'xmlns' && localName;\n      } else {\n        localName = qName;\n        prefix = null;\n        nsPrefix = qName === 'xmlns' && '';\n      } //can not set prefix,because prefix !== ''\n\n\n      a.localName = localName; //prefix == null for no ns prefix attribute \n\n      if (nsPrefix !== false) {\n        //hack!!\n        if (localNSMap == null) {\n          localNSMap = {}; //console.log(currentNSMap,0)\n\n          _copy(currentNSMap, currentNSMap = {}); //console.log(currentNSMap,1)\n\n        }\n\n        currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n        a.uri = NAMESPACE$1.XMLNS;\n        domBuilder.startPrefixMapping(nsPrefix, value);\n      }\n    }\n\n    var i = el.length;\n\n    while (i--) {\n      a = el[i];\n      var prefix = a.prefix;\n\n      if (prefix) {\n        //no prefix attribute has no namespace\n        if (prefix === 'xml') {\n          a.uri = NAMESPACE$1.XML;\n        }\n\n        if (prefix !== 'xmlns') {\n          a.uri = currentNSMap[prefix || '']; //{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n        }\n      }\n    }\n\n    var nsp = tagName.indexOf(':');\n\n    if (nsp > 0) {\n      prefix = el.prefix = tagName.slice(0, nsp);\n      localName = el.localName = tagName.slice(nsp + 1);\n    } else {\n      prefix = null; //important!!\n\n      localName = el.localName = tagName;\n    } //no prefix element has default namespace\n\n\n    var ns = el.uri = currentNSMap[prefix || ''];\n    domBuilder.startElement(ns, localName, tagName, el); //endPrefixMapping and startPrefixMapping have not any help for dom builder\n    //localNSMap = null\n\n    if (el.closed) {\n      domBuilder.endElement(ns, localName, tagName);\n\n      if (localNSMap) {\n        for (prefix in localNSMap) {\n          domBuilder.endPrefixMapping(prefix);\n        }\n      }\n    } else {\n      el.currentNSMap = currentNSMap;\n      el.localNSMap = localNSMap; //parseStack.push(el);\n\n      return true;\n    }\n  }\n\n  function parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n    if (/^(?:script|textarea)$/i.test(tagName)) {\n      var elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);\n      var text = source.substring(elStartEnd + 1, elEndStart);\n\n      if (/[&<]/.test(text)) {\n        if (/^script$/i.test(tagName)) {\n          //if(!/\\]\\]>/.test(text)){\n          //lexHandler.startCDATA();\n          domBuilder.characters(text, 0, text.length); //lexHandler.endCDATA();\n\n          return elEndStart; //}\n        } //}else{//text area\n\n\n        text = text.replace(/&#?\\w+;/g, entityReplacer);\n        domBuilder.characters(text, 0, text.length);\n        return elEndStart; //}\n      }\n    }\n\n    return elStartEnd + 1;\n  }\n\n  function fixSelfClosed(source, elStartEnd, tagName, closeMap) {\n    //if(tagName in closeMap){\n    var pos = closeMap[tagName];\n\n    if (pos == null) {\n      //console.log(tagName)\n      pos = source.lastIndexOf('</' + tagName + '>');\n\n      if (pos < elStartEnd) {\n        //忘记闭合\n        pos = source.lastIndexOf('</' + tagName);\n      }\n\n      closeMap[tagName] = pos;\n    }\n\n    return pos < elStartEnd; //} \n  }\n\n  function _copy(source, target) {\n    for (var n in source) {\n      target[n] = source[n];\n    }\n  }\n\n  function parseDCC(source, start, domBuilder, errorHandler) {\n    //sure start with '<!'\n    var next = source.charAt(start + 2);\n\n    switch (next) {\n      case '-':\n        if (source.charAt(start + 3) === '-') {\n          var end = source.indexOf('-->', start + 4); //append comment source.substring(4,end)//<!--\n\n          if (end > start) {\n            domBuilder.comment(source, start + 4, end - start - 4);\n            return end + 3;\n          } else {\n            errorHandler.error(\"Unclosed comment\");\n            return -1;\n          }\n        } else {\n          //error\n          return -1;\n        }\n\n      default:\n        if (source.substr(start + 3, 6) == 'CDATA[') {\n          var end = source.indexOf(']]>', start + 9);\n          domBuilder.startCDATA();\n          domBuilder.characters(source, start + 9, end - start - 9);\n          domBuilder.endCDATA();\n          return end + 3;\n        } //<!DOCTYPE\n        //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \n\n\n        var matchs = split(source, start);\n        var len = matchs.length;\n\n        if (len > 1 && /!doctype/i.test(matchs[0][0])) {\n          var name = matchs[1][0];\n          var pubid = false;\n          var sysid = false;\n\n          if (len > 3) {\n            if (/^public$/i.test(matchs[2][0])) {\n              pubid = matchs[3][0];\n              sysid = len > 4 && matchs[4][0];\n            } else if (/^system$/i.test(matchs[2][0])) {\n              sysid = matchs[3][0];\n            }\n          }\n\n          var lastMatch = matchs[len - 1];\n          domBuilder.startDTD(name, pubid, sysid);\n          domBuilder.endDTD();\n          return lastMatch.index + lastMatch[0].length;\n        }\n\n    }\n\n    return -1;\n  }\n\n  function parseInstruction(source, start, domBuilder) {\n    var end = source.indexOf('?>', start);\n\n    if (end) {\n      var match = source.substring(start, end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\n      if (match) {\n        match[0].length;\n        domBuilder.processingInstruction(match[1], match[2]);\n        return end + 2;\n      } else {\n        //error\n        return -1;\n      }\n    }\n\n    return -1;\n  }\n\n  function ElementAttributes() {\n    this.attributeNames = {};\n  }\n\n  ElementAttributes.prototype = {\n    setTagName: function setTagName(tagName) {\n      if (!tagNamePattern.test(tagName)) {\n        throw new Error('invalid tagName:' + tagName);\n      }\n\n      this.tagName = tagName;\n    },\n    addValue: function addValue(qName, value, offset) {\n      if (!tagNamePattern.test(qName)) {\n        throw new Error('invalid attribute:' + qName);\n      }\n\n      this.attributeNames[qName] = this.length;\n      this[this.length++] = {\n        qName: qName,\n        value: value,\n        offset: offset\n      };\n    },\n    length: 0,\n    getLocalName: function getLocalName(i) {\n      return this[i].localName;\n    },\n    getLocator: function getLocator(i) {\n      return this[i].locator;\n    },\n    getQName: function getQName(i) {\n      return this[i].qName;\n    },\n    getURI: function getURI(i) {\n      return this[i].uri;\n    },\n    getValue: function getValue(i) {\n      return this[i].value;\n    } //\t,getIndex:function(uri, localName)){\n    //\t\tif(localName){\n    //\t\t\t\n    //\t\t}else{\n    //\t\t\tvar qName = uri\n    //\t\t}\n    //\t},\n    //\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n    //\tgetType:function(uri,localName){}\n    //\tgetType:function(i){},\n\n  };\n\n  function split(source, start) {\n    var match;\n    var buf = [];\n    var reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n    reg.lastIndex = start;\n    reg.exec(source); //skip <\n\n    while (match = reg.exec(source)) {\n      buf.push(match);\n      if (match[1]) return buf;\n    }\n  }\n\n  var XMLReader_1 = XMLReader$1;\n  var ParseError_1 = ParseError$1;\n  var sax = {\n    XMLReader: XMLReader_1,\n    ParseError: ParseError_1\n  };\n\n  var DOMImplementation = dom.DOMImplementation;\n  var NAMESPACE = conventions.NAMESPACE;\n  var ParseError = sax.ParseError;\n  var XMLReader = sax.XMLReader;\n\n  function DOMParser$1(options) {\n    this.options = options || {\n      locator: {}\n    };\n  }\n\n  DOMParser$1.prototype.parseFromString = function (source, mimeType) {\n    var options = this.options;\n    var sax = new XMLReader();\n    var domBuilder = options.domBuilder || new DOMHandler(); //contentHandler and LexicalHandler\n\n    var errorHandler = options.errorHandler;\n    var locator = options.locator;\n    var defaultNSMap = options.xmlns || {};\n    var isHTML = /\\/x?html?$/.test(mimeType); //mimeType.toLowerCase().indexOf('html') > -1;\n\n    var entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\n    if (locator) {\n      domBuilder.setDocumentLocator(locator);\n    }\n\n    sax.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);\n    sax.domBuilder = options.domBuilder || domBuilder;\n\n    if (isHTML) {\n      defaultNSMap[''] = NAMESPACE.HTML;\n    }\n\n    defaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\n    if (source && typeof source === 'string') {\n      sax.parse(source, defaultNSMap, entityMap);\n    } else {\n      sax.errorHandler.error(\"invalid doc source\");\n    }\n\n    return domBuilder.doc;\n  };\n\n  function buildErrorHandler(errorImpl, domBuilder, locator) {\n    if (!errorImpl) {\n      if (domBuilder instanceof DOMHandler) {\n        return domBuilder;\n      }\n\n      errorImpl = domBuilder;\n    }\n\n    var errorHandler = {};\n    var isCallback = errorImpl instanceof Function;\n    locator = locator || {};\n\n    function build(key) {\n      var fn = errorImpl[key];\n\n      if (!fn && isCallback) {\n        fn = errorImpl.length == 2 ? function (msg) {\n          errorImpl(key, msg);\n        } : errorImpl;\n      }\n\n      errorHandler[key] = fn && function (msg) {\n        fn('[xmldom ' + key + ']\\t' + msg + _locator(locator));\n      } || function () {};\n    }\n\n    build('warning');\n    build('error');\n    build('fatalError');\n    return errorHandler;\n  } //console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n\n  /**\n   * +ContentHandler+ErrorHandler\n   * +LexicalHandler+EntityResolver2\n   * -DeclHandler-DTDHandler\n   *\n   * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n   * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n   */\n\n\n  function DOMHandler() {\n    this.cdata = false;\n  }\n\n  function position(locator, node) {\n    node.lineNumber = locator.lineNumber;\n    node.columnNumber = locator.columnNumber;\n  }\n  /**\n   * @see org.xml.sax.ContentHandler#startDocument\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n   */\n\n\n  DOMHandler.prototype = {\n    startDocument: function startDocument() {\n      this.doc = new DOMImplementation().createDocument(null, null, null);\n\n      if (this.locator) {\n        this.doc.documentURI = this.locator.systemId;\n      }\n    },\n    startElement: function startElement(namespaceURI, localName, qName, attrs) {\n      var doc = this.doc;\n      var el = doc.createElementNS(namespaceURI, qName || localName);\n      var len = attrs.length;\n      appendElement(this, el);\n      this.currentElement = el;\n      this.locator && position(this.locator, el);\n\n      for (var i = 0; i < len; i++) {\n        var namespaceURI = attrs.getURI(i);\n        var value = attrs.getValue(i);\n        var qName = attrs.getQName(i);\n        var attr = doc.createAttributeNS(namespaceURI, qName);\n        this.locator && position(attrs.getLocator(i), attr);\n        attr.value = attr.nodeValue = value;\n        el.setAttributeNode(attr);\n      }\n    },\n    endElement: function endElement(namespaceURI, localName, qName) {\n      var current = this.currentElement;\n      current.tagName;\n      this.currentElement = current.parentNode;\n    },\n    startPrefixMapping: function startPrefixMapping(prefix, uri) {},\n    endPrefixMapping: function endPrefixMapping(prefix) {},\n    processingInstruction: function processingInstruction(target, data) {\n      var ins = this.doc.createProcessingInstruction(target, data);\n      this.locator && position(this.locator, ins);\n      appendElement(this, ins);\n    },\n    ignorableWhitespace: function ignorableWhitespace(ch, start, length) {},\n    characters: function characters(chars, start, length) {\n      chars = _toString.apply(this, arguments); //console.log(chars)\n\n      if (chars) {\n        if (this.cdata) {\n          var charNode = this.doc.createCDATASection(chars);\n        } else {\n          var charNode = this.doc.createTextNode(chars);\n        }\n\n        if (this.currentElement) {\n          this.currentElement.appendChild(charNode);\n        } else if (/^\\s*$/.test(chars)) {\n          this.doc.appendChild(charNode); //process xml\n        }\n\n        this.locator && position(this.locator, charNode);\n      }\n    },\n    skippedEntity: function skippedEntity(name) {},\n    endDocument: function endDocument() {\n      this.doc.normalize();\n    },\n    setDocumentLocator: function setDocumentLocator(locator) {\n      if (this.locator = locator) {\n        // && !('lineNumber' in locator)){\n        locator.lineNumber = 0;\n      }\n    },\n    //LexicalHandler\n    comment: function comment(chars, start, length) {\n      chars = _toString.apply(this, arguments);\n      var comm = this.doc.createComment(chars);\n      this.locator && position(this.locator, comm);\n      appendElement(this, comm);\n    },\n    startCDATA: function startCDATA() {\n      //used in characters() methods\n      this.cdata = true;\n    },\n    endCDATA: function endCDATA() {\n      this.cdata = false;\n    },\n    startDTD: function startDTD(name, publicId, systemId) {\n      var impl = this.doc.implementation;\n\n      if (impl && impl.createDocumentType) {\n        var dt = impl.createDocumentType(name, publicId, systemId);\n        this.locator && position(this.locator, dt);\n        appendElement(this, dt);\n        this.doc.doctype = dt;\n      }\n    },\n\n    /**\n     * @see org.xml.sax.ErrorHandler\n     * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n     */\n    warning: function warning(error) {\n      console.warn('[xmldom warning]\\t' + error, _locator(this.locator));\n    },\n    error: function error(_error) {\n      console.error('[xmldom error]\\t' + _error, _locator(this.locator));\n    },\n    fatalError: function fatalError(error) {\n      throw new ParseError(error, this.locator);\n    }\n  };\n\n  function _locator(l) {\n    if (l) {\n      return '\\n@' + (l.systemId || '') + '#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';\n    }\n  }\n\n  function _toString(chars, start, length) {\n    if (typeof chars == 'string') {\n      return chars.substr(start, length);\n    } else {\n      //java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n      if (chars.length >= start + length || start) {\n        return new java.lang.String(chars, start, length) + '';\n      }\n\n      return chars;\n    }\n  }\n  /*\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n   * used method of org.xml.sax.ext.LexicalHandler:\n   *  #comment(chars, start, length)\n   *  #startCDATA()\n   *  #endCDATA()\n   *  #startDTD(name, publicId, systemId)\n   *\n   *\n   * IGNORED method of org.xml.sax.ext.LexicalHandler:\n   *  #endDTD()\n   *  #startEntity(name)\n   *  #endEntity(name)\n   *\n   *\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n   * IGNORED method of org.xml.sax.ext.DeclHandler\n   * \t#attributeDecl(eName, aName, type, mode, value)\n   *  #elementDecl(name, model)\n   *  #externalEntityDecl(name, publicId, systemId)\n   *  #internalEntityDecl(name, value)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n   * IGNORED method of org.xml.sax.EntityResolver2\n   *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n   *  #resolveEntity(publicId, systemId)\n   *  #getExternalSubset(name, baseURI)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n   * IGNORED method of org.xml.sax.DTDHandler\n   *  #notationDecl(name, publicId, systemId) {};\n   *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n   */\n\n\n  \"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function (key) {\n    DOMHandler.prototype[key] = function () {\n      return null;\n    };\n  });\n  /* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\n\n  function appendElement(hander, node) {\n    if (!hander.currentElement) {\n      hander.doc.appendChild(node);\n    } else {\n      hander.currentElement.appendChild(node);\n    }\n  } //appendChild and setAttributeNS are preformance key\n\n\n  var __DOMHandler = DOMHandler;\n  var DOMParser_1 = DOMParser$1;\n  /**\n   * @deprecated Import/require from main entry point instead\n   */\n\n  var DOMImplementation_1 = dom.DOMImplementation;\n  /**\n   * @deprecated Import/require from main entry point instead\n   */\n\n  var XMLSerializer = dom.XMLSerializer;\n  var domParser = {\n    __DOMHandler: __DOMHandler,\n    DOMParser: DOMParser_1,\n    DOMImplementation: DOMImplementation_1,\n    XMLSerializer: XMLSerializer\n  };\n\n  var DOMParser = domParser.DOMParser;\n\n  /*! @name mpd-parser @version 0.21.1 @license Apache-2.0 */\n\n  var isObject = function isObject(obj) {\n    return !!obj && typeof obj === 'object';\n  };\n\n  var merge = function merge() {\n    for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n      objects[_key] = arguments[_key];\n    }\n\n    return objects.reduce(function (result, source) {\n      if (typeof source !== 'object') {\n        return result;\n      }\n\n      Object.keys(source).forEach(function (key) {\n        if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n          result[key] = result[key].concat(source[key]);\n        } else if (isObject(result[key]) && isObject(source[key])) {\n          result[key] = merge(result[key], source[key]);\n        } else {\n          result[key] = source[key];\n        }\n      });\n      return result;\n    }, {});\n  };\n\n  var values = function values(o) {\n    return Object.keys(o).map(function (k) {\n      return o[k];\n    });\n  };\n\n  var range = function range(start, end) {\n    var result = [];\n\n    for (var i = start; i < end; i++) {\n      result.push(i);\n    }\n\n    return result;\n  };\n\n  var flatten = function flatten(lists) {\n    return lists.reduce(function (x, y) {\n      return x.concat(y);\n    }, []);\n  };\n\n  var from = function from(list) {\n    if (!list.length) {\n      return [];\n    }\n\n    var result = [];\n\n    for (var i = 0; i < list.length; i++) {\n      result.push(list[i]);\n    }\n\n    return result;\n  };\n\n  var findIndexes = function findIndexes(l, key) {\n    return l.reduce(function (a, e, i) {\n      if (e[key]) {\n        a.push(i);\n      }\n\n      return a;\n    }, []);\n  };\n  /**\n   * Returns the first index that satisfies the matching function, or -1 if not found.\n   *\n   * Only necessary because of IE11 support.\n   *\n   * @param {Array} list - the list to search through\n   * @param {Function} matchingFunction - the matching function\n   *\n   * @return {number} the matching index or -1 if not found\n   */\n\n\n  var findIndex = function findIndex(list, matchingFunction) {\n    for (var i = 0; i < list.length; i++) {\n      if (matchingFunction(list[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Returns a union of the included lists provided each element can be identified by a key.\n   *\n   * @param {Array} list - list of lists to get the union of\n   * @param {Function} keyFunction - the function to use as a key for each element\n   *\n   * @return {Array} the union of the arrays\n   */\n\n\n  var union = function union(lists, keyFunction) {\n    return values(lists.reduce(function (acc, list) {\n      list.forEach(function (el) {\n        acc[keyFunction(el)] = el;\n      });\n      return acc;\n    }, {}));\n  };\n\n  var errors = {\n    INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n    DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n    DASH_INVALID_XML: 'DASH_INVALID_XML',\n    NO_BASE_URL: 'NO_BASE_URL',\n    MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n    SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n    UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n  };\n  /**\n   * @typedef {Object} SingleUri\n   * @property {string} uri - relative location of segment\n   * @property {string} resolvedUri - resolved location of segment\n   * @property {Object} byterange - Object containing information on how to make byte range\n   *   requests following byte-range-spec per RFC2616.\n   * @property {String} byterange.length - length of range request\n   * @property {String} byterange.offset - byte offset of range request\n   *\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n   */\n\n  /**\n   * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n   * that conforms to how m3u8-parser is structured\n   *\n   * @see https://github.com/videojs/m3u8-parser\n   *\n   * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n   * @param {string} source - source url for segment\n   * @param {string} range - optional range used for range calls,\n   *   follows  RFC 2616, Clause 14.35.1\n   * @return {SingleUri} full segment information transformed into a format similar\n   *   to m3u8-parser\n   */\n\n  var urlTypeToSegment = function urlTypeToSegment(_ref) {\n    var _ref$baseUrl = _ref.baseUrl,\n        baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n        _ref$source = _ref.source,\n        source = _ref$source === void 0 ? '' : _ref$source,\n        _ref$range = _ref.range,\n        range = _ref$range === void 0 ? '' : _ref$range,\n        _ref$indexRange = _ref.indexRange,\n        indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n    var segment = {\n      uri: source,\n      resolvedUri: resolveUrl$1(baseUrl || '', source)\n    };\n\n    if (range || indexRange) {\n      var rangeStr = range ? range : indexRange;\n      var ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n      var startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n      var endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n      if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n        startRange = Number(startRange);\n      }\n\n      if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n        endRange = Number(endRange);\n      }\n\n      var length;\n\n      if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n        length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n      } else {\n        length = endRange - startRange + 1;\n      }\n\n      if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n        length = Number(length);\n      } // byterange should be inclusive according to\n      // RFC 2616, Clause 14.35.1\n\n\n      segment.byterange = {\n        length: length,\n        offset: startRange\n      };\n    }\n\n    return segment;\n  };\n\n  var byteRangeToString = function byteRangeToString(byterange) {\n    // `endRange` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    var endRange;\n\n    if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n      endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n    } else {\n      endRange = byterange.offset + byterange.length - 1;\n    }\n\n    return byterange.offset + \"-\" + endRange;\n  };\n  /**\n   * parse the end number attribue that can be a string\n   * number, or undefined.\n   *\n   * @param {string|number|undefined} endNumber\n   *        The end number attribute.\n   *\n   * @return {number|null}\n   *          The result of parsing the end number.\n   */\n\n\n  var parseEndNumber = function parseEndNumber(endNumber) {\n    if (endNumber && typeof endNumber !== 'number') {\n      endNumber = parseInt(endNumber, 10);\n    }\n\n    if (isNaN(endNumber)) {\n      return null;\n    }\n\n    return endNumber;\n  };\n  /**\n   * Functions for calculating the range of available segments in static and dynamic\n   * manifests.\n   */\n\n\n  var segmentRange = {\n    /**\n     * Returns the entire range of available segments for a static MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    \"static\": function _static(attributes) {\n      var duration = attributes.duration,\n          _attributes$timescale = attributes.timescale,\n          timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n          sourceDuration = attributes.sourceDuration,\n          periodDuration = attributes.periodDuration;\n      var endNumber = parseEndNumber(attributes.endNumber);\n      var segmentDuration = duration / timescale;\n\n      if (typeof endNumber === 'number') {\n        return {\n          start: 0,\n          end: endNumber\n        };\n      }\n\n      if (typeof periodDuration === 'number') {\n        return {\n          start: 0,\n          end: periodDuration / segmentDuration\n        };\n      }\n\n      return {\n        start: 0,\n        end: sourceDuration / segmentDuration\n      };\n    },\n\n    /**\n     * Returns the current live window range of available segments for a dynamic MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    dynamic: function dynamic(attributes) {\n      var NOW = attributes.NOW,\n          clientOffset = attributes.clientOffset,\n          availabilityStartTime = attributes.availabilityStartTime,\n          _attributes$timescale2 = attributes.timescale,\n          timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n          duration = attributes.duration,\n          _attributes$periodSta = attributes.periodStart,\n          periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\n          _attributes$minimumUp = attributes.minimumUpdatePeriod,\n          minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n          _attributes$timeShift = attributes.timeShiftBufferDepth,\n          timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n      var endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n      // after retrieving UTC server time.\n\n      var now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n      // Convert the period start time to EPOCH.\n\n      var periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n      var periodEndWC = now + minimumUpdatePeriod;\n      var periodDuration = periodEndWC - periodStartWC;\n      var segmentCount = Math.ceil(periodDuration * timescale / duration);\n      var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n      var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n      return {\n        start: Math.max(0, availableStart),\n        end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n      };\n    }\n  };\n  /**\n   * Maps a range of numbers to objects with information needed to build the corresponding\n   * segment list\n   *\n   * @name toSegmentsCallback\n   * @function\n   * @param {number} number\n   *        Number of the segment\n   * @param {number} index\n   *        Index of the number in the range list\n   * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n   *         Object with segment timing and duration info\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping a range of numbers to\n   * information needed to build the segment list.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {toSegmentsCallback}\n   *         Callback map function\n   */\n\n  var toSegments = function toSegments(attributes) {\n    return function (number) {\n      var duration = attributes.duration,\n          _attributes$timescale3 = attributes.timescale,\n          timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n          periodStart = attributes.periodStart,\n          _attributes$startNumb = attributes.startNumber,\n          startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n      return {\n        number: startNumber + number,\n        duration: duration / timescale,\n        timeline: periodStart,\n        time: number * duration\n      };\n    };\n  };\n  /**\n   * Returns a list of objects containing segment timing and duration info used for\n   * building the list of segments. This uses the @duration attribute specified\n   * in the MPD manifest to derive the range of segments.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByDuration = function parseByDuration(attributes) {\n    var type = attributes.type,\n        duration = attributes.duration,\n        _attributes$timescale4 = attributes.timescale,\n        timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n        periodDuration = attributes.periodDuration,\n        sourceDuration = attributes.sourceDuration;\n\n    var _segmentRange$type = segmentRange[type](attributes),\n        start = _segmentRange$type.start,\n        end = _segmentRange$type.end;\n\n    var segments = range(start, end).map(toSegments(attributes));\n\n    if (type === 'static') {\n      var index = segments.length - 1; // section is either a period or the full source\n\n      var sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n      segments[index].duration = sectionDuration - duration / timescale * index;\n    }\n\n    return segments;\n  };\n  /**\n   * Translates SegmentBase into a set of segments.\n   * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromBase = function segmentsFromBase(attributes) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$indexRang = attributes.indexRange,\n        indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n        periodStart = attributes.periodStart,\n        presentationTime = attributes.presentationTime,\n        _attributes$number = attributes.number,\n        number = _attributes$number === void 0 ? 0 : _attributes$number,\n        duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n    if (!baseUrl) {\n      throw new Error(errors.NO_BASE_URL);\n    }\n\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: baseUrl,\n      indexRange: indexRange\n    });\n    segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n    // (since SegmentBase is only for one total segment)\n\n    if (duration) {\n      var segmentTimeInfo = parseByDuration(attributes);\n\n      if (segmentTimeInfo.length) {\n        segment.duration = segmentTimeInfo[0].duration;\n        segment.timeline = segmentTimeInfo[0].timeline;\n      }\n    } else if (sourceDuration) {\n      segment.duration = sourceDuration;\n      segment.timeline = periodStart;\n    } // If presentation time is provided, these segments are being generated by SIDX\n    // references, and should use the time provided. For the general case of SegmentBase,\n    // there should only be one segment in the period, so its presentation time is the same\n    // as its period start.\n\n\n    segment.presentationTime = presentationTime || periodStart;\n    segment.number = number;\n    return [segment];\n  };\n  /**\n   * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n   * according to the sidx information given.\n   *\n   * playlist.sidx has metadadata about the sidx where-as the sidx param\n   * is the parsed sidx box itself.\n   *\n   * @param {Object} playlist the playlist to update the sidx information for\n   * @param {Object} sidx the parsed sidx box\n   * @return {Object} the playlist object with the updated sidx information\n   */\n\n\n  var addSidxSegmentsToPlaylist$1 = function addSidxSegmentsToPlaylist(playlist, sidx, baseUrl) {\n    // Retain init segment information\n    var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n    var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n    var timeline = playlist.timeline || 0;\n    var sidxByteRange = playlist.sidx.byterange;\n    var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n    var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n    var mediaReferences = sidx.references.filter(function (r) {\n      return r.referenceType !== 1;\n    });\n    var segments = [];\n    var type = playlist.endList ? 'static' : 'dynamic';\n    var periodStart = playlist.sidx.timeline;\n    var presentationTime = periodStart;\n    var number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n    var startIndex; // eslint-disable-next-line\n\n    if (typeof sidx.firstOffset === 'bigint') {\n      startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n    } else {\n      startIndex = sidxEnd + sidx.firstOffset;\n    }\n\n    for (var i = 0; i < mediaReferences.length; i++) {\n      var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n      var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n      // this will be converted to seconds when generating segments\n\n      var duration = reference.subsegmentDuration; // should be an inclusive range\n\n      var endIndex = void 0; // eslint-disable-next-line\n\n      if (typeof startIndex === 'bigint') {\n        endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n      } else {\n        endIndex = startIndex + size - 1;\n      }\n\n      var indexRange = startIndex + \"-\" + endIndex;\n      var attributes = {\n        baseUrl: baseUrl,\n        timescale: timescale,\n        timeline: timeline,\n        periodStart: periodStart,\n        presentationTime: presentationTime,\n        number: number,\n        duration: duration,\n        sourceDuration: sourceDuration,\n        indexRange: indexRange,\n        type: type\n      };\n      var segment = segmentsFromBase(attributes)[0];\n\n      if (initSegment) {\n        segment.map = initSegment;\n      }\n\n      segments.push(segment);\n\n      if (typeof startIndex === 'bigint') {\n        startIndex += window.BigInt(size);\n      } else {\n        startIndex += size;\n      }\n\n      presentationTime += duration / timescale;\n      number++;\n    }\n\n    playlist.segments = segments;\n    return playlist;\n  };\n\n  var SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\n  var TIME_FUDGE = 1 / 60;\n  /**\n   * Given a list of timelineStarts, combines, dedupes, and sorts them.\n   *\n   * @param {TimelineStart[]} timelineStarts - list of timeline starts\n   *\n   * @return {TimelineStart[]} the combined and deduped timeline starts\n   */\n\n  var getUniqueTimelineStarts = function getUniqueTimelineStarts(timelineStarts) {\n    return union(timelineStarts, function (_ref) {\n      var timeline = _ref.timeline;\n      return timeline;\n    }).sort(function (a, b) {\n      return a.timeline > b.timeline ? 1 : -1;\n    });\n  };\n  /**\n   * Finds the playlist with the matching NAME attribute.\n   *\n   * @param {Array} playlists - playlists to search through\n   * @param {string} name - the NAME attribute to search for\n   *\n   * @return {Object|null} the matching playlist object, or null\n   */\n\n\n  var findPlaylistWithName = function findPlaylistWithName(playlists, name) {\n    for (var i = 0; i < playlists.length; i++) {\n      if (playlists[i].attributes.NAME === name) {\n        return playlists[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Gets a flattened array of media group playlists.\n   *\n   * @param {Object} manifest - the main manifest object\n   *\n   * @return {Array} the media group playlists\n   */\n\n\n  var getMediaGroupPlaylists = function getMediaGroupPlaylists(manifest) {\n    var mediaGroupPlaylists = [];\n    forEachMediaGroup$1(manifest, SUPPORTED_MEDIA_TYPES, function (properties, type, group, label) {\n      mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n    });\n    return mediaGroupPlaylists;\n  };\n  /**\n   * Updates the playlist's media sequence numbers.\n   *\n   * @param {Object} config - options object\n   * @param {Object} config.playlist - the playlist to update\n   * @param {number} config.mediaSequence - the mediaSequence number to start with\n   */\n\n\n  var updateMediaSequenceForPlaylist = function updateMediaSequenceForPlaylist(_ref2) {\n    var playlist = _ref2.playlist,\n        mediaSequence = _ref2.mediaSequence;\n    playlist.mediaSequence = mediaSequence;\n    playlist.segments.forEach(function (segment, index) {\n      segment.number = playlist.mediaSequence + index;\n    });\n  };\n  /**\n   * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n   * and a complete list of timeline starts.\n   *\n   * If no matching playlist is found, only the discontinuity sequence number of the playlist\n   * will be updated.\n   *\n   * Since early available timelines are not supported, at least one segment must be present.\n   *\n   * @param {Object} config - options object\n   * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n   * @param {Object[]} newPlaylists - the new playlists to update\n   * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n   */\n\n\n  var updateSequenceNumbers = function updateSequenceNumbers(_ref3) {\n    var oldPlaylists = _ref3.oldPlaylists,\n        newPlaylists = _ref3.newPlaylists,\n        timelineStarts = _ref3.timelineStarts;\n    newPlaylists.forEach(function (playlist) {\n      playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref4) {\n        var timeline = _ref4.timeline;\n        return timeline === playlist.timeline;\n      }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n      // (see ISO_23009-1-2012 5.3.5.2).\n      //\n      // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n      var oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n      if (!oldPlaylist) {\n        // Since this is a new playlist, the media sequence values can start from 0 without\n        // consequence.\n        return;\n      } // TODO better support for live SIDX\n      //\n      // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n      // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n      // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n      // not supported when the SIDX properties change on refreshes.\n      //\n      // In the future, if support needs to be added, the merging logic here can be called\n      // after SIDX references are resolved. For now, exit early to prevent exceptions being\n      // thrown due to undefined references.\n\n\n      if (playlist.sidx) {\n        return;\n      } // Since we don't yet support early available timelines, we don't need to support\n      // playlists with no segments.\n\n\n      var firstNewSegment = playlist.segments[0];\n      var oldMatchingSegmentIndex = findIndex(oldPlaylist.segments, function (oldSegment) {\n        return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n      }); // No matching segment from the old playlist means the entire playlist was refreshed.\n      // In this case the media sequence should account for this update, and the new segments\n      // should be marked as discontinuous from the prior content, since the last prior\n      // timeline was removed.\n\n      if (oldMatchingSegmentIndex === -1) {\n        updateMediaSequenceForPlaylist({\n          playlist: playlist,\n          mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n        });\n        playlist.segments[0].discontinuity = true;\n        playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n        //\n        // If the new playlist's timeline is the same as the last seen segment's timeline,\n        // then a discontinuity can be added to identify that there's potentially missing\n        // content. If there's no missing content, the discontinuity should still be rather\n        // harmless. It's possible that if segment durations are accurate enough, that the\n        // existence of a gap can be determined using the presentation times and durations,\n        // but if the segment timing info is off, it may introduce more problems than simply\n        // adding the discontinuity.\n        //\n        // If the new playlist's timeline is different from the last seen segment's timeline,\n        // then a discontinuity can be added to identify that this is the first seen segment\n        // of a new timeline. However, the logic at the start of this function that\n        // determined the disconinuity sequence by timeline index is now off by one (the\n        // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n        // we added it), so the disconinuity sequence must be decremented.\n        //\n        // A period may also have a duration of zero, so the case of no segments is handled\n        // here even though we don't yet support early available periods.\n\n        if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n          playlist.discontinuitySequence--;\n        }\n\n        return;\n      } // If the first segment matched with a prior segment on a discontinuity (it's matching\n      // on the first segment of a period), then the discontinuitySequence shouldn't be the\n      // timeline's matching one, but instead should be the one prior, and the first segment\n      // of the new manifest should be marked with a discontinuity.\n      //\n      // The reason for this special case is that discontinuity sequence shows how many\n      // discontinuities have fallen off of the playlist, and discontinuities are marked on\n      // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n      // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n      // sequence, and that first segment is an indicator, but can be removed before that\n      // timeline is gone.\n\n\n      var oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n      if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n        firstNewSegment.discontinuity = true;\n        playlist.discontinuityStarts.unshift(0);\n        playlist.discontinuitySequence--;\n      }\n\n      updateMediaSequenceForPlaylist({\n        playlist: playlist,\n        mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n      });\n    });\n  };\n  /**\n   * Given an old parsed manifest object and a new parsed manifest object, updates the\n   * sequence and timing values within the new manifest to ensure that it lines up with the\n   * old.\n   *\n   * @param {Array} oldManifest - the old main manifest object\n   * @param {Array} newManifest - the new main manifest object\n   *\n   * @return {Object} the updated new manifest object\n   */\n\n\n  var positionManifestOnTimeline = function positionManifestOnTimeline(_ref5) {\n    var oldManifest = _ref5.oldManifest,\n        newManifest = _ref5.newManifest; // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n    //\n    // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n    //\n    // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n    //\n    // Because of this change, and the difficulty of supporting periods with changing start\n    // times, periods with changing start times are not supported. This makes the logic much\n    // simpler, since periods with the same start time can be considerred the same period\n    // across refreshes.\n    //\n    // To give an example as to the difficulty of handling periods where the start time may\n    // change, if a single period manifest is refreshed with another manifest with a single\n    // period, and both the start and end times are increased, then the only way to determine\n    // if it's a new period or an old one that has changed is to look through the segments of\n    // each playlist and determine the presentation time bounds to find a match. In addition,\n    // if the period start changed to exceed the old period end, then there would be no\n    // match, and it would not be possible to determine whether the refreshed period is a new\n    // one or the old one.\n\n    var oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n    var newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n    // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n    // of properties are saved for each seen Period. Even long running live streams won't\n    // generate too many Periods, unless the stream is watched for decades. In the future,\n    // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n    // but it may not become an issue, and the additional info can be useful for debugging.\n\n    newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n    updateSequenceNumbers({\n      oldPlaylists: oldPlaylists,\n      newPlaylists: newPlaylists,\n      timelineStarts: newManifest.timelineStarts\n    });\n    return newManifest;\n  };\n\n  var generateSidxKey = function generateSidxKey(sidx) {\n    return sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n  };\n\n  var mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n    var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      var name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n\n          (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    return mergedPlaylists.map(function (playlist) {\n      playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n      return playlist;\n    });\n  };\n\n  var addSidxSegmentsToPlaylist = function addSidxSegmentsToPlaylist(playlist, sidxMapping) {\n    var sidxKey = generateSidxKey(playlist.sidx);\n    var sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (sidxMatch) {\n      addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n\n    return playlist;\n  };\n\n  var addSidxSegmentsToPlaylists = function addSidxSegmentsToPlaylists(playlists, sidxMapping) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (!Object.keys(sidxMapping).length) {\n      return playlists;\n    }\n\n    for (var i in playlists) {\n      playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n    }\n\n    return playlists;\n  };\n\n  var formatAudioPlaylist = function formatAudioPlaylist(_ref, isAudioOnly) {\n    var _attributes;\n\n    var attributes = _ref.attributes,\n        segments = _ref.segments,\n        sidx = _ref.sidx,\n        mediaSequence = _ref.mediaSequence,\n        discontinuitySequence = _ref.discontinuitySequence,\n        discontinuityStarts = _ref.discontinuityStarts;\n    var playlist = {\n      attributes: (_attributes = {\n        NAME: attributes.id,\n        BANDWIDTH: attributes.bandwidth,\n        CODECS: attributes.codecs\n      }, _attributes['PROGRAM-ID'] = 1, _attributes),\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      discontinuitySequence: discontinuitySequence,\n      discontinuityStarts: discontinuityStarts,\n      timelineStarts: attributes.timelineStarts,\n      mediaSequence: mediaSequence,\n      segments: segments\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n\n    if (isAudioOnly) {\n      playlist.attributes.AUDIO = 'audio';\n      playlist.attributes.SUBTITLES = 'subs';\n    }\n\n    return playlist;\n  };\n\n  var formatVttPlaylist = function formatVttPlaylist(_ref2) {\n    var _m3u8Attributes;\n\n    var attributes = _ref2.attributes,\n        segments = _ref2.segments,\n        mediaSequence = _ref2.mediaSequence,\n        discontinuityStarts = _ref2.discontinuityStarts,\n        discontinuitySequence = _ref2.discontinuitySequence;\n\n    if (typeof segments === 'undefined') {\n      // vtt tracks may use single file in BaseURL\n      segments = [{\n        uri: attributes.baseUrl,\n        timeline: attributes.periodStart,\n        resolvedUri: attributes.baseUrl || '',\n        duration: attributes.sourceDuration,\n        number: 0\n      }]; // targetDuration should be the same duration as the only segment\n\n      attributes.duration = attributes.sourceDuration;\n    }\n\n    var m3u8Attributes = (_m3u8Attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _m3u8Attributes['PROGRAM-ID'] = 1, _m3u8Attributes);\n\n    if (attributes.codecs) {\n      m3u8Attributes.CODECS = attributes.codecs;\n    }\n\n    return {\n      attributes: m3u8Attributes,\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      targetDuration: attributes.duration,\n      timelineStarts: attributes.timelineStarts,\n      discontinuityStarts: discontinuityStarts,\n      discontinuitySequence: discontinuitySequence,\n      mediaSequence: mediaSequence,\n      segments: segments\n    };\n  };\n\n  var organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping, isAudioOnly) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (isAudioOnly === void 0) {\n      isAudioOnly = false;\n    }\n\n    var mainPlaylist;\n    var formattedPlaylists = playlists.reduce(function (a, playlist) {\n      var role = playlist.attributes.role && playlist.attributes.role.value || '';\n      var language = playlist.attributes.lang || '';\n      var label = playlist.attributes.label || 'main';\n\n      if (language && !playlist.attributes.label) {\n        var roleLabel = role ? \" (\" + role + \")\" : '';\n        label = \"\" + playlist.attributes.lang + roleLabel;\n      }\n\n      if (!a[label]) {\n        a[label] = {\n          language: language,\n          autoselect: true,\n          \"default\": role === 'main',\n          playlists: [],\n          uri: ''\n        };\n      }\n\n      var formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n      a[label].playlists.push(formatted);\n\n      if (typeof mainPlaylist === 'undefined' && role === 'main') {\n        mainPlaylist = playlist;\n        mainPlaylist[\"default\"] = true;\n      }\n\n      return a;\n    }, {}); // if no playlists have role \"main\", mark the first as main\n\n    if (!mainPlaylist) {\n      var firstLabel = Object.keys(formattedPlaylists)[0];\n      formattedPlaylists[firstLabel][\"default\"] = true;\n    }\n\n    return formattedPlaylists;\n  };\n\n  var organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    return playlists.reduce(function (a, playlist) {\n      var label = playlist.attributes.lang || 'text';\n\n      if (!a[label]) {\n        a[label] = {\n          language: label,\n          \"default\": false,\n          autoselect: false,\n          playlists: [],\n          uri: ''\n        };\n      }\n\n      a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n      return a;\n    }, {});\n  };\n\n  var organizeCaptionServices = function organizeCaptionServices(captionServices) {\n    return captionServices.reduce(function (svcObj, svc) {\n      if (!svc) {\n        return svcObj;\n      }\n\n      svc.forEach(function (service) {\n        var channel = service.channel,\n            language = service.language;\n        svcObj[language] = {\n          autoselect: false,\n          \"default\": false,\n          instreamId: channel,\n          language: language\n        };\n\n        if (service.hasOwnProperty('aspectRatio')) {\n          svcObj[language].aspectRatio = service.aspectRatio;\n        }\n\n        if (service.hasOwnProperty('easyReader')) {\n          svcObj[language].easyReader = service.easyReader;\n        }\n\n        if (service.hasOwnProperty('3D')) {\n          svcObj[language]['3D'] = service['3D'];\n        }\n      });\n      return svcObj;\n    }, {});\n  };\n\n  var formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n    var _attributes2;\n\n    var attributes = _ref3.attributes,\n        segments = _ref3.segments,\n        sidx = _ref3.sidx,\n        discontinuityStarts = _ref3.discontinuityStarts;\n    var playlist = {\n      attributes: (_attributes2 = {\n        NAME: attributes.id,\n        AUDIO: 'audio',\n        SUBTITLES: 'subs',\n        RESOLUTION: {\n          width: attributes.width,\n          height: attributes.height\n        },\n        CODECS: attributes.codecs,\n        BANDWIDTH: attributes.bandwidth\n      }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      discontinuityStarts: discontinuityStarts,\n      timelineStarts: attributes.timelineStarts,\n      segments: segments\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n\n    return playlist;\n  };\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n  /**\n   * Contains start and timeline properties denoting a timeline start. For DASH, these will\n   * be the same number.\n   *\n   * @typedef {Object} TimelineStart\n   * @property {number} start - the start time of the timeline\n   * @property {number} timeline - the timeline number\n   */\n\n  /**\n   * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n   *\n   * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n   * DASH specific attribute used in constructing segment URI's from templates. However, from\n   * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n   * value, which should start at the original media sequence value (or 0) and increment by 1\n   * for each segment thereafter. Since DASH's `startNumber` values are independent per\n   * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n   * from a 0 mediaSequence value and increment from there.\n   *\n   * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n   * debugging and making sense of the manifest.\n   *\n   * For live playlists, to account for values increasing in manifests when periods are\n   * removed on refreshes, merging logic should be used to update the numbers to their\n   * appropriate values (to ensure they're sequential and increasing).\n   *\n   * @param {Object[]} playlists - the playlists to update\n   * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n   */\n\n\n  var addMediaSequenceValues = function addMediaSequenceValues(playlists, timelineStarts) {\n    // increment all segments sequentially\n    playlists.forEach(function (playlist) {\n      playlist.mediaSequence = 0;\n      playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref7) {\n        var timeline = _ref7.timeline;\n        return timeline === playlist.timeline;\n      });\n\n      if (!playlist.segments) {\n        return;\n      }\n\n      playlist.segments.forEach(function (segment, index) {\n        segment.number = index;\n      });\n    });\n  };\n  /**\n   * Given a media group object, flattens all playlists within the media group into a single\n   * array.\n   *\n   * @param {Object} mediaGroupObject - the media group object\n   *\n   * @return {Object[]}\n   *         The media group playlists\n   */\n\n\n  var flattenMediaGroupPlaylists = function flattenMediaGroupPlaylists(mediaGroupObject) {\n    if (!mediaGroupObject) {\n      return [];\n    }\n\n    return Object.keys(mediaGroupObject).reduce(function (acc, label) {\n      var labelContents = mediaGroupObject[label];\n      return acc.concat(labelContents.playlists);\n    }, []);\n  };\n\n  var toM3u8 = function toM3u8(_ref8) {\n    var _mediaGroups;\n\n    var dashPlaylists = _ref8.dashPlaylists,\n        locations = _ref8.locations,\n        _ref8$sidxMapping = _ref8.sidxMapping,\n        sidxMapping = _ref8$sidxMapping === void 0 ? {} : _ref8$sidxMapping,\n        previousManifest = _ref8.previousManifest;\n\n    if (!dashPlaylists.length) {\n      return {};\n    } // grab all main manifest attributes\n\n\n    var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n        duration = _dashPlaylists$0$attr.sourceDuration,\n        type = _dashPlaylists$0$attr.type,\n        suggestedPresentationDelay = _dashPlaylists$0$attr.suggestedPresentationDelay,\n        minimumUpdatePeriod = _dashPlaylists$0$attr.minimumUpdatePeriod;\n    var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n    var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n    var vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n    var captions = dashPlaylists.map(function (playlist) {\n      return playlist.attributes.captionServices;\n    }).filter(Boolean);\n    var manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: [],\n      endList: true,\n      mediaGroups: (_mediaGroups = {\n        AUDIO: {},\n        VIDEO: {}\n      }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n      uri: '',\n      duration: duration,\n      playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n    };\n\n    if (minimumUpdatePeriod >= 0) {\n      manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n    }\n\n    if (locations) {\n      manifest.locations = locations;\n    }\n\n    if (type === 'dynamic') {\n      manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n    }\n\n    var isAudioOnly = manifest.playlists.length === 0;\n    var organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n    var organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n    var formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n    var playlistTimelineStarts = formattedPlaylists.map(function (_ref9) {\n      var timelineStarts = _ref9.timelineStarts;\n      return timelineStarts;\n    });\n    manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n    addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n    if (organizedAudioGroup) {\n      manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n    }\n\n    if (organizedVttGroup) {\n      manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n    }\n\n    if (captions.length) {\n      manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n    }\n\n    if (previousManifest) {\n      return positionManifestOnTimeline({\n        oldManifest: previousManifest,\n        newManifest: manifest\n      });\n    }\n\n    return manifest;\n  };\n  /**\n   * Calculates the R (repetition) value for a live stream (for the final segment\n   * in a manifest where the r value is negative 1)\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {number} time\n   *        current time (typically the total time up until the final segment)\n   * @param {number} duration\n   *        duration property for the given <S />\n   *\n   * @return {number}\n   *        R value to reach the end of the given period\n   */\n\n\n  var getLiveRValue = function getLiveRValue(attributes, time, duration) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        _attributes$periodSta = attributes.periodStart,\n        periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + periodStart;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    return Math.ceil((periodDuration * timescale - time) / duration);\n  };\n  /**\n   * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n   * timing and duration\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n    var type = attributes.type,\n        _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n        _attributes$media = attributes.media,\n        media = _attributes$media === void 0 ? '' : _attributes$media,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n        timeline = attributes.periodStart;\n    var segments = [];\n    var time = -1;\n\n    for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n      var S = segmentTimeline[sIndex];\n      var duration = S.d;\n      var repeat = S.r || 0;\n      var segmentTime = S.t || 0;\n\n      if (time < 0) {\n        // first segment\n        time = segmentTime;\n      }\n\n      if (segmentTime && segmentTime > time) {\n        // discontinuity\n        // TODO: How to handle this type of discontinuity\n        // timeline++ here would treat it like HLS discontuity and content would\n        // get appended without gap\n        // E.G.\n        //  <S t=\"0\" d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S t=\"5\" d=\"1\" />\n        // would have $Time$ values of [0, 1, 2, 5]\n        // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n        // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n        // does the value of sourceDuration consider this when calculating arbitrary\n        // negative @r repeat value?\n        // E.G. Same elements as above with this added at the end\n        //  <S d=\"1\" r=\"-1\" />\n        //  with a sourceDuration of 10\n        // Would the 2 gaps be included in the time duration calculations resulting in\n        // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n        // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n        time = segmentTime;\n      }\n\n      var count = void 0;\n\n      if (repeat < 0) {\n        var nextS = sIndex + 1;\n\n        if (nextS === segmentTimeline.length) {\n          // last segment\n          if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n            count = getLiveRValue(attributes, time, duration);\n          } else {\n            // TODO: This may be incorrect depending on conclusion of TODO above\n            count = (sourceDuration * timescale - time) / duration;\n          }\n        } else {\n          count = (segmentTimeline[nextS].t - time) / duration;\n        }\n      } else {\n        count = repeat + 1;\n      }\n\n      var end = startNumber + segments.length + count;\n      var number = startNumber + segments.length;\n\n      while (number < end) {\n        segments.push({\n          number: number,\n          duration: duration / timescale,\n          time: time,\n          timeline: timeline\n        });\n        time += duration;\n        number++;\n      }\n    }\n\n    return segments;\n  };\n\n  var identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n  /**\n   * Replaces template identifiers with corresponding values. To be used as the callback\n   * for String.prototype.replace\n   *\n   * @name replaceCallback\n   * @function\n   * @param {string} match\n   *        Entire match of identifier\n   * @param {string} identifier\n   *        Name of matched identifier\n   * @param {string} format\n   *        Format tag string. Its presence indicates that padding is expected\n   * @param {string} width\n   *        Desired length of the replaced value. Values less than this width shall be left\n   *        zero padded\n   * @return {string}\n   *         Replacement for the matched identifier\n   */\n\n  /**\n   * Returns a function to be used as a callback for String.prototype.replace to replace\n   * template identifiers\n   *\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {replaceCallback}\n   *         Callback to be used with String.prototype.replace to replace identifiers\n   */\n\n  var identifierReplacement = function identifierReplacement(values) {\n    return function (match, identifier, format, width) {\n      if (match === '$$') {\n        // escape sequence\n        return '$';\n      }\n\n      if (typeof values[identifier] === 'undefined') {\n        return match;\n      }\n\n      var value = '' + values[identifier];\n\n      if (identifier === 'RepresentationID') {\n        // Format tag shall not be present with RepresentationID\n        return value;\n      }\n\n      if (!format) {\n        width = 1;\n      } else {\n        width = parseInt(width, 10);\n      }\n\n      if (value.length >= width) {\n        return value;\n      }\n\n      return \"\" + new Array(width - value.length + 1).join('0') + value;\n    };\n  };\n  /**\n   * Constructs a segment url from a template string\n   *\n   * @param {string} url\n   *        Template string to construct url from\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {string}\n   *         Segment url with identifiers replaced\n   */\n\n\n  var constructTemplateUrl = function constructTemplateUrl(url, values) {\n    return url.replace(identifierPattern, identifierReplacement(values));\n  };\n  /**\n   * Generates a list of objects containing timing and duration information about each\n   * segment needed to generate segment uris and the complete segment object\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n    if (!attributes.duration && !segmentTimeline) {\n      // if neither @duration or SegmentTimeline are present, then there shall be exactly\n      // one media segment\n      return [{\n        number: attributes.startNumber || 1,\n        duration: attributes.sourceDuration,\n        time: 0,\n        timeline: attributes.periodStart\n      }];\n    }\n\n    if (attributes.duration) {\n      return parseByDuration(attributes);\n    }\n\n    return parseByTimeline(attributes, segmentTimeline);\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentTemplate element\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object[]}\n   *         List of segment objects\n   */\n\n\n  var segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n    var templateValues = {\n      RepresentationID: attributes.id,\n      Bandwidth: attributes.bandwidth || 0\n    };\n    var _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {\n      sourceURL: '',\n      range: ''\n    } : _attributes$initializ;\n    var mapSegment = urlTypeToSegment({\n      baseUrl: attributes.baseUrl,\n      source: constructTemplateUrl(initialization.sourceURL, templateValues),\n      range: initialization.range\n    });\n    var segments = parseTemplateInfo(attributes, segmentTimeline);\n    return segments.map(function (segment) {\n      templateValues.Number = segment.number;\n      templateValues.Time = segment.time;\n      var uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      var presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n      // calculated in mpd-parser prior to this, so it's assumed to be available.\n      attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n      var map = {\n        uri: uri,\n        timeline: segment.timeline,\n        duration: segment.duration,\n        resolvedUri: resolveUrl$1(attributes.baseUrl || '', uri),\n        map: mapSegment,\n        number: segment.number,\n        presentationTime: presentationTime\n      };\n      return map;\n    });\n  };\n  /**\n   * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n   * to an object that matches the output of a segment in videojs/mpd-parser\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object} segmentUrl\n   *   <SegmentURL> node to translate into a segment object\n   * @return {Object} translated segment object\n   */\n\n\n  var SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: segmentUrl.media,\n      range: segmentUrl.mediaRange\n    });\n    segment.map = initSegment;\n    return segment;\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentList element\n   * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n    var duration = attributes.duration,\n        _attributes$segmentUr = attributes.segmentUrls,\n        segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr,\n        periodStart = attributes.periodStart; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n    // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n    if (!duration && !segmentTimeline || duration && segmentTimeline) {\n      throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n    }\n\n    var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n      return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n    });\n    var segmentTimeInfo;\n\n    if (duration) {\n      segmentTimeInfo = parseByDuration(attributes);\n    }\n\n    if (segmentTimeline) {\n      segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n    }\n\n    var segments = segmentTimeInfo.map(function (segmentTime, index) {\n      if (segmentUrlMap[index]) {\n        var segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n        // - if timescale isn't present on any level, default to 1.\n\n        var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n        var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n        segment.timeline = segmentTime.timeline;\n        segment.duration = segmentTime.duration;\n        segment.number = segmentTime.number;\n        segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n        return segment;\n      } // Since we're mapping we should get rid of any blank segments (in case\n      // the given SegmentTimeline is handling for more elements than we have\n      // SegmentURLs for).\n\n    }).filter(function (segment) {\n      return segment;\n    });\n    return segments;\n  };\n\n  var generateSegments = function generateSegments(_ref) {\n    var attributes = _ref.attributes,\n        segmentInfo = _ref.segmentInfo;\n    var segmentAttributes;\n    var segmentsFn;\n\n    if (segmentInfo.template) {\n      segmentsFn = segmentsFromTemplate;\n      segmentAttributes = merge(attributes, segmentInfo.template);\n    } else if (segmentInfo.base) {\n      segmentsFn = segmentsFromBase;\n      segmentAttributes = merge(attributes, segmentInfo.base);\n    } else if (segmentInfo.list) {\n      segmentsFn = segmentsFromList;\n      segmentAttributes = merge(attributes, segmentInfo.list);\n    }\n\n    var segmentsInfo = {\n      attributes: attributes\n    };\n\n    if (!segmentsFn) {\n      return segmentsInfo;\n    }\n\n    var segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n    // must be in seconds. Since we've generated the segment list, we no longer need\n    // @duration to be in @timescale units, so we can convert it here.\n\n    if (segmentAttributes.duration) {\n      var _segmentAttributes = segmentAttributes,\n          duration = _segmentAttributes.duration,\n          _segmentAttributes$ti = _segmentAttributes.timescale,\n          timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n      segmentAttributes.duration = duration / timescale;\n    } else if (segments.length) {\n      // if there is no @duration attribute, use the largest segment duration as\n      // as target duration\n      segmentAttributes.duration = segments.reduce(function (max, segment) {\n        return Math.max(max, Math.ceil(segment.duration));\n      }, 0);\n    } else {\n      segmentAttributes.duration = 0;\n    }\n\n    segmentsInfo.attributes = segmentAttributes;\n    segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n    if (segmentInfo.base && segmentAttributes.indexRange) {\n      segmentsInfo.sidx = segments[0];\n      segmentsInfo.segments = [];\n    }\n\n    return segmentsInfo;\n  };\n\n  var toPlaylists = function toPlaylists(representations) {\n    return representations.map(generateSegments);\n  };\n\n  var findChildren = function findChildren(element, name) {\n    return from(element.childNodes).filter(function (_ref) {\n      var tagName = _ref.tagName;\n      return tagName === name;\n    });\n  };\n\n  var getContent = function getContent(element) {\n    return element.textContent.trim();\n  };\n\n  var parseDuration = function parseDuration(str) {\n    var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n    var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n    var SECONDS_IN_DAY = 24 * 60 * 60;\n    var SECONDS_IN_HOUR = 60 * 60;\n    var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n    var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n    var match = durationRegex.exec(str);\n\n    if (!match) {\n      return 0;\n    }\n\n    var _match$slice = match.slice(1),\n        year = _match$slice[0],\n        month = _match$slice[1],\n        day = _match$slice[2],\n        hour = _match$slice[3],\n        minute = _match$slice[4],\n        second = _match$slice[5];\n\n    return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n  };\n\n  var parseDate = function parseDate(str) {\n    // Date format without timezone according to ISO 8601\n    // YYY-MM-DDThh:mm:ss.ssssss\n    var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n    // expressed by ending with 'Z'\n\n    if (dateRegex.test(str)) {\n      str += 'Z';\n    }\n\n    return Date.parse(str);\n  };\n\n  var parsers = {\n    /**\n     * Specifies the duration of the entire Media Presentation. Format is a duration string\n     * as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    mediaPresentationDuration: function mediaPresentationDuration(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the Segment availability start time for all Segments referred to in this\n     * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n     * time. Format is a date string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The date as seconds from unix epoch\n     */\n    availabilityStartTime: function availabilityStartTime(value) {\n      return parseDate(value) / 1000;\n    },\n\n    /**\n     * Specifies the smallest period between potential changes to the MPD. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the suggested presentation delay. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    suggestedPresentationDelay: function suggestedPresentationDelay(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     *\n     * @return {string}\n     *         The type as a string\n     */\n    type: function type(value) {\n      return value;\n    },\n\n    /**\n     * Specifies the duration of the smallest time shifting buffer for any Representation\n     * in the MPD. Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n     * Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    start: function start(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the width of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed width\n     */\n    width: function width(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the height of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed height\n     */\n    height: function height(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the bitrate of the representation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed bandwidth\n     */\n    bandwidth: function bandwidth(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the number of the first Media Segment in this Representation in the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    startNumber: function startNumber(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the timescale in units per seconds\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed timescale\n     */\n    timescale: function timescale(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the presentationTimeOffset.\n     *\n     * @param {string} value\n     *        value of the attribute as a string\n     *\n     * @return {number}\n     *         The parsed presentationTimeOffset\n     */\n    presentationTimeOffset: function presentationTimeOffset(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the constant approximate Segment duration\n     * NOTE: The <Period> element also contains an @duration attribute. This duration\n     *       specifies the duration of the Period. This attribute is currently not\n     *       supported by the rest of the parser, however we still check for it to prevent\n     *       errors.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    duration: function duration(value) {\n      var parsedValue = parseInt(value, 10);\n\n      if (isNaN(parsedValue)) {\n        return parseDuration(value);\n      }\n\n      return parsedValue;\n    },\n\n    /**\n     * Specifies the Segment duration, in units of the value of the @timescale.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    d: function d(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the MPD start time, in @timescale units, the first Segment in the series\n     * starts relative to the beginning of the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed time\n     */\n    t: function t(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the repeat count of the number of following contiguous Segments with the\n     * same duration expressed by the value of @d\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    r: function r(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Default parser for all other attributes. Acts as a no-op and just returns the value\n     * as a string\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {string}\n     *         Unparsed value\n     */\n    DEFAULT: function DEFAULT(value) {\n      return value;\n    }\n  };\n  /**\n   * Gets all the attributes and values of the provided node, parses attributes with known\n   * types, and returns an object with attribute names mapped to values.\n   *\n   * @param {Node} el\n   *        The node to parse attributes from\n   * @return {Object}\n   *         Object with all attributes of el parsed\n   */\n\n  var parseAttributes = function parseAttributes(el) {\n    if (!(el && el.attributes)) {\n      return {};\n    }\n\n    return from(el.attributes).reduce(function (a, e) {\n      var parseFn = parsers[e.name] || parsers.DEFAULT;\n      a[e.name] = parseFn(e.value);\n      return a;\n    }, {});\n  };\n\n  var keySystemsMap = {\n    'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n    'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n    'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n    'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n  };\n  /**\n   * Builds a list of urls that is the product of the reference urls and BaseURL values\n   *\n   * @param {string[]} referenceUrls\n   *        List of reference urls to resolve to\n   * @param {Node[]} baseUrlElements\n   *        List of BaseURL nodes from the mpd\n   * @return {string[]}\n   *         List of resolved urls\n   */\n\n  var buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n    if (!baseUrlElements.length) {\n      return referenceUrls;\n    }\n\n    return flatten(referenceUrls.map(function (reference) {\n      return baseUrlElements.map(function (baseUrlElement) {\n        return resolveUrl$1(reference, getContent(baseUrlElement));\n      });\n    }));\n  };\n  /**\n   * Contains all Segment information for its containing AdaptationSet\n   *\n   * @typedef {Object} SegmentInformation\n   * @property {Object|undefined} template\n   *           Contains the attributes for the SegmentTemplate node\n   * @property {Object[]|undefined} segmentTimeline\n   *           Contains a list of atrributes for each S node within the SegmentTimeline node\n   * @property {Object|undefined} list\n   *           Contains the attributes for the SegmentList node\n   * @property {Object|undefined} base\n   *           Contains the attributes for the SegmentBase node\n   */\n\n  /**\n   * Returns all available Segment information contained within the AdaptationSet node\n   *\n   * @param {Node} adaptationSet\n   *        The AdaptationSet node to get Segment information from\n   * @return {SegmentInformation}\n   *         The Segment information contained within the provided AdaptationSet\n   */\n\n\n  var getSegmentInformation = function getSegmentInformation(adaptationSet) {\n    var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n    var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n    var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n      return merge({\n        tag: 'SegmentURL'\n      }, parseAttributes(s));\n    });\n    var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n    var segmentTimelineParentNode = segmentList || segmentTemplate;\n    var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n    var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n    var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n    // @initialization and an <Initialization> node.  @initialization can be templated,\n    // while the node can have a url and range specified.  If the <SegmentTemplate> has\n    // both @initialization and an <Initialization> subelement we opt to override with\n    // the node, as this interaction is not defined in the spec.\n\n    var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n    if (template && segmentInitialization) {\n      template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n    } else if (template && template.initialization) {\n      // If it is @initialization we convert it to an object since this is the format that\n      // later functions will rely on for the initialization segment.  This is only valid\n      // for <SegmentTemplate>\n      template.initialization = {\n        sourceURL: template.initialization\n      };\n    }\n\n    var segmentInfo = {\n      template: template,\n      segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n        return parseAttributes(s);\n      }),\n      list: segmentList && merge(parseAttributes(segmentList), {\n        segmentUrls: segmentUrls,\n        initialization: parseAttributes(segmentInitialization)\n      }),\n      base: segmentBase && merge(parseAttributes(segmentBase), {\n        initialization: parseAttributes(segmentInitialization)\n      })\n    };\n    Object.keys(segmentInfo).forEach(function (key) {\n      if (!segmentInfo[key]) {\n        delete segmentInfo[key];\n      }\n    });\n    return segmentInfo;\n  };\n  /**\n   * Contains Segment information and attributes needed to construct a Playlist object\n   * from a Representation\n   *\n   * @typedef {Object} RepresentationInformation\n   * @property {SegmentInformation} segmentInfo\n   *           Segment information for this Representation\n   * @property {Object} attributes\n   *           Inherited attributes for this Representation\n   */\n\n  /**\n   * Maps a Representation node to an object containing Segment information and attributes\n   *\n   * @name inheritBaseUrlsCallback\n   * @function\n   * @param {Node} representation\n   *        Representation node from the mpd\n   * @return {RepresentationInformation}\n   *         Representation information needed to construct a Playlist object\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Representation nodes to\n   * Segment information and attributes using inherited BaseURL nodes.\n   *\n   * @param {Object} adaptationSetAttributes\n   *        Contains attributes inherited by the AdaptationSet\n   * @param {string[]} adaptationSetBaseUrls\n   *        Contains list of resolved base urls inherited by the AdaptationSet\n   * @param {SegmentInformation} adaptationSetSegmentInfo\n   *        Contains Segment information for the AdaptationSet\n   * @return {inheritBaseUrlsCallback}\n   *         Callback map function\n   */\n\n\n  var inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n    return function (representation) {\n      var repBaseUrlElements = findChildren(representation, 'BaseURL');\n      var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n      var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n      var representationSegmentInfo = getSegmentInformation(representation);\n      return repBaseUrls.map(function (baseUrl) {\n        return {\n          segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n          attributes: merge(attributes, {\n            baseUrl: baseUrl\n          })\n        };\n      });\n    };\n  };\n  /**\n   * Tranforms a series of content protection nodes to\n   * an object containing pssh data by key system\n   *\n   * @param {Node[]} contentProtectionNodes\n   *        Content protection nodes\n   * @return {Object}\n   *        Object containing pssh data by key system\n   */\n\n\n  var generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n    return contentProtectionNodes.reduce(function (acc, node) {\n      var attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n      // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n      // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n      // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n      if (attributes.schemeIdUri) {\n        attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n      }\n\n      var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n      if (keySystem) {\n        acc[keySystem] = {\n          attributes: attributes\n        };\n        var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n        if (psshNode) {\n          var pssh = getContent(psshNode);\n          acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n        }\n      }\n\n      return acc;\n    }, {});\n  }; // defined in ANSI_SCTE 214-1 2016\n\n\n  var parseCaptionServiceMetadata = function parseCaptionServiceMetadata(service) {\n    // 608 captions\n    if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n      var values = typeof service.value !== 'string' ? [] : service.value.split(';');\n      return values.map(function (value) {\n        var channel;\n        var language; // default language to value\n\n        language = value;\n\n        if (/^CC\\d=/.test(value)) {\n          var _value$split = value.split('=');\n\n          channel = _value$split[0];\n          language = _value$split[1];\n        } else if (/^CC\\d$/.test(value)) {\n          channel = value;\n        }\n\n        return {\n          channel: channel,\n          language: language\n        };\n      });\n    } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n      var _values = typeof service.value !== 'string' ? [] : service.value.split(';');\n\n      return _values.map(function (value) {\n        var flags = {\n          // service or channel number 1-63\n          'channel': undefined,\n          // language is a 3ALPHA per ISO 639.2/B\n          // field is required\n          'language': undefined,\n          // BIT 1/0 or ?\n          // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n          'aspectRatio': 1,\n          // BIT 1/0\n          // easy reader flag indicated the text is tailed to the needs of beginning readers\n          // default 0, or off\n          'easyReader': 0,\n          // BIT 1/0\n          // If 3d metadata is present (CEA-708.1) then 1\n          // default 0\n          '3D': 0\n        };\n\n        if (/=/.test(value)) {\n          var _value$split2 = value.split('='),\n              channel = _value$split2[0],\n              _value$split2$ = _value$split2[1],\n              opts = _value$split2$ === void 0 ? '' : _value$split2$;\n\n          flags.channel = channel;\n          flags.language = value;\n          opts.split(',').forEach(function (opt) {\n            var _opt$split = opt.split(':'),\n                name = _opt$split[0],\n                val = _opt$split[1];\n\n            if (name === 'lang') {\n              flags.language = val; // er for easyReadery\n            } else if (name === 'er') {\n              flags.easyReader = Number(val); // war for wide aspect ratio\n            } else if (name === 'war') {\n              flags.aspectRatio = Number(val);\n            } else if (name === '3D') {\n              flags['3D'] = Number(val);\n            }\n          });\n        } else {\n          flags.language = value;\n        }\n\n        if (flags.channel) {\n          flags.channel = 'SERVICE' + flags.channel;\n        }\n\n        return flags;\n      });\n    }\n  };\n  /**\n   * Maps an AdaptationSet node to a list of Representation information objects\n   *\n   * @name toRepresentationsCallback\n   * @function\n   * @param {Node} adaptationSet\n   *        AdaptationSet node from the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} periodAttributes\n   *        Contains attributes inherited by the Period\n   * @param {string[]} periodBaseUrls\n   *        Contains list of resolved base urls inherited by the Period\n   * @param {string[]} periodSegmentInfo\n   *        Contains Segment Information at the period level\n   * @return {toRepresentationsCallback}\n   *         Callback map function\n   */\n\n\n  var toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n    return function (adaptationSet) {\n      var adaptationSetAttributes = parseAttributes(adaptationSet);\n      var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n      var role = findChildren(adaptationSet, 'Role')[0];\n      var roleAttributes = {\n        role: parseAttributes(role)\n      };\n      var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n      var accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n      var captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n      if (captionServices) {\n        attrs = merge(attrs, {\n          captionServices: captionServices\n        });\n      }\n\n      var label = findChildren(adaptationSet, 'Label')[0];\n\n      if (label && label.childNodes.length) {\n        var labelVal = label.childNodes[0].nodeValue.trim();\n        attrs = merge(attrs, {\n          label: labelVal\n        });\n      }\n\n      var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n      if (Object.keys(contentProtection).length) {\n        attrs = merge(attrs, {\n          contentProtection: contentProtection\n        });\n      }\n\n      var segmentInfo = getSegmentInformation(adaptationSet);\n      var representations = findChildren(adaptationSet, 'Representation');\n      var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n      return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n    };\n  };\n  /**\n   * Contains all period information for mapping nodes onto adaptation sets.\n   *\n   * @typedef {Object} PeriodInformation\n   * @property {Node} period.node\n   *           Period node from the mpd\n   * @property {Object} period.attributes\n   *           Parsed period attributes from node plus any added\n   */\n\n  /**\n   * Maps a PeriodInformation object to a list of Representation information objects for all\n   * AdaptationSet nodes contained within the Period.\n   *\n   * @name toAdaptationSetsCallback\n   * @function\n   * @param {PeriodInformation} period\n   *        Period object containing necessary period information\n   * @param {number} periodStart\n   *        Start time of the Period within the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} mpdAttributes\n   *        Contains attributes inherited by the mpd\n   * @param {string[]} mpdBaseUrls\n   *        Contains list of resolved base urls inherited by the mpd\n   * @return {toAdaptationSetsCallback}\n   *         Callback map function\n   */\n\n\n  var toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n    return function (period, index) {\n      var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n      var periodAttributes = merge(mpdAttributes, {\n        periodStart: period.attributes.start\n      });\n\n      if (typeof period.attributes.duration === 'number') {\n        periodAttributes.periodDuration = period.attributes.duration;\n      }\n\n      var adaptationSets = findChildren(period.node, 'AdaptationSet');\n      var periodSegmentInfo = getSegmentInformation(period.node);\n      return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n    };\n  };\n  /**\n   * Gets Period@start property for a given period.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {Object} options.attributes\n   *        Period attributes\n   * @param {Object} [options.priorPeriodAttributes]\n   *        Prior period attributes (if prior period is available)\n   * @param {string} options.mpdType\n   *        The MPD@type these periods came from\n   * @return {number|null}\n   *         The period start, or null if it's an early available period or error\n   */\n\n\n  var getPeriodStart = function getPeriodStart(_ref) {\n    var attributes = _ref.attributes,\n        priorPeriodAttributes = _ref.priorPeriodAttributes,\n        mpdType = _ref.mpdType; // Summary of period start time calculation from DASH spec section 5.3.2.1\n    //\n    // A period's start is the first period's start + time elapsed after playing all\n    // prior periods to this one. Periods continue one after the other in time (without\n    // gaps) until the end of the presentation.\n    //\n    // The value of Period@start should be:\n    // 1. if Period@start is present: value of Period@start\n    // 2. if previous period exists and it has @duration: previous Period@start +\n    //    previous Period@duration\n    // 3. if this is first period and MPD@type is 'static': 0\n    // 4. in all other cases, consider the period an \"early available period\" (note: not\n    //    currently supported)\n    // (1)\n\n    if (typeof attributes.start === 'number') {\n      return attributes.start;\n    } // (2)\n\n\n    if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n      return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n    } // (3)\n\n\n    if (!priorPeriodAttributes && mpdType === 'static') {\n      return 0;\n    } // (4)\n    // There is currently no logic for calculating the Period@start value if there is\n    // no Period@start or prior Period@start and Period@duration available. This is not made\n    // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n    // nothing about any other resolution strategies, it's implied. Thus, this case should\n    // be considered an early available period, or error, and null should suffice for both\n    // of those cases.\n\n\n    return null;\n  };\n  /**\n   * Traverses the mpd xml tree to generate a list of Representation information objects\n   * that have inherited attributes from parent nodes\n   *\n   * @param {Node} mpd\n   *        The root node of the mpd\n   * @param {Object} options\n   *        Available options for inheritAttributes\n   * @param {string} options.manifestUri\n   *        The uri source of the mpd\n   * @param {number} options.NOW\n   *        Current time per DASH IOP.  Default is current time in ms since epoch\n   * @param {number} options.clientOffset\n   *        Client time difference from NOW (in milliseconds)\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representation information\n   */\n\n\n  var inheritAttributes = function inheritAttributes(mpd, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        _options$manifestUri = _options.manifestUri,\n        manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n        _options$NOW = _options.NOW,\n        NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n        _options$clientOffset = _options.clientOffset,\n        clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n    var periodNodes = findChildren(mpd, 'Period');\n\n    if (!periodNodes.length) {\n      throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n    }\n\n    var locations = findChildren(mpd, 'Location');\n    var mpdAttributes = parseAttributes(mpd);\n    var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n    mpdAttributes.type = mpdAttributes.type || 'static';\n    mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n    mpdAttributes.NOW = NOW;\n    mpdAttributes.clientOffset = clientOffset;\n\n    if (locations.length) {\n      mpdAttributes.locations = locations.map(getContent);\n    }\n\n    var periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n    // adding properties that require looking at prior periods is to parse attributes and add\n    // missing ones before toAdaptationSets is called. If more such properties are added, it\n    // may be better to refactor toAdaptationSets.\n\n    periodNodes.forEach(function (node, index) {\n      var attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n      // for this period.\n\n      var priorPeriod = periods[index - 1];\n      attributes.start = getPeriodStart({\n        attributes: attributes,\n        priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n        mpdType: mpdAttributes.type\n      });\n      periods.push({\n        node: node,\n        attributes: attributes\n      });\n    });\n    return {\n      locations: mpdAttributes.locations,\n      representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\n    };\n  };\n\n  var stringToMpdXml = function stringToMpdXml(manifestString) {\n    if (manifestString === '') {\n      throw new Error(errors.DASH_EMPTY_MANIFEST);\n    }\n\n    var parser = new DOMParser();\n    var xml;\n    var mpd;\n\n    try {\n      xml = parser.parseFromString(manifestString, 'application/xml');\n      mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n    } catch (e) {// ie 11 throwsw on invalid xml\n    }\n\n    if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n      throw new Error(errors.DASH_INVALID_XML);\n    }\n\n    return mpd;\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} mpd\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n    var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n    if (!UTCTimingNode) {\n      return null;\n    }\n\n    var attributes = parseAttributes(UTCTimingNode);\n\n    switch (attributes.schemeIdUri) {\n      case 'urn:mpeg:dash:utc:http-head:2014':\n      case 'urn:mpeg:dash:utc:http-head:2012':\n        attributes.method = 'HEAD';\n        break;\n\n      case 'urn:mpeg:dash:utc:http-xsdate:2014':\n      case 'urn:mpeg:dash:utc:http-iso:2014':\n      case 'urn:mpeg:dash:utc:http-xsdate:2012':\n      case 'urn:mpeg:dash:utc:http-iso:2012':\n        attributes.method = 'GET';\n        break;\n\n      case 'urn:mpeg:dash:utc:direct:2014':\n      case 'urn:mpeg:dash:utc:direct:2012':\n        attributes.method = 'DIRECT';\n        attributes.value = Date.parse(attributes.value);\n        break;\n\n      case 'urn:mpeg:dash:utc:http-ntp:2014':\n      case 'urn:mpeg:dash:utc:ntp:2014':\n      case 'urn:mpeg:dash:utc:sntp:2014':\n      default:\n        throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n    }\n\n    return attributes;\n  };\n  /*\n   * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n   * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n   *\n   * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n   * parsed DASH manifest will have its media sequence and discontinuity sequence values\n   * updated to reflect its position relative to the prior manifest.\n   *\n   * @param {string} manifestString - the DASH manifest as a string\n   * @param {options} [options] - any options\n   *\n   * @return {Object} the manifest object\n   */\n\n  var parse = function parse(manifestString, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n    var playlists = toPlaylists(parsedManifestInfo.representationInfo);\n    return toM3u8({\n      dashPlaylists: playlists,\n      locations: parsedManifestInfo.locations,\n      sidxMapping: options.sidxMapping,\n      previousManifest: options.previousManifest\n    });\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} manifestString\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTiming = function parseUTCTiming(manifestString) {\n    return parseUTCTimingScheme(stringToMpdXml(manifestString));\n  };\n\n  var MAX_UINT32 = Math.pow(2, 32);\n\n  var getUint64$1 = function getUint64(uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n\n      return value;\n    }\n\n    return dv.getUint32(0) * MAX_UINT32 + dv.getUint32(4);\n  };\n\n  var numbers = {\n    getUint64: getUint64$1,\n    MAX_UINT32: MAX_UINT32\n  };\n\n  var getUint64 = numbers.getUint64;\n\n  var parseSidx = function parseSidx(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      references: [],\n      referenceId: view.getUint32(4),\n      timescale: view.getUint32(8)\n    },\n        i = 12;\n\n    if (result.version === 0) {\n      result.earliestPresentationTime = view.getUint32(i);\n      result.firstOffset = view.getUint32(i + 4);\n      i += 8;\n    } else {\n      // read 64 bits\n      result.earliestPresentationTime = getUint64(data.subarray(i));\n      result.firstOffset = getUint64(data.subarray(i + 8));\n      i += 16;\n    }\n\n    i += 2; // reserved\n\n    var referenceCount = view.getUint16(i);\n    i += 2; // start of references\n\n    for (; referenceCount > 0; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n\n    return result;\n  };\n\n  var parseSidx_1 = parseSidx;\n\n  var ID3 = toUint8([0x49, 0x44, 0x33]);\n  var getId3Size = function getId3Size(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    bytes = toUint8(bytes);\n    var flags = bytes[offset + 5];\n    var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n    var footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n\n    return returnSize + 10;\n  };\n  var getId3Offset = function getId3Offset(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    bytes = toUint8(bytes);\n\n    if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n      offset: offset\n    })) {\n      return offset;\n    }\n\n    offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n    // have multiple ID3 tag sections even though\n    // they should not.\n\n    return getId3Offset(bytes, offset);\n  };\n\n  var normalizePath$1 = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return stringToBytes(path);\n    }\n\n    if (typeof path === 'number') {\n      return path;\n    }\n\n    return path;\n  };\n\n  var normalizePaths$1 = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath$1(paths)];\n    }\n\n    return paths.map(function (p) {\n      return normalizePath$1(p);\n    });\n  };\n  /**\n   * find any number of boxes by name given a path to it in an iso bmff\n   * such as mp4.\n   *\n   * @param {TypedArray} bytes\n   *        bytes for the iso bmff to search for boxes in\n   *\n   * @param {Uint8Array[]|string[]|string|Uint8Array} name\n   *        An array of paths or a single path representing the name\n   *        of boxes to search through in bytes. Paths may be\n   *        uint8 (character codes) or strings.\n   *\n   * @param {boolean} [complete=false]\n   *        Should we search only for complete boxes on the final path.\n   *        This is very useful when you do not want to get back partial boxes\n   *        in the case of streaming files.\n   *\n   * @return {Uint8Array[]}\n   *         An array of the end paths that we found.\n   */\n\n  var findBox = function findBox(bytes, paths, complete) {\n    if (complete === void 0) {\n      complete = false;\n    }\n\n    paths = normalizePaths$1(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n\n    if (!paths.length) {\n      // short-circuit the search for empty paths\n      return results;\n    }\n\n    var i = 0;\n\n    while (i < bytes.length) {\n      var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n      var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n      if (size === 0) {\n        break;\n      }\n\n      var end = i + size;\n\n      if (end > bytes.length) {\n        // this box is bigger than the number of bytes we have\n        // and complete is set, we cannot find any more boxes.\n        if (complete) {\n          break;\n        }\n\n        end = bytes.length;\n      }\n\n      var data = bytes.subarray(i + 8, end);\n\n      if (bytesMatch(type, paths[0])) {\n        if (paths.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next box along the path\n          results.push.apply(results, findBox(data, paths.slice(1), complete));\n        }\n      }\n\n      i = end;\n    } // we've finished searching all of bytes\n\n\n    return results;\n  };\n\n  // https://matroska-org.github.io/libebml/specs.html\n  // https://www.matroska.org/technical/elements.html\n  // https://www.webmproject.org/docs/container/\n\n  var EBML_TAGS = {\n    EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n    DocType: toUint8([0x42, 0x82]),\n    Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n    SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n    Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n    Track: toUint8([0xAE]),\n    TrackNumber: toUint8([0xd7]),\n    DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n    TrackEntry: toUint8([0xAE]),\n    TrackType: toUint8([0x83]),\n    FlagDefault: toUint8([0x88]),\n    CodecID: toUint8([0x86]),\n    CodecPrivate: toUint8([0x63, 0xA2]),\n    VideoTrack: toUint8([0xe0]),\n    AudioTrack: toUint8([0xe1]),\n    // Not used yet, but will be used for live webm/mkv\n    // see https://www.matroska.org/technical/basics.html#block-structure\n    // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n    Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n    Timestamp: toUint8([0xE7]),\n    TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n    BlockGroup: toUint8([0xA0]),\n    BlockDuration: toUint8([0x9B]),\n    Block: toUint8([0xA1]),\n    SimpleBlock: toUint8([0xA3])\n  };\n  /**\n   * This is a simple table to determine the length\n   * of things in ebml. The length is one based (starts at 1,\n   * rather than zero) and for every zero bit before a one bit\n   * we add one to length. We also need this table because in some\n   * case we have to xor all the length bits from another value.\n   */\n\n  var LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\n  var getLength = function getLength(_byte) {\n    var len = 1;\n\n    for (var i = 0; i < LENGTH_TABLE.length; i++) {\n      if (_byte & LENGTH_TABLE[i]) {\n        break;\n      }\n\n      len++;\n    }\n\n    return len;\n  }; // length in ebml is stored in the first 4 to 8 bits\n  // of the first byte. 4 for the id length and 8 for the\n  // data size length. Length is measured by converting the number to binary\n  // then 1 + the number of zeros before a 1 is encountered starting\n  // from the left.\n\n\n  var getvint = function getvint(bytes, offset, removeLength, signed) {\n    if (removeLength === void 0) {\n      removeLength = true;\n    }\n\n    if (signed === void 0) {\n      signed = false;\n    }\n\n    var length = getLength(bytes[offset]);\n    var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n    // as they will be modified below to remove the dataSizeLen bits and we do not\n    // want to modify the original data. normally we could just call slice on\n    // uint8array but ie 11 does not support that...\n\n    if (removeLength) {\n      valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n      valueBytes[0] ^= LENGTH_TABLE[length - 1];\n    }\n\n    return {\n      length: length,\n      value: bytesToNumber(valueBytes, {\n        signed: signed\n      }),\n      bytes: valueBytes\n    };\n  };\n\n  var normalizePath = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return path.match(/.{1,2}/g).map(function (p) {\n        return normalizePath(p);\n      });\n    }\n\n    if (typeof path === 'number') {\n      return numberToBytes(path);\n    }\n\n    return path;\n  };\n\n  var normalizePaths = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath(paths)];\n    }\n\n    return paths.map(function (p) {\n      return normalizePath(p);\n    });\n  };\n\n  var getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n    if (offset >= bytes.length) {\n      return bytes.length;\n    }\n\n    var innerid = getvint(bytes, offset, false);\n\n    if (bytesMatch(id.bytes, innerid.bytes)) {\n      return offset;\n    }\n\n    var dataHeader = getvint(bytes, offset + innerid.length);\n    return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n  };\n  /**\n   * Notes on the EBLM format.\n   *\n   * EBLM uses \"vints\" tags. Every vint tag contains\n   * two parts\n   *\n   * 1. The length from the first byte. You get this by\n   *    converting the byte to binary and counting the zeros\n   *    before a 1. Then you add 1 to that. Examples\n   *    00011111 = length 4 because there are 3 zeros before a 1.\n   *    00100000 = length 3 because there are 2 zeros before a 1.\n   *    00000011 = length 7 because there are 6 zeros before a 1.\n   *\n   * 2. The bits used for length are removed from the first byte\n   *    Then all the bytes are merged into a value. NOTE: this\n   *    is not the case for id ebml tags as there id includes\n   *    length bits.\n   *\n   */\n\n\n  var findEbml = function findEbml(bytes, paths) {\n    paths = normalizePaths(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n\n    if (!paths.length) {\n      return results;\n    }\n\n    var i = 0;\n\n    while (i < bytes.length) {\n      var id = getvint(bytes, i, false);\n      var dataHeader = getvint(bytes, i + id.length);\n      var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n      if (dataHeader.value === 0x7f) {\n        dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n        if (dataHeader.value !== bytes.length) {\n          dataHeader.value -= dataStart;\n        }\n      }\n\n      var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n      var data = bytes.subarray(dataStart, dataEnd);\n\n      if (bytesMatch(paths[0], id.bytes)) {\n        if (paths.length === 1) {\n          // this is the end of the paths and we've found the tag we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next tag inside of the data\n          // of this one\n          results = results.concat(findEbml(data, paths.slice(1)));\n        }\n      }\n\n      var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n      i += totalLength;\n    }\n\n    return results;\n  }; // see https://www.matroska.org/technical/basics.html#block-structure\n\n  var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\n  var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\n  var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   *\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n  var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n    var positions = [];\n    var i = 1; // Find all `Emulation Prevention Bytes`\n\n    while (i < bytes.length - 2) {\n      if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n        positions.push(i + 2);\n        i++;\n      }\n\n      i++;\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (positions.length === 0) {\n      return bytes;\n    } // Create a new array to hold the NAL unit data\n\n\n    var newLength = bytes.length - positions.length;\n    var newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === positions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        positions.shift();\n      }\n\n      newData[i] = bytes[sourceIndex];\n    }\n\n    return newData;\n  };\n  var findNal = function findNal(bytes, dataType, types, nalLimit) {\n    if (nalLimit === void 0) {\n      nalLimit = Infinity;\n    }\n\n    bytes = toUint8(bytes);\n    types = [].concat(types);\n    var i = 0;\n    var nalStart;\n    var nalsFound = 0; // keep searching until:\n    // we reach the end of bytes\n    // we reach the maximum number of nals they want to seach\n    // NOTE: that we disregard nalLimit when we have found the start\n    // of the nal we want so that we can find the end of the nal we want.\n\n    while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n      var nalOffset = void 0;\n\n      if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n        nalOffset = 4;\n      } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n        nalOffset = 3;\n      } // we are unsynced,\n      // find the next nal unit\n\n\n      if (!nalOffset) {\n        i++;\n        continue;\n      }\n\n      nalsFound++;\n\n      if (nalStart) {\n        return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n      }\n\n      var nalType = void 0;\n\n      if (dataType === 'h264') {\n        nalType = bytes[i + nalOffset] & 0x1f;\n      } else if (dataType === 'h265') {\n        nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n      }\n\n      if (types.indexOf(nalType) !== -1) {\n        nalStart = i + nalOffset;\n      } // nal header is 1 length for h264, and 2 for h265\n\n\n      i += nalOffset + (dataType === 'h264' ? 1 : 2);\n    }\n\n    return bytes.subarray(0, 0);\n  };\n  var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h264', type, nalLimit);\n  };\n  var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h265', type, nalLimit);\n  };\n\n  var CONSTANTS = {\n    // \"webm\" string literal in hex\n    'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n    // \"matroska\" string literal in hex\n    'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n    // \"fLaC\" string literal in hex\n    'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n    // \"OggS\" string literal in hex\n    'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n    // ac-3 sync byte, also works for ec-3 as that is simply a codec\n    // of ac-3\n    'ac3': toUint8([0x0b, 0x77]),\n    // \"RIFF\" string literal in hex used for wav and avi\n    'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n    // \"AVI\" string literal in hex\n    'avi': toUint8([0x41, 0x56, 0x49]),\n    // \"WAVE\" string literal in hex\n    'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n    // \"ftyp3g\" string literal in hex\n    '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n    // \"ftyp\" string literal in hex\n    'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n    // \"styp\" string literal in hex\n    'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n    // \"ftypqt\" string literal in hex\n    'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n    // moov string literal in hex\n    'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n    // moof string literal in hex\n    'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n  };\n  var _isLikely = {\n    aac: function aac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x10], {\n        offset: offset,\n        mask: [0xFF, 0x16]\n      });\n    },\n    mp3: function mp3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x02], {\n        offset: offset,\n        mask: [0xFF, 0x06]\n      });\n    },\n    webm: function webm(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n      return bytesMatch(docType, CONSTANTS.webm);\n    },\n    mkv: function mkv(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n      return bytesMatch(docType, CONSTANTS.matroska);\n    },\n    mp4: function mp4(bytes) {\n      // if this file is another base media file format, it is not mp4\n      if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n        return false;\n      } // if this file starts with a ftyp or styp box its mp4\n\n\n      if (bytesMatch(bytes, CONSTANTS.mp4, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n        offset: 4\n      })) {\n        return true;\n      } // if this file starts with a moof/moov box its mp4\n\n\n      if (bytesMatch(bytes, CONSTANTS.moof, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.moov, {\n        offset: 4\n      })) {\n        return true;\n      }\n    },\n    mov: function mov(bytes) {\n      return bytesMatch(bytes, CONSTANTS.mov, {\n        offset: 4\n      });\n    },\n    '3gp': function gp(bytes) {\n      return bytesMatch(bytes, CONSTANTS['3gp'], {\n        offset: 4\n      });\n    },\n    ac3: function ac3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.ac3, {\n        offset: offset\n      });\n    },\n    ts: function ts(bytes) {\n      if (bytes.length < 189 && bytes.length >= 1) {\n        return bytes[0] === 0x47;\n      }\n\n      var i = 0; // check the first 376 bytes for two matching sync bytes\n\n      while (i + 188 < bytes.length && i < 188) {\n        if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    flac: function flac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.flac, {\n        offset: offset\n      });\n    },\n    ogg: function ogg(bytes) {\n      return bytesMatch(bytes, CONSTANTS.ogg);\n    },\n    avi: function avi(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n        offset: 8\n      });\n    },\n    wav: function wav(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n        offset: 8\n      });\n    },\n    'h264': function h264(bytes) {\n      // find seq_parameter_set_rbsp\n      return findH264Nal(bytes, 7, 3).length;\n    },\n    'h265': function h265(bytes) {\n      // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n      return findH265Nal(bytes, [32, 33], 3).length;\n    }\n  }; // get all the isLikely functions\n  // but make sure 'ts' is above h264 and h265\n  // but below everything else as it is the least specific\n\n  var isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n  .filter(function (t) {\n    return t !== 'ts' && t !== 'h264' && t !== 'h265';\n  }) // add it back to the bottom\n  .concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\n  isLikelyTypes.forEach(function (type) {\n    var isLikelyFn = _isLikely[type];\n\n    _isLikely[type] = function (bytes) {\n      return isLikelyFn(toUint8(bytes));\n    };\n  }); // export after wrapping\n\n  var isLikely = _isLikely; // A useful list of file signatures can be found here\n  // https://en.wikipedia.org/wiki/List_of_file_signatures\n\n  var detectContainerForBytes = function detectContainerForBytes(bytes) {\n    bytes = toUint8(bytes);\n\n    for (var i = 0; i < isLikelyTypes.length; i++) {\n      var type = isLikelyTypes[i];\n\n      if (isLikely[type](bytes)) {\n        return type;\n      }\n    }\n\n    return '';\n  }; // fmp4 is not a container\n\n  var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n    return findBox(bytes, ['moof']).length > 0;\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  var ONE_SECOND_IN_TS = 90000,\n      // 90kHz clock\n  secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\n    return seconds * ONE_SECOND_IN_TS;\n  };\n\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\n    return timestamp / ONE_SECOND_IN_TS;\n  };\n\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n\n  metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  var clock_1 = clock.ONE_SECOND_IN_TS;\n\n  /*! @name @videojs/http-streaming @version 2.14.3 @license Apache-2.0 */\n  /**\n   * @file resolve-url.js - Handling how URLs are resolved and manipulated\n   */\n\n  var resolveUrl = resolveUrl$2;\n  /**\n   * Checks whether xhr request was redirected and returns correct url depending\n   * on `handleManifestRedirects` option\n   *\n   * @api private\n   *\n   * @param  {string} url - an url being requested\n   * @param  {XMLHttpRequest} req - xhr request result\n   *\n   * @return {string}\n   */\n\n  var resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n    // To understand how the responseURL below is set and generated:\n    // - https://fetch.spec.whatwg.org/#concept-response-url\n    // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n    if (handleManifestRedirect && req && req.responseURL && url !== req.responseURL) {\n      return req.responseURL;\n    }\n\n    return url;\n  };\n\n  var logger = function logger(source) {\n    if (videojs.log.debug) {\n      return videojs.log.debug.bind(videojs, 'VHS:', source + \" >\");\n    }\n\n    return function () {};\n  };\n  /**\n   * ranges\n   *\n   * Utilities for working with TimeRanges.\n   *\n   */\n\n\n  var TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n  // can be misleading because of precision differences or when the current media has poorly\n  // aligned audio and video, which can cause values to be slightly off from what you would\n  // expect. This value is what we consider to be safe to use in such comparisons to account\n  // for these scenarios.\n\n  var SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\n  var filterRanges = function filterRanges(timeRanges, predicate) {\n    var results = [];\n    var i;\n\n    if (timeRanges && timeRanges.length) {\n      // Search for ranges that match the predicate\n      for (i = 0; i < timeRanges.length; i++) {\n        if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n          results.push([timeRanges.start(i), timeRanges.end(i)]);\n        }\n      }\n    }\n\n    return videojs.createTimeRanges(results);\n  };\n  /**\n   * Attempts to find the buffered TimeRange that contains the specified\n   * time.\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object to query\n   * @param {number} time  - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object\n   */\n\n\n  var findRange = function findRange(buffered, time) {\n    return filterRanges(buffered, function (start, end) {\n      return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n    });\n  };\n  /**\n   * Returns the TimeRanges that begin later than the specified time.\n   *\n   * @param {TimeRanges} timeRanges - the TimeRanges object to query\n   * @param {number} time - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object.\n   */\n\n\n  var findNextRange = function findNextRange(timeRanges, time) {\n    return filterRanges(timeRanges, function (start) {\n      return start - TIME_FUDGE_FACTOR >= time;\n    });\n  };\n  /**\n   * Returns gaps within a list of TimeRanges\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object\n   * @return {TimeRanges} a TimeRanges object of gaps\n   */\n\n\n  var findGaps = function findGaps(buffered) {\n    if (buffered.length < 2) {\n      return videojs.createTimeRanges();\n    }\n\n    var ranges = [];\n\n    for (var i = 1; i < buffered.length; i++) {\n      var start = buffered.end(i - 1);\n      var end = buffered.start(i);\n      ranges.push([start, end]);\n    }\n\n    return videojs.createTimeRanges(ranges);\n  };\n  /**\n   * Calculate the intersection of two TimeRanges\n   *\n   * @param {TimeRanges} bufferA\n   * @param {TimeRanges} bufferB\n   * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n   */\n\n\n  var bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n    var start = null;\n    var end = null;\n    var arity = 0;\n    var extents = [];\n    var ranges = [];\n\n    if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n      return videojs.createTimeRange();\n    } // Handle the case where we have both buffers and create an\n    // intersection of the two\n\n\n    var count = bufferA.length; // A) Gather up all start and end times\n\n    while (count--) {\n      extents.push({\n        time: bufferA.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferA.end(count),\n        type: 'end'\n      });\n    }\n\n    count = bufferB.length;\n\n    while (count--) {\n      extents.push({\n        time: bufferB.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferB.end(count),\n        type: 'end'\n      });\n    } // B) Sort them by time\n\n\n    extents.sort(function (a, b) {\n      return a.time - b.time;\n    }); // C) Go along one by one incrementing arity for start and decrementing\n    //    arity for ends\n\n    for (count = 0; count < extents.length; count++) {\n      if (extents[count].type === 'start') {\n        arity++; // D) If arity is ever incremented to 2 we are entering an\n        //    overlapping range\n\n        if (arity === 2) {\n          start = extents[count].time;\n        }\n      } else if (extents[count].type === 'end') {\n        arity--; // E) If arity is ever decremented to 1 we leaving an\n        //    overlapping range\n\n        if (arity === 1) {\n          end = extents[count].time;\n        }\n      } // F) Record overlapping ranges\n\n\n      if (start !== null && end !== null) {\n        ranges.push([start, end]);\n        start = null;\n        end = null;\n      }\n    }\n\n    return videojs.createTimeRanges(ranges);\n  };\n  /**\n   * Gets a human readable string for a TimeRange\n   *\n   * @param {TimeRange} range\n   * @return {string} a human readable string\n   */\n\n\n  var printableRange = function printableRange(range) {\n    var strArr = [];\n\n    if (!range || !range.length) {\n      return '';\n    }\n\n    for (var i = 0; i < range.length; i++) {\n      strArr.push(range.start(i) + ' => ' + range.end(i));\n    }\n\n    return strArr.join(', ');\n  };\n  /**\n   * Calculates the amount of time left in seconds until the player hits the end of the\n   * buffer and causes a rebuffer\n   *\n   * @param {TimeRange} buffered\n   *        The state of the buffer\n   * @param {Numnber} currentTime\n   *        The current time of the player\n   * @param {number} playbackRate\n   *        The current playback rate of the player. Defaults to 1.\n   * @return {number}\n   *         Time until the player has to start rebuffering in seconds.\n   * @function timeUntilRebuffer\n   */\n\n\n  var timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime, playbackRate) {\n    if (playbackRate === void 0) {\n      playbackRate = 1;\n    }\n\n    var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n    return (bufferedEnd - currentTime) / playbackRate;\n  };\n  /**\n   * Converts a TimeRanges object into an array representation\n   *\n   * @param {TimeRanges} timeRanges\n   * @return {Array}\n   */\n\n\n  var timeRangesToArray = function timeRangesToArray(timeRanges) {\n    var timeRangesList = [];\n\n    for (var i = 0; i < timeRanges.length; i++) {\n      timeRangesList.push({\n        start: timeRanges.start(i),\n        end: timeRanges.end(i)\n      });\n    }\n\n    return timeRangesList;\n  };\n  /**\n   * Determines if two time range objects are different.\n   *\n   * @param {TimeRange} a\n   *        the first time range object to check\n   *\n   * @param {TimeRange} b\n   *        the second time range object to check\n   *\n   * @return {Boolean}\n   *         Whether the time range objects differ\n   */\n\n\n  var isRangeDifferent = function isRangeDifferent(a, b) {\n    // same object\n    if (a === b) {\n      return false;\n    } // one or the other is undefined\n\n\n    if (!a && b || !b && a) {\n      return true;\n    } // length is different\n\n\n    if (a.length !== b.length) {\n      return true;\n    } // see if any start/end pair is different\n\n\n    for (var i = 0; i < a.length; i++) {\n      if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n        return true;\n      }\n    } // if the length and every pair is the same\n    // this is the same time range\n\n\n    return false;\n  };\n\n  var lastBufferedEnd = function lastBufferedEnd(a) {\n    if (!a || !a.length || !a.end) {\n      return;\n    }\n\n    return a.end(a.length - 1);\n  };\n  /**\n   * A utility function to add up the amount of time in a timeRange\n   * after a specified startTime.\n   * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n   *     would return 40 as there are 40s seconds after 0 in the timeRange\n   *\n   * @param {TimeRange} range\n   *        The range to check against\n   * @param {number} startTime\n   *        The time in the time range that you should start counting from\n   *\n   * @return {number}\n   *          The number of seconds in the buffer passed the specified time.\n   */\n\n\n  var timeAheadOf = function timeAheadOf(range, startTime) {\n    var time = 0;\n\n    if (!range || !range.length) {\n      return time;\n    }\n\n    for (var i = 0; i < range.length; i++) {\n      var start = range.start(i);\n      var end = range.end(i); // startTime is after this range entirely\n\n      if (startTime > end) {\n        continue;\n      } // startTime is within this range\n\n\n      if (startTime > start && startTime <= end) {\n        time += end - startTime;\n        continue;\n      } // startTime is before this range.\n\n\n      time += end - start;\n    }\n\n    return time;\n  };\n  /**\n   * @file playlist.js\n   *\n   * Playlist related utilities.\n   */\n\n\n  var createTimeRange = videojs.createTimeRange;\n  /**\n   * Get the duration of a segment, with special cases for\n   * llhls segments that do not have a duration yet.\n   *\n   * @param {Object} playlist\n   *        the playlist that the segment belongs to.\n   * @param {Object} segment\n   *        the segment to get a duration for.\n   *\n   * @return {number}\n   *          the segment duration\n   */\n\n  var segmentDurationWithParts = function segmentDurationWithParts(playlist, segment) {\n    // if this isn't a preload segment\n    // then we will have a segment duration that is accurate.\n    if (!segment.preload) {\n      return segment.duration;\n    } // otherwise we have to add up parts and preload hints\n    // to get an up to date duration.\n\n\n    var result = 0;\n    (segment.parts || []).forEach(function (p) {\n      result += p.duration;\n    }); // for preload hints we have to use partTargetDuration\n    // as they won't even have a duration yet.\n\n    (segment.preloadHints || []).forEach(function (p) {\n      if (p.type === 'PART') {\n        result += playlist.partTargetDuration;\n      }\n    });\n    return result;\n  };\n  /**\n   * A function to get a combined list of parts and segments with durations\n   * and indexes.\n   *\n   * @param {Playlist} playlist the playlist to get the list for.\n   *\n   * @return {Array} The part/segment list.\n   */\n\n\n  var getPartsAndSegments = function getPartsAndSegments(playlist) {\n    return (playlist.segments || []).reduce(function (acc, segment, si) {\n      if (segment.parts) {\n        segment.parts.forEach(function (part, pi) {\n          acc.push({\n            duration: part.duration,\n            segmentIndex: si,\n            partIndex: pi,\n            part: part,\n            segment: segment\n          });\n        });\n      } else {\n        acc.push({\n          duration: segment.duration,\n          segmentIndex: si,\n          partIndex: null,\n          segment: segment,\n          part: null\n        });\n      }\n\n      return acc;\n    }, []);\n  };\n\n  var getLastParts = function getLastParts(media) {\n    var lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n    return lastSegment && lastSegment.parts || [];\n  };\n\n  var getKnownPartCount = function getKnownPartCount(_ref) {\n    var preloadSegment = _ref.preloadSegment;\n\n    if (!preloadSegment) {\n      return;\n    }\n\n    var parts = preloadSegment.parts,\n        preloadHints = preloadSegment.preloadHints;\n    var partCount = (preloadHints || []).reduce(function (count, hint) {\n      return count + (hint.type === 'PART' ? 1 : 0);\n    }, 0);\n    partCount += parts && parts.length ? parts.length : 0;\n    return partCount;\n  };\n  /**\n   * Get the number of seconds to delay from the end of a\n   * live playlist.\n   *\n   * @param {Playlist} master the master playlist\n   * @param {Playlist} media the media playlist\n   * @return {number} the hold back in seconds.\n   */\n\n\n  var liveEdgeDelay = function liveEdgeDelay(master, media) {\n    if (media.endList) {\n      return 0;\n    } // dash suggestedPresentationDelay trumps everything\n\n\n    if (master && master.suggestedPresentationDelay) {\n      return master.suggestedPresentationDelay;\n    }\n\n    var hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n    if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n      return media.serverControl.partHoldBack;\n    } else if (hasParts && media.partTargetDuration) {\n      return media.partTargetDuration * 3; // finally look for full segment delays\n    } else if (media.serverControl && media.serverControl.holdBack) {\n      return media.serverControl.holdBack;\n    } else if (media.targetDuration) {\n      return media.targetDuration * 3;\n    }\n\n    return 0;\n  };\n  /**\n   * walk backward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {Number} endSequence the mediaSequence to stop walking on\n   */\n\n\n  var backwardDuration = function backwardDuration(playlist, endSequence) {\n    var result = 0;\n    var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n    // the interval, use it\n\n    var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n    // information that is earlier than endSequence\n\n    if (segment) {\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start,\n          precise: true\n        };\n      }\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - segment.duration,\n          precise: true\n        };\n      }\n    }\n\n    while (i--) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: result + segment.end,\n          precise: true\n        };\n      }\n\n      result += segmentDurationWithParts(playlist, segment);\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: result + segment.start,\n          precise: true\n        };\n      }\n    }\n\n    return {\n      result: result,\n      precise: false\n    };\n  };\n  /**\n   * walk forward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {number} endSequence the mediaSequence to stop walking on\n   */\n\n\n  var forwardDuration = function forwardDuration(playlist, endSequence) {\n    var result = 0;\n    var segment;\n    var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n    // information\n\n    for (; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start - result,\n          precise: true\n        };\n      }\n\n      result += segmentDurationWithParts(playlist, segment);\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - result,\n          precise: true\n        };\n      }\n    } // indicate we didn't find a useful duration estimate\n\n\n    return {\n      result: -1,\n      precise: false\n    };\n  };\n  /**\n    * Calculate the media duration from the segments associated with a\n    * playlist. The duration of a subinterval of the available segments\n    * may be calculated by specifying an end index.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper boundary\n    * for the playlist.  Defaults to playlist length.\n    * @param {number} expired the amount of time that has dropped\n    * off the front of the playlist in a live scenario\n    * @return {number} the duration between the first available segment\n    * and end index.\n    */\n\n\n  var intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n    if (typeof endSequence === 'undefined') {\n      endSequence = playlist.mediaSequence + playlist.segments.length;\n    }\n\n    if (endSequence < playlist.mediaSequence) {\n      return 0;\n    } // do a backward walk to estimate the duration\n\n\n    var backward = backwardDuration(playlist, endSequence);\n\n    if (backward.precise) {\n      // if we were able to base our duration estimate on timing\n      // information provided directly from the Media Source, return\n      // it\n      return backward.result;\n    } // walk forward to see if a precise duration estimate can be made\n    // that way\n\n\n    var forward = forwardDuration(playlist, endSequence);\n\n    if (forward.precise) {\n      // we found a segment that has been buffered and so it's\n      // position is known precisely\n      return forward.result;\n    } // return the less-precise, playlist-based duration estimate\n\n\n    return backward.result + expired;\n  };\n  /**\n    * Calculates the duration of a playlist. If a start and end index\n    * are specified, the duration will be for the subset of the media\n    * timeline between those two indices. The total duration for live\n    * playlists is always Infinity.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper\n    * boundary for the playlist. Defaults to the playlist media\n    * sequence number plus its length.\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @return {number} the duration between the start index and end\n    * index.\n    */\n\n\n  var duration = function duration(playlist, endSequence, expired) {\n    if (!playlist) {\n      return 0;\n    }\n\n    if (typeof expired !== 'number') {\n      expired = 0;\n    } // if a slice of the total duration is not requested, use\n    // playlist-level duration indicators when they're present\n\n\n    if (typeof endSequence === 'undefined') {\n      // if present, use the duration specified in the playlist\n      if (playlist.totalDuration) {\n        return playlist.totalDuration;\n      } // duration should be Infinity for live playlists\n\n\n      if (!playlist.endList) {\n        return window.Infinity;\n      }\n    } // calculate the total duration based on the segment durations\n\n\n    return intervalDuration(playlist, endSequence, expired);\n  };\n  /**\n    * Calculate the time between two indexes in the current playlist\n    * neight the start- nor the end-index need to be within the current\n    * playlist in which case, the targetDuration of the playlist is used\n    * to approximate the durations of the segments\n    *\n    * @param {Array} options.durationList list to iterate over for durations.\n    * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n    * @param {number} options.startIndex partsAndSegments index to start\n    * @param {number} options.endIndex partsAndSegments index to end.\n    * @return {number} the number of seconds between startIndex and endIndex\n    */\n\n\n  var sumDurations = function sumDurations(_ref2) {\n    var defaultDuration = _ref2.defaultDuration,\n        durationList = _ref2.durationList,\n        startIndex = _ref2.startIndex,\n        endIndex = _ref2.endIndex;\n    var durations = 0;\n\n    if (startIndex > endIndex) {\n      var _ref3 = [endIndex, startIndex];\n      startIndex = _ref3[0];\n      endIndex = _ref3[1];\n    }\n\n    if (startIndex < 0) {\n      for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n        durations += defaultDuration;\n      }\n\n      startIndex = 0;\n    }\n\n    for (var _i = startIndex; _i < endIndex; _i++) {\n      durations += durationList[_i].duration;\n    }\n\n    return durations;\n  };\n  /**\n   * Calculates the playlist end time\n   *\n   * @param {Object} playlist a media playlist object\n   * @param {number=} expired the amount of time that has\n   *                  dropped off the front of the playlist in a live scenario\n   * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n   *                        playlist end calculation should consider the safe live end\n   *                        (truncate the playlist end by three segments). This is normally\n   *                        used for calculating the end of the playlist's seekable range.\n   *                        This takes into account the value of liveEdgePadding.\n   *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n   * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n   *                 If this is provided, it is used in the safe live end calculation.\n   *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n   *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n   * @return {number} the end time of playlist\n   * @function playlistEnd\n   */\n\n\n  var playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    if (playlist.endList) {\n      return duration(playlist);\n    }\n\n    if (expired === null) {\n      return null;\n    }\n\n    expired = expired || 0;\n    var lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n\n    if (useSafeLiveEnd) {\n      liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n      lastSegmentEndTime -= liveEdgePadding;\n    } // don't return a time less than zero\n\n\n    return Math.max(0, lastSegmentEndTime);\n  };\n  /**\n    * Calculates the interval of time that is currently seekable in a\n    * playlist. The returned time ranges are relative to the earliest\n    * moment in the specified playlist that is still available. A full\n    * seekable implementation for live streams would need to offset\n    * these values by the duration of content that has expired from the\n    * stream.\n    *\n    * @param {Object} playlist a media playlist object\n    * dropped off the front of the playlist in a live scenario\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n    *        Corresponds to suggestedPresentationDelay in DASH manifests.\n    * @return {TimeRanges} the periods of time that are valid targets\n    * for seeking\n    */\n\n\n  var seekable = function seekable(playlist, expired, liveEdgePadding) {\n    var useSafeLiveEnd = true;\n    var seekableStart = expired || 0;\n    var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n    if (seekableEnd === null) {\n      return createTimeRange();\n    }\n\n    return createTimeRange(seekableStart, seekableEnd);\n  };\n  /**\n   * Determine the index and estimated starting time of the segment that\n   * contains a specified playback position in a media playlist.\n   *\n   * @param {Object} options.playlist the media playlist to query\n   * @param {number} options.currentTime The number of seconds since the earliest\n   * possible position to determine the containing segment for\n   * @param {number} options.startTime the time when the segment/part starts\n   * @param {number} options.startingSegmentIndex the segment index to start looking at.\n   * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n   *\n   * @return {Object} an object with partIndex, segmentIndex, and startTime.\n   */\n\n\n  var getMediaInfoForTime = function getMediaInfoForTime(_ref4) {\n    var playlist = _ref4.playlist,\n        currentTime = _ref4.currentTime,\n        startingSegmentIndex = _ref4.startingSegmentIndex,\n        startingPartIndex = _ref4.startingPartIndex,\n        startTime = _ref4.startTime,\n        experimentalExactManifestTimings = _ref4.experimentalExactManifestTimings;\n    var time = currentTime - startTime;\n    var partsAndSegments = getPartsAndSegments(playlist);\n    var startIndex = 0;\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      var partAndSegment = partsAndSegments[i];\n\n      if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n        continue;\n      } // skip this if part index does not match.\n\n\n      if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n        continue;\n      }\n\n      startIndex = i;\n      break;\n    }\n\n    if (time < 0) {\n      // Walk backward from startIndex in the playlist, adding durations\n      // until we find a segment that contains `time` and return it\n      if (startIndex > 0) {\n        for (var _i2 = startIndex - 1; _i2 >= 0; _i2--) {\n          var _partAndSegment = partsAndSegments[_i2];\n          time += _partAndSegment.duration;\n\n          if (experimentalExactManifestTimings) {\n            if (time < 0) {\n              continue;\n            }\n          } else if (time + TIME_FUDGE_FACTOR <= 0) {\n            continue;\n          }\n\n          return {\n            partIndex: _partAndSegment.partIndex,\n            segmentIndex: _partAndSegment.segmentIndex,\n            startTime: startTime - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: partsAndSegments,\n              startIndex: startIndex,\n              endIndex: _i2\n            })\n          };\n        }\n      } // We were unable to find a good segment within the playlist\n      // so select the first segment\n\n\n      return {\n        partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n        segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n        startTime: currentTime\n      };\n    } // When startIndex is negative, we first walk forward to first segment\n    // adding target durations. If we \"run out of time\" before getting to\n    // the first segment, return the first segment\n\n\n    if (startIndex < 0) {\n      for (var _i3 = startIndex; _i3 < 0; _i3++) {\n        time -= playlist.targetDuration;\n\n        if (time < 0) {\n          return {\n            partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n            segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n            startTime: currentTime\n          };\n        }\n      }\n\n      startIndex = 0;\n    } // Walk forward from startIndex in the playlist, subtracting durations\n    // until we find a segment that contains `time` and return it\n\n\n    for (var _i4 = startIndex; _i4 < partsAndSegments.length; _i4++) {\n      var _partAndSegment2 = partsAndSegments[_i4];\n      time -= _partAndSegment2.duration;\n\n      if (experimentalExactManifestTimings) {\n        if (time > 0) {\n          continue;\n        }\n      } else if (time - TIME_FUDGE_FACTOR >= 0) {\n        continue;\n      }\n\n      return {\n        partIndex: _partAndSegment2.partIndex,\n        segmentIndex: _partAndSegment2.segmentIndex,\n        startTime: startTime + sumDurations({\n          defaultDuration: playlist.targetDuration,\n          durationList: partsAndSegments,\n          startIndex: startIndex,\n          endIndex: _i4\n        })\n      };\n    } // We are out of possible candidates so load the last one...\n\n\n    return {\n      segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n      partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n      startTime: currentTime\n    };\n  };\n  /**\n   * Check whether the playlist is blacklisted or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is blacklisted or not\n   * @function isBlacklisted\n   */\n\n\n  var isBlacklisted = function isBlacklisted(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n  };\n  /**\n   * Check whether the playlist is compatible with current playback configuration or has\n   * been blacklisted permanently for being incompatible.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is incompatible or not\n   * @function isIncompatible\n   */\n\n\n  var isIncompatible = function isIncompatible(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n  };\n  /**\n   * Check whether the playlist is enabled or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is enabled or not\n   * @function isEnabled\n   */\n\n\n  var isEnabled = function isEnabled(playlist) {\n    var blacklisted = isBlacklisted(playlist);\n    return !playlist.disabled && !blacklisted;\n  };\n  /**\n   * Check whether the playlist has been manually disabled through the representations api.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is disabled manually or not\n   * @function isDisabled\n   */\n\n\n  var isDisabled = function isDisabled(playlist) {\n    return playlist.disabled;\n  };\n  /**\n   * Returns whether the current playlist is an AES encrypted HLS stream\n   *\n   * @return {boolean} true if it's an AES encrypted HLS stream\n   */\n\n\n  var isAes = function isAes(media) {\n    for (var i = 0; i < media.segments.length; i++) {\n      if (media.segments[i].key) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Checks if the playlist has a value for the specified attribute\n   *\n   * @param {string} attr\n   *        Attribute to check for\n   * @param {Object} playlist\n   *        The media playlist object\n   * @return {boolean}\n   *         Whether the playlist contains a value for the attribute or not\n   * @function hasAttribute\n   */\n\n\n  var hasAttribute = function hasAttribute(attr, playlist) {\n    return playlist.attributes && playlist.attributes[attr];\n  };\n  /**\n   * Estimates the time required to complete a segment download from the specified playlist\n   *\n   * @param {number} segmentDuration\n   *        Duration of requested segment\n   * @param {number} bandwidth\n   *        Current measured bandwidth of the player\n   * @param {Object} playlist\n   *        The media playlist object\n   * @param {number=} bytesReceived\n   *        Number of bytes already received for the request. Defaults to 0\n   * @return {number|NaN}\n   *         The estimated time to request the segment. NaN if bandwidth information for\n   *         the given playlist is unavailable\n   * @function estimateSegmentRequestTime\n   */\n\n\n  var estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist, bytesReceived) {\n    if (bytesReceived === void 0) {\n      bytesReceived = 0;\n    }\n\n    if (!hasAttribute('BANDWIDTH', playlist)) {\n      return NaN;\n    }\n\n    var size = segmentDuration * playlist.attributes.BANDWIDTH;\n    return (size - bytesReceived * 8) / bandwidth;\n  };\n  /*\n   * Returns whether the current playlist is the lowest rendition\n   *\n   * @return {Boolean} true if on lowest rendition\n   */\n\n\n  var isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n    if (master.playlists.length === 1) {\n      return true;\n    }\n\n    var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n    return master.playlists.filter(function (playlist) {\n      if (!isEnabled(playlist)) {\n        return false;\n      }\n\n      return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n    }).length === 0;\n  };\n\n  var playlistMatch = function playlistMatch(a, b) {\n    // both playlits are null\n    // or only one playlist is non-null\n    // no match\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // playlist objects are the same, match\n\n\n    if (a === b) {\n      return true;\n    } // first try to use id as it should be the most\n    // accurate\n\n\n    if (a.id && b.id && a.id === b.id) {\n      return true;\n    } // next try to use reslovedUri as it should be the\n    // second most accurate.\n\n\n    if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n      return true;\n    } // finally try to use uri as it should be accurate\n    // but might miss a few cases for relative uris\n\n\n    if (a.uri && b.uri && a.uri === b.uri) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var someAudioVariant = function someAudioVariant(master, callback) {\n    var AUDIO = master && master.mediaGroups && master.mediaGroups.AUDIO || {};\n    var found = false;\n\n    for (var groupName in AUDIO) {\n      for (var label in AUDIO[groupName]) {\n        found = callback(AUDIO[groupName][label]);\n\n        if (found) {\n          break;\n        }\n      }\n\n      if (found) {\n        break;\n      }\n    }\n\n    return !!found;\n  };\n\n  var isAudioOnly = function isAudioOnly(master) {\n    // we are audio only if we have no main playlists but do\n    // have media group playlists.\n    if (!master || !master.playlists || !master.playlists.length) {\n      // without audio variants or playlists this\n      // is not an audio only master.\n      var found = someAudioVariant(master, function (variant) {\n        return variant.playlists && variant.playlists.length || variant.uri;\n      });\n      return found;\n    } // if every playlist has only an audio codec it is audio only\n\n\n    var _loop = function _loop(i) {\n      var playlist = master.playlists[i];\n      var CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n      if (CODECS && CODECS.split(',').every(function (c) {\n        return isAudioCodec(c);\n      })) {\n        return \"continue\";\n      } // playlist is in an audio group it is audio only\n\n\n      var found = someAudioVariant(master, function (variant) {\n        return playlistMatch(playlist, variant);\n      });\n\n      if (found) {\n        return \"continue\";\n      } // if we make it here this playlist isn't audio and we\n      // are not audio only\n\n\n      return {\n        v: false\n      };\n    };\n\n    for (var i = 0; i < master.playlists.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n      if (typeof _ret === \"object\") return _ret.v;\n    } // if we make it past every playlist without returning, then\n    // this is an audio only playlist.\n\n\n    return true;\n  }; // exports\n\n\n  var Playlist = {\n    liveEdgeDelay: liveEdgeDelay,\n    duration: duration,\n    seekable: seekable,\n    getMediaInfoForTime: getMediaInfoForTime,\n    isEnabled: isEnabled,\n    isDisabled: isDisabled,\n    isBlacklisted: isBlacklisted,\n    isIncompatible: isIncompatible,\n    playlistEnd: playlistEnd,\n    isAes: isAes,\n    hasAttribute: hasAttribute,\n    estimateSegmentRequestTime: estimateSegmentRequestTime,\n    isLowestEnabledRendition: isLowestEnabledRendition,\n    isAudioOnly: isAudioOnly,\n    playlistMatch: playlistMatch,\n    segmentDurationWithParts: segmentDurationWithParts\n  };\n  var log = videojs.log;\n\n  var createPlaylistID = function createPlaylistID(index, uri) {\n    return index + \"-\" + uri;\n  };\n  /**\n   * Parses a given m3u8 playlist\n   *\n   * @param {Function} [onwarn]\n   *        a function to call when the parser triggers a warning event.\n   * @param {Function} [oninfo]\n   *        a function to call when the parser triggers an info event.\n   * @param {string} manifestString\n   *        The downloaded manifest string\n   * @param {Object[]} [customTagParsers]\n   *        An array of custom tag parsers for the m3u8-parser instance\n   * @param {Object[]} [customTagMappers]\n   *        An array of custom tag mappers for the m3u8-parser instance\n   * @param {boolean} [experimentalLLHLS=false]\n   *        Whether to keep ll-hls features in the manifest after parsing.\n   * @return {Object}\n   *         The manifest object\n   */\n\n\n  var parseManifest = function parseManifest(_ref) {\n    var onwarn = _ref.onwarn,\n        oninfo = _ref.oninfo,\n        manifestString = _ref.manifestString,\n        _ref$customTagParsers = _ref.customTagParsers,\n        customTagParsers = _ref$customTagParsers === void 0 ? [] : _ref$customTagParsers,\n        _ref$customTagMappers = _ref.customTagMappers,\n        customTagMappers = _ref$customTagMappers === void 0 ? [] : _ref$customTagMappers,\n        experimentalLLHLS = _ref.experimentalLLHLS;\n    var parser = new Parser();\n\n    if (onwarn) {\n      parser.on('warn', onwarn);\n    }\n\n    if (oninfo) {\n      parser.on('info', oninfo);\n    }\n\n    customTagParsers.forEach(function (customParser) {\n      return parser.addParser(customParser);\n    });\n    customTagMappers.forEach(function (mapper) {\n      return parser.addTagMapper(mapper);\n    });\n    parser.push(manifestString);\n    parser.end();\n    var manifest = parser.manifest; // remove llhls features from the parsed manifest\n    // if we don't want llhls support.\n\n    if (!experimentalLLHLS) {\n      ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n        if (manifest.hasOwnProperty(k)) {\n          delete manifest[k];\n        }\n      });\n\n      if (manifest.segments) {\n        manifest.segments.forEach(function (segment) {\n          ['parts', 'preloadHints'].forEach(function (k) {\n            if (segment.hasOwnProperty(k)) {\n              delete segment[k];\n            }\n          });\n        });\n      }\n    }\n\n    if (!manifest.targetDuration) {\n      var targetDuration = 10;\n\n      if (manifest.segments && manifest.segments.length) {\n        targetDuration = manifest.segments.reduce(function (acc, s) {\n          return Math.max(acc, s.duration);\n        }, 0);\n      }\n\n      if (onwarn) {\n        onwarn(\"manifest has no targetDuration defaulting to \" + targetDuration);\n      }\n\n      manifest.targetDuration = targetDuration;\n    }\n\n    var parts = getLastParts(manifest);\n\n    if (parts.length && !manifest.partTargetDuration) {\n      var partTargetDuration = parts.reduce(function (acc, p) {\n        return Math.max(acc, p.duration);\n      }, 0);\n\n      if (onwarn) {\n        onwarn(\"manifest has no partTargetDuration defaulting to \" + partTargetDuration);\n        log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n      }\n\n      manifest.partTargetDuration = partTargetDuration;\n    }\n\n    return manifest;\n  };\n  /**\n   * Loops through all supported media groups in master and calls the provided\n   * callback for each group\n   *\n   * @param {Object} master\n   *        The parsed master manifest object\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n\n\n  var forEachMediaGroup = function forEachMediaGroup(master, callback) {\n    if (!master.mediaGroups) {\n      return;\n    }\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n      if (!master.mediaGroups[mediaType]) {\n        return;\n      }\n\n      for (var groupKey in master.mediaGroups[mediaType]) {\n        for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n          var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n  /**\n   * Adds properties and attributes to the playlist to keep consistent functionality for\n   * playlists throughout VHS.\n   *\n   * @param {Object} config\n   *        Arguments object\n   * @param {Object} config.playlist\n   *        The media playlist\n   * @param {string} [config.uri]\n   *        The uri to the media playlist (if media playlist is not from within a master\n   *        playlist)\n   * @param {string} id\n   *        ID to use for the playlist\n   */\n\n\n  var setupMediaPlaylist = function setupMediaPlaylist(_ref2) {\n    var playlist = _ref2.playlist,\n        uri = _ref2.uri,\n        id = _ref2.id;\n    playlist.id = id;\n    playlist.playlistErrors_ = 0;\n\n    if (uri) {\n      // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n      // playlists do not contain their own source URI, but one is needed for consistency in\n      // VHS.\n      playlist.uri = uri;\n    } // For HLS master playlists, even though certain attributes MUST be defined, the\n    // stream may still be played without them.\n    // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n    // manifest.\n    //\n    // To avoid undefined reference errors through the project, and make the code easier\n    // to write/read, add an empty attributes object for these cases.\n\n\n    playlist.attributes = playlist.attributes || {};\n  };\n  /**\n   * Adds ID, resolvedUri, and attributes properties to each playlist of the master, where\n   * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n   * playlist references to the playlists array.\n   *\n   * @param {Object} master\n   *        The master playlist\n   */\n\n\n  var setupMediaPlaylists = function setupMediaPlaylists(master) {\n    var i = master.playlists.length;\n\n    while (i--) {\n      var playlist = master.playlists[i];\n      setupMediaPlaylist({\n        playlist: playlist,\n        id: createPlaylistID(i, playlist.uri)\n      });\n      playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n      master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n      master.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n      // the stream can be played without it. Although an attributes property may have been\n      // added to the playlist to prevent undefined references, issue a warning to fix the\n      // manifest.\n\n      if (!playlist.attributes.BANDWIDTH) {\n        log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n      }\n    }\n  };\n  /**\n   * Adds resolvedUri properties to each media group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   */\n\n\n  var resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n    forEachMediaGroup(master, function (properties) {\n      if (properties.uri) {\n        properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n      }\n    });\n  };\n  /**\n   * Creates a master playlist wrapper to insert a sole media playlist into.\n   *\n   * @param {Object} media\n   *        Media playlist\n   * @param {string} uri\n   *        The media URI\n   *\n   * @return {Object}\n   *         Master playlist\n   */\n\n\n  var masterForMedia = function masterForMedia(media, uri) {\n    var id = createPlaylistID(0, uri);\n    var master = {\n      mediaGroups: {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      },\n      uri: window.location.href,\n      resolvedUri: window.location.href,\n      playlists: [{\n        uri: uri,\n        id: id,\n        resolvedUri: uri,\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        attributes: {}\n      }]\n    }; // set up ID reference\n\n    master.playlists[id] = master.playlists[0]; // URI reference added for backwards compatibility\n\n    master.playlists[uri] = master.playlists[0];\n    return master;\n  };\n  /**\n   * Does an in-place update of the master manifest to add updated playlist URI references\n   * as well as other properties needed by VHS that aren't included by the parser.\n   *\n   * @param {Object} master\n   *        Master manifest object\n   * @param {string} uri\n   *        The source URI\n   */\n\n\n  var addPropertiesToMaster = function addPropertiesToMaster(master, uri) {\n    master.uri = uri;\n\n    for (var i = 0; i < master.playlists.length; i++) {\n      if (!master.playlists[i].uri) {\n        // Set up phony URIs for the playlists since playlists are referenced by their URIs\n        // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n        // TODO: consider adding dummy URIs in mpd-parser\n        var phonyUri = \"placeholder-uri-\" + i;\n        master.playlists[i].uri = phonyUri;\n      }\n    }\n\n    var audioOnlyMaster = isAudioOnly(master);\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      var groupId = \"placeholder-uri-\" + mediaType + \"-\" + groupKey + \"-\" + labelKey; // add a playlist array under properties\n\n      if (!properties.playlists || !properties.playlists.length) {\n        // If the manifest is audio only and this media group does not have a uri, check\n        // if the media group is located in the main list of playlists. If it is, don't add\n        // placeholder properties as it shouldn't be considered an alternate audio track.\n        if (audioOnlyMaster && mediaType === 'AUDIO' && !properties.uri) {\n          for (var _i = 0; _i < master.playlists.length; _i++) {\n            var p = master.playlists[_i];\n\n            if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n              return;\n            }\n          }\n        }\n\n        properties.playlists = [_extends_1({}, properties)];\n      }\n\n      properties.playlists.forEach(function (p, i) {\n        var id = createPlaylistID(i, groupId);\n\n        if (p.uri) {\n          p.resolvedUri = p.resolvedUri || resolveUrl(master.uri, p.uri);\n        } else {\n          // DEPRECATED, this has been added to prevent a breaking change.\n          // previously we only ever had a single media group playlist, so\n          // we mark the first playlist uri without prepending the index as we used to\n          // ideally we would do all of the playlists the same way.\n          p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n          // the placeholder again\n\n          p.resolvedUri = p.uri;\n        }\n\n        p.id = p.id || id; // add an empty attributes object, all playlists are\n        // expected to have this.\n\n        p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n        master.playlists[p.id] = p;\n        master.playlists[p.uri] = p;\n      });\n    });\n    setupMediaPlaylists(master);\n    resolveMediaGroupUris(master);\n  };\n\n  var mergeOptions$2 = videojs.mergeOptions,\n      EventTarget$1 = videojs.EventTarget;\n\n  var addLLHLSQueryDirectives = function addLLHLSQueryDirectives(uri, media) {\n    if (media.endList || !media.serverControl) {\n      return uri;\n    }\n\n    var parameters = {};\n\n    if (media.serverControl.canBlockReload) {\n      var preloadSegment = media.preloadSegment; // next msn is a zero based value, length is not.\n\n      var nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n      // that we are going to request a part of that preload segment.\n      // the logic below is used to determine that.\n\n      if (preloadSegment) {\n        var parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n        var nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n        // length of parts, then we know we had part preload hints\n        // and we need to add the _HLS_part= query\n\n        if (nextPart > -1 && nextPart !== parts.length - 1) {\n          // add existing parts to our preload hints\n          // eslint-disable-next-line\n          parameters._HLS_part = nextPart;\n        } // this if statement makes sure that we request the msn\n        // of the preload segment if:\n        // 1. the preload segment had parts (and was not yet a full segment)\n        //    but was added to our segments array\n        // 2. the preload segment had preload hints for parts that are not in\n        //    the manifest yet.\n        // in all other cases we want the segment after the preload segment\n        // which will be given by using media.segments.length because it is 1 based\n        // rather than 0 based.\n\n\n        if (nextPart > -1 || parts.length) {\n          nextMSN--;\n        }\n      } // add _HLS_msn= in front of any _HLS_part query\n      // eslint-disable-next-line\n\n\n      parameters._HLS_msn = nextMSN;\n    }\n\n    if (media.serverControl && media.serverControl.canSkipUntil) {\n      // add _HLS_skip= infront of all other queries.\n      // eslint-disable-next-line\n      parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n    }\n\n    if (Object.keys(parameters).length) {\n      var parsedUri = new window.URL(uri);\n      ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n        if (!parameters.hasOwnProperty(name)) {\n          return;\n        }\n\n        parsedUri.searchParams.set(name, parameters[name]);\n      });\n      uri = parsedUri.toString();\n    }\n\n    return uri;\n  };\n  /**\n   * Returns a new segment object with properties and\n   * the parts array merged.\n   *\n   * @param {Object} a the old segment\n   * @param {Object} b the new segment\n   *\n   * @return {Object} the merged segment\n   */\n\n\n  var updateSegment = function updateSegment(a, b) {\n    if (!a) {\n      return b;\n    }\n\n    var result = mergeOptions$2(a, b); // if only the old segment has preload hints\n    // and the new one does not, remove preload hints.\n\n    if (a.preloadHints && !b.preloadHints) {\n      delete result.preloadHints;\n    } // if only the old segment has parts\n    // then the parts are no longer valid\n\n\n    if (a.parts && !b.parts) {\n      delete result.parts; // if both segments have parts\n      // copy part propeties from the old segment\n      // to the new one.\n    } else if (a.parts && b.parts) {\n      for (var i = 0; i < b.parts.length; i++) {\n        if (a.parts && a.parts[i]) {\n          result.parts[i] = mergeOptions$2(a.parts[i], b.parts[i]);\n        }\n      }\n    } // set skipped to false for segments that have\n    // have had information merged from the old segment.\n\n\n    if (!a.skipped && b.skipped) {\n      result.skipped = false;\n    } // set preload to false for segments that have\n    // had information added in the new segment.\n\n\n    if (a.preload && !b.preload) {\n      result.preload = false;\n    }\n\n    return result;\n  };\n  /**\n   * Returns a new array of segments that is the result of merging\n   * properties from an older list of segments onto an updated\n   * list. No properties on the updated playlist will be ovewritten.\n   *\n   * @param {Array} original the outdated list of segments\n   * @param {Array} update the updated list of segments\n   * @param {number=} offset the index of the first update\n   * segment in the original segment list. For non-live playlists,\n   * this should always be zero and does not need to be\n   * specified. For live playlists, it should be the difference\n   * between the media sequence numbers in the original and updated\n   * playlists.\n   * @return {Array} a list of merged segment objects\n   */\n\n\n  var updateSegments = function updateSegments(original, update, offset) {\n    var oldSegments = original.slice();\n    var newSegments = update.slice();\n    offset = offset || 0;\n    var result = [];\n    var currentMap;\n\n    for (var newIndex = 0; newIndex < newSegments.length; newIndex++) {\n      var oldSegment = oldSegments[newIndex + offset];\n      var newSegment = newSegments[newIndex];\n\n      if (oldSegment) {\n        currentMap = oldSegment.map || currentMap;\n        result.push(updateSegment(oldSegment, newSegment));\n      } else {\n        // carry over map to new segment if it is missing\n        if (currentMap && !newSegment.map) {\n          newSegment.map = currentMap;\n        }\n\n        result.push(newSegment);\n      }\n    }\n\n    return result;\n  };\n\n  var resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n    // preloadSegment will not have a uri at all\n    // as the segment isn't actually in the manifest yet, only parts\n    if (!segment.resolvedUri && segment.uri) {\n      segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n    }\n\n    if (segment.key && !segment.key.resolvedUri) {\n      segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n    }\n\n    if (segment.map && !segment.map.resolvedUri) {\n      segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n    }\n\n    if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n      segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n    }\n\n    if (segment.parts && segment.parts.length) {\n      segment.parts.forEach(function (p) {\n        if (p.resolvedUri) {\n          return;\n        }\n\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n\n    if (segment.preloadHints && segment.preloadHints.length) {\n      segment.preloadHints.forEach(function (p) {\n        if (p.resolvedUri) {\n          return;\n        }\n\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n  };\n\n  var getAllSegments = function getAllSegments(media) {\n    var segments = media.segments || [];\n    var preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n    // a usable segment, only include a preloadSegment that has\n    // parts.\n\n    if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n      // if preloadHints has a MAP that means that the\n      // init segment is going to change. We cannot use any of the parts\n      // from this preload segment.\n      if (preloadSegment.preloadHints) {\n        for (var i = 0; i < preloadSegment.preloadHints.length; i++) {\n          if (preloadSegment.preloadHints[i].type === 'MAP') {\n            return segments;\n          }\n        }\n      } // set the duration for our preload segment to target duration.\n\n\n      preloadSegment.duration = media.targetDuration;\n      preloadSegment.preload = true;\n      segments.push(preloadSegment);\n    }\n\n    return segments;\n  }; // consider the playlist unchanged if the playlist object is the same or\n  // the number of segments is equal, the media sequence number is unchanged,\n  // and this playlist hasn't become the end of the playlist\n\n\n  var isPlaylistUnchanged = function isPlaylistUnchanged(a, b) {\n    return a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n  };\n  /**\n    * Returns a new master playlist that is the result of merging an\n    * updated media playlist into the original version. If the\n    * updated media playlist does not match any of the playlist\n    * entries in the original master playlist, null is returned.\n    *\n    * @param {Object} master a parsed master M3U8 object\n    * @param {Object} media a parsed media M3U8 object\n    * @return {Object} a new object that represents the original\n    * master playlist with the updated media playlist merged in, or\n    * null if the merge produced no change.\n    */\n\n\n  var updateMaster$1 = function updateMaster(master, newMedia, unchangedCheck) {\n    if (unchangedCheck === void 0) {\n      unchangedCheck = isPlaylistUnchanged;\n    }\n\n    var result = mergeOptions$2(master, {});\n    var oldMedia = result.playlists[newMedia.id];\n\n    if (!oldMedia) {\n      return null;\n    }\n\n    if (unchangedCheck(oldMedia, newMedia)) {\n      return null;\n    }\n\n    newMedia.segments = getAllSegments(newMedia);\n    var mergedPlaylist = mergeOptions$2(oldMedia, newMedia); // always use the new media's preload segment\n\n    if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n      delete mergedPlaylist.preloadSegment;\n    } // if the update could overlap existing segment information, merge the two segment lists\n\n\n    if (oldMedia.segments) {\n      if (newMedia.skip) {\n        newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n        // old properties into the new segments\n\n        for (var i = 0; i < newMedia.skip.skippedSegments; i++) {\n          newMedia.segments.unshift({\n            skipped: true\n          });\n        }\n      }\n\n      mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n    } // resolve any segment URIs to prevent us from having to do it later\n\n\n    mergedPlaylist.segments.forEach(function (segment) {\n      resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n    }); // TODO Right now in the playlists array there are two references to each playlist, one\n    // that is referenced by index, and one by URI. The index reference may no longer be\n    // necessary.\n\n    for (var _i = 0; _i < result.playlists.length; _i++) {\n      if (result.playlists[_i].id === newMedia.id) {\n        result.playlists[_i] = mergedPlaylist;\n      }\n    }\n\n    result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n    result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (!properties.playlists) {\n        return;\n      }\n\n      for (var _i2 = 0; _i2 < properties.playlists.length; _i2++) {\n        if (newMedia.id === properties.playlists[_i2].id) {\n          properties.playlists[_i2] = mergedPlaylist;\n        }\n      }\n    });\n    return result;\n  };\n  /**\n   * Calculates the time to wait before refreshing a live playlist\n   *\n   * @param {Object} media\n   *        The current media\n   * @param {boolean} update\n   *        True if there were any updates from the last refresh, false otherwise\n   * @return {number}\n   *         The time in ms to wait before refreshing the live playlist\n   */\n\n\n  var refreshDelay = function refreshDelay(media, update) {\n    var segments = media.segments || [];\n    var lastSegment = segments[segments.length - 1];\n    var lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n    var lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n\n    if (update && lastDuration) {\n      return lastDuration * 1000;\n    } // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n\n\n    return (media.partTargetDuration || media.targetDuration || 10) * 500;\n  };\n  /**\n   * Load a playlist from a remote location\n   *\n   * @class PlaylistLoader\n   * @extends Stream\n   * @param {string|Object} src url or object of manifest\n   * @param {boolean} withCredentials the withCredentials xhr option\n   * @class\n   */\n\n\n  var PlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(PlaylistLoader, _EventTarget);\n\n    function PlaylistLoader(src, vhs, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n\n      if (!src) {\n        throw new Error('A non-empty playlist URL or object is required');\n      }\n\n      _this.logger_ = logger('PlaylistLoader');\n      var _options = options,\n          _options$withCredenti = _options.withCredentials,\n          withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n          _options$handleManife = _options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n      _this.src = src;\n      _this.vhs_ = vhs;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n      var vhsOptions = vhs.options_;\n      _this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n      _this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n      _this.experimentalLLHLS = vhsOptions && vhsOptions.experimentalLLHLS || false; // force experimentalLLHLS for IE 11\n\n      if (videojs.browser.IE_VERSION) {\n        _this.experimentalLLHLS = false;\n      } // initialize the loader state\n\n\n      _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n      _this.handleMediaupdatetimeout_ = _this.handleMediaupdatetimeout_.bind(assertThisInitialized(_this));\n\n      _this.on('mediaupdatetimeout', _this.handleMediaupdatetimeout_);\n\n      return _this;\n    }\n\n    var _proto = PlaylistLoader.prototype;\n\n    _proto.handleMediaupdatetimeout_ = function handleMediaupdatetimeout_() {\n      var _this2 = this;\n\n      if (this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      var media = this.media();\n      var uri = resolveUrl(this.master.uri, media.uri);\n\n      if (this.experimentalLLHLS) {\n        uri = addLLHLSQueryDirectives(uri, media);\n      }\n\n      this.state = 'HAVE_CURRENT_METADATA';\n      this.request = this.vhs_.xhr({\n        uri: uri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        if (error) {\n          return _this2.playlistRequestError(_this2.request, _this2.media(), 'HAVE_METADATA');\n        }\n\n        _this2.haveMetadata({\n          playlistString: _this2.request.responseText,\n          url: _this2.media().uri,\n          id: _this2.media().id\n        });\n      });\n    };\n\n    _proto.playlistRequestError = function playlistRequestError(xhr, playlist, startingState) {\n      var uri = playlist.uri,\n          id = playlist.id; // any in-flight request is now finished\n\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[id],\n        status: xhr.status,\n        message: \"HLS playlist request error at URL: \" + uri + \".\",\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    };\n\n    _proto.parseManifest_ = function parseManifest_(_ref) {\n      var _this3 = this;\n\n      var url = _ref.url,\n          manifestString = _ref.manifestString;\n      return parseManifest({\n        onwarn: function onwarn(_ref2) {\n          var message = _ref2.message;\n          return _this3.logger_(\"m3u8-parser warn for \" + url + \": \" + message);\n        },\n        oninfo: function oninfo(_ref3) {\n          var message = _ref3.message;\n          return _this3.logger_(\"m3u8-parser info for \" + url + \": \" + message);\n        },\n        manifestString: manifestString,\n        customTagParsers: this.customTagParsers,\n        customTagMappers: this.customTagMappers,\n        experimentalLLHLS: this.experimentalLLHLS\n      });\n    }\n    /**\n     * Update the playlist loader's state in response to a new or updated playlist.\n     *\n     * @param {string} [playlistString]\n     *        Playlist string (if playlistObject is not provided)\n     * @param {Object} [playlistObject]\n     *        Playlist object (if playlistString is not provided)\n     * @param {string} url\n     *        URL of playlist\n     * @param {string} id\n     *        ID to use for playlist\n     */\n    ;\n\n    _proto.haveMetadata = function haveMetadata(_ref4) {\n      var playlistString = _ref4.playlistString,\n          playlistObject = _ref4.playlistObject,\n          url = _ref4.url,\n          id = _ref4.id; // any in-flight request is now finished\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var playlist = playlistObject || this.parseManifest_({\n        url: url,\n        manifestString: playlistString\n      });\n      playlist.lastRequest = Date.now();\n      setupMediaPlaylist({\n        playlist: playlist,\n        uri: url,\n        id: id\n      }); // merge this playlist into the master\n\n      var update = updateMaster$1(this.master, playlist);\n      this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n      this.pendingMedia_ = null;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[id];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n      this.trigger('loadedplaylist');\n    }\n    /**\n      * Abort any outstanding work and clean up.\n      */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      window.clearTimeout(this.finalRenditionTimeout);\n      this.off();\n    };\n\n    _proto.stopRequest = function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n      * When called without any arguments, returns the currently\n      * active media playlist. When called with a single argument,\n      * triggers the playlist loader to asynchronously switch to the\n      * specified media playlist. Calling this method while the\n      * loader is in the HAVE_NOTHING causes an error to be emitted\n      * but otherwise has no effect.\n      *\n      * @param {Object=} playlist the parsed media playlist\n      * object to switch to\n      * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n      *\n      * @return {Playlist} the current loaded media\n      */\n    ;\n\n    _proto.media = function media(playlist, shouldDelay) {\n      var _this4 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window.clearTimeout(this.finalRenditionTimeout);\n\n      if (shouldDelay) {\n        var delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id;\n      var masterPlaylistRef = this.master.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n      if (masterPlaylistRef && masterPlaylistRef.endList || // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n      // media playlist or, for the case of demuxed audio, a resolved audio media group)\n      playlist.endList && playlist.segments.length) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n\n          if (startingState === 'HAVE_MASTER') {\n            // The initial playlist was a master manifest, and the first media selected was\n            // also provided (in the form of a resolved playlist object) as part of the\n            // source object (rather than just a URL). Therefore, since the media playlist\n            // doesn't need to be requested, loadedmetadata won't trigger as part of the\n            // normal flow, and needs an explicit trigger here.\n            this.trigger('loadedmetadata');\n          } else {\n            this.trigger('mediachange');\n          }\n        }\n\n        return;\n      } // We update/set the timeout here so that live playlists\n      // that are not a media change will \"start\" the loader as expected.\n      // We expect that this function will start the media update timeout\n      // cycle again. This also prevents a playlist switch failure from\n      // causing us to stall during live.\n\n\n      this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.pendingMedia_ = playlist;\n      this.request = this.vhs_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        playlist.lastRequest = Date.now();\n        playlist.resolvedUri = resolveManifestRedirect(_this4.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this4.playlistRequestError(_this4.request, playlist, startingState);\n        }\n\n        _this4.haveMetadata({\n          playlistString: req.responseText,\n          url: playlist.uri,\n          id: playlist.id\n        }); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this4.trigger('loadedmetadata');\n        } else {\n          _this4.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n    ;\n\n    _proto.pause = function pause() {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n\n      this.stopRequest();\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n    ;\n\n    _proto.load = function load(shouldDelay) {\n      var _this5 = this;\n\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n\n      var media = this.media();\n\n      if (shouldDelay) {\n        var delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(function () {\n          _this5.mediaUpdateTimeout = null;\n\n          _this5.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    };\n\n    _proto.updateMediaUpdateTimeout_ = function updateMediaUpdateTimeout_(delay) {\n      var _this6 = this;\n\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      } // we only have use mediaupdatetimeout for live playlists.\n\n\n      if (!this.media() || this.media().endList) {\n        return;\n      }\n\n      this.mediaUpdateTimeout = window.setTimeout(function () {\n        _this6.mediaUpdateTimeout = null;\n\n        _this6.trigger('mediaupdatetimeout');\n\n        _this6.updateMediaUpdateTimeout_(delay);\n      }, delay);\n    }\n    /**\n     * start loading of the playlist\n     */\n    ;\n\n    _proto.start = function start() {\n      var _this7 = this;\n\n      this.started = true;\n\n      if (typeof this.src === 'object') {\n        // in the case of an entirely constructed manifest object (meaning there's no actual\n        // manifest on a server), default the uri to the page's href\n        if (!this.src.uri) {\n          this.src.uri = window.location.href;\n        } // resolvedUri is added on internally after the initial request. Since there's no\n        // request for pre-resolved manifests, add on resolvedUri here.\n\n\n        this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n        // request can be skipped (since the top level of the manifest, at a minimum, is\n        // already available as a parsed manifest object). However, if the manifest object\n        // represents a master playlist, some media playlists may need to be resolved before\n        // the starting segment list is available. Therefore, go directly to setup of the\n        // initial playlist, and let the normal flow continue from there.\n        //\n        // Note that the call to setup is asynchronous, as other sections of VHS may assume\n        // that the first request is asynchronous.\n\n        setTimeout(function () {\n          _this7.setupInitialPlaylist(_this7.src);\n        }, 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.vhs_.xhr({\n        uri: this.src,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this7.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this7.request = null;\n\n        if (error) {\n          _this7.error = {\n            status: req.status,\n            message: \"HLS playlist request error at URL: \" + _this7.src + \".\",\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this7.state === 'HAVE_NOTHING') {\n            _this7.started = false;\n          }\n\n          return _this7.trigger('error');\n        }\n\n        _this7.src = resolveManifestRedirect(_this7.handleManifestRedirects, _this7.src, req);\n\n        var manifest = _this7.parseManifest_({\n          manifestString: req.responseText,\n          url: _this7.src\n        });\n\n        _this7.setupInitialPlaylist(manifest);\n      });\n    };\n\n    _proto.srcUri = function srcUri() {\n      return typeof this.src === 'string' ? this.src : this.src.uri;\n    }\n    /**\n     * Given a manifest object that's either a master or media playlist, trigger the proper\n     * events and set the state of the playlist loader.\n     *\n     * If the manifest object represents a master playlist, `loadedplaylist` will be\n     * triggered to allow listeners to select a playlist. If none is selected, the loader\n     * will default to the first one in the playlists array.\n     *\n     * If the manifest object represents a media playlist, `loadedplaylist` will be\n     * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n     *\n     * In the case of a media playlist, a master playlist object wrapper with one playlist\n     * will be created so that all logic can handle playlists in the same fashion (as an\n     * assumed manifest object schema).\n     *\n     * @param {Object} manifest\n     *        The parsed manifest object\n     */\n    ;\n\n    _proto.setupInitialPlaylist = function setupInitialPlaylist(manifest) {\n      this.state = 'HAVE_MASTER';\n\n      if (manifest.playlists) {\n        this.master = manifest;\n        addPropertiesToMaster(this.master, this.srcUri()); // If the initial master playlist has playlists wtih segments already resolved,\n        // then resolve URIs in advance, as they are usually done after a playlist request,\n        // which may not happen if the playlist is resolved.\n\n        manifest.playlists.forEach(function (playlist) {\n          playlist.segments = getAllSegments(playlist);\n          playlist.segments.forEach(function (segment) {\n            resolveSegmentUris(segment, playlist.resolvedUri);\n          });\n        });\n        this.trigger('loadedplaylist');\n\n        if (!this.request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          this.media(this.master.playlists[0]);\n        }\n\n        return;\n      } // In order to support media playlists passed in as vhs-json, the case where the uri\n      // is not provided as part of the manifest should be considered, and an appropriate\n      // default used.\n\n\n      var uri = this.srcUri() || window.location.href;\n      this.master = masterForMedia(manifest, uri);\n      this.haveMetadata({\n        playlistObject: manifest,\n        url: uri,\n        id: this.master.playlists[0].id\n      });\n      this.trigger('loadedmetadata');\n    };\n\n    return PlaylistLoader;\n  }(EventTarget$1);\n  /**\n   * @file xhr.js\n   */\n\n\n  var videojsXHR = videojs.xhr,\n      mergeOptions$1 = videojs.mergeOptions;\n\n  var callbackWrapper = function callbackWrapper(request, error, response, callback) {\n    var reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n\n    if (!error && reqResponse) {\n      request.responseTime = Date.now();\n      request.roundTripTime = request.responseTime - request.requestTime;\n      request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n      if (!request.bandwidth) {\n        request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n      }\n    }\n\n    if (response.headers) {\n      request.responseHeaders = response.headers;\n    } // videojs.xhr now uses a specific code on the error\n    // object to signal that a request has timed out instead\n    // of setting a boolean on the request object\n\n\n    if (error && error.code === 'ETIMEDOUT') {\n      request.timedout = true;\n    } // videojs.xhr no longer considers status codes outside of 200 and 0\n    // (for file uris) to be errors, but the old XHR did, so emulate that\n    // behavior. Status 206 may be used in response to byterange requests.\n\n\n    if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n      error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n    }\n\n    callback(error, request);\n  };\n\n  var xhrFactory = function xhrFactory() {\n    var xhr = function XhrFunction(options, callback) {\n      // Add a default timeout\n      options = mergeOptions$1({\n        timeout: 45e3\n      }, options); // Allow an optional user-specified function to modify the option\n      // object before we construct the xhr request\n\n      var beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n\n      if (beforeRequest && typeof beforeRequest === 'function') {\n        var newOptions = beforeRequest(options);\n\n        if (newOptions) {\n          options = newOptions;\n        }\n      } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n      // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n\n      var xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n      var request = xhrMethod(options, function (error, response) {\n        return callbackWrapper(request, error, response, callback);\n      });\n      var originalAbort = request.abort;\n\n      request.abort = function () {\n        request.aborted = true;\n        return originalAbort.apply(request, arguments);\n      };\n\n      request.uri = options.uri;\n      request.requestTime = Date.now();\n      return request;\n    };\n\n    xhr.original = true;\n    return xhr;\n  };\n  /**\n   * Turns segment byterange into a string suitable for use in\n   * HTTP Range requests\n   *\n   * @param {Object} byterange - an object with two values defining the start and end\n   *                             of a byte-range\n   */\n\n\n  var byterangeStr = function byterangeStr(byterange) {\n    // `byterangeEnd` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    var byterangeEnd;\n    var byterangeStart = byterange.offset;\n\n    if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n      byterangeEnd = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n    } else {\n      byterangeEnd = byterange.offset + byterange.length - 1;\n    }\n\n    return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n  };\n  /**\n   * Defines headers for use in the xhr request for a particular segment.\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   */\n\n\n  var segmentXhrHeaders = function segmentXhrHeaders(segment) {\n    var headers = {};\n\n    if (segment.byterange) {\n      headers.Range = byterangeStr(segment.byterange);\n    }\n\n    return headers;\n  };\n  /**\n   * @file bin-utils.js\n   */\n\n  /**\n   * convert a TimeRange to text\n   *\n   * @param {TimeRange} range the timerange to use for conversion\n   * @param {number} i the iterator on the range to convert\n   * @return {string} the range in string format\n   */\n\n\n  var textRange = function textRange(range, i) {\n    return range.start(i) + '-' + range.end(i);\n  };\n  /**\n   * format a number as hex string\n   *\n   * @param {number} e The number\n   * @param {number} i the iterator\n   * @return {string} the hex formatted number as a string\n   */\n\n\n  var formatHexString = function formatHexString(e, i) {\n    var value = e.toString(16);\n    return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n  };\n\n  var formatAsciiString = function formatAsciiString(e) {\n    if (e >= 0x20 && e < 0x7e) {\n      return String.fromCharCode(e);\n    }\n\n    return '.';\n  };\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n\n  var createTransferableMessage = function createTransferableMessage(message) {\n    var transferable = {};\n    Object.keys(message).forEach(function (key) {\n      var value = message[key];\n\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /**\n   * Returns a unique string identifier for a media initialization\n   * segment.\n   *\n   * @param {Object} initSegment\n   *        the init segment object.\n   *\n   * @return {string} the generated init segment id\n   */\n\n\n  var initSegmentId = function initSegmentId(initSegment) {\n    var byterange = initSegment.byterange || {\n      length: Infinity,\n      offset: 0\n    };\n    return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n  };\n  /**\n   * Returns a unique string identifier for a media segment key.\n   *\n   * @param {Object} key the encryption key\n   * @return {string} the unique id for the media segment key.\n   */\n\n\n  var segmentKeyId = function segmentKeyId(key) {\n    return key.resolvedUri;\n  };\n  /**\n   * utils to help dump binary data to the console\n   *\n   * @param {Array|TypedArray} data\n   *        data to dump to a string\n   *\n   * @return {string} the data as a hex string.\n   */\n\n\n  var hexDump = function hexDump(data) {\n    var bytes = Array.prototype.slice.call(data);\n    var step = 16;\n    var result = '';\n    var hex;\n    var ascii;\n\n    for (var j = 0; j < bytes.length / step; j++) {\n      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n      result += hex + ' ' + ascii + '\\n';\n    }\n\n    return result;\n  };\n\n  var tagDump = function tagDump(_ref) {\n    var bytes = _ref.bytes;\n    return hexDump(bytes);\n  };\n\n  var textRanges = function textRanges(ranges) {\n    var result = '';\n    var i;\n\n    for (i = 0; i < ranges.length; i++) {\n      result += textRange(ranges, i) + ' ';\n    }\n\n    return result;\n  };\n\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createTransferableMessage: createTransferableMessage,\n    initSegmentId: initSegmentId,\n    segmentKeyId: segmentKeyId,\n    hexDump: hexDump,\n    tagDump: tagDump,\n    textRanges: textRanges\n  }); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n  // 25% was arbitrarily chosen, and may need to be refined over time.\n\n  var SEGMENT_END_FUDGE_PERCENT = 0.25;\n  /**\n   * Converts a player time (any time that can be gotten/set from player.currentTime(),\n   * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n   * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n   *\n   * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n   * point\" (a point where we have a mapping from program time to player time, with player\n   * time being the post transmux start of the segment).\n   *\n   * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n   *\n   * @param {number} playerTime the player time\n   * @param {Object} segment the segment which contains the player time\n   * @return {Date} program time\n   */\n\n  var playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n    if (!segment.dateTimeObject) {\n      // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n      // be used to map the start of a segment with a real world time).\n      return null;\n    }\n\n    var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n    var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n    var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n    var offsetFromSegmentStart = playerTime - startOfSegment;\n    return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n  };\n\n  var originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n    return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n  };\n  /**\n   * Finds a segment that contains the time requested given as an ISO-8601 string. The\n   * returned segment might be an estimate or an accurate match.\n   *\n   * @param {string} programTime The ISO-8601 programTime to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n    // Assumptions:\n    //  - verifyProgramDateTimeTags has already been run\n    //  - live streams have been started\n    var dateTimeObject;\n\n    try {\n      dateTimeObject = new Date(programTime);\n    } catch (e) {\n      return null;\n    }\n\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segment = playlist.segments[0];\n\n    if (dateTimeObject < segment.dateTimeObject) {\n      // Requested time is before stream start.\n      return null;\n    }\n\n    for (var i = 0; i < playlist.segments.length - 1; i++) {\n      segment = playlist.segments[i];\n      var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n      if (dateTimeObject < nextSegmentStart) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n    var lastSegmentStart = lastSegment.dateTimeObject;\n    var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n    var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n    if (dateTimeObject > lastSegmentEnd) {\n      // Beyond the end of the stream, or our best guess of the end of the stream.\n      return null;\n    }\n\n    if (dateTimeObject > lastSegmentStart) {\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n      // Although, given that all segments have accurate date time objects, the segment\n      // selected should be accurate, unless the video has been transmuxed at some point\n      // (determined by the presence of the videoTimingInfo object), the segment's \"player\n      // time\" (the start time in the player) can't be considered accurate.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Finds a segment that contains the given player time(in seconds).\n   *\n   * @param {number} time The player time to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n    // Assumptions:\n    // - there will always be a segment.duration\n    // - we can start from zero\n    // - segments are in time order\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segmentEnd = 0;\n    var segment;\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n      // should contain the most accurate values we have for the segment's player times.\n      //\n      // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n      // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n      // calculate an end value.\n\n      segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n      if (time <= segmentEnd) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n    if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n      // The time requested is beyond the stream end.\n      return null;\n    }\n\n    if (time > segmentEnd) {\n      // The time is within or beyond the last segment.\n      //\n      // Check to see if the time is beyond a reasonable guess of the end of the stream.\n      if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n        // Technically, because the duration value is only an estimate, the time may still\n        // exist in the last segment, however, there isn't enough information to make even\n        // a reasonable estimate.\n        return null;\n      }\n\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n      // Because videoTimingInfo is only set after transmux, it is the only way to get\n      // accurate timing values.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n   * If the offset returned is positive, the programTime occurs after the\n   * comparisonTimestamp.\n   * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n   *\n   * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n   * @param {string} programTime The programTime as an ISO-8601 string\n   * @return {number} offset\n   */\n\n\n  var getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n    var segmentDateTime;\n    var programDateTime;\n\n    try {\n      segmentDateTime = new Date(comparisonTimeStamp);\n      programDateTime = new Date(programTime);\n    } catch (e) {// TODO handle error\n    }\n\n    var segmentTimeEpoch = segmentDateTime.getTime();\n    var programTimeEpoch = programDateTime.getTime();\n    return (programTimeEpoch - segmentTimeEpoch) / 1000;\n  };\n  /**\n   * Checks that all segments in this playlist have programDateTime tags.\n   *\n   * @param {Object} playlist A playlist object\n   */\n\n\n  var verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n    if (!playlist.segments || playlist.segments.length === 0) {\n      return false;\n    }\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      var segment = playlist.segments[i];\n\n      if (!segment.dateTimeObject) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Returns the programTime of the media given a playlist and a playerTime.\n   * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n   * If the segments containing the time requested have not been buffered yet, an estimate\n   * may be returned to the callback.\n   *\n   * @param {Object} args\n   * @param {Object} args.playlist A playlist object to search within\n   * @param {number} time A playerTime in seconds\n   * @param {Function} callback(err, programTime)\n   * @return {string} err.message A detailed error message\n   * @return {Object} programTime\n   * @return {number} programTime.mediaSeconds The streamTime in seconds\n   * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n   */\n\n\n  var getProgramTime = function getProgramTime(_ref) {\n    var playlist = _ref.playlist,\n        _ref$time = _ref.time,\n        time = _ref$time === void 0 ? undefined : _ref$time,\n        callback = _ref.callback;\n\n    if (!callback) {\n      throw new Error('getProgramTime: callback must be provided');\n    }\n\n    if (!playlist || time === undefined) {\n      return callback({\n        message: 'getProgramTime: playlist and time must be provided'\n      });\n    }\n\n    var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n    if (!matchedSegment) {\n      return callback({\n        message: 'valid programTime was not found'\n      });\n    }\n\n    if (matchedSegment.type === 'estimate') {\n      return callback({\n        message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n        seekTime: matchedSegment.estimatedStart\n      });\n    }\n\n    var programTimeObject = {\n      mediaSeconds: time\n    };\n    var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n    if (programTime) {\n      programTimeObject.programDateTime = programTime.toISOString();\n    }\n\n    return callback(null, programTimeObject);\n  };\n  /**\n   * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n   *\n   * @param {Object} args\n   * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n   * @param {Object} args.playlist A playlist to look within\n   * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n   * @param {Function} args.seekTo A method to perform a seek\n   * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n   * @param {Object} args.tech The tech to seek on\n   * @param {Function} args.callback(err, newTime) A callback to return the new time to\n   * @return {string} err.message A detailed error message\n   * @return {number} newTime The exact time that was seeked to in seconds\n   */\n\n\n  var seekToProgramTime = function seekToProgramTime(_ref2) {\n    var programTime = _ref2.programTime,\n        playlist = _ref2.playlist,\n        _ref2$retryCount = _ref2.retryCount,\n        retryCount = _ref2$retryCount === void 0 ? 2 : _ref2$retryCount,\n        seekTo = _ref2.seekTo,\n        _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n        pauseAfterSeek = _ref2$pauseAfterSeek === void 0 ? true : _ref2$pauseAfterSeek,\n        tech = _ref2.tech,\n        callback = _ref2.callback;\n\n    if (!callback) {\n      throw new Error('seekToProgramTime: callback must be provided');\n    }\n\n    if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n      return callback({\n        message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n      });\n    }\n\n    if (!playlist.endList && !tech.hasStarted_) {\n      return callback({\n        message: 'player must be playing a live stream to start buffering'\n      });\n    }\n\n    if (!verifyProgramDateTimeTags(playlist)) {\n      return callback({\n        message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n      });\n    }\n\n    var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n    if (!matchedSegment) {\n      return callback({\n        message: programTime + \" was not found in the stream\"\n      });\n    }\n\n    var segment = matchedSegment.segment;\n    var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n    if (matchedSegment.type === 'estimate') {\n      // we've run out of retries\n      if (retryCount === 0) {\n        return callback({\n          message: programTime + \" is not buffered yet. Try again\"\n        });\n      }\n\n      seekTo(matchedSegment.estimatedStart + mediaOffset);\n      tech.one('seeked', function () {\n        seekToProgramTime({\n          programTime: programTime,\n          playlist: playlist,\n          retryCount: retryCount - 1,\n          seekTo: seekTo,\n          pauseAfterSeek: pauseAfterSeek,\n          tech: tech,\n          callback: callback\n        });\n      });\n      return;\n    } // Since the segment.start value is determined from the buffered end or ending time\n    // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n    // modifications.\n\n\n    var seekToTime = segment.start + mediaOffset;\n\n    var seekedCallback = function seekedCallback() {\n      return callback(null, tech.currentTime());\n    }; // listen for seeked event\n\n\n    tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n    if (pauseAfterSeek) {\n      tech.pause();\n    }\n\n    seekTo(seekToTime);\n  }; // which will only happen if the request is complete.\n\n\n  var callbackOnCompleted = function callbackOnCompleted(request, cb) {\n    if (request.readyState === 4) {\n      return cb();\n    }\n\n    return;\n  };\n\n  var containerRequest = function containerRequest(uri, xhr, cb) {\n    var bytes = [];\n    var id3Offset;\n    var finished = false;\n\n    var endRequestAndCallback = function endRequestAndCallback(err, req, type, _bytes) {\n      req.abort();\n      finished = true;\n      return cb(err, req, type, _bytes);\n    };\n\n    var progressListener = function progressListener(error, request) {\n      if (finished) {\n        return;\n      }\n\n      if (error) {\n        return endRequestAndCallback(error, request, '', bytes);\n      } // grap the new part of content that was just downloaded\n\n\n      var newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n      bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n      id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n      // or we need at least two bytes after an id3Offset\n\n      if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      }\n\n      var type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n      // to see the second sync byte, wait until we have enough data\n      // before declaring it ts\n\n      if (type === 'ts' && bytes.length < 188) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      } // this may be an unsynced ts segment\n      // wait for 376 bytes before detecting no container\n\n\n      if (!type && bytes.length < 376) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      }\n\n      return endRequestAndCallback(null, request, type, bytes);\n    };\n\n    var options = {\n      uri: uri,\n      beforeSend: function beforeSend(request) {\n        // this forces the browser to pass the bytes to us unprocessed\n        request.overrideMimeType('text/plain; charset=x-user-defined');\n        request.addEventListener('progress', function (_ref) {\n          _ref.total;\n          _ref.loaded;\n          return callbackWrapper(request, null, {\n            statusCode: request.status\n          }, progressListener);\n        });\n      }\n    };\n    var request = xhr(options, function (error, response) {\n      return callbackWrapper(request, error, response, progressListener);\n    });\n    return request;\n  };\n\n  var EventTarget = videojs.EventTarget,\n      mergeOptions = videojs.mergeOptions;\n\n  var dashPlaylistUnchanged = function dashPlaylistUnchanged(a, b) {\n    if (!isPlaylistUnchanged(a, b)) {\n      return false;\n    } // for dash the above check will often return true in scenarios where\n    // the playlist actually has changed because mediaSequence isn't a\n    // dash thing, and we often set it to 1. So if the playlists have the same amount\n    // of segments we return true.\n    // So for dash we need to make sure that the underlying segments are different.\n    // if sidx changed then the playlists are different.\n\n\n    if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n      return false;\n    } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n      return false;\n    } // one or the other does not have segments\n    // there was a change.\n\n\n    if (a.segments && !b.segments || !a.segments && b.segments) {\n      return false;\n    } // neither has segments nothing changed\n\n\n    if (!a.segments && !b.segments) {\n      return true;\n    } // check segments themselves\n\n\n    for (var i = 0; i < a.segments.length; i++) {\n      var aSegment = a.segments[i];\n      var bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n      if (aSegment.uri !== bSegment.uri) {\n        return false;\n      } // neither segment has a byterange, there will be no byterange change.\n\n\n      if (!aSegment.byterange && !bSegment.byterange) {\n        continue;\n      }\n\n      var aByterange = aSegment.byterange;\n      var bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n      if (aByterange && !bByterange || !aByterange && bByterange) {\n        return false;\n      } // if both segments have byterange with different offsets, there was a change.\n\n\n      if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n        return false;\n      }\n    } // if everything was the same with segments, this is the same playlist.\n\n\n    return true;\n  };\n  /**\n   * Parses the master XML string and updates playlist URI references.\n   *\n   * @param {Object} config\n   *        Object of arguments\n   * @param {string} config.masterXml\n   *        The mpd XML\n   * @param {string} config.srcUrl\n   *        The mpd URL\n   * @param {Date} config.clientOffset\n   *         A time difference between server and client\n   * @param {Object} config.sidxMapping\n   *        SIDX mappings for moof/mdat URIs and byte ranges\n   * @return {Object}\n   *         The parsed mpd manifest object\n   */\n\n\n  var parseMasterXml = function parseMasterXml(_ref) {\n    var masterXml = _ref.masterXml,\n        srcUrl = _ref.srcUrl,\n        clientOffset = _ref.clientOffset,\n        sidxMapping = _ref.sidxMapping,\n        previousManifest = _ref.previousManifest;\n    var manifest = parse(masterXml, {\n      manifestUri: srcUrl,\n      clientOffset: clientOffset,\n      sidxMapping: sidxMapping,\n      previousManifest: previousManifest\n    });\n    addPropertiesToMaster(manifest, srcUrl);\n    return manifest;\n  };\n  /**\n   * Returns a new master manifest that is the result of merging an updated master manifest\n   * into the original version.\n   *\n   * @param {Object} oldMaster\n   *        The old parsed mpd object\n   * @param {Object} newMaster\n   *        The updated parsed mpd object\n   * @return {Object}\n   *         A new object representing the original master manifest with the updated media\n   *         playlists merged in\n   */\n\n\n  var updateMaster = function updateMaster(oldMaster, newMaster, sidxMapping) {\n    var noChanges = true;\n    var update = mergeOptions(oldMaster, {\n      // These are top level properties that can be updated\n      duration: newMaster.duration,\n      minimumUpdatePeriod: newMaster.minimumUpdatePeriod,\n      timelineStarts: newMaster.timelineStarts\n    }); // First update the playlists in playlist list\n\n    for (var i = 0; i < newMaster.playlists.length; i++) {\n      var playlist = newMaster.playlists[i];\n\n      if (playlist.sidx) {\n        var sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n        if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n          addSidxSegmentsToPlaylist$1(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n        }\n      }\n\n      var playlistUpdate = updateMaster$1(update, playlist, dashPlaylistUnchanged);\n\n      if (playlistUpdate) {\n        update = playlistUpdate;\n        noChanges = false;\n      }\n    } // Then update media group playlists\n\n\n    forEachMediaGroup(newMaster, function (properties, type, group, label) {\n      if (properties.playlists && properties.playlists.length) {\n        var id = properties.playlists[0].id;\n\n        var _playlistUpdate = updateMaster$1(update, properties.playlists[0], dashPlaylistUnchanged);\n\n        if (_playlistUpdate) {\n          update = _playlistUpdate; // update the playlist reference within media groups\n\n          update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n          noChanges = false;\n        }\n      }\n    });\n\n    if (newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n      noChanges = false;\n    }\n\n    if (noChanges) {\n      return null;\n    }\n\n    return update;\n  }; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n  // If the SIDXs have maps, the two maps should match,\n  // both `a` and `b` missing SIDXs is considered matching.\n  // If `a` or `b` but not both have a map, they aren't matching.\n\n\n  var equivalentSidx = function equivalentSidx(a, b) {\n    var neitherMap = Boolean(!a.map && !b.map);\n    var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n    return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n  }; // exported for testing\n\n\n  var compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n    var newSidxMapping = {};\n\n    for (var id in playlists) {\n      var playlist = playlists[id];\n      var currentSidxInfo = playlist.sidx;\n\n      if (currentSidxInfo) {\n        var key = generateSidxKey(currentSidxInfo);\n\n        if (!oldSidxMapping[key]) {\n          break;\n        }\n\n        var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n        if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n          newSidxMapping[key] = oldSidxMapping[key];\n        }\n      }\n    }\n\n    return newSidxMapping;\n  };\n  /**\n   *  A function that filters out changed items as they need to be requested separately.\n   *\n   *  The method is exported for testing\n   *\n   *  @param {Object} master the parsed mpd XML returned via mpd-parser\n   *  @param {Object} oldSidxMapping the SIDX to compare against\n   */\n\n\n  var filterChangedSidxMappings = function filterChangedSidxMappings(master, oldSidxMapping) {\n    var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n    var mediaGroupSidx = videoSidx;\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (properties.playlists && properties.playlists.length) {\n        var playlists = properties.playlists;\n        mediaGroupSidx = mergeOptions(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n      }\n    });\n    return mediaGroupSidx;\n  };\n\n  var DashPlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n    // playlist loader setups from media groups will expect to be able to pass a playlist\n    // (since there aren't external URLs to media playlists with DASH)\n\n\n    function DashPlaylistLoader(srcUrlOrPlaylist, vhs, options, masterPlaylistLoader) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      _this.masterPlaylistLoader_ = masterPlaylistLoader || assertThisInitialized(_this);\n\n      if (!masterPlaylistLoader) {\n        _this.isMaster_ = true;\n      }\n\n      var _options = options,\n          _options$withCredenti = _options.withCredentials,\n          withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n          _options$handleManife = _options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n      _this.vhs_ = vhs;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n\n      if (!srcUrlOrPlaylist) {\n        throw new Error('A non-empty playlist URL or object is required');\n      } // event naming?\n\n\n      _this.on('minimumUpdatePeriod', function () {\n        _this.refreshXml_();\n      }); // live playlist staleness timeout\n\n\n      _this.on('mediaupdatetimeout', function () {\n        _this.refreshMedia_(_this.media().id);\n      });\n\n      _this.state = 'HAVE_NOTHING';\n      _this.loadedPlaylists_ = {};\n      _this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n      // The masterPlaylistLoader will be created with a string\n\n      if (_this.isMaster_) {\n        _this.masterPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n        // once multi-period is refactored\n\n        _this.masterPlaylistLoader_.sidxMapping_ = {};\n      } else {\n        _this.childPlaylist_ = srcUrlOrPlaylist;\n      }\n\n      return _this;\n    }\n\n    var _proto = DashPlaylistLoader.prototype;\n\n    _proto.requestErrored_ = function requestErrored_(err, request, startingState) {\n      // disposed\n      if (!this.request) {\n        return true;\n      } // pending request is cleared\n\n\n      this.request = null;\n\n      if (err) {\n        // use the provided error object or create one\n        // based on the request/response\n        this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n          status: request.status,\n          message: 'DASH request error at URL: ' + request.uri,\n          response: request.response,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (startingState) {\n          this.state = startingState;\n        }\n\n        this.trigger('error');\n        return true;\n      }\n    }\n    /**\n     * Verify that the container of the sidx segment can be parsed\n     * and if it can, get and parse that segment.\n     */\n    ;\n\n    _proto.addSidxSegments_ = function addSidxSegments_(playlist, startingState, cb) {\n      var _this2 = this;\n\n      var sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n      if (!playlist.sidx || !sidxKey || this.masterPlaylistLoader_.sidxMapping_[sidxKey]) {\n        // keep this function async\n        this.mediaRequest_ = window.setTimeout(function () {\n          return cb(false);\n        }, 0);\n        return;\n      } // resolve the segment URL relative to the playlist\n\n\n      var uri = resolveManifestRedirect(this.handleManifestRedirects, playlist.sidx.resolvedUri);\n\n      var fin = function fin(err, request) {\n        if (_this2.requestErrored_(err, request, startingState)) {\n          return;\n        }\n\n        var sidxMapping = _this2.masterPlaylistLoader_.sidxMapping_;\n        var sidx;\n\n        try {\n          sidx = parseSidx_1(toUint8(request.response).subarray(8));\n        } catch (e) {\n          // sidx parsing failed.\n          _this2.requestErrored_(e, request, startingState);\n\n          return;\n        }\n\n        sidxMapping[sidxKey] = {\n          sidxInfo: playlist.sidx,\n          sidx: sidx\n        };\n        addSidxSegmentsToPlaylist$1(playlist, sidx, playlist.sidx.resolvedUri);\n        return cb(true);\n      };\n\n      this.request = containerRequest(uri, this.vhs_.xhr, function (err, request, container, bytes) {\n        if (err) {\n          return fin(err, request);\n        }\n\n        if (!container || container !== 'mp4') {\n          return fin({\n            status: request.status,\n            message: \"Unsupported \" + (container || 'unknown') + \" container type for sidx segment at URL: \" + uri,\n            // response is just bytes in this case\n            // but we really don't want to return that.\n            response: '',\n            playlist: playlist,\n            internal: true,\n            blacklistDuration: Infinity,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          }, request);\n        } // if we already downloaded the sidx bytes in the container request, use them\n\n\n        var _playlist$sidx$bytera = playlist.sidx.byterange,\n            offset = _playlist$sidx$bytera.offset,\n            length = _playlist$sidx$bytera.length;\n\n        if (bytes.length >= length + offset) {\n          return fin(err, {\n            response: bytes.subarray(offset, offset + length),\n            status: request.status,\n            uri: request.uri\n          });\n        } // otherwise request sidx bytes\n\n\n        _this2.request = _this2.vhs_.xhr({\n          uri: uri,\n          responseType: 'arraybuffer',\n          headers: segmentXhrHeaders({\n            byterange: playlist.sidx.byterange\n          })\n        }, fin);\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window.clearTimeout(this.mediaRequest_);\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      this.mediaRequest_ = null;\n      this.minimumUpdatePeriodTimeout_ = null;\n\n      if (this.masterPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n        this.masterPlaylistLoader_.createMupOnMedia_ = null;\n      }\n\n      this.off();\n    };\n\n    _proto.hasPendingRequest = function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    };\n\n    _proto.stopRequest = function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    };\n\n    _proto.media = function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.masterPlaylistLoader_.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.masterPlaylistLoader_.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.addSidxSegments_(playlist, startingState, function (sidxChanged) {\n        // everything is ready just continue to haveMetadata\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: playlist\n        });\n      });\n    };\n\n    _proto.haveMetadata = function haveMetadata(_ref2) {\n      var startingState = _ref2.startingState,\n          playlist = _ref2.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.id] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    };\n\n    _proto.pause = function pause() {\n      if (this.masterPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n        this.masterPlaylistLoader_.createMupOnMedia_ = null;\n      }\n\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n\n      if (this.isMaster_) {\n        window.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);\n        this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n      }\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    };\n\n    _proto.load = function load(isFinalRendition) {\n      var _this4 = this;\n\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        // Check to see if this is the master loader and the MUP was cleared (this happens\n        // when the loader was paused). `media` should be set at this point since one is always\n        // set during `start()`.\n        if (this.isMaster_ && !this.minimumUpdatePeriodTimeout_) {\n          // Trigger minimumUpdatePeriod to refresh the master manifest\n          this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n          this.updateMinimumUpdatePeriodTimeout_();\n        }\n\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    };\n\n    _proto.start = function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (!this.isMaster_) {\n        this.mediaRequest_ = window.setTimeout(function () {\n          return _this5.haveMaster_();\n        }, 0);\n        return;\n      }\n\n      this.requestMaster_(function (req, masterChanged) {\n        _this5.haveMaster_();\n\n        if (!_this5.hasPendingRequest() && !_this5.media_) {\n          _this5.media(_this5.masterPlaylistLoader_.master.playlists[0]);\n        }\n      });\n    };\n\n    _proto.requestMaster_ = function requestMaster_(cb) {\n      var _this6 = this;\n\n      this.request = this.vhs_.xhr({\n        uri: this.masterPlaylistLoader_.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        if (_this6.requestErrored_(error, req)) {\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return;\n        }\n\n        var masterChanged = req.responseText !== _this6.masterPlaylistLoader_.masterXml_;\n        _this6.masterPlaylistLoader_.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this6.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this6.masterLoaded_ = Date.now();\n        }\n\n        _this6.masterPlaylistLoader_.srcUrl = resolveManifestRedirect(_this6.handleManifestRedirects, _this6.masterPlaylistLoader_.srcUrl, req);\n\n        if (masterChanged) {\n          _this6.handleMaster_();\n\n          _this6.syncClientServerClock_(function () {\n            return cb(req, masterChanged);\n          });\n\n          return;\n        }\n\n        return cb(req, masterChanged);\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n    ;\n\n    _proto.syncClientServerClock_ = function syncClientServerClock_(done) {\n      var _this7 = this;\n\n      var utcTiming = parseUTCTiming(this.masterPlaylistLoader_.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.masterPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.vhs_.xhr({\n        uri: resolveUrl(this.masterPlaylistLoader_.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this7.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this7.masterPlaylistLoader_.clientOffset_ = _this7.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this7.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this7.masterPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    };\n\n    _proto.haveMaster_ = function haveMaster_() {\n      this.state = 'HAVE_MASTER';\n\n      if (this.isMaster_) {\n        // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    };\n\n    _proto.handleMaster_ = function handleMaster_() {\n      // clear media request\n      this.mediaRequest_ = null;\n      var oldMaster = this.masterPlaylistLoader_.master;\n      var newMaster = parseMasterXml({\n        masterXml: this.masterPlaylistLoader_.masterXml_,\n        srcUrl: this.masterPlaylistLoader_.srcUrl,\n        clientOffset: this.masterPlaylistLoader_.clientOffset_,\n        sidxMapping: this.masterPlaylistLoader_.sidxMapping_,\n        previousManifest: oldMaster\n      }); // if we have an old master to compare the new master against\n\n      if (oldMaster) {\n        newMaster = updateMaster(oldMaster, newMaster, this.masterPlaylistLoader_.sidxMapping_);\n      } // only update master if we have a new master\n\n\n      this.masterPlaylistLoader_.master = newMaster ? newMaster : oldMaster;\n      var location = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];\n\n      if (location && location !== this.masterPlaylistLoader_.srcUrl) {\n        this.masterPlaylistLoader_.srcUrl = location;\n      }\n\n      if (!oldMaster || newMaster && newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n\n      return Boolean(newMaster);\n    };\n\n    _proto.updateMinimumUpdatePeriodTimeout_ = function updateMinimumUpdatePeriodTimeout_() {\n      var mpl = this.masterPlaylistLoader_; // cancel any pending creation of mup on media\n      // a new one will be added if needed.\n\n      if (mpl.createMupOnMedia_) {\n        mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n        mpl.createMupOnMedia_ = null;\n      } // clear any pending timeouts\n\n\n      if (mpl.minimumUpdatePeriodTimeout_) {\n        window.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n        mpl.minimumUpdatePeriodTimeout_ = null;\n      }\n\n      var mup = mpl.master && mpl.master.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n      // MPD has no future validity, so a new one will need to be acquired when new\n      // media segments are to be made available. Thus, we use the target duration\n      // in this case\n\n      if (mup === 0) {\n        if (mpl.media()) {\n          mup = mpl.media().targetDuration * 1000;\n        } else {\n          mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n          mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n        }\n      } // if minimumUpdatePeriod is invalid or <= zero, which\n      // can happen when a live video becomes VOD. skip timeout\n      // creation.\n\n\n      if (typeof mup !== 'number' || mup <= 0) {\n        if (mup < 0) {\n          this.logger_(\"found invalid minimumUpdatePeriod of \" + mup + \", not setting a timeout\");\n        }\n\n        return;\n      }\n\n      this.createMUPTimeout_(mup);\n    };\n\n    _proto.createMUPTimeout_ = function createMUPTimeout_(mup) {\n      var mpl = this.masterPlaylistLoader_;\n      mpl.minimumUpdatePeriodTimeout_ = window.setTimeout(function () {\n        mpl.minimumUpdatePeriodTimeout_ = null;\n        mpl.trigger('minimumUpdatePeriod');\n        mpl.createMUPTimeout_(mup);\n      }, mup);\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     */\n    ;\n\n    _proto.refreshXml_ = function refreshXml_() {\n      var _this8 = this;\n\n      this.requestMaster_(function (req, masterChanged) {\n        if (!masterChanged) {\n          return;\n        }\n\n        if (_this8.media_) {\n          _this8.media_ = _this8.masterPlaylistLoader_.master.playlists[_this8.media_.id];\n        } // This will filter out updated sidx info from the mapping\n\n\n        _this8.masterPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(_this8.masterPlaylistLoader_.master, _this8.masterPlaylistLoader_.sidxMapping_);\n\n        _this8.addSidxSegments_(_this8.media(), _this8.state, function (sidxChanged) {\n          // TODO: do we need to reload the current playlist?\n          _this8.refreshMedia_(_this8.media().id);\n        });\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n    ;\n\n    _proto.refreshMedia_ = function refreshMedia_(mediaID) {\n      var _this9 = this;\n\n      if (!mediaID) {\n        throw new Error('refreshMedia_ must take a media id');\n      } // for master we have to reparse the master xml\n      // to re-create segments based on current timing values\n      // which may change media. We only skip updating master\n      // if this is the first time this.media_ is being set.\n      // as master was just parsed in that case.\n\n\n      if (this.media_ && this.isMaster_) {\n        this.handleMaster_();\n      }\n\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n      var mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n\n      if (mediaChanged) {\n        this.media_ = playlists[mediaID];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.mediaUpdateTimeout) {\n        var createMediaUpdateTimeout = function createMediaUpdateTimeout() {\n          if (_this9.media().endList) {\n            return;\n          }\n\n          _this9.mediaUpdateTimeout = window.setTimeout(function () {\n            _this9.trigger('mediaupdatetimeout');\n\n            createMediaUpdateTimeout();\n          }, refreshDelay(_this9.media(), Boolean(mediaChanged)));\n        };\n\n        createMediaUpdateTimeout();\n      }\n\n      this.trigger('loadedplaylist');\n    };\n\n    return DashPlaylistLoader;\n  }(EventTarget);\n\n  var Config = {\n    GOAL_BUFFER_LENGTH: 30,\n    MAX_GOAL_BUFFER_LENGTH: 60,\n    BACK_BUFFER_LENGTH: 30,\n    GOAL_BUFFER_LENGTH_RATE: 1,\n    // 0.5 MB/s\n    INITIAL_BANDWIDTH: 4194304,\n    // A fudge factor to apply to advertised playlist bitrates to account for\n    // temporary flucations in client bandwidth\n    BANDWIDTH_VARIANCE: 1.2,\n    // How much of the buffer must be filled before we consider upswitching\n    BUFFER_LOW_WATER_LINE: 0,\n    MAX_BUFFER_LOW_WATER_LINE: 30,\n    // TODO: Remove this when experimentalBufferBasedABR is removed\n    EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n    BUFFER_LOW_WATER_LINE_RATE: 1,\n    // If the buffer is greater than the high water line, we won't switch down\n    BUFFER_HIGH_WATER_LINE: 30\n  };\n\n  var stringToArrayBuffer = function stringToArrayBuffer(string) {\n    var view = new Uint8Array(new ArrayBuffer(string.length));\n\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n\n    return view.buffer;\n  };\n  /* global Blob, BlobBuilder, Worker */\n  // unify worker interface\n\n\n  var browserWorkerPolyFill = function browserWorkerPolyFill(workerObj) {\n    // node only supports on/off\n    workerObj.on = workerObj.addEventListener;\n    workerObj.off = workerObj.removeEventListener;\n    return workerObj;\n  };\n\n  var createObjectURL = function createObjectURL(str) {\n    try {\n      return URL.createObjectURL(new Blob([str], {\n        type: 'application/javascript'\n      }));\n    } catch (e) {\n      var blob = new BlobBuilder();\n      blob.append(str);\n      return URL.createObjectURL(blob.getBlob());\n    }\n  };\n\n  var factory = function factory(code) {\n    return function () {\n      var objectUrl = createObjectURL(code);\n      var worker = browserWorkerPolyFill(new Worker(objectUrl));\n      worker.objURL = objectUrl;\n      var terminate = worker.terminate;\n      worker.on = worker.addEventListener;\n      worker.off = worker.removeEventListener;\n\n      worker.terminate = function () {\n        URL.revokeObjectURL(objectUrl);\n        return terminate.call(this);\n      };\n\n      return worker;\n    };\n  };\n\n  var transform = function transform(code) {\n    return \"var browserWorkerPolyFill = \" + browserWorkerPolyFill.toString() + \";\\n\" + 'browserWorkerPolyFill(self);\\n' + code;\n  };\n\n  var getWorkerString = function getWorkerString(fn) {\n    return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n  };\n  /* rollup-plugin-worker-factory start for worker!/Users/abarstow/videojs/http-streaming/src/transmuxer-worker.js */\n\n\n  var workerCode$1 = transform(getWorkerString(function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    var MAX_UINT32$1 = Math.pow(2, 32);\n\n    var getUint64$2 = function getUint64(uint8) {\n      var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n      var value;\n\n      if (dv.getBigUint64) {\n        value = dv.getBigUint64(0);\n\n        if (value < Number.MAX_SAFE_INTEGER) {\n          return Number(value);\n        }\n\n        return value;\n      }\n\n      return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n    };\n\n    var numbers = {\n      getUint64: getUint64$2,\n      MAX_UINT32: MAX_UINT32$1\n    };\n    var MAX_UINT32 = numbers.MAX_UINT32;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun$1(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytesOffest, bytes, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 16);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n          bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n          bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, bytesOffest, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 8);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      trun$1 = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable$1 = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable$1,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    var silence;\n\n    var silence_1 = function silence_1() {\n      if (!silence) {\n        // Frames-of-silence to use for filling in missing AAC frames\n        var coneOfSilence = {\n          96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n          88200: [highPrefix, [231], zeroFill(170), [56]],\n          64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n          48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n          44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n          32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n          24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n          16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n          12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n          11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n          8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n        };\n        silence = makeTable(coneOfSilence);\n      }\n\n      return silence;\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n\n    var ONE_SECOND_IN_TS$4 = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS$4;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$4;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence_1()[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      return audioFillDuration;\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$3;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n\n          if (userIdentifier === 'GA94') {\n            result.payloadType = payloadType;\n            result.payloadSize = payloadSize;\n            result.payload = bytes.subarray(i, i + payloadSize);\n            break;\n          } else {\n            result.payload = void 0;\n          }\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes$1 = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // Link To Transport\n    // -----------------\n\n    var CaptionStream$1 = function CaptionStream(options) {\n      options = options || {};\n      CaptionStream.prototype.init.call(this); // parse708captions flag, default to true\n\n      this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      if (this.parse708captions_) {\n        this.cc708Stream_ = new Cea708Stream({\n          captionServices: options.captionServices\n        }); // eslint-disable-line no-use-before-define\n      }\n\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n\n      if (this.parse708captions_) {\n        this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n        this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n      }\n    };\n\n    CaptionStream$1.prototype = new stream();\n\n    CaptionStream$1.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // no payload data, skip\n\n      if (!sei.payload) {\n        return;\n      } // ignore everything but user_data_registered_itu_t_t35\n\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream$1.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream$1.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } else {\n          // Dispatch packet to the Cea708Stream\n          this.dispatchCea708Packet(packet);\n        }\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream$1.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream$1.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream$1.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream$1.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream$1.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream$1.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream$1.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    };\n\n    CaptionStream$1.prototype.dispatchCea708Packet = function (packet) {\n      if (this.parse708captions_) {\n        this.cc708Stream_.push(packet);\n      }\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps special and extended character codes to their\n    // proper Unicode equivalent. The first one-byte key is just a\n    // non-standard character code. The two-byte keys that follow are\n    // the extended CEA708 character codes, along with the preceding\n    // 0x10 extended character byte to distinguish these codes from\n    // non-extended character codes. Every CEA708 character code that\n    // is not in this object maps directly to a standard unicode\n    // character code.\n    // The transparent space and non-breaking transparent space are\n    // technically not fully supported since there is no code to\n    // make them transparent, so they have normal non-transparent\n    // stand-ins.\n    // The special closed caption (CC) character isn't a standard\n    // unicode character, so a fairly similar unicode character was\n    // chosen in it's place.\n\n\n    var CHARACTER_TRANSLATION_708 = {\n      0x7f: 0x266a,\n      // ♪\n      0x1020: 0x20,\n      // Transparent Space\n      0x1021: 0xa0,\n      // Nob-breaking Transparent Space\n      0x1025: 0x2026,\n      // …\n      0x102a: 0x0160,\n      // Š\n      0x102c: 0x0152,\n      // Œ\n      0x1030: 0x2588,\n      // █\n      0x1031: 0x2018,\n      // ‘\n      0x1032: 0x2019,\n      // ’\n      0x1033: 0x201c,\n      // “\n      0x1034: 0x201d,\n      // ”\n      0x1035: 0x2022,\n      // •\n      0x1039: 0x2122,\n      // ™\n      0x103a: 0x0161,\n      // š\n      0x103c: 0x0153,\n      // œ\n      0x103d: 0x2120,\n      // ℠\n      0x103f: 0x0178,\n      // Ÿ\n      0x1076: 0x215b,\n      // ⅛\n      0x1077: 0x215c,\n      // ⅜\n      0x1078: 0x215d,\n      // ⅝\n      0x1079: 0x215e,\n      // ⅞\n      0x107a: 0x23d0,\n      // ⏐\n      0x107b: 0x23a4,\n      // ⎤\n      0x107c: 0x23a3,\n      // ⎣\n      0x107d: 0x23af,\n      // ⎯\n      0x107e: 0x23a6,\n      // ⎦\n      0x107f: 0x23a1,\n      // ⎡\n      0x10a0: 0x3138 // ㄸ (CC char)\n\n    };\n\n    var get708CharFromCode = function get708CharFromCode(code) {\n      var newCode = CHARACTER_TRANSLATION_708[code] || code;\n\n      if (code & 0x1000 && code === newCode) {\n        // Invalid extended code\n        return '';\n      }\n\n      return String.fromCharCode(newCode);\n    };\n\n    var within708TextBlock = function within708TextBlock(b) {\n      return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n    };\n\n    var Cea708Window = function Cea708Window(windowNum) {\n      this.windowNum = windowNum;\n      this.reset();\n    };\n\n    Cea708Window.prototype.reset = function () {\n      this.clearText();\n      this.pendingNewLine = false;\n      this.winAttr = {};\n      this.penAttr = {};\n      this.penLoc = {};\n      this.penColor = {}; // These default values are arbitrary,\n      // defineWindow will usually override them\n\n      this.visible = 0;\n      this.rowLock = 0;\n      this.columnLock = 0;\n      this.priority = 0;\n      this.relativePositioning = 0;\n      this.anchorVertical = 0;\n      this.anchorHorizontal = 0;\n      this.anchorPoint = 0;\n      this.rowCount = 1;\n      this.virtualRowCount = this.rowCount + 1;\n      this.columnCount = 41;\n      this.windowStyle = 0;\n      this.penStyle = 0;\n    };\n\n    Cea708Window.prototype.getText = function () {\n      return this.rows.join('\\n');\n    };\n\n    Cea708Window.prototype.clearText = function () {\n      this.rows = [''];\n      this.rowIdx = 0;\n    };\n\n    Cea708Window.prototype.newLine = function (pts) {\n      if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n        this.beforeRowOverflow(pts);\n      }\n\n      if (this.rows.length > 0) {\n        this.rows.push('');\n        this.rowIdx++;\n      } // Show all virtual rows since there's no visible scrolling\n\n\n      while (this.rows.length > this.virtualRowCount) {\n        this.rows.shift();\n        this.rowIdx--;\n      }\n    };\n\n    Cea708Window.prototype.isEmpty = function () {\n      if (this.rows.length === 0) {\n        return true;\n      } else if (this.rows.length === 1) {\n        return this.rows[0] === '';\n      }\n\n      return false;\n    };\n\n    Cea708Window.prototype.addText = function (text) {\n      this.rows[this.rowIdx] += text;\n    };\n\n    Cea708Window.prototype.backspace = function () {\n      if (!this.isEmpty()) {\n        var row = this.rows[this.rowIdx];\n        this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n      }\n    };\n\n    var Cea708Service = function Cea708Service(serviceNum, encoding, stream) {\n      this.serviceNum = serviceNum;\n      this.text = '';\n      this.currentWindow = new Cea708Window(-1);\n      this.windows = [];\n      this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n      if (typeof encoding === 'string') {\n        this.createTextDecoder(encoding);\n      }\n    };\n    /**\n     * Initialize service windows\n     * Must be run before service use\n     *\n     * @param  {Integer}  pts               PTS value\n     * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n     */\n\n\n    Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n      this.startPts = pts;\n\n      for (var win = 0; win < 8; win++) {\n        this.windows[win] = new Cea708Window(win);\n\n        if (typeof beforeRowOverflow === 'function') {\n          this.windows[win].beforeRowOverflow = beforeRowOverflow;\n        }\n      }\n    };\n    /**\n     * Set current window of service to be affected by commands\n     *\n     * @param  {Integer} windowNum Window number\n     */\n\n\n    Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n      this.currentWindow = this.windows[windowNum];\n    };\n    /**\n     * Try to create a TextDecoder if it is natively supported\n     */\n\n\n    Cea708Service.prototype.createTextDecoder = function (encoding) {\n      if (typeof TextDecoder === 'undefined') {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'The `encoding` option is unsupported without TextDecoder support'\n        });\n      } else {\n        try {\n          this.textDecoder_ = new TextDecoder(encoding);\n        } catch (error) {\n          this.stream.trigger('log', {\n            level: 'warn',\n            message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n          });\n        }\n      }\n    };\n\n    var Cea708Stream = function Cea708Stream(options) {\n      options = options || {};\n      Cea708Stream.prototype.init.call(this);\n      var self = this;\n      var captionServices = options.captionServices || {};\n      var captionServiceEncodings = {};\n      var serviceProps; // Get service encodings from captionServices option block\n\n      Object.keys(captionServices).forEach(function (serviceName) {\n        serviceProps = captionServices[serviceName];\n\n        if (/^SERVICE/.test(serviceName)) {\n          captionServiceEncodings[serviceName] = serviceProps.encoding;\n        }\n      });\n      this.serviceEncodings = captionServiceEncodings;\n      this.current708Packet = null;\n      this.services = {};\n\n      this.push = function (packet) {\n        if (packet.type === 3) {\n          // 708 packet start\n          self.new708Packet();\n          self.add708Bytes(packet);\n        } else {\n          if (self.current708Packet === null) {\n            // This should only happen at the start of a file if there's no packet start.\n            self.new708Packet();\n          }\n\n          self.add708Bytes(packet);\n        }\n      };\n    };\n\n    Cea708Stream.prototype = new stream();\n    /**\n     * Push current 708 packet, create new 708 packet.\n     */\n\n    Cea708Stream.prototype.new708Packet = function () {\n      if (this.current708Packet !== null) {\n        this.push708Packet();\n      }\n\n      this.current708Packet = {\n        data: [],\n        ptsVals: []\n      };\n    };\n    /**\n     * Add pts and both bytes from packet into current 708 packet.\n     */\n\n\n    Cea708Stream.prototype.add708Bytes = function (packet) {\n      var data = packet.ccData;\n      var byte0 = data >>> 8;\n      var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n      // that service blocks will always line up with byte pairs.\n\n      this.current708Packet.ptsVals.push(packet.pts);\n      this.current708Packet.data.push(byte0);\n      this.current708Packet.data.push(byte1);\n    };\n    /**\n     * Parse completed 708 packet into service blocks and push each service block.\n     */\n\n\n    Cea708Stream.prototype.push708Packet = function () {\n      var packet708 = this.current708Packet;\n      var packetData = packet708.data;\n      var serviceNum = null;\n      var blockSize = null;\n      var i = 0;\n      var b = packetData[i++];\n      packet708.seq = b >> 6;\n      packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n      for (; i < packetData.length; i++) {\n        b = packetData[i++];\n        serviceNum = b >> 5;\n        blockSize = b & 0x1f; // 0b00011111\n\n        if (serviceNum === 7 && blockSize > 0) {\n          // Extended service num\n          b = packetData[i++];\n          serviceNum = b;\n        }\n\n        this.pushServiceBlock(serviceNum, i, blockSize);\n\n        if (blockSize > 0) {\n          i += blockSize - 1;\n        }\n      }\n    };\n    /**\n     * Parse service block, execute commands, read text.\n     *\n     * Note: While many of these commands serve important purposes,\n     * many others just parse out the parameters or attributes, but\n     * nothing is done with them because this is not a full and complete\n     * implementation of the entire 708 spec.\n     *\n     * @param  {Integer} serviceNum Service number\n     * @param  {Integer} start      Start index of the 708 packet data\n     * @param  {Integer} size       Block size\n     */\n\n\n    Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n      var b;\n      var i = start;\n      var packetData = this.current708Packet.data;\n      var service = this.services[serviceNum];\n\n      if (!service) {\n        service = this.initService(serviceNum, i);\n      }\n\n      for (; i < start + size && i < packetData.length; i++) {\n        b = packetData[i];\n\n        if (within708TextBlock(b)) {\n          i = this.handleText(i, service);\n        } else if (b === 0x18) {\n          i = this.multiByteCharacter(i, service);\n        } else if (b === 0x10) {\n          i = this.extendedCommands(i, service);\n        } else if (0x80 <= b && b <= 0x87) {\n          i = this.setCurrentWindow(i, service);\n        } else if (0x98 <= b && b <= 0x9f) {\n          i = this.defineWindow(i, service);\n        } else if (b === 0x88) {\n          i = this.clearWindows(i, service);\n        } else if (b === 0x8c) {\n          i = this.deleteWindows(i, service);\n        } else if (b === 0x89) {\n          i = this.displayWindows(i, service);\n        } else if (b === 0x8a) {\n          i = this.hideWindows(i, service);\n        } else if (b === 0x8b) {\n          i = this.toggleWindows(i, service);\n        } else if (b === 0x97) {\n          i = this.setWindowAttributes(i, service);\n        } else if (b === 0x90) {\n          i = this.setPenAttributes(i, service);\n        } else if (b === 0x91) {\n          i = this.setPenColor(i, service);\n        } else if (b === 0x92) {\n          i = this.setPenLocation(i, service);\n        } else if (b === 0x8f) {\n          service = this.reset(i, service);\n        } else if (b === 0x08) {\n          // BS: Backspace\n          service.currentWindow.backspace();\n        } else if (b === 0x0c) {\n          // FF: Form feed\n          service.currentWindow.clearText();\n        } else if (b === 0x0d) {\n          // CR: Carriage return\n          service.currentWindow.pendingNewLine = true;\n        } else if (b === 0x0e) {\n          // HCR: Horizontal carriage return\n          service.currentWindow.clearText();\n        } else if (b === 0x8d) {\n          // DLY: Delay, nothing to do\n          i++;\n        } else ;\n      }\n    };\n    /**\n     * Execute an extended command\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.extendedCommands = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service, {\n          isExtended: true\n        });\n      }\n\n      return i;\n    };\n    /**\n     * Get PTS value of a given byte index\n     *\n     * @param  {Integer} byteIndex  Index of the byte\n     * @return {Integer}            PTS\n     */\n\n\n    Cea708Stream.prototype.getPts = function (byteIndex) {\n      // There's 1 pts value per 2 bytes\n      return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n    };\n    /**\n     * Initializes a service\n     *\n     * @param  {Integer} serviceNum Service number\n     * @return {Service}            Initialized service object\n     */\n\n\n    Cea708Stream.prototype.initService = function (serviceNum, i) {\n      var serviceName = 'SERVICE' + serviceNum;\n      var self = this;\n      var serviceName;\n      var encoding;\n\n      if (serviceName in this.serviceEncodings) {\n        encoding = this.serviceEncodings[serviceName];\n      }\n\n      this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n      this.services[serviceNum].init(this.getPts(i), function (pts) {\n        self.flushDisplayed(pts, self.services[serviceNum]);\n      });\n      return this.services[serviceNum];\n    };\n    /**\n     * Execute text writing to current window\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.handleText = function (i, service, options) {\n      var isExtended = options && options.isExtended;\n      var isMultiByte = options && options.isMultiByte;\n      var packetData = this.current708Packet.data;\n      var extended = isExtended ? 0x1000 : 0x0000;\n      var currentByte = packetData[i];\n      var nextByte = packetData[i + 1];\n      var win = service.currentWindow;\n\n      var _char;\n\n      var charCodeArray; // Use the TextDecoder if one was created for this service\n\n      if (service.textDecoder_ && !isExtended) {\n        if (isMultiByte) {\n          charCodeArray = [currentByte, nextByte];\n          i++;\n        } else {\n          charCodeArray = [currentByte];\n        }\n\n        _char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n      } else {\n        _char = get708CharFromCode(extended | currentByte);\n      }\n\n      if (win.pendingNewLine && !win.isEmpty()) {\n        win.newLine(this.getPts(i));\n      }\n\n      win.pendingNewLine = false;\n      win.addText(_char);\n      return i;\n    };\n    /**\n     * Handle decoding of multibyte character\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var firstByte = packetData[i + 1];\n      var secondByte = packetData[i + 2];\n\n      if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n        i = this.handleText(++i, service, {\n          isMultiByte: true\n        });\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the CW# command.\n     *\n     * Set the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      return i;\n    };\n    /**\n     * Parse and execute the DF# command.\n     *\n     * Define a window and set it as the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.defineWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      var win = service.currentWindow;\n      b = packetData[++i];\n      win.visible = (b & 0x20) >> 5; // v\n\n      win.rowLock = (b & 0x10) >> 4; // rl\n\n      win.columnLock = (b & 0x08) >> 3; // cl\n\n      win.priority = b & 0x07; // p\n\n      b = packetData[++i];\n      win.relativePositioning = (b & 0x80) >> 7; // rp\n\n      win.anchorVertical = b & 0x7f; // av\n\n      b = packetData[++i];\n      win.anchorHorizontal = b; // ah\n\n      b = packetData[++i];\n      win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n      win.rowCount = b & 0x0f; // rc\n\n      b = packetData[++i];\n      win.columnCount = b & 0x3f; // cc\n\n      b = packetData[++i];\n      win.windowStyle = (b & 0x38) >> 3; // ws\n\n      win.penStyle = b & 0x07; // ps\n      // The spec says there are (rowCount+1) \"virtual rows\"\n\n      win.virtualRowCount = win.rowCount + 1;\n      return i;\n    };\n    /**\n     * Parse and execute the SWA command.\n     *\n     * Set attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var winAttr = service.currentWindow.winAttr;\n      b = packetData[++i];\n      winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n      winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n      winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n      winAttr.fillBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n      winAttr.borderRed = (b & 0x30) >> 4; // br\n\n      winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n      winAttr.borderBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      winAttr.borderType += (b & 0x80) >> 5; // bt\n\n      winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n      winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n      winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n      winAttr.justify = b & 0x03; // j\n\n      b = packetData[++i];\n      winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n      winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n      winAttr.displayEffect = b & 0x03; // de\n\n      return i;\n    };\n    /**\n     * Gather text from all displayed windows and push a caption to output.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     */\n\n\n    Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n      var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n      // display text in the correct order, but sample files so far have not shown any issue.\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n          displayedText.push(service.windows[winId].getText());\n        }\n      }\n\n      service.endPts = pts;\n      service.text = displayedText.join('\\n\\n');\n      this.pushCaption(service);\n      service.startPts = pts;\n    };\n    /**\n     * Push a caption to output if the caption contains text.\n     *\n     * @param  {Service} service  The service object to be affected\n     */\n\n\n    Cea708Stream.prototype.pushCaption = function (service) {\n      if (service.text !== '') {\n        this.trigger('data', {\n          startPts: service.startPts,\n          endPts: service.endPts,\n          text: service.text,\n          stream: 'cc708_' + service.serviceNum\n        });\n        service.text = '';\n        service.startPts = service.endPts;\n      }\n    };\n    /**\n     * Parse and execute the DSW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.displayWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 1;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the HDW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.hideWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 0;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the TGW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.toggleWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible ^= 1;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the CLW command.\n     *\n     * Clear text of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.clearWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].clearText();\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the DLW command.\n     *\n     * Re-initialize windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.deleteWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].reset();\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPA command.\n     *\n     * Set pen attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penAttr = service.currentWindow.penAttr;\n      b = packetData[++i];\n      penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n      penAttr.offset = (b & 0x0c) >> 2; // o\n\n      penAttr.penSize = b & 0x03; // s\n\n      b = packetData[++i];\n      penAttr.italics = (b & 0x80) >> 7; // i\n\n      penAttr.underline = (b & 0x40) >> 6; // u\n\n      penAttr.edgeType = (b & 0x38) >> 3; // et\n\n      penAttr.fontStyle = b & 0x07; // fs\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPC command.\n     *\n     * Set pen color of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenColor = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penColor = service.currentWindow.penColor;\n      b = packetData[++i];\n      penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n      penColor.fgRed = (b & 0x30) >> 4; // fr\n\n      penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n      penColor.fgBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n      penColor.bgRed = (b & 0x30) >> 4; // br\n\n      penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n      penColor.bgBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      penColor.edgeRed = (b & 0x30) >> 4; // er\n\n      penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n      penColor.edgeBlue = b & 0x03; // eb\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPL command.\n     *\n     * Set pen location of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenLocation = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n      service.currentWindow.pendingNewLine = true;\n      b = packetData[++i];\n      penLoc.row = b & 0x0f; // r\n\n      b = packetData[++i];\n      penLoc.column = b & 0x3f; // c\n\n      return i;\n    };\n    /**\n     * Execute the RST command.\n     *\n     * Reset service to a clean slate. Re-initialize.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Service}          Re-initialized service\n     */\n\n\n    Cea708Stream.prototype.reset = function (i, service) {\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      return this.initService(service.serviceNum, i);\n    }; // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row, index) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping a malformed 608 caption at index ' + index + '.'\n          });\n          return '';\n        }\n      }, this) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char2) {\n      return _char2 >= 0x20 && _char2 <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream$1,\n      Cea608Stream: Cea608Stream,\n      Cea708Stream: Cea708Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover$1 = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream$1 = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover$1(data.dts, referenceDTS);\n        data.pts = handleRollover$1(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream$1.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      handleRollover: handleRollover$1\n    };\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591$1(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping unrecognized metadata packet'\n          });\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            this.trigger('log', {\n              level: 'warn',\n              message: 'Malformed ID3 frame encountered. Skipping metadata parsing.'\n            });\n            return;\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH$1 = 188,\n        // bytes\n    SYNC_BYTE$1 = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH$1,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH$1;\n            endIndex += MP2T_PACKET_LENGTH$1;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          segmentHadPmt = false,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n        var startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n                stream = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream.data.push(data);\n            stream.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            segmentHadPmt = true;\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        // if on flush we haven't had a pmt emitted\n        // and we have a pmt to emit. emit the pmt\n        // so that we trigger a trackinfo downstream.\n        if (!segmentHadPmt && programMapTable) {\n          var pmt = {\n            type: 'metadata',\n            tracks: []\n          }; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n\n          if (programMapTable.audio !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n\n          self.trigger('data', pmt);\n        }\n\n        segmentHadPmt = false;\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      Cea708Stream: captionStream.Cea708Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.skipWarn_ = function (start, end) {\n        this.trigger('log', {\n          level: 'warn',\n          message: \"adts skiping bytes \" + start + \" to \" + end + \" in frame \" + frameNum + \" outside syncword\"\n        });\n      };\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer && buffer.length) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        var skip; // We use i + 7 here because we want to be able to parse the entire header.\n        // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n        while (i + 7 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            if (typeof skip !== 'number') {\n              skip = i;\n            } // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n\n\n            i++;\n            continue;\n          }\n\n          if (typeof skip === 'number') {\n            this.skipWarn_(skip, i);\n            skip = null;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          // NOTE: frame length includes the size of the header\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n          // then we have to wait for more data\n\n          if (buffer.byteLength - i < frameLength) {\n            break;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            // data is the frame without it's header\n            data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n          });\n          frameNum++;\n          i += frameLength;\n        }\n\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // remove processed bytes from the buffer.\n\n\n        buffer = buffer.subarray(i);\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      // TODO: the three profiles below don't\n      // appear to have sps data in the specificiation anymore?\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data,\n          nalUnitTypeCode: data[0] & 0x1f\n        };\n\n        switch (event.nalUnitTypeCode) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio = [1, 1],\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          // sar is sample aspect ratio\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n      returnSize = returnSize >= 0 ? returnSize : 0;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var getId3Offset = function getId3Offset(data, offset) {\n      if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n        return offset;\n      }\n\n      offset += parseId3TagSize(data, offset);\n      return getId3Offset(data, offset);\n    }; // TODO: use vhs-utils\n\n\n    var isLikelyAacData$1 = function isLikelyAacData(data) {\n      var offset = getId3Offset(data, 0);\n      return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 && // verify that the 2 layer bits are 0, aka this\n      // is not mp3 data but aac data.\n      (data[offset + 1] & 0x16) === 0x10;\n    };\n\n    var parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$2 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData$1,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$2,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    };\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var audioProperties = AUDIO_PROPERTIES;\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n    var videoProperties = VIDEO_PROPERTIES;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    var retriggerForStream = function retriggerForStream(key, event) {\n      event.stream = key;\n      this.trigger('log', event);\n    };\n\n    var addPipelineLogRetriggers = function addPipelineLogRetriggers(transmuxer, pipeline) {\n      var keys = Object.keys(pipeline);\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i]; // skip non-stream keys and headOfPipeline\n        // which is just a duplicate\n\n        if (key === 'headOfPipeline' || !pipeline[key].on) {\n          continue;\n        }\n\n        pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n      }\n    };\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateSegmentTimingInfo = function generateSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          audioProperties.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n        videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          segmentDuration = frames.length * frameDuration;\n          this.trigger('segmentTimingInfo', generateSegmentTimingInfo( // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n          // frame info is in video clock cycles. Convert to match expectation of\n          // listeners (that all timestamps will be based on video clock cycles).\n          clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate), // frame times are already in video clock, as is segment duration\n          frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n          this.trigger('timingInfo', {\n            start: frames[0].pts,\n            end: frames[0].pts + segmentDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          videoProperties.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].pts,\n          end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        videoProperties.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        audioProperties.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n            return;\n          }\n\n          audioTrack = audioTrack || {\n            timelineStartInfo: {\n              baseMediaDecodeTime: self.baseMediaDecodeTime\n            },\n            codec: 'adts',\n            type: 'audio'\n          }; // hook up the audio segment stream to the first track with aac data\n\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n          pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n          pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream(options);\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n                // because this is a particularly subtle form of timestamp alteration.\n                if (audioTrack && !options.keepOriginalTimestamps) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n              pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      this.getLogTrigger_ = function (key) {\n        var self = this;\n        return function (event) {\n          event.stream = key;\n          self.trigger('log', event);\n        };\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: audioProperties,\n      VIDEO_PROPERTIES: videoProperties,\n      // exported for testing\n      generateSegmentTimingInfo: generateSegmentTimingInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned$3 = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var toHexString$1 = function toHexString(value) {\n      return ('00' + value.toString(16)).slice(-2);\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned$3,\n      toHexString: toHexString$1\n    };\n\n    var parseType$1 = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n\n    var parseType_1 = parseType$1;\n    var toUnsigned$2 = bin.toUnsigned;\n\n    var findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType_1(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n\n    var findBox_1 = findBox;\n    var toUnsigned$1 = bin.toUnsigned;\n    var getUint64$1 = numbers.getUint64;\n\n    var tfdt = function tfdt(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n\n      if (result.version === 1) {\n        result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\n      } else {\n        result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n      }\n\n      return result;\n    };\n\n    var parseTfdt = tfdt;\n\n    var parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    };\n\n    var parseSampleFlags_1 = parseSampleFlags;\n\n    var trun = function trun(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n          view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n          // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n          // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n          // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n          // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n          // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n          // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n          offset = 8,\n          sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      } // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n\n\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags_1(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags_1(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n      }\n\n      return result;\n    };\n\n    var parseTrun = trun;\n\n    var tfhd = function tfhd(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n          baseDataOffsetPresent = result.flags[2] & 0x01,\n          sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n          defaultSampleDurationPresent = result.flags[2] & 0x08,\n          defaultSampleSizePresent = result.flags[2] & 0x10,\n          defaultSampleFlagsPresent = result.flags[2] & 0x20,\n          durationIsEmpty = result.flags[0] & 0x010000,\n          defaultBaseIsMoof = result.flags[0] & 0x020000,\n          i;\n      i = 8;\n\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n\n      return result;\n    };\n\n    var parseTfhd = tfhd;\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n    var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = {\n        logs: [],\n        seiNals: []\n      },\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else if (lastMatchedSample) {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            } else {\n              result.logs.push({\n                level: 'warn',\n                message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n              });\n              break;\n            }\n\n            result.seiNals.push(seiNal);\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          if (typeof currentDts === 'bigint') {\n            sample.pts = currentDts + window_1.BigInt(sample.compositionTimeOffset);\n            currentDts += window_1.BigInt(sample.duration);\n          } else {\n            sample.pts = currentDts + sample.compositionTimeOffset;\n            currentDts += sample.duration;\n          }\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = findBox_1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = findBox_1(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = findBox_1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = findBox_1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = findBox_1(traf, ['trun']);\n        var samples;\n        var result; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          result = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = {\n              seiNals: [],\n              logs: []\n            };\n          }\n\n          captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n          captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n      if (trackId === null) {\n        return null;\n      }\n\n      captionNals = parseCaptionNals(segment, trackId);\n      var trackNals = captionNals[trackId] || {};\n      return {\n        seiNals: trackNals.seiNals,\n        logs: trackNals.logs,\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser = function CaptionParser() {\n      var isInitialized = false;\n      var captionStream; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions; // Stores whether we are receiving partial data or not\n\n      var parsingPartial;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function (options) {\n        captionStream = new CaptionStream();\n        isInitialized = true;\n        parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n        captionStream.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n        captionStream.on('log', function (log) {\n          parsedCaptions.logs.push(log);\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one.\n          // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n        } else if (trackId === null || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData && parsedData.logs) {\n          parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n        }\n\n        if (parsedData === null || !parsedData.seiNals) {\n          if (parsedCaptions.logs.length) {\n            return {\n              logs: parsedCaptions.logs,\n              captions: [],\n              captionStreams: []\n            };\n          }\n\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        if (!parsingPartial) {\n          captionStream.flush();\n        } else {\n          captionStream.partialFlush();\n        }\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n        parsedCaptions.logs = [];\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {},\n            logs: []\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser;\n    var toUnsigned = bin.toUnsigned;\n    var toHexString = bin.toHexString;\n    var getUint64 = numbers.getUint64;\n    var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = findBox_1(init, ['moov', 'trak']); // mdhd timescale\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = findBox_1(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs; // we need info from two childrend of each track fragment box\n\n      trafs = findBox_1(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      var lowestTime = trafs.reduce(function (acc, traf) {\n        var tfhd = findBox_1(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n        var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n        var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n        var tfdt = findBox_1(traf, ['tfdt'])[0];\n        var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n        var baseTime; // version 1 is 64 bit\n\n        if (tfdt[0] === 1) {\n          baseTime = getUint64(tfdt.subarray(4, 12));\n        } else {\n          baseTime = dv.getUint32(4);\n        } // convert base time to seconds if it is a valid number.\n\n\n        var seconds;\n\n        if (typeof baseTime === 'bigint') {\n          seconds = baseTime / window_1.BigInt(scale);\n        } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n          seconds = baseTime / scale;\n        }\n\n        if (seconds < Number.MAX_SAFE_INTEGER) {\n          seconds = Number(seconds);\n        }\n\n        if (seconds < acc) {\n          acc = seconds;\n        }\n\n        return acc;\n      }, Infinity);\n      return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n    };\n    /**\n     * Determine the composition start, in seconds, for an MP4\n     * fragment.\n     *\n     * The composition start time of a fragment can be calculated using the base\n     * media decode time, composition time offset, and timescale, as follows:\n     *\n     * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n     *\n     * All of the aforementioned information is contained within a media fragment's\n     * `traf` box, except for timescale info, which comes from the initialization\n     * segment, so a track id (also contained within a `traf`) is also necessary to\n     * associate it with a timescale\n     *\n     *\n     * @param timescales {object} - a hash of track ids to timescale values.\n     * @param fragment {Unit8Array} - the bytes of a media segment\n     * @return {number} the composition start time for the fragment, in seconds\n     **/\n\n\n    compositionStartTime = function compositionStartTime(timescales, fragment) {\n      var trafBoxes = findBox_1(fragment, ['moof', 'traf']);\n      var baseMediaDecodeTime = 0;\n      var compositionTimeOffset = 0;\n      var trackId;\n\n      if (trafBoxes && trafBoxes.length) {\n        // The spec states that track run samples contained within a `traf` box are contiguous, but\n        // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n        // We will assume that they are, so we only need the first to calculate start time.\n        var tfhd = findBox_1(trafBoxes[0], ['tfhd'])[0];\n        var trun = findBox_1(trafBoxes[0], ['trun'])[0];\n        var tfdt = findBox_1(trafBoxes[0], ['tfdt'])[0];\n\n        if (tfhd) {\n          var parsedTfhd = parseTfhd(tfhd);\n          trackId = parsedTfhd.trackId;\n        }\n\n        if (tfdt) {\n          var parsedTfdt = parseTfdt(tfdt);\n          baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n        }\n\n        if (trun) {\n          var parsedTrun = parseTrun(trun);\n\n          if (parsedTrun.samples && parsedTrun.samples.length) {\n            compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n          }\n        }\n      } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n      // specified.\n\n\n      var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n      if (typeof baseMediaDecodeTime === 'bigint') {\n        compositionTimeOffset = window_1.BigInt(compositionTimeOffset);\n        timescale = window_1.BigInt(timescale);\n      }\n\n      var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n\n      if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n        result = Number(result);\n      }\n\n      return result;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = findBox_1(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = findBox_1(trak, ['mdia', 'hdlr']);\n        var tkhds = findBox_1(trak, ['tkhd']);\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType_1(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    getTimescaleFromMediaHeader = function getTimescaleFromMediaHeader(mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    };\n    /**\n     * Get all the video, audio, and hint tracks from a non fragmented\n     * mp4 segment\n     */\n\n\n    getTracks = function getTracks(init) {\n      var traks = findBox_1(init, ['moov', 'trak']);\n      var tracks = [];\n      traks.forEach(function (trak) {\n        var track = {};\n        var tkhd = findBox_1(trak, ['tkhd'])[0];\n        var view, tkhdVersion; // id\n\n        if (tkhd) {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          tkhdVersion = view.getUint8(0);\n          track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n        }\n\n        var hdlr = findBox_1(trak, ['mdia', 'hdlr'])[0]; // type\n\n        if (hdlr) {\n          var type = parseType_1(hdlr.subarray(8, 12));\n\n          if (type === 'vide') {\n            track.type = 'video';\n          } else if (type === 'soun') {\n            track.type = 'audio';\n          } else {\n            track.type = type;\n          }\n        } // codec\n\n\n        var stsd = findBox_1(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n        if (stsd) {\n          var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n          track.codec = parseType_1(sampleDescriptions.subarray(4, 8));\n          var codecBox = findBox_1(sampleDescriptions, [track.codec])[0];\n          var codecConfig, codecConfigType;\n\n          if (codecBox) {\n            // https://tools.ietf.org/html/rfc6381#section-3.3\n            if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n              // we don't need anything but the \"config\" parameter of the\n              // avc1 codecBox\n              codecConfig = codecBox.subarray(78);\n              codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n              if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n                track.codec += '.'; // left padded with zeroes for single digit hex\n                // profile idc\n\n                track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n                track.codec += toHexString(codecConfig[10]); // level idc\n\n                track.codec += toHexString(codecConfig[11]);\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'avc1.4d400d';\n              }\n            } else if (/^mp4[a,v]$/i.test(track.codec)) {\n              // we do not need anything but the streamDescriptor of the mp4a codecBox\n              codecConfig = codecBox.subarray(28);\n              codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n              if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n                track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n                track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'mp4a.40.2';\n              }\n            } else {\n              // flac, opus, etc\n              track.codec = track.codec.toLowerCase();\n            }\n          }\n        }\n\n        var mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n        if (mdhd) {\n          track.timescale = getTimescaleFromMediaHeader(mdhd);\n        }\n\n        tracks.push(track);\n      });\n      return tracks;\n    };\n\n    var probe$2 = {\n      // export mp4 inspector's findBox and parseType for backwards compatibility\n      findBox: findBox_1,\n      parseType: parseType_1,\n      timescale: timescale,\n      startTime: startTime,\n      compositionStartTime: compositionStartTime,\n      videoTrackIds: getVideoTrackIds,\n      tracks: getTracks,\n      getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n    };\n\n    var parsePid = function parsePid(packet) {\n      var pid = packet[1] & 0x1f;\n      pid <<= 8;\n      pid |= packet[2];\n      return pid;\n    };\n\n    var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n      return !!(packet[1] & 0x40);\n    };\n\n    var parseAdaptionField = function parseAdaptionField(packet) {\n      var offset = 0; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[4] + 1;\n      }\n\n      return offset;\n    };\n\n    var parseType = function parseType(packet, pmtPid) {\n      var pid = parsePid(packet);\n\n      if (pid === 0) {\n        return 'pat';\n      } else if (pid === pmtPid) {\n        return 'pmt';\n      } else if (pmtPid) {\n        return 'pes';\n      }\n\n      return null;\n    };\n\n    var parsePat = function parsePat(packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var offset = 4 + parseAdaptionField(packet);\n\n      if (pusi) {\n        offset += packet[offset] + 1;\n      }\n\n      return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n    };\n\n    var parsePmt = function parsePmt(packet) {\n      var programMapTable = {};\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var payloadOffset = 4 + parseAdaptionField(packet);\n\n      if (pusi) {\n        payloadOffset += packet[payloadOffset] + 1;\n      } // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n\n      if (!(packet[payloadOffset + 5] & 0x01)) {\n        return;\n      }\n\n      var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n      sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n      var offset = 12 + programInfoLength;\n\n      while (offset < tableEnd) {\n        var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n        programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n      }\n\n      return programMapTable;\n    };\n\n    var parsePesType = function parsePesType(packet, programMapTable) {\n      var pid = parsePid(packet);\n      var type = programMapTable[pid];\n\n      switch (type) {\n        case streamTypes.H264_STREAM_TYPE:\n          return 'video';\n\n        case streamTypes.ADTS_STREAM_TYPE:\n          return 'audio';\n\n        case streamTypes.METADATA_STREAM_TYPE:\n          return 'timed-metadata';\n\n        default:\n          return null;\n      }\n    };\n\n    var parsePesTime = function parsePesTime(packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n\n      if (!pusi) {\n        return null;\n      }\n\n      var offset = 4 + parseAdaptionField(packet);\n\n      if (offset >= packet.byteLength) {\n        // From the H 222.0 MPEG-TS spec\n        // \"For transport stream packets carrying PES packets, stuffing is needed when there\n        //  is insufficient PES packet data to completely fill the transport stream packet\n        //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n        //  the sum of the lengths of the data elements in it, so that the payload bytes\n        //  remaining after the adaptation field exactly accommodates the available PES packet\n        //  data.\"\n        //\n        // If the offset is >= the length of the packet, then the packet contains no data\n        // and instead is just adaption field stuffing bytes\n        return null;\n      }\n\n      var pes = null;\n      var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        pes = {}; // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n        pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n\n      return pes;\n    };\n\n    var parseNalUnitType = function parseNalUnitType(type) {\n      switch (type) {\n        case 0x05:\n          return 'slice_layer_without_partitioning_rbsp_idr';\n\n        case 0x06:\n          return 'sei_rbsp';\n\n        case 0x07:\n          return 'seq_parameter_set_rbsp';\n\n        case 0x08:\n          return 'pic_parameter_set_rbsp';\n\n        case 0x09:\n          return 'access_unit_delimiter_rbsp';\n\n        default:\n          return null;\n      }\n    };\n\n    var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n      var offset = 4 + parseAdaptionField(packet);\n      var frameBuffer = packet.subarray(offset);\n      var frameI = 0;\n      var frameSyncPoint = 0;\n      var foundKeyFrame = false;\n      var nalType; // advance the sync point to a NAL start, if necessary\n\n      for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n        if (frameBuffer[frameSyncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          frameI = frameSyncPoint + 5;\n          break;\n        }\n      }\n\n      while (frameI < frameBuffer.byteLength) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (frameBuffer[frameI]) {\n          case 0:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0) {\n              frameI += 2;\n              break;\n            } else if (frameBuffer[frameI - 2] !== 0) {\n              frameI++;\n              break;\n            }\n\n            if (frameSyncPoint + 3 !== frameI - 2) {\n              nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n              if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n                foundKeyFrame = true;\n              }\n            } // drop trailing zeroes\n\n\n            do {\n              frameI++;\n            } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n\n          case 1:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n              frameI += 3;\n              break;\n            }\n\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            frameI += 3;\n            break;\n        }\n      }\n\n      frameBuffer = frameBuffer.subarray(frameSyncPoint);\n      frameI -= frameSyncPoint;\n      frameSyncPoint = 0; // parse the final nal\n\n      if (frameBuffer && frameBuffer.byteLength > 3) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      return foundKeyFrame;\n    };\n\n    var probe$1 = {\n      parseType: parseType,\n      parsePat: parsePat,\n      parsePmt: parsePmt,\n      parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n      parsePesType: parsePesType,\n      parsePesTime: parsePesTime,\n      videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n    };\n    var handleRollover = timestampRolloverStream.handleRollover;\n    var probe = {};\n    probe.ts = probe$1;\n    probe.aac = utils;\n    var ONE_SECOND_IN_TS = clock.ONE_SECOND_IN_TS;\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * walks through segment data looking for pat and pmt packets to parse out\n     * program map table information\n     */\n\n    var parsePsi_ = function parsePsi_(bytes, pmt) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type;\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pat':\n              pmt.pid = probe.ts.parsePat(packet);\n              break;\n\n            case 'pmt':\n              var table = probe.ts.parsePmt(packet);\n              pmt.table = pmt.table || {};\n              Object.keys(table).forEach(function (key) {\n                pmt.table[key] = table[key];\n              });\n              break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last audio pes packets\n     */\n\n\n    var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type,\n          pesType,\n          pusi,\n          parsed;\n      var endLoop = false; // Start walking from start of segment to get first audio packet\n\n      while (endIndex <= bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last audio packet\n\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last video pes packets as well as timing information for the first\n     * key frame.\n     */\n\n\n    var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type,\n          pesType,\n          pusi,\n          parsed,\n          frame,\n          i,\n          pes;\n      var endLoop = false;\n      var currentFrame = {\n        data: [],\n        size: 0\n      }; // Start walking from start of segment to get first video packet\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'video') {\n                if (pusi && !endLoop) {\n                  parsed = probe.ts.parsePesTime(packet);\n\n                  if (parsed) {\n                    parsed.type = 'video';\n                    result.video.push(parsed);\n                    endLoop = true;\n                  }\n                }\n\n                if (!result.firstKeyFrame) {\n                  if (pusi) {\n                    if (currentFrame.size !== 0) {\n                      frame = new Uint8Array(currentFrame.size);\n                      i = 0;\n\n                      while (currentFrame.data.length) {\n                        pes = currentFrame.data.shift();\n                        frame.set(pes, i);\n                        i += pes.byteLength;\n                      }\n\n                      if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                        var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                        // the keyframe seems to work fine with HLS playback\n                        // and definitely preferable to a crash with TypeError...\n\n                        if (firstKeyFrame) {\n                          result.firstKeyFrame = firstKeyFrame;\n                          result.firstKeyFrame.type = 'video';\n                        } else {\n                          // eslint-disable-next-line\n                          console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                        }\n                      }\n\n                      currentFrame.size = 0;\n                    }\n                  }\n\n                  currentFrame.data.push(packet);\n                  currentFrame.size += packet.byteLength;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop && result.firstKeyFrame) {\n            break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last video packet\n\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'video' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * Adjusts the timestamp information for the segment to account for\n     * rollover and convert to seconds based on pes packet timescale (90khz clock)\n     */\n\n\n    var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n      if (segmentInfo.audio && segmentInfo.audio.length) {\n        var audioBaseTimestamp = baseTimestamp;\n\n        if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n          audioBaseTimestamp = segmentInfo.audio[0].dts;\n        }\n\n        segmentInfo.audio.forEach(function (info) {\n          info.dts = handleRollover(info.dts, audioBaseTimestamp);\n          info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n      }\n\n      if (segmentInfo.video && segmentInfo.video.length) {\n        var videoBaseTimestamp = baseTimestamp;\n\n        if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n          videoBaseTimestamp = segmentInfo.video[0].dts;\n        }\n\n        segmentInfo.video.forEach(function (info) {\n          info.dts = handleRollover(info.dts, videoBaseTimestamp);\n          info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n\n        if (segmentInfo.firstKeyFrame) {\n          var frame = segmentInfo.firstKeyFrame;\n          frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n          frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n          frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n          frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n        }\n      }\n    };\n    /**\n     * inspects the aac data stream for start and end time information\n     */\n\n\n    var inspectAac_ = function inspectAac_(bytes) {\n      var endLoop = false,\n          audioCount = 0,\n          sampleRate = null,\n          timestamp = null,\n          frameSize = 0,\n          byteIndex = 0,\n          packet;\n\n      while (bytes.length - byteIndex >= 3) {\n        var type = probe.aac.parseType(bytes, byteIndex);\n\n        switch (type) {\n          case 'timed-metadata':\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (bytes.length - byteIndex < 10) {\n              endLoop = true;\n              break;\n            }\n\n            frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n\n            if (timestamp === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              timestamp = probe.aac.parseAacTimestamp(packet);\n            }\n\n            byteIndex += frameSize;\n            break;\n\n          case 'audio':\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (bytes.length - byteIndex < 7) {\n              endLoop = true;\n              break;\n            }\n\n            frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n\n            if (sampleRate === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              sampleRate = probe.aac.parseSampleRate(packet);\n            }\n\n            audioCount++;\n            byteIndex += frameSize;\n            break;\n\n          default:\n            byteIndex++;\n            break;\n        }\n\n        if (endLoop) {\n          return null;\n        }\n      }\n\n      if (sampleRate === null || timestamp === null) {\n        return null;\n      }\n\n      var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n      var result = {\n        audio: [{\n          type: 'audio',\n          dts: timestamp,\n          pts: timestamp\n        }, {\n          type: 'audio',\n          dts: timestamp + audioCount * 1024 * audioTimescale,\n          pts: timestamp + audioCount * 1024 * audioTimescale\n        }]\n      };\n      return result;\n    };\n    /**\n     * inspects the transport stream segment data for start and end time information\n     * of the audio and video tracks (when present) as well as the first key frame's\n     * start time.\n     */\n\n\n    var inspectTs_ = function inspectTs_(bytes) {\n      var pmt = {\n        pid: null,\n        table: null\n      };\n      var result = {};\n      parsePsi_(bytes, pmt);\n\n      for (var pid in pmt.table) {\n        if (pmt.table.hasOwnProperty(pid)) {\n          var type = pmt.table[pid];\n\n          switch (type) {\n            case streamTypes.H264_STREAM_TYPE:\n              result.video = [];\n              parseVideoPes_(bytes, pmt, result);\n\n              if (result.video.length === 0) {\n                delete result.video;\n              }\n\n              break;\n\n            case streamTypes.ADTS_STREAM_TYPE:\n              result.audio = [];\n              parseAudioPes_(bytes, pmt, result);\n\n              if (result.audio.length === 0) {\n                delete result.audio;\n              }\n\n              break;\n          }\n        }\n      }\n\n      return result;\n    };\n    /**\n     * Inspects segment byte data and returns an object with start and end timing information\n     *\n     * @param {Uint8Array} bytes The segment byte data\n     * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n     *  timestamps for rollover. This value must be in 90khz clock.\n     * @return {Object} Object containing start and end frame timing info of segment.\n     */\n\n\n    var inspect = function inspect(bytes, baseTimestamp) {\n      var isAacData = probe.aac.isLikelyAacData(bytes);\n      var result;\n\n      if (isAacData) {\n        result = inspectAac_(bytes);\n      } else {\n        result = inspectTs_(bytes);\n      }\n\n      if (!result || !result.audio && !result.video) {\n        return null;\n      }\n\n      adjustTimestamp_(result, baseTimestamp);\n      return result;\n    };\n\n    var tsInspector = {\n      inspect: inspect,\n      parseAudioPes_: parseAudioPes_\n    };\n    /* global self */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n        var videoSegmentTimingInfo = {\n          start: {\n            decode: clock.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n\n        if (timingInfo.prependedContentDuration) {\n          videoSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n      transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n        // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n        var audioSegmentTimingInfo = {\n          start: {\n            decode: clock.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n\n        if (timingInfo.prependedContentDuration) {\n          audioSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n\n        self.postMessage({\n          action: 'audioSegmentTimingInfo',\n          audioSegmentTimingInfo: audioSegmentTimingInfo\n        });\n      });\n      transmuxer.on('id3Frame', function (id3Frame) {\n        self.postMessage({\n          action: 'id3Frame',\n          id3Frame: id3Frame\n        });\n      });\n      transmuxer.on('caption', function (caption) {\n        self.postMessage({\n          action: 'caption',\n          caption: caption\n        });\n      });\n      transmuxer.on('trackinfo', function (trackInfo) {\n        self.postMessage({\n          action: 'trackinfo',\n          trackInfo: trackInfo\n        });\n      });\n      transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n        // convert to video TS since we prioritize video time over audio\n        self.postMessage({\n          action: 'audioTimingInfo',\n          audioTimingInfo: {\n            start: clock.videoTsToSeconds(audioTimingInfo.start),\n            end: clock.videoTsToSeconds(audioTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n        self.postMessage({\n          action: 'videoTimingInfo',\n          videoTimingInfo: {\n            start: clock.videoTsToSeconds(videoTimingInfo.start),\n            end: clock.videoTsToSeconds(videoTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('log', function (log) {\n        self.postMessage({\n          action: 'log',\n          log: log\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = /*#__PURE__*/function () {\n      function MessageHandlers(self, options) {\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      var _proto = MessageHandlers.prototype;\n\n      _proto.init = function init() {\n        if (this.transmuxer) {\n          this.transmuxer.dispose();\n        }\n\n        this.transmuxer = new transmuxer.Transmuxer(this.options);\n        wireTransmuxerEvents(this.self, this.transmuxer);\n      };\n\n      _proto.pushMp4Captions = function pushMp4Captions(data) {\n        if (!this.captionParser) {\n          this.captionParser = new captionParser();\n          this.captionParser.init();\n        }\n\n        var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        var parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n        this.self.postMessage({\n          action: 'mp4Captions',\n          captions: parsed && parsed.captions || [],\n          logs: parsed && parsed.logs || [],\n          data: segment.buffer\n        }, [segment.buffer]);\n      };\n\n      _proto.probeMp4StartTime = function probeMp4StartTime(_ref) {\n        var timescales = _ref.timescales,\n            data = _ref.data;\n        var startTime = probe$2.startTime(timescales, data);\n        this.self.postMessage({\n          action: 'probeMp4StartTime',\n          startTime: startTime,\n          data: data\n        }, [data.buffer]);\n      };\n\n      _proto.probeMp4Tracks = function probeMp4Tracks(_ref2) {\n        var data = _ref2.data;\n        var tracks = probe$2.tracks(data);\n        this.self.postMessage({\n          action: 'probeMp4Tracks',\n          tracks: tracks,\n          data: data\n        }, [data.buffer]);\n      }\n      /**\n       * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n       * internal \"media time,\" as well as whether it contains video and/or audio.\n       *\n       * @private\n       * @param {Uint8Array} bytes - segment bytes\n       * @param {number} baseStartTime\n       *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n       *        This value should be in seconds, as it's converted to a 90khz clock within the\n       *        function body.\n       * @return {Object} The start time of the current segment in \"media time\" as well as\n       *                  whether it contains video and/or audio\n       */\n      ;\n\n      _proto.probeTs = function probeTs(_ref3) {\n        var data = _ref3.data,\n            baseStartTime = _ref3.baseStartTime;\n        var tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock.ONE_SECOND_IN_TS : void 0;\n        var timeInfo = tsInspector.inspect(data, tsStartTime);\n        var result = null;\n\n        if (timeInfo) {\n          result = {\n            // each type's time info comes back as an array of 2 times, start and end\n            hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n            hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n          };\n\n          if (result.hasVideo) {\n            result.videoStart = timeInfo.video[0].ptsTime;\n          }\n\n          if (result.hasAudio) {\n            result.audioStart = timeInfo.audio[0].ptsTime;\n          }\n        }\n\n        this.self.postMessage({\n          action: 'probeTs',\n          result: result,\n          data: data\n        }, [data.buffer]);\n      };\n\n      _proto.clearAllMp4Captions = function clearAllMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearAllCaptions();\n        }\n      };\n\n      _proto.clearParsedMp4Captions = function clearParsedMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearParsedCaptions();\n        }\n      }\n      /**\n       * Adds data (a ts segment) to the start of the transmuxer pipeline for\n       * processing.\n       *\n       * @param {ArrayBuffer} data data to push into the muxer\n       */\n      ;\n\n      _proto.push = function push(data) {\n        // Cast array buffer to correct type for transmuxer\n        var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        this.transmuxer.push(segment);\n      }\n      /**\n       * Recreate the transmuxer so that the next segment added via `push`\n       * start with a fresh transmuxer.\n       */\n      ;\n\n      _proto.reset = function reset() {\n        this.transmuxer.reset();\n      }\n      /**\n       * Set the value that will be used as the `baseMediaDecodeTime` time for the\n       * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n       * set relative to the first based on the PTS values.\n       *\n       * @param {Object} data used to set the timestamp offset in the muxer\n       */\n      ;\n\n      _proto.setTimestampOffset = function setTimestampOffset(data) {\n        var timestampOffset = data.timestampOffset || 0;\n        this.transmuxer.setBaseMediaDecodeTime(Math.round(clock.secondsToVideoTs(timestampOffset)));\n      };\n\n      _proto.setAudioAppendStart = function setAudioAppendStart(data) {\n        this.transmuxer.setAudioAppendStart(Math.ceil(clock.secondsToVideoTs(data.appendStart)));\n      };\n\n      _proto.setRemux = function setRemux(data) {\n        this.transmuxer.setRemux(data.remux);\n      }\n      /**\n       * Forces the pipeline to finish processing the last segment and emit it's\n       * results.\n       *\n       * @param {Object} data event data, not really used\n       */\n      ;\n\n      _proto.flush = function flush(data) {\n        this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n        self.postMessage({\n          action: 'done',\n          type: 'transmuxed'\n        });\n      };\n\n      _proto.endTimeline = function endTimeline() {\n        this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n        // timelines\n\n        self.postMessage({\n          action: 'endedtimeline',\n          type: 'transmuxed'\n        });\n      };\n\n      _proto.alignGopsWith = function alignGopsWith(data) {\n        this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n      };\n\n      return MessageHandlers;\n    }();\n    /**\n     * Our web worker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    self.onmessage = function (event) {\n      if (event.data.action === 'init' && event.data.options) {\n        this.messageHandlers = new MessageHandlers(self, event.data.options);\n        return;\n      }\n\n      if (!this.messageHandlers) {\n        this.messageHandlers = new MessageHandlers(self);\n      }\n\n      if (event.data && event.data.action && event.data.action !== 'init') {\n        if (this.messageHandlers[event.data.action]) {\n          this.messageHandlers[event.data.action](event.data);\n        }\n      }\n    };\n  }));\n  var TransmuxWorker = factory(workerCode$1);\n  /* rollup-plugin-worker-factory end for worker!/Users/abarstow/videojs/http-streaming/src/transmuxer-worker.js */\n\n  var handleData_ = function handleData_(event, transmuxedData, callback) {\n    var _event$data$segment = event.data.segment,\n        type = _event$data$segment.type,\n        initSegment = _event$data$segment.initSegment,\n        captions = _event$data$segment.captions,\n        captionStreams = _event$data$segment.captionStreams,\n        metadata = _event$data$segment.metadata,\n        videoFrameDtsTime = _event$data$segment.videoFrameDtsTime,\n        videoFramePtsTime = _event$data$segment.videoFramePtsTime;\n    transmuxedData.buffer.push({\n      captions: captions,\n      captionStreams: captionStreams,\n      metadata: metadata\n    });\n    var boxes = event.data.segment.boxes || {\n      data: event.data.segment.data\n    };\n    var result = {\n      type: type,\n      // cast ArrayBuffer to TypedArray\n      data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n      initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n    };\n\n    if (typeof videoFrameDtsTime !== 'undefined') {\n      result.videoFrameDtsTime = videoFrameDtsTime;\n    }\n\n    if (typeof videoFramePtsTime !== 'undefined') {\n      result.videoFramePtsTime = videoFramePtsTime;\n    }\n\n    callback(result);\n  };\n\n  var handleDone_ = function handleDone_(_ref) {\n    var transmuxedData = _ref.transmuxedData,\n        callback = _ref.callback; // Previously we only returned data on data events,\n    // not on done events. Clear out the buffer to keep that consistent.\n\n    transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n    // have received\n\n    callback(transmuxedData);\n  };\n\n  var handleGopInfo_ = function handleGopInfo_(event, transmuxedData) {\n    transmuxedData.gopInfo = event.data.gopInfo;\n  };\n\n  var processTransmux = function processTransmux(options) {\n    var transmuxer = options.transmuxer,\n        bytes = options.bytes,\n        audioAppendStart = options.audioAppendStart,\n        gopsToAlignWith = options.gopsToAlignWith,\n        remux = options.remux,\n        onData = options.onData,\n        onTrackInfo = options.onTrackInfo,\n        onAudioTimingInfo = options.onAudioTimingInfo,\n        onVideoTimingInfo = options.onVideoTimingInfo,\n        onVideoSegmentTimingInfo = options.onVideoSegmentTimingInfo,\n        onAudioSegmentTimingInfo = options.onAudioSegmentTimingInfo,\n        onId3 = options.onId3,\n        onCaptions = options.onCaptions,\n        onDone = options.onDone,\n        onEndedTimeline = options.onEndedTimeline,\n        onTransmuxerLog = options.onTransmuxerLog,\n        isEndOfTimeline = options.isEndOfTimeline;\n    var transmuxedData = {\n      buffer: []\n    };\n    var waitForEndedTimelineEvent = isEndOfTimeline;\n\n    var handleMessage = function handleMessage(event) {\n      if (transmuxer.currentTransmux !== options) {\n        // disposed\n        return;\n      }\n\n      if (event.data.action === 'data') {\n        handleData_(event, transmuxedData, onData);\n      }\n\n      if (event.data.action === 'trackinfo') {\n        onTrackInfo(event.data.trackInfo);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        handleGopInfo_(event, transmuxedData);\n      }\n\n      if (event.data.action === 'audioTimingInfo') {\n        onAudioTimingInfo(event.data.audioTimingInfo);\n      }\n\n      if (event.data.action === 'videoTimingInfo') {\n        onVideoTimingInfo(event.data.videoTimingInfo);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n      }\n\n      if (event.data.action === 'audioSegmentTimingInfo') {\n        onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n      }\n\n      if (event.data.action === 'id3Frame') {\n        onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n      }\n\n      if (event.data.action === 'caption') {\n        onCaptions(event.data.caption);\n      }\n\n      if (event.data.action === 'endedtimeline') {\n        waitForEndedTimelineEvent = false;\n        onEndedTimeline();\n      }\n\n      if (event.data.action === 'log') {\n        onTransmuxerLog(event.data.log);\n      } // wait for the transmuxed event since we may have audio and video\n\n\n      if (event.data.type !== 'transmuxed') {\n        return;\n      } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n      // of a timeline, that means there may still be data events before the segment\n      // processing can be considerred complete. In that case, the final event should be\n      // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n\n      if (waitForEndedTimelineEvent) {\n        return;\n      }\n\n      transmuxer.onmessage = null;\n      handleDone_({\n        transmuxedData: transmuxedData,\n        callback: onDone\n      });\n      /* eslint-disable no-use-before-define */\n\n      dequeue(transmuxer);\n      /* eslint-enable */\n    };\n\n    transmuxer.onmessage = handleMessage;\n\n    if (audioAppendStart) {\n      transmuxer.postMessage({\n        action: 'setAudioAppendStart',\n        appendStart: audioAppendStart\n      });\n    } // allow empty arrays to be passed to clear out GOPs\n\n\n    if (Array.isArray(gopsToAlignWith)) {\n      transmuxer.postMessage({\n        action: 'alignGopsWith',\n        gopsToAlignWith: gopsToAlignWith\n      });\n    }\n\n    if (typeof remux !== 'undefined') {\n      transmuxer.postMessage({\n        action: 'setRemux',\n        remux: remux\n      });\n    }\n\n    if (bytes.byteLength) {\n      var buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n      var byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n      transmuxer.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: byteOffset,\n        byteLength: bytes.byteLength\n      }, [buffer]);\n    }\n\n    if (isEndOfTimeline) {\n      transmuxer.postMessage({\n        action: 'endTimeline'\n      });\n    } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n    // the end of the segment\n\n\n    transmuxer.postMessage({\n      action: 'flush'\n    });\n  };\n\n  var dequeue = function dequeue(transmuxer) {\n    transmuxer.currentTransmux = null;\n\n    if (transmuxer.transmuxQueue.length) {\n      transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n\n      if (typeof transmuxer.currentTransmux === 'function') {\n        transmuxer.currentTransmux();\n      } else {\n        processTransmux(transmuxer.currentTransmux);\n      }\n    }\n  };\n\n  var processAction = function processAction(transmuxer, action) {\n    transmuxer.postMessage({\n      action: action\n    });\n    dequeue(transmuxer);\n  };\n\n  var enqueueAction = function enqueueAction(action, transmuxer) {\n    if (!transmuxer.currentTransmux) {\n      transmuxer.currentTransmux = action;\n      processAction(transmuxer, action);\n      return;\n    }\n\n    transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n  };\n\n  var reset = function reset(transmuxer) {\n    enqueueAction('reset', transmuxer);\n  };\n\n  var endTimeline = function endTimeline(transmuxer) {\n    enqueueAction('endTimeline', transmuxer);\n  };\n\n  var transmux = function transmux(options) {\n    if (!options.transmuxer.currentTransmux) {\n      options.transmuxer.currentTransmux = options;\n      processTransmux(options);\n      return;\n    }\n\n    options.transmuxer.transmuxQueue.push(options);\n  };\n\n  var createTransmuxer = function createTransmuxer(options) {\n    var transmuxer = new TransmuxWorker();\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue = [];\n    var term = transmuxer.terminate;\n\n    transmuxer.terminate = function () {\n      transmuxer.currentTransmux = null;\n      transmuxer.transmuxQueue.length = 0;\n      return term.call(transmuxer);\n    };\n\n    transmuxer.postMessage({\n      action: 'init',\n      options: options\n    });\n    return transmuxer;\n  };\n\n  var segmentTransmuxer = {\n    reset: reset,\n    endTimeline: endTimeline,\n    transmux: transmux,\n    createTransmuxer: createTransmuxer\n  };\n\n  var workerCallback = function workerCallback(options) {\n    var transmuxer = options.transmuxer;\n    var endAction = options.endAction || options.action;\n    var callback = options.callback;\n\n    var message = _extends_1({}, options, {\n      endAction: null,\n      transmuxer: null,\n      callback: null\n    });\n\n    var listenForEndEvent = function listenForEndEvent(event) {\n      if (event.data.action !== endAction) {\n        return;\n      }\n\n      transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n      if (event.data.data) {\n        event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n\n        if (options.data) {\n          options.data = event.data.data;\n        }\n      }\n\n      callback(event.data);\n    };\n\n    transmuxer.addEventListener('message', listenForEndEvent);\n\n    if (options.data) {\n      var isArrayBuffer = options.data instanceof ArrayBuffer;\n      message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n      message.byteLength = options.data.byteLength;\n      var transfers = [isArrayBuffer ? options.data : options.data.buffer];\n      transmuxer.postMessage(message, transfers);\n    } else {\n      transmuxer.postMessage(message);\n    }\n  };\n\n  var REQUEST_ERRORS = {\n    FAILURE: 2,\n    TIMEOUT: -101,\n    ABORTED: -102\n  };\n  /**\n   * Abort all requests\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   */\n\n  var abortAll = function abortAll(activeXhrs) {\n    activeXhrs.forEach(function (xhr) {\n      xhr.abort();\n    });\n  };\n  /**\n   * Gather important bandwidth stats once a request has completed\n   *\n   * @param {Object} request - the XHR request from which to gather stats\n   */\n\n\n  var getRequestStats = function getRequestStats(request) {\n    return {\n      bandwidth: request.bandwidth,\n      bytesReceived: request.bytesReceived || 0,\n      roundTripTime: request.roundTripTime || 0\n    };\n  };\n  /**\n   * If possible gather bandwidth stats as a request is in\n   * progress\n   *\n   * @param {Event} progressEvent - an event object from an XHR's progress event\n   */\n\n\n  var getProgressStats = function getProgressStats(progressEvent) {\n    var request = progressEvent.target;\n    var roundTripTime = Date.now() - request.requestTime;\n    var stats = {\n      bandwidth: Infinity,\n      bytesReceived: 0,\n      roundTripTime: roundTripTime || 0\n    };\n    stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n    // because we should only use bandwidth stats on progress to determine when\n    // abort a request early due to insufficient bandwidth\n\n    stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n    return stats;\n  };\n  /**\n   * Handle all error conditions in one place and return an object\n   * with all the information\n   *\n   * @param {Error|null} error - if non-null signals an error occured with the XHR\n   * @param {Object} request -  the XHR request that possibly generated the error\n   */\n\n\n  var handleErrors = function handleErrors(error, request) {\n    if (request.timedout) {\n      return {\n        status: request.status,\n        message: 'HLS request timed-out at URL: ' + request.uri,\n        code: REQUEST_ERRORS.TIMEOUT,\n        xhr: request\n      };\n    }\n\n    if (request.aborted) {\n      return {\n        status: request.status,\n        message: 'HLS request aborted at URL: ' + request.uri,\n        code: REQUEST_ERRORS.ABORTED,\n        xhr: request\n      };\n    }\n\n    if (error) {\n      return {\n        status: request.status,\n        message: 'HLS request errored at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n\n    if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n      return {\n        status: request.status,\n        message: 'Empty HLS response at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n\n    return null;\n  };\n  /**\n   * Handle responses for key data and convert the key data to the correct format\n   * for the decryption step later\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Array} objects - objects to add the key bytes to.\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleKeyResponse = function handleKeyResponse(segment, objects, finishProcessingFn) {\n    return function (error, request) {\n      var response = request.response;\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      if (response.byteLength !== 16) {\n        return finishProcessingFn({\n          status: request.status,\n          message: 'Invalid HLS key at URL: ' + request.uri,\n          code: REQUEST_ERRORS.FAILURE,\n          xhr: request\n        }, segment);\n      }\n\n      var view = new DataView(response);\n      var bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\n      for (var i = 0; i < objects.length; i++) {\n        objects[i].bytes = bytes;\n      }\n\n      return finishProcessingFn(null, segment);\n    };\n  };\n\n  var parseInitSegment = function parseInitSegment(segment, _callback) {\n    var type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n    // only know how to parse mp4 init segments at the moment\n\n    if (type !== 'mp4') {\n      var uri = segment.map.resolvedUri || segment.map.uri;\n      return _callback({\n        internal: true,\n        message: \"Found unsupported \" + (type || 'unknown') + \" container for initialization segment at URL: \" + uri,\n        code: REQUEST_ERRORS.FAILURE\n      });\n    }\n\n    workerCallback({\n      action: 'probeMp4Tracks',\n      data: segment.map.bytes,\n      transmuxer: segment.transmuxer,\n      callback: function callback(_ref) {\n        var tracks = _ref.tracks,\n            data = _ref.data; // transfer bytes back to us\n\n        segment.map.bytes = data;\n        tracks.forEach(function (track) {\n          segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n          if (segment.map.tracks[track.type]) {\n            return;\n          }\n\n          segment.map.tracks[track.type] = track;\n\n          if (typeof track.id === 'number' && track.timescale) {\n            segment.map.timescales = segment.map.timescales || {};\n            segment.map.timescales[track.id] = track.timescale;\n          }\n        });\n        return _callback(null);\n      }\n    });\n  };\n  /**\n   * Handle init-segment responses\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleInitSegmentResponse = function handleInitSegmentResponse(_ref2) {\n    var segment = _ref2.segment,\n        finishProcessingFn = _ref2.finishProcessingFn;\n    return function (error, request) {\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      var bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n      // until the key request is done to decrypt.\n\n      if (segment.map.key) {\n        segment.map.encryptedBytes = bytes;\n        return finishProcessingFn(null, segment);\n      }\n\n      segment.map.bytes = bytes;\n      parseInitSegment(segment, function (parseError) {\n        if (parseError) {\n          parseError.xhr = request;\n          parseError.status = request.status;\n          return finishProcessingFn(parseError, segment);\n        }\n\n        finishProcessingFn(null, segment);\n      });\n    };\n  };\n  /**\n   * Response handler for segment-requests being sure to set the correct\n   * property depending on whether the segment is encryped or not\n   * Also records and keeps track of stats that are used for ABR purposes\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleSegmentResponse = function handleSegmentResponse(_ref3) {\n    var segment = _ref3.segment,\n        finishProcessingFn = _ref3.finishProcessingFn,\n        responseType = _ref3.responseType;\n    return function (error, request) {\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      var newBytes = // although responseText \"should\" exist, this guard serves to prevent an error being\n      // thrown for two primary cases:\n      // 1. the mime type override stops working, or is not implemented for a specific\n      //    browser\n      // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n      responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n      segment.stats = getRequestStats(request);\n\n      if (segment.key) {\n        segment.encryptedBytes = new Uint8Array(newBytes);\n      } else {\n        segment.bytes = new Uint8Array(newBytes);\n      }\n\n      return finishProcessingFn(null, segment);\n    };\n  };\n\n  var transmuxAndNotify = function transmuxAndNotify(_ref4) {\n    var segment = _ref4.segment,\n        bytes = _ref4.bytes,\n        trackInfoFn = _ref4.trackInfoFn,\n        timingInfoFn = _ref4.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref4.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref4.audioSegmentTimingInfoFn,\n        id3Fn = _ref4.id3Fn,\n        captionsFn = _ref4.captionsFn,\n        isEndOfTimeline = _ref4.isEndOfTimeline,\n        endedTimelineFn = _ref4.endedTimelineFn,\n        dataFn = _ref4.dataFn,\n        doneFn = _ref4.doneFn,\n        onTransmuxerLog = _ref4.onTransmuxerLog;\n    var fmp4Tracks = segment.map && segment.map.tracks || {};\n    var isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n    // One reason for this is that in the case of full segments, we want to trust start\n    // times from the probe, rather than the transmuxer.\n\n    var audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n    var audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n    var videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n    var videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n\n    var finish = function finish() {\n      return transmux({\n        bytes: bytes,\n        transmuxer: segment.transmuxer,\n        audioAppendStart: segment.audioAppendStart,\n        gopsToAlignWith: segment.gopsToAlignWith,\n        remux: isMuxed,\n        onData: function onData(result) {\n          result.type = result.type === 'combined' ? 'video' : result.type;\n          dataFn(segment, result);\n        },\n        onTrackInfo: function onTrackInfo(trackInfo) {\n          if (trackInfoFn) {\n            if (isMuxed) {\n              trackInfo.isMuxed = true;\n            }\n\n            trackInfoFn(segment, trackInfo);\n          }\n        },\n        onAudioTimingInfo: function onAudioTimingInfo(audioTimingInfo) {\n          // we only want the first start value we encounter\n          if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n            audioStartFn(audioTimingInfo.start);\n            audioStartFn = null;\n          } // we want to continually update the end time\n\n\n          if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n            audioEndFn(audioTimingInfo.end);\n          }\n        },\n        onVideoTimingInfo: function onVideoTimingInfo(videoTimingInfo) {\n          // we only want the first start value we encounter\n          if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n            videoStartFn(videoTimingInfo.start);\n            videoStartFn = null;\n          } // we want to continually update the end time\n\n\n          if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n            videoEndFn(videoTimingInfo.end);\n          }\n        },\n        onVideoSegmentTimingInfo: function onVideoSegmentTimingInfo(videoSegmentTimingInfo) {\n          videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n        },\n        onAudioSegmentTimingInfo: function onAudioSegmentTimingInfo(audioSegmentTimingInfo) {\n          audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n        },\n        onId3: function onId3(id3Frames, dispatchType) {\n          id3Fn(segment, id3Frames, dispatchType);\n        },\n        onCaptions: function onCaptions(captions) {\n          captionsFn(segment, [captions]);\n        },\n        isEndOfTimeline: isEndOfTimeline,\n        onEndedTimeline: function onEndedTimeline() {\n          endedTimelineFn();\n        },\n        onTransmuxerLog: onTransmuxerLog,\n        onDone: function onDone(result) {\n          if (!doneFn) {\n            return;\n          }\n\n          result.type = result.type === 'combined' ? 'video' : result.type;\n          doneFn(null, segment, result);\n        }\n      });\n    }; // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n    // Meaning cached frame data may corrupt our notion of where this segment\n    // really starts. To get around this, probe for the info needed.\n\n\n    workerCallback({\n      action: 'probeTs',\n      transmuxer: segment.transmuxer,\n      data: bytes,\n      baseStartTime: segment.baseStartTime,\n      callback: function callback(data) {\n        segment.bytes = bytes = data.data;\n        var probeResult = data.result;\n\n        if (probeResult) {\n          trackInfoFn(segment, {\n            hasAudio: probeResult.hasAudio,\n            hasVideo: probeResult.hasVideo,\n            isMuxed: isMuxed\n          });\n          trackInfoFn = null;\n\n          if (probeResult.hasAudio && !isMuxed) {\n            audioStartFn(probeResult.audioStart);\n          }\n\n          if (probeResult.hasVideo) {\n            videoStartFn(probeResult.videoStart);\n          }\n\n          audioStartFn = null;\n          videoStartFn = null;\n        }\n\n        finish();\n      }\n    });\n  };\n\n  var handleSegmentBytes = function handleSegmentBytes(_ref5) {\n    var segment = _ref5.segment,\n        bytes = _ref5.bytes,\n        trackInfoFn = _ref5.trackInfoFn,\n        timingInfoFn = _ref5.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref5.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref5.audioSegmentTimingInfoFn,\n        id3Fn = _ref5.id3Fn,\n        captionsFn = _ref5.captionsFn,\n        isEndOfTimeline = _ref5.isEndOfTimeline,\n        endedTimelineFn = _ref5.endedTimelineFn,\n        dataFn = _ref5.dataFn,\n        doneFn = _ref5.doneFn,\n        onTransmuxerLog = _ref5.onTransmuxerLog;\n    var bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n    // We should have a handler that fetches the number of bytes required\n    // to check if something is fmp4. This will allow us to save bandwidth\n    // because we can only blacklist a playlist and abort requests\n    // by codec after trackinfo triggers.\n\n    if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n      segment.isFmp4 = true;\n      var tracks = segment.map.tracks;\n      var trackInfo = {\n        isFmp4: true,\n        hasVideo: !!tracks.video,\n        hasAudio: !!tracks.audio\n      }; // if we have a audio track, with a codec that is not set to\n      // encrypted audio\n\n      if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n        trackInfo.audioCodec = tracks.audio.codec;\n      } // if we have a video track, with a codec that is not set to\n      // encrypted video\n\n\n      if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n        trackInfo.videoCodec = tracks.video.codec;\n      }\n\n      if (tracks.video && tracks.audio) {\n        trackInfo.isMuxed = true;\n      } // since we don't support appending fmp4 data on progress, we know we have the full\n      // segment here\n\n\n      trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n      // time. The end time can be roughly calculated by the receiver using the duration.\n      //\n      // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n      // that is the true start of the segment (where the playback engine should begin\n      // decoding).\n\n      var finishLoading = function finishLoading(captions) {\n        // if the track still has audio at this point it is only possible\n        // for it to be audio only. See `tracks.video && tracks.audio` if statement\n        // above.\n        // we make sure to use segment.bytes here as that\n        dataFn(segment, {\n          data: bytesAsUint8Array,\n          type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n        });\n\n        if (captions && captions.length) {\n          captionsFn(segment, captions);\n        }\n\n        doneFn(null, segment, {});\n      };\n\n      workerCallback({\n        action: 'probeMp4StartTime',\n        timescales: segment.map.timescales,\n        data: bytesAsUint8Array,\n        transmuxer: segment.transmuxer,\n        callback: function callback(_ref6) {\n          var data = _ref6.data,\n              startTime = _ref6.startTime; // transfer bytes back to us\n\n          bytes = data.buffer;\n          segment.bytes = bytesAsUint8Array = data;\n\n          if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n            timingInfoFn(segment, 'audio', 'start', startTime);\n          }\n\n          if (trackInfo.hasVideo) {\n            timingInfoFn(segment, 'video', 'start', startTime);\n          } // Run through the CaptionParser in case there are captions.\n          // Initialize CaptionParser if it hasn't been yet\n\n\n          if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n            finishLoading();\n            return;\n          }\n\n          workerCallback({\n            action: 'pushMp4Captions',\n            endAction: 'mp4Captions',\n            transmuxer: segment.transmuxer,\n            data: bytesAsUint8Array,\n            timescales: segment.map.timescales,\n            trackIds: [tracks.video.id],\n            callback: function callback(message) {\n              // transfer bytes back to us\n              bytes = message.data.buffer;\n              segment.bytes = bytesAsUint8Array = message.data;\n              message.logs.forEach(function (log) {\n                onTransmuxerLog(videojs.mergeOptions(log, {\n                  stream: 'mp4CaptionParser'\n                }));\n              });\n              finishLoading(message.captions);\n            }\n          });\n        }\n      });\n      return;\n    } // VTT or other segments that don't need processing\n\n\n    if (!segment.transmuxer) {\n      doneFn(null, segment, {});\n      return;\n    }\n\n    if (typeof segment.container === 'undefined') {\n      segment.container = detectContainerForBytes(bytesAsUint8Array);\n    }\n\n    if (segment.container !== 'ts' && segment.container !== 'aac') {\n      trackInfoFn(segment, {\n        hasAudio: false,\n        hasVideo: false\n      });\n      doneFn(null, segment, {});\n      return;\n    } // ts or aac\n\n\n    transmuxAndNotify({\n      segment: segment,\n      bytes: bytes,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    });\n  };\n\n  var decrypt = function decrypt(_ref7, callback) {\n    var id = _ref7.id,\n        key = _ref7.key,\n        encryptedBytes = _ref7.encryptedBytes,\n        decryptionWorker = _ref7.decryptionWorker;\n\n    var decryptionHandler = function decryptionHandler(event) {\n      if (event.data.source === id) {\n        decryptionWorker.removeEventListener('message', decryptionHandler);\n        var decrypted = event.data.decrypted;\n        callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n      }\n    };\n\n    decryptionWorker.addEventListener('message', decryptionHandler);\n    var keyBytes;\n\n    if (key.bytes.slice) {\n      keyBytes = key.bytes.slice();\n    } else {\n      keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n    } // incrementally decrypt the bytes\n\n\n    decryptionWorker.postMessage(createTransferableMessage({\n      source: id,\n      encrypted: encryptedBytes,\n      key: keyBytes,\n      iv: key.iv\n    }), [encryptedBytes.buffer, keyBytes.buffer]);\n  };\n  /**\n   * Decrypt the segment via the decryption web worker\n   *\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after decryption has completed\n   */\n\n\n  var decryptSegment = function decryptSegment(_ref8) {\n    var decryptionWorker = _ref8.decryptionWorker,\n        segment = _ref8.segment,\n        trackInfoFn = _ref8.trackInfoFn,\n        timingInfoFn = _ref8.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref8.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref8.audioSegmentTimingInfoFn,\n        id3Fn = _ref8.id3Fn,\n        captionsFn = _ref8.captionsFn,\n        isEndOfTimeline = _ref8.isEndOfTimeline,\n        endedTimelineFn = _ref8.endedTimelineFn,\n        dataFn = _ref8.dataFn,\n        doneFn = _ref8.doneFn,\n        onTransmuxerLog = _ref8.onTransmuxerLog;\n    decrypt({\n      id: segment.requestId,\n      key: segment.key,\n      encryptedBytes: segment.encryptedBytes,\n      decryptionWorker: decryptionWorker\n    }, function (decryptedBytes) {\n      segment.bytes = decryptedBytes;\n      handleSegmentBytes({\n        segment: segment,\n        bytes: segment.bytes,\n        trackInfoFn: trackInfoFn,\n        timingInfoFn: timingInfoFn,\n        videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n        id3Fn: id3Fn,\n        captionsFn: captionsFn,\n        isEndOfTimeline: isEndOfTimeline,\n        endedTimelineFn: endedTimelineFn,\n        dataFn: dataFn,\n        doneFn: doneFn,\n        onTransmuxerLog: onTransmuxerLog\n      });\n    });\n  };\n  /**\n   * This function waits for all XHRs to finish (with either success or failure)\n   * before continueing processing via it's callback. The function gathers errors\n   * from each request into a single errors array so that the error status for\n   * each request can be examined later.\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after all resources have been\n   *                            downloaded and any decryption completed\n   */\n\n\n  var waitForCompletion = function waitForCompletion(_ref9) {\n    var activeXhrs = _ref9.activeXhrs,\n        decryptionWorker = _ref9.decryptionWorker,\n        trackInfoFn = _ref9.trackInfoFn,\n        timingInfoFn = _ref9.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref9.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref9.audioSegmentTimingInfoFn,\n        id3Fn = _ref9.id3Fn,\n        captionsFn = _ref9.captionsFn,\n        isEndOfTimeline = _ref9.isEndOfTimeline,\n        endedTimelineFn = _ref9.endedTimelineFn,\n        dataFn = _ref9.dataFn,\n        doneFn = _ref9.doneFn,\n        onTransmuxerLog = _ref9.onTransmuxerLog;\n    var count = 0;\n    var didError = false;\n    return function (error, segment) {\n      if (didError) {\n        return;\n      }\n\n      if (error) {\n        didError = true; // If there are errors, we have to abort any outstanding requests\n\n        abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n        // handle the aborted events from those requests, there are some cases where we may\n        // never get an aborted event. For instance, if the network connection is lost and\n        // there were two requests, the first may have triggered an error immediately, while\n        // the second request remains unsent. In that case, the aborted algorithm will not\n        // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n        //\n        // We also can't rely on the ready state of the XHR, since the request that\n        // triggered the connection error may also show as a ready state of 0 (unsent).\n        // Therefore, we have to finish this group of requests immediately after the first\n        // seen error.\n\n        return doneFn(error, segment);\n      }\n\n      count += 1;\n\n      if (count === activeXhrs.length) {\n        var segmentFinish = function segmentFinish() {\n          if (segment.encryptedBytes) {\n            return decryptSegment({\n              decryptionWorker: decryptionWorker,\n              segment: segment,\n              trackInfoFn: trackInfoFn,\n              timingInfoFn: timingInfoFn,\n              videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n              audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n              id3Fn: id3Fn,\n              captionsFn: captionsFn,\n              isEndOfTimeline: isEndOfTimeline,\n              endedTimelineFn: endedTimelineFn,\n              dataFn: dataFn,\n              doneFn: doneFn,\n              onTransmuxerLog: onTransmuxerLog\n            });\n          } // Otherwise, everything is ready just continue\n\n\n          handleSegmentBytes({\n            segment: segment,\n            bytes: segment.bytes,\n            trackInfoFn: trackInfoFn,\n            timingInfoFn: timingInfoFn,\n            videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n            id3Fn: id3Fn,\n            captionsFn: captionsFn,\n            isEndOfTimeline: isEndOfTimeline,\n            endedTimelineFn: endedTimelineFn,\n            dataFn: dataFn,\n            doneFn: doneFn,\n            onTransmuxerLog: onTransmuxerLog\n          });\n        }; // Keep track of when *all* of the requests have completed\n\n\n        segment.endOfAllRequests = Date.now();\n\n        if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n          return decrypt({\n            decryptionWorker: decryptionWorker,\n            // add -init to the \"id\" to differentiate between segment\n            // and init segment decryption, just in case they happen\n            // at the same time at some point in the future.\n            id: segment.requestId + '-init',\n            encryptedBytes: segment.map.encryptedBytes,\n            key: segment.map.key\n          }, function (decryptedBytes) {\n            segment.map.bytes = decryptedBytes;\n            parseInitSegment(segment, function (parseError) {\n              if (parseError) {\n                abortAll(activeXhrs);\n                return doneFn(parseError, segment);\n              }\n\n              segmentFinish();\n            });\n          });\n        }\n\n        segmentFinish();\n      }\n    };\n  };\n  /**\n   * Calls the abort callback if any request within the batch was aborted. Will only call\n   * the callback once per batch of requests, even if multiple were aborted.\n   *\n   * @param {Object} loadendState - state to check to see if the abort function was called\n   * @param {Function} abortFn - callback to call for abort\n   */\n\n\n  var handleLoadEnd = function handleLoadEnd(_ref10) {\n    var loadendState = _ref10.loadendState,\n        abortFn = _ref10.abortFn;\n    return function (event) {\n      var request = event.target;\n\n      if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n        abortFn();\n        loadendState.calledAbortFn = true;\n      }\n    };\n  };\n  /**\n   * Simple progress event callback handler that gathers some stats before\n   * executing a provided callback with the `segment` object\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} progressFn - a callback that is executed each time a progress event\n   *                                is received\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Event} event - the progress event object from XMLHttpRequest\n   */\n\n\n  var handleProgress = function handleProgress(_ref11) {\n    var segment = _ref11.segment,\n        progressFn = _ref11.progressFn;\n    _ref11.trackInfoFn;\n    _ref11.timingInfoFn;\n    _ref11.videoSegmentTimingInfoFn;\n    _ref11.audioSegmentTimingInfoFn;\n    _ref11.id3Fn;\n    _ref11.captionsFn;\n    _ref11.isEndOfTimeline;\n    _ref11.endedTimelineFn;\n    _ref11.dataFn;\n    return function (event) {\n      var request = event.target;\n\n      if (request.aborted) {\n        return;\n      }\n\n      segment.stats = videojs.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n      if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n        segment.stats.firstBytesReceivedAt = Date.now();\n      }\n\n      return progressFn(event, segment);\n    };\n  };\n  /**\n   * Load all resources and does any processing necessary for a media-segment\n   *\n   * Features:\n   *   decrypts the media-segment if it has a key uri and an iv\n   *   aborts *all* requests if *any* one request fails\n   *\n   * The segment object, at minimum, has the following format:\n   * {\n   *   resolvedUri: String,\n   *   [transmuxer]: Object,\n   *   [byterange]: {\n   *     offset: Number,\n   *     length: Number\n   *   },\n   *   [key]: {\n   *     resolvedUri: String\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     iv: {\n   *       bytes: Uint32Array\n   *     }\n   *   },\n   *   [map]: {\n   *     resolvedUri: String,\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     [bytes]: Uint8Array\n   *   }\n   * }\n   * ...where [name] denotes optional properties\n   *\n   * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n   * @param {Object} xhrOptions - the base options to provide to all xhr requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n   *                                       decryption routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n   *                             aborted\n   * @param {Function} progressFn - a callback that receives progress events from the main\n   *                                segment's xhr request\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n   *                            request, transmuxed if needed\n   * @param {Function} doneFn - a callback that is executed only once all requests have\n   *                            succeeded or failed\n   * @return {Function} a function that, when invoked, immediately aborts all\n   *                     outstanding requests\n   */\n\n\n  var mediaSegmentRequest = function mediaSegmentRequest(_ref12) {\n    var xhr = _ref12.xhr,\n        xhrOptions = _ref12.xhrOptions,\n        decryptionWorker = _ref12.decryptionWorker,\n        segment = _ref12.segment,\n        abortFn = _ref12.abortFn,\n        progressFn = _ref12.progressFn,\n        trackInfoFn = _ref12.trackInfoFn,\n        timingInfoFn = _ref12.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref12.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref12.audioSegmentTimingInfoFn,\n        id3Fn = _ref12.id3Fn,\n        captionsFn = _ref12.captionsFn,\n        isEndOfTimeline = _ref12.isEndOfTimeline,\n        endedTimelineFn = _ref12.endedTimelineFn,\n        dataFn = _ref12.dataFn,\n        doneFn = _ref12.doneFn,\n        onTransmuxerLog = _ref12.onTransmuxerLog;\n    var activeXhrs = [];\n    var finishProcessingFn = waitForCompletion({\n      activeXhrs: activeXhrs,\n      decryptionWorker: decryptionWorker,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    }); // optionally, request the decryption key\n\n    if (segment.key && !segment.key.bytes) {\n      var objects = [segment.key];\n\n      if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n        objects.push(segment.map.key);\n      }\n\n      var keyRequestOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      var keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n      var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n      activeXhrs.push(keyXhr);\n    } // optionally, request the associated media init segment\n\n\n    if (segment.map && !segment.map.bytes) {\n      var differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n\n      if (differentMapKey) {\n        var mapKeyRequestOptions = videojs.mergeOptions(xhrOptions, {\n          uri: segment.map.key.resolvedUri,\n          responseType: 'arraybuffer'\n        });\n        var mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n        var mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n        activeXhrs.push(mapKeyXhr);\n      }\n\n      var initSegmentOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.map.resolvedUri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders(segment.map)\n      });\n      var initSegmentRequestCallback = handleInitSegmentResponse({\n        segment: segment,\n        finishProcessingFn: finishProcessingFn\n      });\n      var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n      activeXhrs.push(initSegmentXhr);\n    }\n\n    var segmentRequestOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment)\n    });\n    var segmentRequestCallback = handleSegmentResponse({\n      segment: segment,\n      finishProcessingFn: finishProcessingFn,\n      responseType: segmentRequestOptions.responseType\n    });\n    var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n    segmentXhr.addEventListener('progress', handleProgress({\n      segment: segment,\n      progressFn: progressFn,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn\n    }));\n    activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n    // multiple times, provide a shared state object\n\n    var loadendState = {};\n    activeXhrs.forEach(function (activeXhr) {\n      activeXhr.addEventListener('loadend', handleLoadEnd({\n        loadendState: loadendState,\n        abortFn: abortFn\n      }));\n    });\n    return function () {\n      return abortAll(activeXhrs);\n    };\n  };\n  /**\n   * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n   * codec strings, or translating codec strings into objects that can be examined.\n   */\n\n\n  var logFn$1 = logger('CodecUtils');\n  /**\n   * Returns a set of codec strings parsed from the playlist or the default\n   * codec strings if no codecs were specified in the playlist\n   *\n   * @param {Playlist} media the current media playlist\n   * @return {Object} an object with the video and audio codecs\n   */\n\n  var getCodecs = function getCodecs(media) {\n    // if the codecs were explicitly specified, use them instead of the\n    // defaults\n    var mediaAttributes = media.attributes || {};\n\n    if (mediaAttributes.CODECS) {\n      return parseCodecs(mediaAttributes.CODECS);\n    }\n  };\n\n  var isMaat = function isMaat(master, media) {\n    var mediaAttributes = media.attributes || {};\n    return master && master.mediaGroups && master.mediaGroups.AUDIO && mediaAttributes.AUDIO && master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  };\n\n  var isMuxed = function isMuxed(master, media) {\n    if (!isMaat(master, media)) {\n      return true;\n    }\n\n    var mediaAttributes = media.attributes || {};\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    for (var groupId in audioGroup) {\n      // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n      // or there are listed playlists (the case for DASH, as the manifest will have already\n      // provided all of the details necessary to generate the audio playlist, as opposed to\n      // HLS' externally requested playlists), then the content is demuxed.\n      if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var unwrapCodecList = function unwrapCodecList(codecList) {\n    var codecs = {};\n    codecList.forEach(function (_ref) {\n      var mediaType = _ref.mediaType,\n          type = _ref.type,\n          details = _ref.details;\n      codecs[mediaType] = codecs[mediaType] || [];\n      codecs[mediaType].push(translateLegacyCodec(\"\" + type + details));\n    });\n    Object.keys(codecs).forEach(function (mediaType) {\n      if (codecs[mediaType].length > 1) {\n        logFn$1(\"multiple \" + mediaType + \" codecs found as attributes: \" + codecs[mediaType].join(', ') + \". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.\");\n        codecs[mediaType] = null;\n        return;\n      }\n\n      codecs[mediaType] = codecs[mediaType][0];\n    });\n    return codecs;\n  };\n\n  var codecCount = function codecCount(codecObj) {\n    var count = 0;\n\n    if (codecObj.audio) {\n      count++;\n    }\n\n    if (codecObj.video) {\n      count++;\n    }\n\n    return count;\n  };\n  /**\n   * Calculates the codec strings for a working configuration of\n   * SourceBuffers to play variant streams in a master playlist. If\n   * there is no possible working configuration, an empty object will be\n   * returned.\n   *\n   * @param master {Object} the m3u8 object for the master playlist\n   * @param media {Object} the m3u8 object for the variant playlist\n   * @return {Object} the codec strings.\n   *\n   * @private\n   */\n\n\n  var codecsForPlaylist = function codecsForPlaylist(master, media) {\n    var mediaAttributes = media.attributes || {};\n    var codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n    // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n    if (isMaat(master, media) && !codecInfo.audio) {\n      if (!isMuxed(master, media)) {\n        // It is possible for codecs to be specified on the audio media group playlist but\n        // not on the rendition playlist. This is mostly the case for DASH, where audio and\n        // video are always separate (and separately specified).\n        var defaultCodecs = unwrapCodecList(codecsFromDefault(master, mediaAttributes.AUDIO) || []);\n\n        if (defaultCodecs.audio) {\n          codecInfo.audio = defaultCodecs.audio;\n        }\n      }\n    }\n\n    return codecInfo;\n  };\n\n  var logFn = logger('PlaylistSelector');\n\n  var representationToString = function representationToString(representation) {\n    if (!representation || !representation.playlist) {\n      return;\n    }\n\n    var playlist = representation.playlist;\n    return JSON.stringify({\n      id: playlist.id,\n      bandwidth: representation.bandwidth,\n      width: representation.width,\n      height: representation.height,\n      codecs: playlist.attributes && playlist.attributes.CODECS || ''\n    });\n  }; // Utilities\n\n  /**\n   * Returns the CSS value for the specified property on an element\n   * using `getComputedStyle`. Firefox has a long-standing issue where\n   * getComputedStyle() may return null when running in an iframe with\n   * `display: none`.\n   *\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   * @param {HTMLElement} el the htmlelement to work on\n   * @param {string} the proprety to get the style for\n   */\n\n\n  var safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n    if (!el) {\n      return '';\n    }\n\n    var result = window.getComputedStyle(el);\n\n    if (!result) {\n      return '';\n    }\n\n    return result[property];\n  };\n  /**\n   * Resuable stable sort function\n   *\n   * @param {Playlists} array\n   * @param {Function} sortFn Different comparators\n   * @function stableSort\n   */\n\n\n  var stableSort = function stableSort(array, sortFn) {\n    var newArray = array.slice();\n    array.sort(function (left, right) {\n      var cmp = sortFn(left, right);\n\n      if (cmp === 0) {\n        return newArray.indexOf(left) - newArray.indexOf(right);\n      }\n\n      return cmp;\n    });\n  };\n  /**\n   * A comparator function to sort two playlist object by bandwidth.\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the bandwidth attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the bandwidth of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n    var leftBandwidth;\n    var rightBandwidth;\n\n    if (left.attributes.BANDWIDTH) {\n      leftBandwidth = left.attributes.BANDWIDTH;\n    }\n\n    leftBandwidth = leftBandwidth || window.Number.MAX_VALUE;\n\n    if (right.attributes.BANDWIDTH) {\n      rightBandwidth = right.attributes.BANDWIDTH;\n    }\n\n    rightBandwidth = rightBandwidth || window.Number.MAX_VALUE;\n    return leftBandwidth - rightBandwidth;\n  };\n  /**\n   * A comparator function to sort two playlist object by resolution (width).\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the resolution.width attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the resolution.width of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n    var leftWidth;\n    var rightWidth;\n\n    if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n      leftWidth = left.attributes.RESOLUTION.width;\n    }\n\n    leftWidth = leftWidth || window.Number.MAX_VALUE;\n\n    if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n      rightWidth = right.attributes.RESOLUTION.width;\n    }\n\n    rightWidth = rightWidth || window.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n    // have the same media dimensions/ resolution\n\n    if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n      return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n    }\n\n    return leftWidth - rightWidth;\n  };\n  /**\n   * Chooses the appropriate media playlist based on bandwidth and player size\n   *\n   * @param {Object} master\n   *        Object representation of the master manifest\n   * @param {number} playerBandwidth\n   *        Current calculated bandwidth of the player\n   * @param {number} playerWidth\n   *        Current width of the player element (should account for the device pixel ratio)\n   * @param {number} playerHeight\n   *        Current height of the player element (should account for the device pixel ratio)\n   * @param {boolean} limitRenditionByPlayerDimensions\n   *        True if the player width and height should be used during the selection, false otherwise\n   * @param {Object} masterPlaylistController\n   *        the current masterPlaylistController object\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, masterPlaylistController) {\n    // If we end up getting called before `master` is available, exit early\n    if (!master) {\n      return;\n    }\n\n    var options = {\n      bandwidth: playerBandwidth,\n      width: playerWidth,\n      height: playerHeight,\n      limitRenditionByPlayerDimensions: limitRenditionByPlayerDimensions\n    };\n    var playlists = master.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n    if (Playlist.isAudioOnly(master)) {\n      playlists = masterPlaylistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n      // at the buttom of this function for debugging.\n\n      options.audioOnly = true;\n    } // convert the playlists to an intermediary representation to make comparisons easier\n\n\n    var sortedPlaylistReps = playlists.map(function (playlist) {\n      var bandwidth;\n      var width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n      var height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n      bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n      bandwidth = bandwidth || window.Number.MAX_VALUE;\n      return {\n        bandwidth: bandwidth,\n        width: width,\n        height: height,\n        playlist: playlist\n      };\n    });\n    stableSort(sortedPlaylistReps, function (left, right) {\n      return left.bandwidth - right.bandwidth;\n    }); // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isIncompatible(rep.playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return Playlist.isEnabled(rep.playlist);\n    });\n\n    if (!enabledPlaylistReps.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n        return !Playlist.isDisabled(rep.playlist);\n      });\n    } // filter out any variant that has greater effective bitrate\n    // than the current estimated bandwidth\n\n\n    var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n      return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n    });\n    var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n    // and then taking the very first element\n\n    var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n    if (limitRenditionByPlayerDimensions === false) {\n      var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n      if (_chosenRep && _chosenRep.playlist) {\n        var type = 'sortedPlaylistReps';\n\n        if (bandwidthBestRep) {\n          type = 'bandwidthBestRep';\n        }\n\n        if (enabledPlaylistReps[0]) {\n          type = 'enabledPlaylistReps';\n        }\n\n        logFn(\"choosing \" + representationToString(_chosenRep) + \" using \" + type + \" with options\", options);\n        return _chosenRep.playlist;\n      }\n\n      logFn('could not choose a playlist with options', options);\n      return null;\n    } // filter out playlists without resolution information\n\n\n    var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.width && rep.height;\n    }); // sort variants by resolution\n\n    stableSort(haveResolution, function (left, right) {\n      return left.width - right.width;\n    }); // if we have the exact resolution as the player use it\n\n    var resolutionBestRepList = haveResolution.filter(function (rep) {\n      return rep.width === playerWidth && rep.height === playerHeight;\n    });\n    highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n    var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n    var resolutionPlusOneList;\n    var resolutionPlusOneSmallest;\n    var resolutionPlusOneRep; // find the smallest variant that is larger than the player\n    // if there is no match of exact resolution\n\n    if (!resolutionBestRep) {\n      resolutionPlusOneList = haveResolution.filter(function (rep) {\n        return rep.width > playerWidth || rep.height > playerHeight;\n      }); // find all the variants have the same smallest resolution\n\n      resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n        return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n      }); // ensure that we also pick the highest bandwidth variant that\n      // is just-larger-than the video player\n\n      highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n      resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n        return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n      })[0];\n    }\n\n    var leastPixelDiffRep; // If this selector proves to be better than others,\n    // resolutionPlusOneRep and resolutionBestRep and all\n    // the code involving them should be removed.\n\n    if (masterPlaylistController.experimentalLeastPixelDiffSelector) {\n      // find the variant that is closest to the player's pixel size\n      var leastPixelDiffList = haveResolution.map(function (rep) {\n        rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n        return rep;\n      }); // get the highest bandwidth, closest resolution playlist\n\n      stableSort(leastPixelDiffList, function (left, right) {\n        // sort by highest bandwidth if pixelDiff is the same\n        if (left.pixelDiff === right.pixelDiff) {\n          return right.bandwidth - left.bandwidth;\n        }\n\n        return left.pixelDiff - right.pixelDiff;\n      });\n      leastPixelDiffRep = leastPixelDiffList[0];\n    } // fallback chain of variants\n\n\n    var chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    if (chosenRep && chosenRep.playlist) {\n      var _type = 'sortedPlaylistReps';\n\n      if (leastPixelDiffRep) {\n        _type = 'leastPixelDiffRep';\n      } else if (resolutionPlusOneRep) {\n        _type = 'resolutionPlusOneRep';\n      } else if (resolutionBestRep) {\n        _type = 'resolutionBestRep';\n      } else if (bandwidthBestRep) {\n        _type = 'bandwidthBestRep';\n      } else if (enabledPlaylistReps[0]) {\n        _type = 'enabledPlaylistReps';\n      }\n\n      logFn(\"choosing \" + representationToString(chosenRep) + \" using \" + _type + \" with options\", options);\n      return chosenRep.playlist;\n    }\n\n    logFn('could not choose a playlist with options', options);\n    return null;\n  };\n  /**\n   * Chooses the appropriate media playlist based on the most recent\n   * bandwidth estimate and the player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var lastBandwidthSelector = function lastBandwidthSelector() {\n    var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n    return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n  };\n  /**\n   * Chooses the appropriate media playlist based on an\n   * exponential-weighted moving average of the bandwidth after\n   * filtering for player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @param {number} decay - a number between 0 and 1. Higher values of\n   * this parameter will cause previous bandwidth estimates to lose\n   * significance more quickly.\n   * @return {Function} a function which can be invoked to create a new\n   * playlist selector function.\n   * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n   */\n\n\n  var movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\n    var average = -1;\n    var lastSystemBandwidth = -1;\n\n    if (decay < 0 || decay > 1) {\n      throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n    }\n\n    return function () {\n      var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n\n      if (average < 0) {\n        average = this.systemBandwidth;\n        lastSystemBandwidth = this.systemBandwidth;\n      } // stop the average value from decaying for every 250ms\n      // when the systemBandwidth is constant\n      // and\n      // stop average from setting to a very low value when the\n      // systemBandwidth becomes 0 in case of chunk cancellation\n\n\n      if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n        average = decay * this.systemBandwidth + (1 - decay) * average;\n        lastSystemBandwidth = this.systemBandwidth;\n      }\n\n      return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n    };\n  };\n  /**\n   * Chooses the appropriate media playlist based on the potential to rebuffer\n   *\n   * @param {Object} settings\n   *        Object of information required to use this selector\n   * @param {Object} settings.master\n   *        Object representation of the master manifest\n   * @param {number} settings.currentTime\n   *        The current time of the player\n   * @param {number} settings.bandwidth\n   *        Current measured bandwidth\n   * @param {number} settings.duration\n   *        Duration of the media\n   * @param {number} settings.segmentDuration\n   *        Segment duration to be used in round trip time calculations\n   * @param {number} settings.timeUntilRebuffer\n   *        Time left in seconds until the player has to rebuffer\n   * @param {number} settings.currentTimeline\n   *        The current timeline segments are being loaded from\n   * @param {SyncController} settings.syncController\n   *        SyncController for determining if we have a sync point for a given playlist\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The highest bandwidth playlist with the least amount of rebuffering\n   *         {Number} return.rebufferingImpact\n   *         The amount of time in seconds switching to this playlist will rebuffer. A\n   *         negative value means that switching will cause zero rebuffering.\n   */\n\n\n  var minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n    var master = settings.master,\n        currentTime = settings.currentTime,\n        bandwidth = settings.bandwidth,\n        duration = settings.duration,\n        segmentDuration = settings.segmentDuration,\n        timeUntilRebuffer = settings.timeUntilRebuffer,\n        currentTimeline = settings.currentTimeline,\n        syncController = settings.syncController; // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    var compatiblePlaylists = master.playlists.filter(function (playlist) {\n      return !Playlist.isIncompatible(playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n    if (!enabledPlaylists.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n        return !Playlist.isDisabled(playlist);\n      });\n    }\n\n    var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n    var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n      var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n      // sync request first. This will double the request time\n\n      var numRequests = syncPoint ? 1 : 2;\n      var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n      var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n      return {\n        playlist: playlist,\n        rebufferingImpact: rebufferingImpact\n      };\n    });\n    var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n      return estimate.rebufferingImpact <= 0;\n    }); // Sort by bandwidth DESC\n\n    stableSort(noRebufferingPlaylists, function (a, b) {\n      return comparePlaylistBandwidth(b.playlist, a.playlist);\n    });\n\n    if (noRebufferingPlaylists.length) {\n      return noRebufferingPlaylists[0];\n    }\n\n    stableSort(rebufferingEstimates, function (a, b) {\n      return a.rebufferingImpact - b.rebufferingImpact;\n    });\n    return rebufferingEstimates[0] || null;\n  };\n  /**\n   * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n   * one with video.  If no renditions with video exist, return the lowest audio rendition.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n   *         exists pick the lowest audio rendition.\n   */\n\n\n  var lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n    var _this = this; // filter out any playlists that have been excluded due to\n    // incompatible configurations or playback errors\n\n\n    var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n    stableSort(playlists, function (a, b) {\n      return comparePlaylistBandwidth(a, b);\n    }); // Parse and assume that playlists with no video codec have no video\n    // (this is not necessarily true, although it is generally true).\n    //\n    // If an entire manifest has no valid videos everything will get filtered\n    // out.\n\n    var playlistsWithVideo = playlists.filter(function (playlist) {\n      return !!codecsForPlaylist(_this.playlists.master, playlist).video;\n    });\n    return playlistsWithVideo[0] || null;\n  };\n  /**\n   * Combine all segments into a single Uint8Array\n   *\n   * @param {Object} segmentObj\n   * @return {Uint8Array} concatenated bytes\n   * @private\n   */\n\n\n  var concatSegments = function concatSegments(segmentObj) {\n    var offset = 0;\n    var tempBuffer;\n\n    if (segmentObj.bytes) {\n      tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n      segmentObj.segments.forEach(function (segment) {\n        tempBuffer.set(segment, offset);\n        offset += segment.byteLength;\n      });\n    }\n\n    return tempBuffer;\n  };\n  /**\n   * @file text-tracks.js\n   */\n\n  /**\n   * Create captions text tracks on video.js if they do not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {Object} tech the video.js tech\n   * @param {Object} captionStream the caption stream to create\n   * @private\n   */\n\n\n  var createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStream) {\n    if (!inbandTextTracks[captionStream]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-608'\n      });\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n      if (/^cc708_/.test(captionStream)) {\n        instreamId = 'SERVICE' + captionStream.split('_')[1];\n      }\n\n      var track = tech.textTracks().getTrackById(instreamId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[captionStream] = track;\n      } else {\n        // This section gets called when we have caption services that aren't specified in the manifest.\n        // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n        var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        var label = captionStream;\n        var language = captionStream;\n        var def = false;\n        var captionService = captionServices[instreamId];\n\n        if (captionService) {\n          label = captionService.label;\n          language = captionService.language;\n          def = captionService[\"default\"];\n        } // Otherwise, create a track with the default `CC#` label and\n        // without a language\n\n\n        inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: instreamId,\n          // TODO: investigate why this doesn't seem to turn the caption on by default\n          \"default\": def,\n          label: label,\n          language: language\n        }, false).track;\n      }\n    }\n  };\n  /**\n   * Add caption text track data to a source handler given an array of captions\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {Array} captionArray an array of caption data\n   * @private\n   */\n\n\n  var addCaptionData = function addCaptionData(_ref) {\n    var inbandTextTracks = _ref.inbandTextTracks,\n        captionArray = _ref.captionArray,\n        timestampOffset = _ref.timestampOffset;\n\n    if (!captionArray) {\n      return;\n    }\n\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    });\n  };\n  /**\n   * Define properties on a cue for backwards compatability,\n   * but warn the user that the way that they are using it\n   * is depricated and will be removed at a later date.\n   *\n   * @param {Cue} cue the cue to add the properties on\n   * @private\n   */\n\n\n  var deprecateOldCue = function deprecateOldCue(cue) {\n    Object.defineProperties(cue.frame, {\n      id: {\n        get: function get() {\n          videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n          return cue.value.key;\n        }\n      },\n      value: {\n        get: function get() {\n          videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      },\n      privateData: {\n        get: function get() {\n          videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      }\n    });\n  };\n  /**\n   * Add metadata text track data to a source handler given an array of metadata\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {Array} metadataArray an array of meta data\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {number} videoDuration the duration of the video\n   * @private\n   */\n\n\n  var addMetadata = function addMetadata(_ref2) {\n    var inbandTextTracks = _ref2.inbandTextTracks,\n        metadataArray = _ref2.metadataArray,\n        timestampOffset = _ref2.timestampOffset,\n        videoDuration = _ref2.videoDuration;\n\n    if (!metadataArray) {\n      return;\n    }\n\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    var metadataTrack = inbandTextTracks.metadataTrack_;\n\n    if (!metadataTrack) {\n      return;\n    }\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        metadataTrack.addCue(cue);\n      });\n    });\n\n    if (!metadataTrack.cues || !metadataTrack.cues.length) {\n      return;\n    } // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n\n    var cues = metadataTrack.cues;\n    var cuesArray = []; // Create a copy of the TextTrackCueList...\n    // ...disregarding cues with a falsey value\n\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i]) {\n        cuesArray.push(cues[i]);\n      }\n    } // Group cues by their startTime value\n\n\n    var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n      var timeSlot = obj[cue.startTime] || [];\n      timeSlot.push(cue);\n      obj[cue.startTime] = timeSlot;\n      return obj;\n    }, {}); // Sort startTimes by ascending order\n\n    var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }); // Map each cue group's endTime to the next group's startTime\n\n    sortedStartTimes.forEach(function (startTime, idx) {\n      var cueGroup = cuesGroupedByStartTime[startTime];\n      var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n      cueGroup.forEach(function (cue) {\n        cue.endTime = nextTime;\n      });\n    });\n  };\n  /**\n   * Create metadata text track on video.js if it does not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {string} dispatchType the inband metadata track dispatch type\n   * @param {Object} tech the video.js tech\n   * @private\n   */\n\n\n  var createMetadataTrackIfNotExists = function createMetadataTrackIfNotExists(inbandTextTracks, dispatchType, tech) {\n    if (inbandTextTracks.metadataTrack_) {\n      return;\n    }\n\n    inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  };\n  /**\n   * Remove cues from a track on video.js.\n   *\n   * @param {Double} start start of where we should remove the cue\n   * @param {Double} end end of where the we should remove the cue\n   * @param {Object} track the text track to remove the cues from\n   * @private\n   */\n\n\n  var removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n    var i;\n    var cue;\n\n    if (!track) {\n      return;\n    }\n\n    if (!track.cues) {\n      return;\n    }\n\n    i = track.cues.length;\n\n    while (i--) {\n      cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n      if (cue.startTime >= start && cue.endTime <= end) {\n        track.removeCue(cue);\n      }\n    }\n  };\n  /**\n   * Remove duplicate cues from a track on video.js (a cue is considered a\n   * duplicate if it has the same time interval and text as another)\n   *\n   * @param {Object} track the text track to remove the duplicate cues from\n   * @private\n   */\n\n\n  var removeDuplicateCuesFromTrack = function removeDuplicateCuesFromTrack(track) {\n    var cues = track.cues;\n\n    if (!cues) {\n      return;\n    }\n\n    for (var i = 0; i < cues.length; i++) {\n      var duplicates = [];\n      var occurrences = 0;\n\n      for (var j = 0; j < cues.length; j++) {\n        if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n          occurrences++;\n\n          if (occurrences > 1) {\n            duplicates.push(cues[j]);\n          }\n        }\n      }\n\n      if (duplicates.length) {\n        duplicates.forEach(function (dupe) {\n          return track.removeCue(dupe);\n        });\n      }\n    }\n  };\n  /**\n   * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n   * front of current time.\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {number} currentTime\n   *        The current time\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   * @return {Array}\n   *         List of gops considered safe to append over\n   */\n\n\n  var gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n    if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n      return [];\n    } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n    var currentTimePts = Math.ceil((currentTime - mapping + 3) * clock_1);\n    var i;\n\n    for (i = 0; i < buffer.length; i++) {\n      if (buffer[i].pts > currentTimePts) {\n        break;\n      }\n    }\n\n    return buffer.slice(i);\n  };\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Array} gops\n   *        List of new gop information\n   * @param {boolean} replace\n   *        If true, replace the buffer with the new gop information. If false, append the\n   *        new gop information to the buffer in the right location of time.\n   * @return {Array}\n   *         Updated list of gop information\n   */\n\n\n  var updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n    if (!gops.length) {\n      return buffer;\n    }\n\n    if (replace) {\n      // If we are in safe append mode, then completely overwrite the gop buffer\n      // with the most recent appeneded data. This will make sure that when appending\n      // future segments, we only try to align with gops that are both ahead of current\n      // time and in the last segment appended.\n      return gops.slice();\n    }\n\n    var start = gops[0].pts;\n    var i = 0;\n\n    for (i; i < buffer.length; i++) {\n      if (buffer[i].pts >= start) {\n        break;\n      }\n    }\n\n    return buffer.slice(0, i).concat(gops);\n  };\n  /**\n   * Removes gop information in buffer that overlaps with provided start and end\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Double} start\n   *        position to start the remove at\n   * @param {Double} end\n   *        position to end the remove at\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   */\n\n\n  var removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n    var startPts = Math.ceil((start - mapping) * clock_1);\n    var endPts = Math.ceil((end - mapping) * clock_1);\n    var updatedBuffer = buffer.slice();\n    var i = buffer.length;\n\n    while (i--) {\n      if (buffer[i].pts <= endPts) {\n        break;\n      }\n    }\n\n    if (i === -1) {\n      // no removal because end of remove range is before start of buffer\n      return updatedBuffer;\n    }\n\n    var j = i + 1;\n\n    while (j--) {\n      if (buffer[j].pts <= startPts) {\n        break;\n      }\n    } // clamp remove range start to 0 index\n\n\n    j = Math.max(j, 0);\n    updatedBuffer.splice(j, i - j + 1);\n    return updatedBuffer;\n  };\n\n  var shallowEqual = function shallowEqual(a, b) {\n    // if both are undefined\n    // or one or the other is undefined\n    // they are not equal\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // they are the same object and thus, equal\n\n\n    if (a === b) {\n      return true;\n    } // sort keys so we can make sure they have\n    // all the same keys later.\n\n\n    var akeys = Object.keys(a).sort();\n    var bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n    if (akeys.length !== bkeys.length) {\n      return false;\n    }\n\n    for (var i = 0; i < akeys.length; i++) {\n      var key = akeys[i]; // different sorted keys, not equal\n\n      if (key !== bkeys[i]) {\n        return false;\n      } // different values, not equal\n\n\n      if (a[key] !== b[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }; // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\n\n\n  var QUOTA_EXCEEDED_ERR = 22;\n  /**\n   * The segment loader has no recourse except to fetch a segment in the\n   * current playlist and use the internal timestamps in that segment to\n   * generate a syncPoint. This function returns a good candidate index\n   * for that process.\n   *\n   * @param {Array} segments - the segments array from a playlist.\n   * @return {number} An index of a segment from the playlist to load\n   */\n\n  var getSyncSegmentCandidate = function getSyncSegmentCandidate(currentTimeline, segments, targetTime) {\n    segments = segments || [];\n    var timelineSegments = [];\n    var time = 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (currentTimeline === segment.timeline) {\n        timelineSegments.push(i);\n        time += segment.duration;\n\n        if (time > targetTime) {\n          return i;\n        }\n      }\n    }\n\n    if (timelineSegments.length === 0) {\n      return 0;\n    } // default to the last timeline segment\n\n\n    return timelineSegments[timelineSegments.length - 1];\n  }; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n  // number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n  // as a start to prevent any potential issues with removing content too close to the\n  // playhead.\n\n\n  var MIN_BACK_BUFFER = 1; // in ms\n\n  var CHECK_BUFFER_DELAY = 500;\n\n  var finite = function finite(num) {\n    return typeof num === 'number' && isFinite(num);\n  }; // With most content hovering around 30fps, if a segment has a duration less than a half\n  // frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n  // not accurately reflect the rest of the content.\n\n\n  var MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n\n  var illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, trackInfo) {\n    // Although these checks should most likely cover non 'main' types, for now it narrows\n    // the scope of our checks.\n    if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n      return null;\n    }\n\n    if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n      return 'Neither audio nor video found in segment.';\n    }\n\n    if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n      return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n      return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    return null;\n  };\n  /**\n   * Calculates a time value that is safe to remove from the back buffer without interrupting\n   * playback.\n   *\n   * @param {TimeRange} seekable\n   *        The current seekable range\n   * @param {number} currentTime\n   *        The current time of the player\n   * @param {number} targetDuration\n   *        The target duration of the current playlist\n   * @return {number}\n   *         Time that is safe to remove from the back buffer without interrupting playback\n   */\n\n\n  var safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\n    // 30 seconds before the playhead provides a safe default for trimming.\n    //\n    // Choosing a reasonable default is particularly important for high bitrate content and\n    // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n    // throw an APPEND_BUFFER_ERR.\n    var trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n\n    if (seekable.length) {\n      // Some live playlists may have a shorter window of content than the full allowed back\n      // buffer. For these playlists, don't save content that's no longer within the window.\n      trimTime = Math.max(trimTime, seekable.start(0));\n    } // Don't remove within target duration of the current time to avoid the possibility of\n    // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n    var maxTrimTime = currentTime - targetDuration;\n    return Math.min(maxTrimTime, trimTime);\n  };\n\n  var segmentInfoString = function segmentInfoString(segmentInfo) {\n    var startOfSegment = segmentInfo.startOfSegment,\n        duration = segmentInfo.duration,\n        segment = segmentInfo.segment,\n        part = segmentInfo.part,\n        _segmentInfo$playlist = segmentInfo.playlist,\n        seq = _segmentInfo$playlist.mediaSequence,\n        id = _segmentInfo$playlist.id,\n        _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n        segments = _segmentInfo$playlist2 === void 0 ? [] : _segmentInfo$playlist2,\n        index = segmentInfo.mediaIndex,\n        partIndex = segmentInfo.partIndex,\n        timeline = segmentInfo.timeline;\n    var segmentLen = segments.length - 1;\n    var selection = 'mediaIndex/partIndex increment';\n\n    if (segmentInfo.getMediaInfoForTime) {\n      selection = \"getMediaInfoForTime (\" + segmentInfo.getMediaInfoForTime + \")\";\n    } else if (segmentInfo.isSyncRequest) {\n      selection = 'getSyncSegmentCandidate (isSyncRequest)';\n    }\n\n    if (segmentInfo.independent) {\n      selection += \" with independent \" + segmentInfo.independent;\n    }\n\n    var hasPartIndex = typeof partIndex === 'number';\n    var name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n    var zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n      preloadSegment: segment\n    }) - 1 : 0;\n    return name + \" [\" + (seq + index) + \"/\" + (seq + segmentLen) + \"]\" + (hasPartIndex ? \" part [\" + partIndex + \"/\" + zeroBasedPartCount + \"]\" : '') + (\" segment start/end [\" + segment.start + \" => \" + segment.end + \"]\") + (hasPartIndex ? \" part start/end [\" + part.start + \" => \" + part.end + \"]\" : '') + (\" startOfSegment [\" + startOfSegment + \"]\") + (\" duration [\" + duration + \"]\") + (\" timeline [\" + timeline + \"]\") + (\" selected by [\" + selection + \"]\") + (\" playlist [\" + id + \"]\");\n  };\n\n  var timingInfoPropertyForMedia = function timingInfoPropertyForMedia(mediaType) {\n    return mediaType + \"TimingInfo\";\n  };\n  /**\n   * Returns the timestamp offset to use for the segment.\n   *\n   * @param {number} segmentTimeline\n   *        The timeline of the segment\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} startOfSegment\n   *        The estimated segment start\n   * @param {TimeRange[]} buffered\n   *        The loader's buffer\n   * @param {boolean} overrideCheck\n   *        If true, no checks are made to see if the timestamp offset value should be set,\n   *        but sets it directly to a value.\n   *\n   * @return {number|null}\n   *         Either a number representing a new timestamp offset, or null if the segment is\n   *         part of the same timeline\n   */\n\n\n  var timestampOffsetForSegment = function timestampOffsetForSegment(_ref) {\n    var segmentTimeline = _ref.segmentTimeline,\n        currentTimeline = _ref.currentTimeline,\n        startOfSegment = _ref.startOfSegment,\n        buffered = _ref.buffered,\n        overrideCheck = _ref.overrideCheck; // Check to see if we are crossing a discontinuity to see if we need to set the\n    // timestamp offset on the transmuxer and source buffer.\n    //\n    // Previously, we changed the timestampOffset if the start of this segment was less than\n    // the currently set timestampOffset, but this isn't desirable as it can produce bad\n    // behavior, especially around long running live streams.\n\n    if (!overrideCheck && segmentTimeline === currentTimeline) {\n      return null;\n    } // When changing renditions, it's possible to request a segment on an older timeline. For\n    // instance, given two renditions with the following:\n    //\n    // #EXTINF:10\n    // segment1\n    // #EXT-X-DISCONTINUITY\n    // #EXTINF:10\n    // segment2\n    // #EXTINF:10\n    // segment3\n    //\n    // And the current player state:\n    //\n    // current time: 8\n    // buffer: 0 => 20\n    //\n    // The next segment on the current rendition would be segment3, filling the buffer from\n    // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n    // then the next segment to be requested will be segment1 from the new rendition in\n    // order to fill time 8 and onwards. Using the buffered end would result in repeated\n    // content (since it would position segment1 of the new rendition starting at 20s). This\n    // case can be identified when the new segment's timeline is a prior value. Instead of\n    // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n    // more accurate to the actual start time of the segment.\n\n\n    if (segmentTimeline < currentTimeline) {\n      return startOfSegment;\n    } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n    // value uses the end of the last segment if it is available. While this value\n    // should often be correct, it's better to rely on the buffered end, as the new\n    // content post discontinuity should line up with the buffered end as if it were\n    // time 0 for the new content.\n\n\n    return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n  };\n  /**\n   * Returns whether or not the loader should wait for a timeline change from the timeline\n   * change controller before processing the segment.\n   *\n   * Primary timing in VHS goes by video. This is different from most media players, as\n   * audio is more often used as the primary timing source. For the foreseeable future, VHS\n   * will continue to use video as the primary timing source, due to the current logic and\n   * expectations built around it.\n\n   * Since the timing follows video, in order to maintain sync, the video loader is\n   * responsible for setting both audio and video source buffer timestamp offsets.\n   *\n   * Setting different values for audio and video source buffers could lead to\n   * desyncing. The following examples demonstrate some of the situations where this\n   * distinction is important. Note that all of these cases involve demuxed content. When\n   * content is muxed, the audio and video are packaged together, therefore syncing\n   * separate media playlists is not an issue.\n   *\n   * CASE 1: Audio prepares to load a new timeline before video:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:                     ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader              ^\n   *\n   * In the above example, the audio loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the video loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the audio loader goes ahead and loads and appends the 6th segment before the video\n   * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n   * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n   * the audio loader must provide the audioAppendStart value to trim the content in the\n   * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n   * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n   * segment until that value is provided.\n   *\n   * CASE 2: Video prepares to load a new timeline before audio:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:             ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader                      ^\n   *\n   * In the above example, the video loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the audio loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the video loader goes ahead and loads and appends the 6th segment, then once the\n   * segment is loaded and processed, both the video and audio timestamp offsets will be\n   * set, since video is used as the primary timing source. This is to ensure content lines\n   * up appropriately, as any modifications to the video timing are reflected by audio when\n   * the video loader sets the audio and video timestamp offsets to the same value. However,\n   * setting the timestamp offset for audio before audio has had a chance to change\n   * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n   * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n   *\n   * CASE 3: When seeking, audio prepares to load a new timeline before video\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:           ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader            ^\n   *\n   * In the above example, both audio and video loaders are loading segments from timeline\n   * 0, but imagine that the seek originated from timeline 1.\n   *\n   * When seeking to a new timeline, the timestamp offset will be set based on the expected\n   * segment start of the loaded video segment. In order to maintain sync, the audio loader\n   * must wait for the video loader to load its segment and update both the audio and video\n   * timestamp offsets before it may load and append its own segment. This is the case\n   * whether the seek results in a mismatched segment request (e.g., the audio loader\n   * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n   * loaders choose to load the same segment index from each playlist, as the segments may\n   * not be aligned perfectly, even for matching segment indexes.\n   *\n   * @param {Object} timelinechangeController\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} segmentTimeline\n   *        The timeline of the segment being loaded\n   * @param {('main'|'audio')} loaderType\n   *        The loader type\n   * @param {boolean} audioDisabled\n   *        Whether the audio is disabled for the loader. This should only be true when the\n   *        loader may have muxed audio in its segment, but should not append it, e.g., for\n   *        the main loader when an alternate audio playlist is active.\n   *\n   * @return {boolean}\n   *         Whether the loader should wait for a timeline change from the timeline change\n   *         controller before processing the segment\n   */\n\n\n  var shouldWaitForTimelineChange = function shouldWaitForTimelineChange(_ref2) {\n    var timelineChangeController = _ref2.timelineChangeController,\n        currentTimeline = _ref2.currentTimeline,\n        segmentTimeline = _ref2.segmentTimeline,\n        loaderType = _ref2.loaderType,\n        audioDisabled = _ref2.audioDisabled;\n\n    if (currentTimeline === segmentTimeline) {\n      return false;\n    }\n\n    if (loaderType === 'audio') {\n      var lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n        type: 'main'\n      }); // Audio loader should wait if:\n      //\n      // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n      // * main hasn't yet changed to the timeline audio is looking to load\n\n      return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n    } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n    // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n    // loader's segments (or the content is audio/video only and handled by the main\n    // loader).\n\n\n    if (loaderType === 'main' && audioDisabled) {\n      var pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n        type: 'audio'\n      }); // Main loader should wait for the audio loader if audio is not pending a timeline\n      // change to the current timeline.\n      //\n      // Since the main loader is responsible for setting the timestamp offset for both\n      // audio and video, the main loader must wait for audio to be about to change to its\n      // timeline before setting the offset, otherwise, if audio is behind in loading,\n      // segments from the previous timeline would be adjusted by the new timestamp offset.\n      //\n      // This requirement means that video will not cross a timeline until the audio is\n      // about to cross to it, so that way audio and video will always cross the timeline\n      // together.\n      //\n      // In addition to normal timeline changes, these rules also apply to the start of a\n      // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n      // that these rules apply to the first timeline change because if they did not, it's\n      // possible that the main loader will cross two timelines before the audio loader has\n      // crossed one. Logic may be implemented to handle the startup as a special case, but\n      // it's easier to simply treat all timeline changes the same.\n\n      if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  var mediaDuration = function mediaDuration(timingInfos) {\n    var maxDuration = 0;\n    ['video', 'audio'].forEach(function (type) {\n      var typeTimingInfo = timingInfos[type + \"TimingInfo\"];\n\n      if (!typeTimingInfo) {\n        return;\n      }\n\n      var start = typeTimingInfo.start,\n          end = typeTimingInfo.end;\n      var duration;\n\n      if (typeof start === 'bigint' || typeof end === 'bigint') {\n        duration = window.BigInt(end) - window.BigInt(start);\n      } else if (typeof start === 'number' && typeof end === 'number') {\n        duration = end - start;\n      }\n\n      if (typeof duration !== 'undefined' && duration > maxDuration) {\n        maxDuration = duration;\n      }\n    }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n    // as we only need BigInt when we are above that.\n\n    if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n      maxDuration = Number(maxDuration);\n    }\n\n    return maxDuration;\n  };\n\n  var segmentTooLong = function segmentTooLong(_ref3) {\n    var segmentDuration = _ref3.segmentDuration,\n        maxDuration = _ref3.maxDuration; // 0 duration segments are most likely due to metadata only segments or a lack of\n    // information.\n\n    if (!segmentDuration) {\n      return false;\n    } // For HLS:\n    //\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n    // The EXTINF duration of each Media Segment in the Playlist\n    // file, when rounded to the nearest integer, MUST be less than or equal\n    // to the target duration; longer segments can trigger playback stalls\n    // or other errors.\n    //\n    // For DASH, the mpd-parser uses the largest reported segment duration as the target\n    // duration. Although that reported duration is occasionally approximate (i.e., not\n    // exact), a strict check may report that a segment is too long more often in DASH.\n\n\n    return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n  };\n\n  var getTroublesomeSegmentDurationMessage = function getTroublesomeSegmentDurationMessage(segmentInfo, sourceType) {\n    // Right now we aren't following DASH's timing model exactly, so only perform\n    // this check for HLS content.\n    if (sourceType !== 'hls') {\n      return null;\n    }\n\n    var segmentDuration = mediaDuration({\n      audioTimingInfo: segmentInfo.audioTimingInfo,\n      videoTimingInfo: segmentInfo.videoTimingInfo\n    }); // Don't report if we lack information.\n    //\n    // If the segment has a duration of 0 it is either a lack of information or a\n    // metadata only segment and shouldn't be reported here.\n\n    if (!segmentDuration) {\n      return null;\n    }\n\n    var targetDuration = segmentInfo.playlist.targetDuration;\n    var isSegmentWayTooLong = segmentTooLong({\n      segmentDuration: segmentDuration,\n      maxDuration: targetDuration * 2\n    });\n    var isSegmentSlightlyTooLong = segmentTooLong({\n      segmentDuration: segmentDuration,\n      maxDuration: targetDuration\n    });\n    var segmentTooLongMessage = \"Segment with index \" + segmentInfo.mediaIndex + \" \" + (\"from playlist \" + segmentInfo.playlist.id + \" \") + (\"has a duration of \" + segmentDuration + \" \") + (\"when the reported duration is \" + segmentInfo.duration + \" \") + (\"and the target duration is \" + targetDuration + \". \") + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n\n    if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n      return {\n        severity: isSegmentWayTooLong ? 'warn' : 'info',\n        message: segmentTooLongMessage\n      };\n    }\n\n    return null;\n  };\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class SegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n\n  var SegmentLoader = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SegmentLoader, _videojs$EventTarget);\n\n    function SegmentLoader(settings, options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this; // check pre-conditions\n\n      if (!settings) {\n        throw new TypeError('Initialization settings are required');\n      }\n\n      if (typeof settings.currentTime !== 'function') {\n        throw new TypeError('No currentTime getter specified');\n      }\n\n      if (!settings.mediaSource) {\n        throw new TypeError('No MediaSource specified');\n      } // public properties\n\n\n      _this.bandwidth = settings.bandwidth;\n      _this.throughput = {\n        rate: 0,\n        count: 0\n      };\n      _this.roundTrip = NaN;\n\n      _this.resetStats_();\n\n      _this.mediaIndex = null;\n      _this.partIndex = null; // private settings\n\n      _this.hasPlayed_ = settings.hasPlayed;\n      _this.currentTime_ = settings.currentTime;\n      _this.seekable_ = settings.seekable;\n      _this.seeking_ = settings.seeking;\n      _this.duration_ = settings.duration;\n      _this.mediaSource_ = settings.mediaSource;\n      _this.vhs_ = settings.vhs;\n      _this.loaderType_ = settings.loaderType;\n      _this.currentMediaInfo_ = void 0;\n      _this.startingMediaInfo_ = void 0;\n      _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n      _this.goalBufferLength_ = settings.goalBufferLength;\n      _this.sourceType_ = settings.sourceType;\n      _this.sourceUpdater_ = settings.sourceUpdater;\n      _this.inbandTextTracks_ = settings.inbandTextTracks;\n      _this.state_ = 'INIT';\n      _this.timelineChangeController_ = settings.timelineChangeController;\n      _this.shouldSaveSegmentTimingInfo_ = true;\n      _this.parse708captions_ = settings.parse708captions;\n      _this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n      _this.captionServices_ = settings.captionServices;\n      _this.experimentalExactManifestTimings = settings.experimentalExactManifestTimings; // private instance variables\n\n      _this.checkBufferTimeout_ = null;\n      _this.error_ = void 0;\n      _this.currentTimeline_ = -1;\n      _this.pendingSegment_ = null;\n      _this.xhrOptions_ = null;\n      _this.pendingSegments_ = [];\n      _this.audioDisabled_ = false;\n      _this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n      _this.gopBuffer_ = [];\n      _this.timeMapping_ = 0;\n      _this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n      _this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      _this.playlistOfLastInitSegment_ = {\n        audio: null,\n        video: null\n      };\n      _this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n      // information yet to start the loading process (e.g., if the audio loader wants to\n      // load a segment from the next timeline but the main loader hasn't yet crossed that\n      // timeline), then the load call will be added to the queue until it is ready to be\n      // processed.\n\n      _this.loadQueue_ = [];\n      _this.metadataQueue_ = {\n        id3: [],\n        caption: []\n      };\n      _this.waitingOnRemove_ = false;\n      _this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n      _this.activeInitSegmentId_ = null;\n      _this.initSegments_ = {}; // HLSe playback\n\n      _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n      _this.keyCache_ = {};\n      _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n      // between a time in the display time and a segment index within\n      // a playlist\n\n      _this.syncController_ = settings.syncController;\n      _this.syncPoint_ = {\n        segmentIndex: 0,\n        time: 0\n      };\n      _this.transmuxer_ = _this.createTransmuxer_();\n\n      _this.triggerSyncInfoUpdate_ = function () {\n        return _this.trigger('syncinfoupdate');\n      };\n\n      _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n      _this.mediaSource_.addEventListener('sourceopen', function () {\n        if (!_this.isEndOfStream_()) {\n          _this.ended_ = false;\n        }\n      }); // ...for determining the fetch location\n\n\n      _this.fetchAtBuffer_ = false;\n      _this.logger_ = logger(\"SegmentLoader[\" + _this.loaderType_ + \"]\");\n      Object.defineProperty(assertThisInitialized(_this), 'state', {\n        get: function get() {\n          return this.state_;\n        },\n        set: function set(newState) {\n          if (newState !== this.state_) {\n            this.logger_(this.state_ + \" -> \" + newState);\n            this.state_ = newState;\n            this.trigger('statechange');\n          }\n        }\n      });\n\n      _this.sourceUpdater_.on('ready', function () {\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      }); // Only the main loader needs to listen for pending timeline changes, as the main\n      // loader should wait for audio to be ready to change its timeline so that both main\n      // and audio timelines change together. For more details, see the\n      // shouldWaitForTimelineChange function.\n\n\n      if (_this.loaderType_ === 'main') {\n        _this.timelineChangeController_.on('pendingtimelinechange', function () {\n          if (_this.hasEnoughInfoToAppend_()) {\n            _this.processCallQueue_();\n          }\n        });\n      } // The main loader only listens on pending timeline changes, but the audio loader,\n      // since its loads follow main, needs to listen on timeline changes. For more details,\n      // see the shouldWaitForTimelineChange function.\n\n\n      if (_this.loaderType_ === 'audio') {\n        _this.timelineChangeController_.on('timelinechange', function () {\n          if (_this.hasEnoughInfoToLoad_()) {\n            _this.processLoadQueue_();\n          }\n\n          if (_this.hasEnoughInfoToAppend_()) {\n            _this.processCallQueue_();\n          }\n        });\n      }\n\n      return _this;\n    }\n\n    var _proto = SegmentLoader.prototype;\n\n    _proto.createTransmuxer_ = function createTransmuxer_() {\n      return segmentTransmuxer.createTransmuxer({\n        remux: false,\n        alignGopsAtEnd: this.safeAppend_,\n        keepOriginalTimestamps: true,\n        parse708captions: this.parse708captions_,\n        captionServices: this.captionServices_\n      });\n    }\n    /**\n     * reset all of our media stats\n     *\n     * @private\n     */\n    ;\n\n    _proto.resetStats_ = function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n      this.mediaAppends = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.transmuxer_) {\n        this.transmuxer_.terminate();\n      }\n\n      this.resetStats_();\n\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n        this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      }\n\n      this.off();\n    };\n\n    _proto.setAudio = function setAudio(enable) {\n      this.audioDisabled_ = !enable;\n\n      if (enable) {\n        this.appendInitSegment_.audio = true;\n      } else {\n        // remove current track audio if it gets disabled\n        this.sourceUpdater_.removeAudio(0, this.duration_());\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n    ;\n\n    _proto.abort = function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n    ;\n\n    _proto.abort_ = function abort_() {\n      if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n      this.waitingOnRemove_ = false;\n      window.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n      this.quotaExceededErrorRetryTimeout_ = null;\n    };\n\n    _proto.checkForAbort_ = function checkForAbort_(requestId) {\n      // If the state is APPENDING, then aborts will not modify the state, meaning the first\n      // callback that happens should reset the state to READY so that loading can continue.\n      if (this.state === 'APPENDING' && !this.pendingSegment_) {\n        this.state = 'READY';\n        return true;\n      }\n\n      if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n    ;\n\n    _proto.error = function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.logger_('error occurred:', _error);\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    };\n\n    _proto.endOfStream = function endOfStream() {\n      this.ended_ = true;\n\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n\n      this.gopBuffer_.length = 0;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n    ;\n\n    _proto.buffered_ = function buffered_() {\n      var trackInfo = this.getMediaInfo_();\n\n      if (!this.sourceUpdater_ || !trackInfo) {\n        return videojs.createTimeRanges();\n      }\n\n      if (this.loaderType_ === 'main') {\n        var hasAudio = trackInfo.hasAudio,\n            hasVideo = trackInfo.hasVideo,\n            isMuxed = trackInfo.isMuxed;\n\n        if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n          return this.sourceUpdater_.buffered();\n        }\n\n        if (hasVideo) {\n          return this.sourceUpdater_.videoBuffered();\n        }\n      } // One case that can be ignored for now is audio only with alt audio,\n      // as we don't yet have proper support for that.\n\n\n      return this.sourceUpdater_.audioBuffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n    ;\n\n    _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          tracks: map.tracks,\n          timescales: map.timescales\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n    ;\n\n    _proto.segmentKey = function segmentKey(key, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n    ;\n\n    _proto.couldBeginLoading_ = function couldBeginLoading_() {\n      return this.playlist_ && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n    ;\n\n    _proto.load = function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // if all the configuration is ready, initialize and begin loading\n\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n    ;\n\n    _proto.init_ = function init_() {\n      this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n      // audio data from the muxed content should be removed\n\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n    ;\n\n    _proto.playlist = function playlist(newPlaylist, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      //\n      // Use the INIT state to determine if playback has started, as the playlist sync info\n      // should be fixed once requests begin (as sync points are generated based on sync\n      // info), but not before then.\n\n      if (this.state === 'INIT') {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        }; // Setting the date time mapping means mapping the program date time (if available)\n        // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n        // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n        // be updated as the playlist is refreshed before the loader starts loading, the\n        // program date time mapping needs to be updated as well.\n        //\n        // This mapping is only done for the main loader because a program date time should\n        // map equivalently between playlists.\n\n        if (this.loaderType_ === 'main') {\n          this.syncController_.setDateTimeMappingForStart(newPlaylist);\n        }\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_(\"playlist update [\" + oldId + \" => \" + (newPlaylist.id || newPlaylist.uri) + \"]\"); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must reset/resync the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          // on playlist changes we want it to be possible to fetch\n          // at the buffer for vod but not for live. So we use resetLoader\n          // for live and resyncLoader for vod. We want this because\n          // if a playlist uses independent and non-independent segments/parts the\n          // buffer may not accurately reflect the next segment that we should try\n          // downloading.\n          if (!newPlaylist.endList) {\n            this.resetLoader();\n          } else {\n            this.resyncLoader();\n          }\n        }\n\n        this.currentMediaInfo_ = void 0;\n        this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_(\"live window shift [\" + mediaSequenceDiff + \"]\"); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n        // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n        // new playlist was incremented by 1.\n\n        if (this.mediaIndex < 0) {\n          this.mediaIndex = null;\n          this.partIndex = null;\n        } else {\n          var segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n          // unless parts fell off of the playlist for this segment.\n          // In that case we need to reset partIndex and resync\n\n          if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n            var mediaIndex = this.mediaIndex;\n            this.logger_(\"currently processing part (index \" + this.partIndex + \") no longer exists.\");\n            this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n            // as the part was dropped from our current playlists segment.\n            // The mediaIndex will still be valid so keep that around.\n\n            this.mediaIndex = mediaIndex;\n          }\n        }\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleAppendsDone_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        if (segmentInfo.mediaIndex < 0) {\n          segmentInfo.mediaIndex = null;\n          segmentInfo.partIndex = null;\n        } else {\n          // we need to update the referenced segment so that timing information is\n          // saved for the new playlist's segment, however, if the segment fell off the\n          // playlist, we can leave the old reference and just lose the timing info\n          if (segmentInfo.mediaIndex >= 0) {\n            segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n          }\n\n          if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n            segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n          }\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n    ;\n\n    _proto.pause = function pause() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n    ;\n\n    _proto.paused = function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     *\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n    ;\n\n    _proto.resetEverything = function resetEverything(done) {\n      this.ended_ = false;\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n      // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n      // we then clamp the value to duration if necessary.\n\n      this.remove(0, Infinity, done); // clears fmp4 captions\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        }); // reset the cache in the transmuxer\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n    ;\n\n    _proto.resetLoader = function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n    ;\n\n    _proto.resyncLoader = function resyncLoader() {\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n\n      this.mediaIndex = null;\n      this.partIndex = null;\n      this.syncPoint_ = null;\n      this.isPendingTimestampOffset_ = false;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.abort();\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * @param {boolean} force - force all remove operations to happen\n     * operation is complete\n     */\n    ;\n\n    _proto.remove = function remove(start, end, done, force) {\n      if (done === void 0) {\n        done = function done() {};\n      }\n\n      if (force === void 0) {\n        force = false;\n      } // clamp end to duration if we need to remove everything.\n      // This is due to a browser bug that causes issues if we remove to Infinity.\n      // videojs/videojs-contrib-hls#1225\n\n\n      if (end === Infinity) {\n        end = this.duration_();\n      } // skip removes that would throw an error\n      // commonly happens during a rendition switch at the start of a video\n      // from start 0 to end 0\n\n\n      if (end <= start) {\n        this.logger_('skipping remove because end ${end} is <= start ${start}');\n        return;\n      }\n\n      if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n        this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n        return;\n      } // set it to one to complete this function's removes\n\n\n      var removesRemaining = 1;\n\n      var removeFinished = function removeFinished() {\n        removesRemaining--;\n\n        if (removesRemaining === 0) {\n          done();\n        }\n      };\n\n      if (force || !this.audioDisabled_) {\n        removesRemaining++;\n        this.sourceUpdater_.removeAudio(start, end, removeFinished);\n      } // While it would be better to only remove video if the main loader has video, this\n      // should be safe with audio only as removeVideo will call back even if there's no\n      // video buffer.\n      //\n      // In theory we can check to see if there's video before calling the remove, but in\n      // the event that we're switching between renditions and from video to audio only\n      // (when we add support for that), we may need to clear the video contents despite\n      // what the new media will contain.\n\n\n      if (force || this.loaderType_ === 'main') {\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n        removesRemaining++;\n        this.sourceUpdater_.removeVideo(start, end, removeFinished);\n      } // remove any captions and ID3 tags\n\n\n      for (var track in this.inbandTextTracks_) {\n        removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n      removeFinished();\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n    ;\n\n    _proto.monitorBuffer_ = function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n    ;\n\n    _proto.monitorBufferTick_ = function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n    ;\n\n    _proto.fillBuffer_ = function fillBuffer_() {\n      // TODO since the source buffer maintains a queue, and we shouldn't call this function\n      // except when we're ready for the next segment, this check can most likely be removed\n      if (this.sourceUpdater_.updating()) {\n        return;\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.chooseNextRequest_();\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        this.isPendingTimestampOffset_ = false;\n        this.timelineChangeController_.pendingTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if we should call endOfStream on the media source based\n     * on the state of the buffer or if appened segment was the final\n     * segment in the playlist.\n     *\n     * @param {number} [mediaIndex] the media index of segment we last appended\n     * @param {Object} [playlist] a media playlist object\n     * @return {boolean} do we need to call endOfStream on the MediaSource\n     */\n    ;\n\n    _proto.isEndOfStream_ = function isEndOfStream_(mediaIndex, playlist, partIndex) {\n      if (mediaIndex === void 0) {\n        mediaIndex = this.mediaIndex;\n      }\n\n      if (playlist === void 0) {\n        playlist = this.playlist_;\n      }\n\n      if (partIndex === void 0) {\n        partIndex = this.partIndex;\n      }\n\n      if (!playlist || !this.mediaSource_) {\n        return false;\n      }\n\n      var segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n      var appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n      var appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n      // so that MediaSources can trigger the `ended` event when it runs out of\n      // buffered data instead of waiting for me\n\n      return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n    }\n    /**\n     * Determines what request should be made given current segment loader state.\n     *\n     * @return {Object} a request object that describes the segment/part to load\n     */\n    ;\n\n    _proto.chooseNextRequest_ = function chooseNextRequest_() {\n      var buffered = this.buffered_();\n      var bufferedEnd = lastBufferedEnd(buffered) || 0;\n      var bufferedTime = timeAheadOf(buffered, this.currentTime_());\n      var preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n      var haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n      var segments = this.playlist_.segments; // return no segment if:\n      // 1. we don't have segments\n      // 2. The video has not yet played and we already downloaded a segment\n      // 3. we already have enough buffered time\n\n      if (!segments.length || preloaded || haveEnoughBuffer) {\n        return null;\n      }\n\n      this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      var next = {\n        partIndex: null,\n        mediaIndex: null,\n        startOfSegment: null,\n        playlist: this.playlist_,\n        isSyncRequest: Boolean(!this.syncPoint_)\n      };\n\n      if (next.isSyncRequest) {\n        next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      } else if (this.mediaIndex !== null) {\n        var segment = segments[this.mediaIndex];\n        var partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n        next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n\n        if (segment.parts && segment.parts[partIndex + 1]) {\n          next.mediaIndex = this.mediaIndex;\n          next.partIndex = partIndex + 1;\n        } else {\n          next.mediaIndex = this.mediaIndex + 1;\n        }\n      } else {\n        // Find the segment containing the end of the buffer or current time.\n        var _Playlist$getMediaInf = Playlist.getMediaInfoForTime({\n          experimentalExactManifestTimings: this.experimentalExactManifestTimings,\n          playlist: this.playlist_,\n          currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n          startingPartIndex: this.syncPoint_.partIndex,\n          startingSegmentIndex: this.syncPoint_.segmentIndex,\n          startTime: this.syncPoint_.time\n        }),\n            segmentIndex = _Playlist$getMediaInf.segmentIndex,\n            startTime = _Playlist$getMediaInf.startTime,\n            _partIndex = _Playlist$getMediaInf.partIndex;\n\n        next.getMediaInfoForTime = this.fetchAtBuffer_ ? \"bufferedEnd \" + bufferedEnd : \"currentTime \" + this.currentTime_();\n        next.mediaIndex = segmentIndex;\n        next.startOfSegment = startTime;\n        next.partIndex = _partIndex;\n      }\n\n      var nextSegment = segments[next.mediaIndex];\n      var nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n      // the next partIndex is invalid do not choose a next segment.\n\n      if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n        return null;\n      } // if the next segment has parts, and we don't have a partIndex.\n      // Set partIndex to 0\n\n\n      if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n        next.partIndex = 0;\n        nextPart = nextSegment.parts[0];\n      } // if we have no buffered data then we need to make sure\n      // that the next part we append is \"independent\" if possible.\n      // So we check if the previous part is independent, and request\n      // it if it is.\n\n\n      if (!bufferedTime && nextPart && !nextPart.independent) {\n        if (next.partIndex === 0) {\n          var lastSegment = segments[next.mediaIndex - 1];\n          var lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n\n          if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n            next.mediaIndex -= 1;\n            next.partIndex = lastSegment.parts.length - 1;\n            next.independent = 'previous segment';\n          }\n        } else if (nextSegment.parts[next.partIndex - 1].independent) {\n          next.partIndex -= 1;\n          next.independent = 'previous part';\n        }\n      }\n\n      var ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n      // 1. this is the last segment in the playlist\n      // 2. end of stream has been called on the media source already\n      // 3. the player is not seeking\n\n      if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n        return null;\n      }\n\n      return this.generateSegmentInfo_(next);\n    };\n\n    _proto.generateSegmentInfo_ = function generateSegmentInfo_(options) {\n      var independent = options.independent,\n          playlist = options.playlist,\n          mediaIndex = options.mediaIndex,\n          startOfSegment = options.startOfSegment,\n          isSyncRequest = options.isSyncRequest,\n          partIndex = options.partIndex,\n          forceTimestampOffset = options.forceTimestampOffset,\n          getMediaInfoForTime = options.getMediaInfoForTime;\n      var segment = playlist.segments[mediaIndex];\n      var part = typeof partIndex === 'number' && segment.parts[partIndex];\n      var segmentInfo = {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: part && part.resolvedUri || segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        partIndex: part ? partIndex : null,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: part && part.duration || segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment,\n        part: part,\n        byteLength: 0,\n        transmuxer: this.transmuxer_,\n        // type of getMediaInfoForTime that was used to get this segment\n        getMediaInfoForTime: getMediaInfoForTime,\n        independent: independent\n      };\n      var overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n      segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n        segmentTimeline: segment.timeline,\n        currentTimeline: this.currentTimeline_,\n        startOfSegment: startOfSegment,\n        buffered: this.buffered_(),\n        overrideCheck: overrideCheck\n      });\n      var audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n\n      if (typeof audioBufferedEnd === 'number') {\n        // since the transmuxer is using the actual timing values, but the buffer is\n        // adjusted by the timestamp offset, we must adjust the value here\n        segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n      }\n\n      if (this.sourceUpdater_.videoBuffered().length) {\n        segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_, // since the transmuxer is using the actual timing values, but the time is\n        // adjusted by the timestmap offset, we must adjust the value here\n        this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n      }\n\n      return segmentInfo;\n    } // get the timestampoffset for a segment,\n    // added so that vtt segment loader can override and prevent\n    // adding timestamp offsets.\n    ;\n\n    _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_(options) {\n      return timestampOffsetForSegment(options);\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @private\n     */\n    ;\n\n    _proto.earlyAbortWhenNeeded_ = function earlyAbortWhenNeeded_(stats) {\n      if (this.vhs_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$1) {\n        return;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.vhs_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.trigger('earlyabort');\n    };\n\n    _proto.handleAbort_ = function handleAbort_(segmentInfo) {\n      this.logger_(\"Aborting \" + segmentInfoString(segmentInfo));\n      this.mediaRequestsAborted += 1;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n    ;\n\n    _proto.handleProgress_ = function handleProgress_(event, simpleSegment) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      this.trigger('progress');\n    };\n\n    _proto.handleTrackInfo_ = function handleTrackInfo_(simpleSegment, trackInfo) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      if (this.checkForIllegalMediaSwitch(trackInfo)) {\n        return;\n      }\n\n      trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n      // Guard against cases where we're not getting track info at all until we are\n      // certain that all streams will provide it.\n\n      if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n        this.startingMediaInfo_ = trackInfo;\n        this.currentMediaInfo_ = trackInfo;\n        this.logger_('trackinfo update', trackInfo);\n        this.trigger('trackinfo');\n      } // trackinfo may cause an abort if the trackinfo\n      // causes a codec change to an unsupported codec.\n\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // set trackinfo on the pending segment so that\n      // it can append.\n\n\n      this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    };\n\n    _proto.handleTimingInfo_ = function handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n      segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n      segmentInfo[timingInfoProperty][timeType] = time;\n      this.logger_(\"timinginfo: \" + mediaType + \" - \" + timeType + \" - \" + time); // check if any calls were waiting on the timing info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    };\n\n    _proto.handleCaptions_ = function handleCaptions_(simpleSegment, captionData) {\n      var _this2 = this;\n\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // This could only happen with fmp4 segments, but\n      // should still not happen in general\n\n\n      if (captionData.length === 0) {\n        this.logger_('SegmentLoader received no captions from a caption event');\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n      // can be adjusted by the timestamp offset\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n        return;\n      }\n\n      var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n      var captionTracks = {}; // get total start/end and captions for each track/stream\n\n      captionData.forEach(function (caption) {\n        // caption.stream is actually a track name...\n        // set to the existing values in tracks or default values\n        captionTracks[caption.stream] = captionTracks[caption.stream] || {\n          // Infinity, as any other value will be less than this\n          startTime: Infinity,\n          captions: [],\n          // 0 as an other value will be more than this\n          endTime: 0\n        };\n        var captionTrack = captionTracks[caption.stream];\n        captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n        captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n        captionTrack.captions.push(caption);\n      });\n      Object.keys(captionTracks).forEach(function (trackName) {\n        var _captionTracks$trackN = captionTracks[trackName],\n            startTime = _captionTracks$trackN.startTime,\n            endTime = _captionTracks$trackN.endTime,\n            captions = _captionTracks$trackN.captions;\n        var inbandTextTracks = _this2.inbandTextTracks_;\n\n        _this2.logger_(\"adding cues from \" + startTime + \" -> \" + endTime + \" for \" + trackName);\n\n        createCaptionsTrackIfNotExists(inbandTextTracks, _this2.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n        // We do this because a rendition change that also changes the timescale for captions\n        // will result in captions being re-parsed for certain segments. If we add them again\n        // without clearing we will have two of the same captions visible.\n\n        removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n        addCaptionData({\n          captionArray: captions,\n          inbandTextTracks: inbandTextTracks,\n          timestampOffset: timestampOffset\n        });\n      }); // Reset stored captions since we added parsed\n      // captions to a text track at this point\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    };\n\n    _proto.handleId3_ = function handleId3_(simpleSegment, id3Frames, dispatchType) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n        return;\n      }\n\n      var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n      // audio/video source with a metadata track, and an alt audio with a metadata track.\n      // However, this probably won't happen, and if it does it can be handled then.\n\n      createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n      addMetadata({\n        inbandTextTracks: this.inbandTextTracks_,\n        metadataArray: id3Frames,\n        timestampOffset: timestampOffset,\n        videoDuration: this.duration_()\n      });\n    };\n\n    _proto.processMetadataQueue_ = function processMetadataQueue_() {\n      this.metadataQueue_.id3.forEach(function (fn) {\n        return fn();\n      });\n      this.metadataQueue_.caption.forEach(function (fn) {\n        return fn();\n      });\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n    };\n\n    _proto.processCallQueue_ = function processCallQueue_() {\n      var callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.callQueue_ = [];\n      callQueue.forEach(function (fun) {\n        return fun();\n      });\n    };\n\n    _proto.processLoadQueue_ = function processLoadQueue_() {\n      var loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.loadQueue_ = [];\n      loadQueue.forEach(function (fun) {\n        return fun();\n      });\n    }\n    /**\n     * Determines whether the loader has enough info to load the next segment.\n     *\n     * @return {boolean}\n     *         Whether or not the loader has enough info to load the next segment\n     */\n    ;\n\n    _proto.hasEnoughInfoToLoad_ = function hasEnoughInfoToLoad_() {\n      // Since primary timing goes by video, only the audio loader potentially needs to wait\n      // to load.\n      if (this.loaderType_ !== 'audio') {\n        return true;\n      }\n\n      var segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n      // enough info to load.\n\n      if (!segmentInfo) {\n        return false;\n      } // The first segment can and should be loaded immediately so that source buffers are\n      // created together (before appending). Source buffer creation uses the presence of\n      // audio and video data to determine whether to create audio/video source buffers, and\n      // uses processed (transmuxed or parsed) media to determine the types required.\n\n\n      if (!this.getCurrentMediaInfo_()) {\n        return true;\n      }\n\n      if ( // Technically, instead of waiting to load a segment on timeline changes, a segment\n      // can be requested and downloaded and only wait before it is transmuxed or parsed.\n      // But in practice, there are a few reasons why it is better to wait until a loader\n      // is ready to append that segment before requesting and downloading:\n      //\n      // 1. Because audio and main loaders cross discontinuities together, if this loader\n      //    is waiting for the other to catch up, then instead of requesting another\n      //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n      //    allotted to the loader currently behind.\n      // 2. media-segment-request doesn't have to have logic to consider whether a segment\n      // is ready to be processed or not, isolating the queueing behavior to the loader.\n      // 3. The audio loader bases some of its segment properties on timing information\n      //    provided by the main loader, meaning that, if the logic for waiting on\n      //    processing was in media-segment-request, then it would also need to know how\n      //    to re-generate the segment information after the main loader caught up.\n      shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.getCurrentMediaInfo_ = function getCurrentMediaInfo_(segmentInfo) {\n      if (segmentInfo === void 0) {\n        segmentInfo = this.pendingSegment_;\n      }\n\n      return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n    };\n\n    _proto.getMediaInfo_ = function getMediaInfo_(segmentInfo) {\n      if (segmentInfo === void 0) {\n        segmentInfo = this.pendingSegment_;\n      }\n\n      return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n    };\n\n    _proto.hasEnoughInfoToAppend_ = function hasEnoughInfoToAppend_() {\n      if (!this.sourceUpdater_.ready()) {\n        return false;\n      } // If content needs to be removed or the loader is waiting on an append reattempt,\n      // then no additional content should be appended until the prior append is resolved.\n\n\n      if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n        return false;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n      // we do not have information on this specific\n      // segment yet\n\n      if (!segmentInfo || !trackInfo) {\n        return false;\n      }\n\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n\n      if (hasVideo && !segmentInfo.videoTimingInfo) {\n        return false;\n      } // muxed content only relies on video timing information for now.\n\n\n      if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n        return false;\n      }\n\n      if (shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.handleData_ = function handleData_(simpleSegment, result) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // If there's anything in the call queue, then this data came later and should be\n      // executed after the calls currently queued.\n\n\n      if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n        this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n      this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n      this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n      // logic may change behavior depending on the state, and changing state too early may\n      // inflate our estimates of bandwidth. In the future this should be re-examined to\n      // note more granular states.\n      // don't process and append data if the mediaSource is closed\n\n      if (this.mediaSource_.readyState === 'closed') {\n        return;\n      } // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n        segmentInfo.segment.map = simpleSegment.map;\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      segmentInfo.isFmp4 = simpleSegment.isFmp4;\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n\n      if (segmentInfo.isFmp4) {\n        this.trigger('fmp4');\n        segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n      } else {\n        var trackInfo = this.getCurrentMediaInfo_();\n        var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n        var firstVideoFrameTimeForData;\n\n        if (useVideoTimingInfo) {\n          firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n        } // Segment loader knows more about segment timing than the transmuxer (in certain\n        // aspects), so make any changes required for a more accurate start time.\n        // Don't set the end time yet, as the segment may not be finished processing.\n\n\n        segmentInfo.timingInfo.start = this.trueSegmentStart_({\n          currentStart: segmentInfo.timingInfo.start,\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex,\n          currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n          useVideoTimingInfo: useVideoTimingInfo,\n          firstVideoFrameTimeForData: firstVideoFrameTimeForData,\n          videoTimingInfo: segmentInfo.videoTimingInfo,\n          audioTimingInfo: segmentInfo.audioTimingInfo\n        });\n      } // Init segments for audio and video only need to be appended in certain cases. Now\n      // that data is about to be appended, we can check the final cases to determine\n      // whether we should append an init segment.\n\n\n      this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n      // as we use the start of the segment to offset the best guess (playlist provided)\n      // timestamp offset.\n\n      this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n      // be appended or not.\n\n      if (segmentInfo.isSyncRequest) {\n        // first save/update our timing info for this segment.\n        // this is what allows us to choose an accurate segment\n        // and the main reason we make a sync request.\n        this.updateTimingInfoEnd_(segmentInfo);\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo: segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n        var next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n        // after taking into account its timing info, do not append it.\n\n        if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n          this.logger_('sync segment was incorrect, not appending');\n          return;\n        } // otherwise append it like any other segment as our guess was correct.\n\n\n        this.logger_('sync segment was correct, appending');\n      } // Save some state so that in the future anything waiting on first append (and/or\n      // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n      // we need some notion of whether the timestamp offset or other relevant information\n      // has had a chance to be set.\n\n\n      segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n      this.processMetadataQueue_();\n      this.appendData_(segmentInfo, result);\n    };\n\n    _proto.updateAppendInitSegmentStatus = function updateAppendInitSegmentStatus(segmentInfo, type) {\n      // alt audio doesn't manage timestamp offset\n      if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' && // in the case that we're handling partial data, we don't want to append an init\n      // segment for each chunk\n      !segmentInfo.changedTimestampOffset) {\n        // if the timestamp offset changed, the timeline may have changed, so we have to re-\n        // append init segments\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n      }\n\n      if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n        // make sure we append init segment on playlist changes, in case the media config\n        // changed\n        this.appendInitSegment_[type] = true;\n      }\n    };\n\n    _proto.getInitSegmentAndUpdateState_ = function getInitSegmentAndUpdateState_(_ref4) {\n      var type = _ref4.type,\n          initSegment = _ref4.initSegment,\n          map = _ref4.map,\n          playlist = _ref4.playlist; // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n      // (Section 3) required to parse the applicable Media Segments.  It applies to every\n      // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n      // or until the end of the playlist.\"\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n\n      if (map) {\n        var id = initSegmentId(map);\n\n        if (this.activeInitSegmentId_ === id) {\n          // don't need to re-append the init segment if the ID matches\n          return null;\n        } // a map-specified init segment takes priority over any transmuxed (or otherwise\n        // obtained) init segment\n        //\n        // this also caches the init segment for later use\n\n\n        initSegment = this.initSegmentForMap(map, true).bytes;\n        this.activeInitSegmentId_ = id;\n      } // We used to always prepend init segments for video, however, that shouldn't be\n      // necessary. Instead, we should only append on changes, similar to what we've always\n      // done for audio. This is more important (though may not be that important) for\n      // frame-by-frame appending for LHLS, simply because of the increased quantity of\n      // appends.\n\n\n      if (initSegment && this.appendInitSegment_[type]) {\n        // Make sure we track the playlist that we last used for the init segment, so that\n        // we can re-append the init segment in the event that we get data from a new\n        // playlist. Discontinuities and track changes are handled in other sections.\n        this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n        this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n        // we are appending the muxer init segment\n\n        this.activeInitSegmentId_ = null;\n        return initSegment;\n      }\n\n      return null;\n    };\n\n    _proto.handleQuotaExceededError_ = function handleQuotaExceededError_(_ref5, error) {\n      var _this3 = this;\n\n      var segmentInfo = _ref5.segmentInfo,\n          type = _ref5.type,\n          bytes = _ref5.bytes;\n      var audioBuffered = this.sourceUpdater_.audioBuffered();\n      var videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n      // should be cleared out during the buffer removals. However, log in case it helps\n      // debug.\n\n      if (audioBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n      }\n\n      if (videoBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n      }\n\n      var audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n      var audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n      var videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n      var videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n\n      if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n        // Can't remove enough buffer to make room for new segment (or the browser doesn't\n        // allow for appends of segments this size). In the future, it may be possible to\n        // split up the segment and append in pieces, but for now, error out this playlist\n        // in an attempt to switch to a more manageable rendition.\n        this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + (\"Appended byte length: \" + bytes.byteLength + \", \") + (\"audio buffer: \" + timeRangesToArray(audioBuffered).join(', ') + \", \") + (\"video buffer: \" + timeRangesToArray(videoBuffered).join(', ') + \", \"));\n        this.error({\n          message: 'Quota exceeded error with append of a single segment of content',\n          excludeUntil: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n      // that the segment-loader should block on future events until this one is handled, so\n      // that it doesn't keep moving onto further segments. Adding the call to the call\n      // queue will prevent further appends until waitingOnRemove_ and\n      // quotaExceededErrorRetryTimeout_ are cleared.\n      //\n      // Note that this will only block the current loader. In the case of demuxed content,\n      // the other load may keep filling as fast as possible. In practice, this should be\n      // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n      // source buffer, or video fills without enough room for audio to append (and without\n      // the availability of clearing out seconds of back buffer to make room for audio).\n      // But it might still be good to handle this case in the future as a TODO.\n\n\n      this.waitingOnRemove_ = true;\n      this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }));\n      var currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n      // before retrying.\n\n      var timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n      this.logger_(\"On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to \" + timeToRemoveUntil);\n      this.remove(0, timeToRemoveUntil, function () {\n        _this3.logger_(\"On QUOTA_EXCEEDED_ERR, retrying append in \" + MIN_BACK_BUFFER + \"s\");\n\n        _this3.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n        // attempts (since we can't clear less than the minimum)\n\n        _this3.quotaExceededErrorRetryTimeout_ = window.setTimeout(function () {\n          _this3.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n\n          _this3.quotaExceededErrorRetryTimeout_ = null;\n\n          _this3.processCallQueue_();\n        }, MIN_BACK_BUFFER * 1000);\n      }, true);\n    };\n\n    _proto.handleAppendError_ = function handleAppendError_(_ref6, error) {\n      var segmentInfo = _ref6.segmentInfo,\n          type = _ref6.type,\n          bytes = _ref6.bytes; // if there's no error, nothing to do\n\n      if (!error) {\n        return;\n      }\n\n      if (error.code === QUOTA_EXCEEDED_ERR) {\n        this.handleQuotaExceededError_({\n          segmentInfo: segmentInfo,\n          type: type,\n          bytes: bytes\n        }); // A quota exceeded error should be recoverable with a future re-append, so no need\n        // to trigger an append error.\n\n        return;\n      }\n\n      this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n      this.error(type + \" append of \" + bytes.length + \"b failed for segment \" + (\"#\" + segmentInfo.mediaIndex + \" in playlist \" + segmentInfo.playlist.id)); // If an append errors, we often can't recover.\n      // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n      //\n      // Trigger a special error so that it can be handled separately from normal,\n      // recoverable errors.\n\n      this.trigger('appenderror');\n    };\n\n    _proto.appendToSourceBuffer_ = function appendToSourceBuffer_(_ref7) {\n      var segmentInfo = _ref7.segmentInfo,\n          type = _ref7.type,\n          initSegment = _ref7.initSegment,\n          data = _ref7.data,\n          bytes = _ref7.bytes; // If this is a re-append, bytes were already created and don't need to be recreated\n\n      if (!bytes) {\n        var segments = [data];\n        var byteLength = data.byteLength;\n\n        if (initSegment) {\n          // if the media initialization segment is changing, append it before the content\n          // segment\n          segments.unshift(initSegment);\n          byteLength += initSegment.byteLength;\n        } // Technically we should be OK appending the init segment separately, however, we\n        // haven't yet tested that, and prepending is how we have always done things.\n\n\n        bytes = concatSegments({\n          bytes: byteLength,\n          segments: segments\n        });\n      }\n\n      this.sourceUpdater_.appendBuffer({\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }, this.handleAppendError_.bind(this, {\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }));\n    };\n\n    _proto.handleSegmentTimingInfo_ = function handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n      var timingInfoProperty = type + \"TimingInfo\";\n\n      if (!segment[timingInfoProperty]) {\n        segment[timingInfoProperty] = {};\n      }\n\n      segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n      segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n      segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n      segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n      segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n      segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n    };\n\n    _proto.appendData_ = function appendData_(segmentInfo, result) {\n      var type = result.type,\n          data = result.data;\n\n      if (!data || !data.byteLength) {\n        return;\n      }\n\n      if (type === 'audio' && this.audioDisabled_) {\n        return;\n      }\n\n      var initSegment = this.getInitSegmentAndUpdateState_({\n        type: type,\n        initSegment: result.initSegment,\n        playlist: segmentInfo.playlist,\n        map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n      });\n      this.appendToSourceBuffer_({\n        segmentInfo: segmentInfo,\n        type: type,\n        initSegment: initSegment,\n        data: data\n      });\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n    ;\n\n    _proto.loadSegment_ = function loadSegment_(segmentInfo) {\n      var _this4 = this;\n\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        if (this.transmuxer_) {\n          this.transmuxer_.postMessage({\n            action: 'clearAllMp4Captions'\n          });\n        }\n      }\n\n      if (!this.hasEnoughInfoToLoad_()) {\n        this.loadQueue_.push(function () {\n          // regenerate the audioAppendStart, timestampOffset, etc as they\n          // may have changed since this function was added to the queue.\n          var options = _extends_1({}, segmentInfo, {\n            forceTimestampOffset: true\n          });\n\n          _extends_1(segmentInfo, _this4.generateSegmentInfo_(options));\n\n          _this4.isPendingTimestampOffset_ = false;\n\n          _this4.updateTransmuxerAndRequestSegment_(segmentInfo);\n        });\n        return;\n      }\n\n      this.updateTransmuxerAndRequestSegment_(segmentInfo);\n    };\n\n    _proto.updateTransmuxerAndRequestSegment_ = function updateTransmuxerAndRequestSegment_(segmentInfo) {\n      var _this5 = this; // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n      // the transmuxer still needs to be updated before then.\n      //\n      // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n      // offset must be passed to the transmuxer for stream correcting adjustments.\n\n\n      if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n        this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n        segmentInfo.gopsToAlignWith = [];\n        this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n        this.transmuxer_.postMessage({\n          action: 'setTimestampOffset',\n          timestampOffset: segmentInfo.timestampOffset\n        });\n      }\n\n      var simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n      var isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n      var isWalkingForward = this.mediaIndex !== null;\n      var isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ && // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n      // the first timeline\n      segmentInfo.timeline > 0;\n      var isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n      this.logger_(\"Requesting \" + segmentInfoString(segmentInfo)); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n      // then this init segment has never been seen before and should be appended.\n      //\n      // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n      // both to true and leave the decision of whether to append the init segment to append time.\n\n      if (simpleSegment.map && !simpleSegment.map.bytes) {\n        this.logger_('going to request init segment.');\n        this.appendInitSegment_ = {\n          video: true,\n          audio: true\n        };\n      }\n\n      segmentInfo.abortRequests = mediaSegmentRequest({\n        xhr: this.vhs_.xhr,\n        xhrOptions: this.xhrOptions_,\n        decryptionWorker: this.decrypter_,\n        segment: simpleSegment,\n        abortFn: this.handleAbort_.bind(this, segmentInfo),\n        progressFn: this.handleProgress_.bind(this),\n        trackInfoFn: this.handleTrackInfo_.bind(this),\n        timingInfoFn: this.handleTimingInfo_.bind(this),\n        videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n        audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n        captionsFn: this.handleCaptions_.bind(this),\n        isEndOfTimeline: isEndOfTimeline,\n        endedTimelineFn: function endedTimelineFn() {\n          _this5.logger_('received endedtimeline callback');\n        },\n        id3Fn: this.handleId3_.bind(this),\n        dataFn: this.handleData_.bind(this),\n        doneFn: this.segmentRequestFinished_.bind(this),\n        onTransmuxerLog: function onTransmuxerLog(_ref8) {\n          var message = _ref8.message,\n              level = _ref8.level,\n              stream = _ref8.stream;\n\n          _this5.logger_(segmentInfoString(segmentInfo) + \" logged from transmuxer stream \" + stream + \" as a \" + level + \": \" + message);\n        }\n      });\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n    ;\n\n    _proto.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @return {Object} a simplified segment object copy\n     */\n    ;\n\n    _proto.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var simpleSegment = {\n        resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n        byterange: part ? part.byterange : segment.byterange,\n        requestId: segmentInfo.requestId,\n        transmuxer: segmentInfo.transmuxer,\n        audioAppendStart: segmentInfo.audioAppendStart,\n        gopsToAlignWith: segmentInfo.gopsToAlignWith,\n        part: segmentInfo.part\n      };\n      var previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n\n      if (previousSegment && previousSegment.timeline === segment.timeline) {\n        // The baseStartTime of a segment is used to handle rollover when probing the TS\n        // segment to retrieve timing information. Since the probe only looks at the media's\n        // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n        // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n        // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n        // seconds of media time, so should be used here. The previous segment is used since\n        // the end of the previous segment should represent the beginning of the current\n        // segment, so long as they are on the same timeline.\n        if (previousSegment.videoTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n        } else if (previousSegment.audioTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n        }\n      }\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegmentForMap(segment.map);\n      }\n\n      return simpleSegment;\n    };\n\n    _proto.saveTransferStats_ = function saveTransferStats_(stats) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (stats) {\n        this.mediaBytesTransferred += stats.bytesReceived;\n        this.mediaTransferDuration += stats.roundTripTime;\n      }\n    };\n\n    _proto.saveBandwidthRelatedStats_ = function saveBandwidthRelatedStats_(duration, stats) {\n      // byteLength will be used for throughput, and should be based on bytes receieved,\n      // which we only know at the end of the request and should reflect total bytes\n      // downloaded rather than just bytes processed from components of the segment\n      this.pendingSegment_.byteLength = stats.bytesReceived;\n\n      if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(\"Ignoring segment's bandwidth because its duration of \" + duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n        return;\n      }\n\n      this.bandwidth = stats.bandwidth;\n      this.roundTrip = stats.roundTripTime;\n    };\n\n    _proto.handleTimeout_ = function handleTimeout_() {\n      // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functinality between segment loaders\n      this.mediaRequestsTimedout += 1;\n      this.bandwidth = 1;\n      this.roundTrip = NaN;\n      this.trigger('bandwidthupdate');\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n    ;\n\n    _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n      // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n      // check the call queue directly since this function doesn't need to deal with any\n      // data, and can continue even if the source buffers are not set up and we didn't get\n      // any data from the segment\n      if (this.callQueue_.length) {\n        this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n        return;\n      }\n\n      this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n      if (!this.pendingSegment_) {\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n      if (result.gopInfo) {\n        this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n      } // Although we may have already started appending on progress, we shouldn't switch the\n      // state away from loading until we are officially done loading the segment data.\n\n\n      this.state = 'APPENDING'; // used for testing\n\n      this.trigger('appending');\n      this.waitForAppendsToComplete_(segmentInfo);\n    };\n\n    _proto.setTimeMapping_ = function setTimeMapping_(timeline) {\n      var timelineMapping = this.syncController_.mappingForTimeline(timeline);\n\n      if (timelineMapping !== null) {\n        this.timeMapping_ = timelineMapping;\n      }\n    };\n\n    _proto.updateMediaSecondsLoaded_ = function updateMediaSecondsLoaded_(segment) {\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n    };\n\n    _proto.shouldUpdateTransmuxerTimestampOffset_ = function shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n      if (timestampOffset === null) {\n        return false;\n      } // note that we're potentially using the same timestamp offset for both video and\n      // audio\n\n\n      if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        return true;\n      }\n\n      if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.trueSegmentStart_ = function trueSegmentStart_(_ref9) {\n      var currentStart = _ref9.currentStart,\n          playlist = _ref9.playlist,\n          mediaIndex = _ref9.mediaIndex,\n          firstVideoFrameTimeForData = _ref9.firstVideoFrameTimeForData,\n          currentVideoTimestampOffset = _ref9.currentVideoTimestampOffset,\n          useVideoTimingInfo = _ref9.useVideoTimingInfo,\n          videoTimingInfo = _ref9.videoTimingInfo,\n          audioTimingInfo = _ref9.audioTimingInfo;\n\n      if (typeof currentStart !== 'undefined') {\n        // if start was set once, keep using it\n        return currentStart;\n      }\n\n      if (!useVideoTimingInfo) {\n        return audioTimingInfo.start;\n      }\n\n      var previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n      // within that segment. Since the transmuxer maintains a cache of incomplete data\n      // from and/or the last frame seen, the start time may reflect a frame that starts\n      // in the previous segment. Check for that case and ensure the start time is\n      // accurate for the segment.\n\n      if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n        return firstVideoFrameTimeForData;\n      }\n\n      return videoTimingInfo.start;\n    };\n\n    _proto.waitForAppendsToComplete_ = function waitForAppendsToComplete_(segmentInfo) {\n      var trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n\n      if (!trackInfo) {\n        this.error({\n          message: 'No starting media returned, likely due to an unsupported media format.',\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n      // on each queue this loader is responsible for to ensure that the appends are\n      // complete.\n\n\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n      var waitForVideo = this.loaderType_ === 'main' && hasVideo;\n      var waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n      segmentInfo.waitingOnAppends = 0; // segments with no data\n\n      if (!segmentInfo.hasAppendedData_) {\n        if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n          // When there's no audio or video data in the segment, there's no audio or video\n          // timing information.\n          //\n          // If there's no audio or video timing information, then the timestamp offset\n          // can't be adjusted to the appropriate value for the transmuxer and source\n          // buffers.\n          //\n          // Therefore, the next segment should be used to set the timestamp offset.\n          this.isPendingTimestampOffset_ = true;\n        } // override settings for metadata only segments\n\n\n        segmentInfo.timingInfo = {\n          start: 0\n        };\n        segmentInfo.waitingOnAppends++;\n\n        if (!this.isPendingTimestampOffset_) {\n          // update the timestampoffset\n          this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n          // no video/audio data.\n\n          this.processMetadataQueue_();\n        } // append is \"done\" instantly with no data.\n\n\n        this.checkAppendsDone_(segmentInfo);\n        return;\n      } // Since source updater could call back synchronously, do the increments first.\n\n\n      if (waitForVideo) {\n        segmentInfo.waitingOnAppends++;\n      }\n\n      if (waitForAudio) {\n        segmentInfo.waitingOnAppends++;\n      }\n\n      if (waitForVideo) {\n        this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n\n      if (waitForAudio) {\n        this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n    };\n\n    _proto.checkAppendsDone_ = function checkAppendsDone_(segmentInfo) {\n      if (this.checkForAbort_(segmentInfo.requestId)) {\n        return;\n      }\n\n      segmentInfo.waitingOnAppends--;\n\n      if (segmentInfo.waitingOnAppends === 0) {\n        this.handleAppendsDone_();\n      }\n    };\n\n    _proto.checkForIllegalMediaSwitch = function checkForIllegalMediaSwitch(trackInfo) {\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.updateSourceBufferTimestampOffset_ = function updateSourceBufferTimestampOffset_(segmentInfo) {\n      if (segmentInfo.timestampOffset === null || // we don't yet have the start for whatever media type (video or audio) has\n      // priority, timing-wise, so we must wait\n      typeof segmentInfo.timingInfo.start !== 'number' || // already updated the timestamp offset for this segment\n      segmentInfo.changedTimestampOffset || // the alt audio loader should not be responsible for setting the timestamp offset\n      this.loaderType_ !== 'main') {\n        return;\n      }\n\n      var didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n      // the timing info here comes from video. In the event that the audio is longer than\n      // the video, this will trim the start of the audio.\n      // This also trims any offset from 0 at the beginning of the media\n\n      segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n        videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n        audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n        timingInfo: segmentInfo.timingInfo\n      }); // In the event that there are part segment downloads, each will try to update the\n      // timestamp offset. Retaining this bit of state prevents us from updating in the\n      // future (within the same segment), however, there may be a better way to handle it.\n\n      segmentInfo.changedTimestampOffset = true;\n\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n\n      if (didChange) {\n        this.trigger('timestampoffset');\n      }\n    };\n\n    _proto.getSegmentStartTimeForTimestampOffsetCalculation_ = function getSegmentStartTimeForTimestampOffsetCalculation_(_ref10) {\n      var videoTimingInfo = _ref10.videoTimingInfo,\n          audioTimingInfo = _ref10.audioTimingInfo,\n          timingInfo = _ref10.timingInfo;\n\n      if (!this.useDtsForTimestampOffset_) {\n        return timingInfo.start;\n      }\n\n      if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n        return videoTimingInfo.transmuxedDecodeStart;\n      } // handle audio only\n\n\n      if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n        return audioTimingInfo.transmuxedDecodeStart;\n      } // handle content not transmuxed (e.g., MP4)\n\n\n      return timingInfo.start;\n    };\n\n    _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_(segmentInfo) {\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n      var trackInfo = this.getMediaInfo_();\n      var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      var prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n\n      if (!prioritizedTimingInfo) {\n        return;\n      }\n\n      segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ? // End time may not exist in a case where we aren't parsing the full segment (one\n      // current example is the case of fmp4), so use the rough duration to calculate an\n      // end time.\n      prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleAppendsDone_ = function handleAppendsDone_() {\n      // appendsdone can cause an abort\n      if (this.pendingSegment_) {\n        this.trigger('appendsdone');\n      }\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n        // all appending cases?\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n      // best to wait until all appends are done so we're sure that the primary media is\n      // finished (and we have its end time).\n\n      this.updateTimingInfoEnd_(segmentInfo);\n\n      if (this.shouldSaveSegmentTimingInfo_) {\n        // Timeline mappings should only be saved for the main loader. This is for multiple\n        // reasons:\n        //\n        // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n        //    and the main loader try to save the timeline mapping, whichever comes later\n        //    will overwrite the first. In theory this is OK, as the mappings should be the\n        //    same, however, it breaks for (2)\n        // 2) In the event of a live stream, the initial live point will make for a somewhat\n        //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n        //    the mapping will be off for one of the streams, dependent on which one was\n        //    first saved (see (1)).\n        // 3) Primary timing goes by video in VHS, so the mapping should be video.\n        //\n        // Since the audio loader will wait for the main loader to load the first segment,\n        // the main loader will save the first timeline mapping, and ensure that there won't\n        // be a case where audio loads two segments without saving a mapping (thus leading\n        // to missing segment timing info).\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo: segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n      }\n\n      var segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n\n      if (segmentDurationMessage) {\n        if (segmentDurationMessage.severity === 'warn') {\n          videojs.log.warn(segmentDurationMessage.message);\n        } else {\n          this.logger_(segmentDurationMessage.message);\n        }\n      }\n\n      this.recordThroughput_(segmentInfo);\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate'); // if the sync request was not appended\n        // then it was not the correct segment.\n        // throw it away and use the data it gave us\n        // to get the correct one.\n\n        if (!segmentInfo.hasAppendedData_) {\n          this.logger_(\"Throwing away un-appended sync request \" + segmentInfoString(segmentInfo));\n          return;\n        }\n      }\n\n      this.logger_(\"Appended \" + segmentInfoString(segmentInfo));\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.fetchAtBuffer_ = true;\n\n      if (this.currentTimeline_ !== segmentInfo.timeline) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        }); // If audio is not disabled, the main segment loader is responsible for updating\n        // the audio timeline as well. If the content is video only, this won't have any\n        // impact.\n\n        if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n          this.timelineChangeController_.lastTimelineChange({\n            type: 'audio',\n            from: this.currentTimeline_,\n            to: segmentInfo.timeline\n          });\n        }\n      }\n\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate');\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n      var badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (badSegmentGuess || badPartGuess) {\n        this.logger_(\"bad \" + (badSegmentGuess ? 'segment' : 'part') + \" \" + segmentInfoString(segmentInfo));\n        this.resetEverything();\n        return;\n      }\n\n      var isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress');\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n        this.endOfStream();\n      } // used for testing\n\n\n      this.trigger('appended');\n\n      if (segmentInfo.hasAppendedData_) {\n        this.mediaAppends++;\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n    ;\n\n    _proto.recordThroughput_ = function recordThroughput_(segmentInfo) {\n      if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(\"Ignoring segment's throughput because its duration of \" + segmentInfo.duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n        return;\n      }\n\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n    ;\n\n    _proto.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window.WebKitDataCue || window.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.id,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    };\n\n    return SegmentLoader;\n  }(videojs.EventTarget);\n\n  function noop() {}\n\n  var toTitleCase = function toTitleCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toUpperCase();\n    });\n  };\n\n  var bufferTypes = ['video', 'audio'];\n\n  var _updating = function updating(type, sourceUpdater) {\n    var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n    return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n  };\n\n  var nextQueueIndexOfType = function nextQueueIndexOfType(type, queue) {\n    for (var i = 0; i < queue.length; i++) {\n      var queueEntry = queue[i];\n\n      if (queueEntry.type === 'mediaSource') {\n        // If the next entry is a media source entry (uses multiple source buffers), block\n        // processing to allow it to go through first.\n        return null;\n      }\n\n      if (queueEntry.type === type) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  var shiftQueue = function shiftQueue(type, sourceUpdater) {\n    if (sourceUpdater.queue.length === 0) {\n      return;\n    }\n\n    var queueIndex = 0;\n    var queueEntry = sourceUpdater.queue[queueIndex];\n\n    if (queueEntry.type === 'mediaSource') {\n      if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n        sourceUpdater.queue.shift();\n        queueEntry.action(sourceUpdater);\n\n        if (queueEntry.doneFn) {\n          queueEntry.doneFn();\n        } // Only specific source buffer actions must wait for async updateend events. Media\n        // Source actions process synchronously. Therefore, both audio and video source\n        // buffers are now clear to process the next queue entries.\n\n\n        shiftQueue('audio', sourceUpdater);\n        shiftQueue('video', sourceUpdater);\n      } // Media Source actions require both source buffers, so if the media source action\n      // couldn't process yet (because one or both source buffers are busy), block other\n      // queue actions until both are available and the media source action can process.\n\n\n      return;\n    }\n\n    if (type === 'mediaSource') {\n      // If the queue was shifted by a media source action (this happens when pushing a\n      // media source action onto the queue), then it wasn't from an updateend event from an\n      // audio or video source buffer, so there's no change from previous state, and no\n      // processing should be done.\n      return;\n    } // Media source queue entries don't need to consider whether the source updater is\n    // started (i.e., source buffers are created) as they don't need the source buffers, but\n    // source buffer queue entries do.\n\n\n    if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || _updating(type, sourceUpdater)) {\n      return;\n    }\n\n    if (queueEntry.type !== type) {\n      queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n\n      if (queueIndex === null) {\n        // Either there's no queue entry that uses this source buffer type in the queue, or\n        // there's a media source queue entry before the next entry of this type, in which\n        // case wait for that action to process first.\n        return;\n      }\n\n      queueEntry = sourceUpdater.queue[queueIndex];\n    }\n\n    sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n    //\n    // The queue pending operation must be set before the action is performed in the event\n    // that the action results in a synchronous event that is acted upon. For instance, if\n    // an exception is thrown that can be handled, it's possible that new actions will be\n    // appended to an empty queue and immediately executed, but would not have the correct\n    // pending information if this property was set after the action was performed.\n\n    sourceUpdater.queuePending[type] = queueEntry;\n    queueEntry.action(type, sourceUpdater);\n\n    if (!queueEntry.doneFn) {\n      // synchronous operation, process next entry\n      sourceUpdater.queuePending[type] = null;\n      shiftQueue(type, sourceUpdater);\n      return;\n    }\n  };\n\n  var cleanupBuffer = function cleanupBuffer(type, sourceUpdater) {\n    var buffer = sourceUpdater[type + \"Buffer\"];\n    var titleType = toTitleCase(type);\n\n    if (!buffer) {\n      return;\n    }\n\n    buffer.removeEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n    buffer.removeEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n    sourceUpdater.codecs[type] = null;\n    sourceUpdater[type + \"Buffer\"] = null;\n  };\n\n  var inSourceBuffers = function inSourceBuffers(mediaSource, sourceBuffer) {\n    return mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n  };\n\n  var actions = {\n    appendBuffer: function appendBuffer(bytes, segmentInfo, onError) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Appending segment \" + segmentInfo.mediaIndex + \"'s \" + bytes.length + \" bytes to \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.appendBuffer(bytes);\n        } catch (e) {\n          sourceUpdater.logger_(\"Error with code \" + e.code + \" \" + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + (\"when appending segment \" + segmentInfo.mediaIndex + \" to \" + type + \"Buffer\"));\n          sourceUpdater.queuePending[type] = null;\n          onError(e);\n        }\n      };\n    },\n    remove: function remove(start, end) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Removing \" + start + \" to \" + end + \" from \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.remove(start, end);\n        } catch (e) {\n          sourceUpdater.logger_(\"Remove \" + start + \" to \" + end + \" from \" + type + \"Buffer failed\");\n        }\n      };\n    },\n    timestampOffset: function timestampOffset(offset) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Setting \" + type + \"timestampOffset to \" + offset);\n        sourceBuffer.timestampOffset = offset;\n      };\n    },\n    callback: function callback(_callback) {\n      return function (type, sourceUpdater) {\n        _callback();\n      };\n    },\n    endOfStream: function endOfStream(error) {\n      return function (sourceUpdater) {\n        if (sourceUpdater.mediaSource.readyState !== 'open') {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Calling mediaSource endOfStream(\" + (error || '') + \")\");\n\n        try {\n          sourceUpdater.mediaSource.endOfStream(error);\n        } catch (e) {\n          videojs.log.warn('Failed to call media source endOfStream', e);\n        }\n      };\n    },\n    duration: function duration(_duration) {\n      return function (sourceUpdater) {\n        sourceUpdater.logger_(\"Setting mediaSource duration to \" + _duration);\n\n        try {\n          sourceUpdater.mediaSource.duration = _duration;\n        } catch (e) {\n          videojs.log.warn('Failed to set media source duration', e);\n        }\n      };\n    },\n    abort: function abort() {\n      return function (type, sourceUpdater) {\n        if (sourceUpdater.mediaSource.readyState !== 'open') {\n          return;\n        }\n\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"calling abort on \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.abort();\n        } catch (e) {\n          videojs.log.warn(\"Failed to abort on \" + type + \"Buffer\", e);\n        }\n      };\n    },\n    addSourceBuffer: function addSourceBuffer(type, codec) {\n      return function (sourceUpdater) {\n        var titleType = toTitleCase(type);\n        var mime = getMimeForCodec(codec);\n        sourceUpdater.logger_(\"Adding \" + type + \"Buffer with codec \" + codec + \" to mediaSource\");\n        var sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n        sourceBuffer.addEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n        sourceBuffer.addEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n        sourceUpdater.codecs[type] = codec;\n        sourceUpdater[type + \"Buffer\"] = sourceBuffer;\n      };\n    },\n    removeSourceBuffer: function removeSourceBuffer(type) {\n      return function (sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n        cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Removing \" + type + \"Buffer with codec \" + sourceUpdater.codecs[type] + \" from mediaSource\");\n\n        try {\n          sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n        } catch (e) {\n          videojs.log.warn(\"Failed to removeSourceBuffer \" + type + \"Buffer\", e);\n        }\n      };\n    },\n    changeType: function changeType(codec) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n        var mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        } // do not update codec if we don't need to.\n\n\n        if (sourceUpdater.codecs[type] === codec) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"changing \" + type + \"Buffer codec from \" + sourceUpdater.codecs[type] + \" to \" + codec);\n        sourceBuffer.changeType(mime);\n        sourceUpdater.codecs[type] = codec;\n      };\n    }\n  };\n\n  var pushQueue = function pushQueue(_ref) {\n    var type = _ref.type,\n        sourceUpdater = _ref.sourceUpdater,\n        action = _ref.action,\n        doneFn = _ref.doneFn,\n        name = _ref.name;\n    sourceUpdater.queue.push({\n      type: type,\n      action: action,\n      doneFn: doneFn,\n      name: name\n    });\n    shiftQueue(type, sourceUpdater);\n  };\n\n  var onUpdateend = function onUpdateend(type, sourceUpdater) {\n    return function (e) {\n      // Although there should, in theory, be a pending action for any updateend receieved,\n      // there are some actions that may trigger updateend events without set definitions in\n      // the w3c spec. For instance, setting the duration on the media source may trigger\n      // updateend events on source buffers. This does not appear to be in the spec. As such,\n      // if we encounter an updateend without a corresponding pending action from our queue\n      // for that source buffer type, process the next action.\n      if (sourceUpdater.queuePending[type]) {\n        var doneFn = sourceUpdater.queuePending[type].doneFn;\n        sourceUpdater.queuePending[type] = null;\n\n        if (doneFn) {\n          // if there's an error, report it\n          doneFn(sourceUpdater[type + \"Error_\"]);\n        }\n      }\n\n      shiftQueue(type, sourceUpdater);\n    };\n  };\n  /**\n   * A queue of callbacks to be serialized and applied when a\n   * MediaSource and its associated SourceBuffers are not in the\n   * updating state. It is used by the segment loader to update the\n   * underlying SourceBuffers when new data is loaded, for instance.\n   *\n   * @class SourceUpdater\n   * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n   * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n   */\n\n\n  var SourceUpdater = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SourceUpdater, _videojs$EventTarget);\n\n    function SourceUpdater(mediaSource) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      _this.mediaSource = mediaSource;\n\n      _this.sourceopenListener_ = function () {\n        return shiftQueue('mediaSource', assertThisInitialized(_this));\n      };\n\n      _this.mediaSource.addEventListener('sourceopen', _this.sourceopenListener_);\n\n      _this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n      _this.audioTimestampOffset_ = 0;\n      _this.videoTimestampOffset_ = 0;\n      _this.queue = [];\n      _this.queuePending = {\n        audio: null,\n        video: null\n      };\n      _this.delayedAudioAppendQueue_ = [];\n      _this.videoAppendQueued_ = false;\n      _this.codecs = {};\n      _this.onVideoUpdateEnd_ = onUpdateend('video', assertThisInitialized(_this));\n      _this.onAudioUpdateEnd_ = onUpdateend('audio', assertThisInitialized(_this));\n\n      _this.onVideoError_ = function (e) {\n        // used for debugging\n        _this.videoError_ = e;\n      };\n\n      _this.onAudioError_ = function (e) {\n        // used for debugging\n        _this.audioError_ = e;\n      };\n\n      _this.createdSourceBuffers_ = false;\n      _this.initializedEme_ = false;\n      _this.triggeredReady_ = false;\n      return _this;\n    }\n\n    var _proto = SourceUpdater.prototype;\n\n    _proto.initializedEme = function initializedEme() {\n      this.initializedEme_ = true;\n      this.triggerReady();\n    };\n\n    _proto.hasCreatedSourceBuffers = function hasCreatedSourceBuffers() {\n      // if false, likely waiting on one of the segment loaders to get enough data to create\n      // source buffers\n      return this.createdSourceBuffers_;\n    };\n\n    _proto.hasInitializedAnyEme = function hasInitializedAnyEme() {\n      return this.initializedEme_;\n    };\n\n    _proto.ready = function ready() {\n      return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n    };\n\n    _proto.createSourceBuffers = function createSourceBuffers(codecs) {\n      if (this.hasCreatedSourceBuffers()) {\n        // already created them before\n        return;\n      } // the intial addOrChangeSourceBuffers will always be\n      // two add buffers.\n\n\n      this.addOrChangeSourceBuffers(codecs);\n      this.createdSourceBuffers_ = true;\n      this.trigger('createdsourcebuffers');\n      this.triggerReady();\n    };\n\n    _proto.triggerReady = function triggerReady() {\n      // only allow ready to be triggered once, this prevents the case\n      // where:\n      // 1. we trigger createdsourcebuffers\n      // 2. ie 11 synchronously initializates eme\n      // 3. the synchronous initialization causes us to trigger ready\n      // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n      if (this.ready() && !this.triggeredReady_) {\n        this.triggeredReady_ = true;\n        this.trigger('ready');\n      }\n    }\n    /**\n     * Add a type of source buffer to the media source.\n     *\n     * @param {string} type\n     *        The type of source buffer to add.\n     *\n     * @param {string} codec\n     *        The codec to add the source buffer with.\n     */\n    ;\n\n    _proto.addSourceBuffer = function addSourceBuffer(type, codec) {\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.addSourceBuffer(type, codec),\n        name: 'addSourceBuffer'\n      });\n    }\n    /**\n     * call abort on a source buffer.\n     *\n     * @param {string} type\n     *        The type of source buffer to call abort on.\n     */\n    ;\n\n    _proto.abort = function abort(type) {\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.abort(type),\n        name: 'abort'\n      });\n    }\n    /**\n     * Call removeSourceBuffer and remove a specific type\n     * of source buffer on the mediaSource.\n     *\n     * @param {string} type\n     *        The type of source buffer to remove.\n     */\n    ;\n\n    _proto.removeSourceBuffer = function removeSourceBuffer(type) {\n      if (!this.canRemoveSourceBuffer()) {\n        videojs.log.error('removeSourceBuffer is not supported!');\n        return;\n      }\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.removeSourceBuffer(type),\n        name: 'removeSourceBuffer'\n      });\n    }\n    /**\n     * Whether or not the removeSourceBuffer function is supported\n     * on the mediaSource.\n     *\n     * @return {boolean}\n     *          if removeSourceBuffer can be called.\n     */\n    ;\n\n    _proto.canRemoveSourceBuffer = function canRemoveSourceBuffer() {\n      // IE reports that it supports removeSourceBuffer, but often throws\n      // errors when attempting to use the function. So we report that it\n      // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n      // throws errors, so we report that it does not support this as well.\n      return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window.MediaSource && window.MediaSource.prototype && typeof window.MediaSource.prototype.removeSourceBuffer === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n    ;\n\n    SourceUpdater.canChangeType = function canChangeType() {\n      return window.SourceBuffer && window.SourceBuffer.prototype && typeof window.SourceBuffer.prototype.changeType === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n    ;\n\n    _proto.canChangeType = function canChangeType() {\n      return this.constructor.canChangeType();\n    }\n    /**\n     * Call the changeType function on a source buffer, given the code and type.\n     *\n     * @param {string} type\n     *        The type of source buffer to call changeType on.\n     *\n     * @param {string} codec\n     *        The codec string to change type with on the source buffer.\n     */\n    ;\n\n    _proto.changeType = function changeType(type, codec) {\n      if (!this.canChangeType()) {\n        videojs.log.error('changeType is not supported!');\n        return;\n      }\n\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.changeType(codec),\n        name: 'changeType'\n      });\n    }\n    /**\n     * Add source buffers with a codec or, if they are already created,\n     * call changeType on source buffers using changeType.\n     *\n     * @param {Object} codecs\n     *        Codecs to switch to\n     */\n    ;\n\n    _proto.addOrChangeSourceBuffers = function addOrChangeSourceBuffers(codecs) {\n      var _this2 = this;\n\n      if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n        throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n      }\n\n      Object.keys(codecs).forEach(function (type) {\n        var codec = codecs[type];\n\n        if (!_this2.hasCreatedSourceBuffers()) {\n          return _this2.addSourceBuffer(type, codec);\n        }\n\n        if (_this2.canChangeType()) {\n          _this2.changeType(type, codec);\n        }\n      });\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {MediaObject} object containing audioBytes and/or videoBytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n    ;\n\n    _proto.appendBuffer = function appendBuffer(options, doneFn) {\n      var _this3 = this;\n\n      var segmentInfo = options.segmentInfo,\n          type = options.type,\n          bytes = options.bytes;\n      this.processedAppend_ = true;\n\n      if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n        this.delayedAudioAppendQueue_.push([options, doneFn]);\n        this.logger_(\"delayed audio append of \" + bytes.length + \" until video append\");\n        return;\n      } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n      // not be fired. This means that the queue will be blocked until the next action\n      // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n      // these errors by calling the doneFn with the specific error.\n\n\n      var onError = doneFn;\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.appendBuffer(bytes, segmentInfo || {\n          mediaIndex: -1\n        }, onError),\n        doneFn: doneFn,\n        name: 'appendBuffer'\n      });\n\n      if (type === 'video') {\n        this.videoAppendQueued_ = true;\n\n        if (!this.delayedAudioAppendQueue_.length) {\n          return;\n        }\n\n        var queue = this.delayedAudioAppendQueue_.slice();\n        this.logger_(\"queuing delayed audio \" + queue.length + \" appendBuffers\");\n        this.delayedAudioAppendQueue_.length = 0;\n        queue.forEach(function (que) {\n          _this3.appendBuffer.apply(_this3, que);\n        });\n      }\n    }\n    /**\n     * Get the audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The audio buffer's buffered time range\n     */\n    ;\n\n    _proto.audioBuffered = function audioBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n        return videojs.createTimeRange();\n      }\n\n      return this.audioBuffer.buffered ? this.audioBuffer.buffered : videojs.createTimeRange();\n    }\n    /**\n     * Get the video buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The video buffer's buffered time range\n     */\n    ;\n\n    _proto.videoBuffered = function videoBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n        return videojs.createTimeRange();\n      }\n\n      return this.videoBuffer.buffered ? this.videoBuffer.buffered : videojs.createTimeRange();\n    }\n    /**\n     * Get a combined video/audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         the combined time range\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      var video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n      var audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n\n      if (audio && !video) {\n        return this.audioBuffered();\n      }\n\n      if (video && !audio) {\n        return this.videoBuffered();\n      }\n\n      return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n    }\n    /**\n     * Add a callback to the queue that will set duration on the mediaSource.\n     *\n     * @param {number} duration\n     *        The duration to set\n     *\n     * @param {Function} [doneFn]\n     *        function to run after duration has been set.\n     */\n    ;\n\n    _proto.setDuration = function setDuration(duration, doneFn) {\n      if (doneFn === void 0) {\n        doneFn = noop;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.duration(duration),\n        name: 'duration',\n        doneFn: doneFn\n      });\n    }\n    /**\n     * Add a mediaSource endOfStream call to the queue\n     *\n     * @param {Error} [error]\n     *        Call endOfStream with an error\n     *\n     * @param {Function} [doneFn]\n     *        A function that should be called when the\n     *        endOfStream call has finished.\n     */\n    ;\n\n    _proto.endOfStream = function endOfStream(error, doneFn) {\n      if (error === void 0) {\n        error = null;\n      }\n\n      if (doneFn === void 0) {\n        doneFn = noop;\n      }\n\n      if (typeof error !== 'string') {\n        error = undefined;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.endOfStream(error),\n        name: 'endOfStream',\n        doneFn: doneFn\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n    ;\n\n    _proto.removeAudio = function removeAudio(start, end, done) {\n      if (done === void 0) {\n        done = noop;\n      }\n\n      if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n    ;\n\n    _proto.removeVideo = function removeVideo(start, end, done) {\n      if (done === void 0) {\n        done = noop;\n      }\n\n      if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {boolean} the updating status of the SourceBuffer\n     */\n    ;\n\n    _proto.updating = function updating() {\n      // the audio/video source buffer is updating\n      if (_updating('audio', this) || _updating('video', this)) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Set/get the timestampoffset on the audio SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n    ;\n\n    _proto.audioTimestampOffset = function audioTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.audioBuffer && // no point in updating if it's the same\n      this.audioTimestampOffset_ !== offset) {\n        pushQueue({\n          type: 'audio',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.audioTimestampOffset_ = offset;\n      }\n\n      return this.audioTimestampOffset_;\n    }\n    /**\n     * Set/get the timestampoffset on the video SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n    ;\n\n    _proto.videoTimestampOffset = function videoTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.videoBuffer && // no point in updating if it's the same\n      this.videoTimestampOffset !== offset) {\n        pushQueue({\n          type: 'video',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.videoTimestampOffset_ = offset;\n      }\n\n      return this.videoTimestampOffset_;\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the audio queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n    ;\n\n    _proto.audioQueueCallback = function audioQueueCallback(callback) {\n      if (!this.audioBuffer) {\n        return;\n      }\n\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the video queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n    ;\n\n    _proto.videoQueueCallback = function videoQueueCallback(callback) {\n      if (!this.videoBuffer) {\n        return;\n      }\n\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var _this4 = this;\n\n      this.trigger('dispose');\n      bufferTypes.forEach(function (type) {\n        _this4.abort(type);\n\n        if (_this4.canRemoveSourceBuffer()) {\n          _this4.removeSourceBuffer(type);\n        } else {\n          _this4[type + \"QueueCallback\"](function () {\n            return cleanupBuffer(type, _this4);\n          });\n        }\n      });\n      this.videoAppendQueued_ = false;\n      this.delayedAudioAppendQueue_.length = 0;\n\n      if (this.sourceopenListener_) {\n        this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n      }\n\n      this.off();\n    };\n\n    return SourceUpdater;\n  }(videojs.EventTarget);\n\n  var uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n    return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n  };\n\n  var VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char3) {\n    return _char3.charCodeAt(0);\n  }));\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class VTTSegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n  var VTTSegmentLoader = /*#__PURE__*/function (_SegmentLoader) {\n    inheritsLoose(VTTSegmentLoader, _SegmentLoader);\n\n    function VTTSegmentLoader(settings, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _SegmentLoader.call(this, settings, options) || this; // SegmentLoader requires a MediaSource be specified or it will throw an error;\n      // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n      _this.mediaSource_ = null;\n      _this.subtitlesTrack_ = null;\n      _this.loaderType_ = 'subtitle';\n      _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n      // the sync controller leads to improper behavior.\n\n      _this.shouldSaveSegmentTimingInfo_ = false;\n      return _this;\n    }\n\n    var _proto = VTTSegmentLoader.prototype;\n\n    _proto.createTransmuxer_ = function createTransmuxer_() {\n      // don't need to transmux any subtitles\n      return null;\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n    ;\n\n    _proto.buffered_ = function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n        return videojs.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n    ;\n\n    _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n    ;\n\n    _proto.couldBeginLoading_ = function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n    ;\n\n    _proto.init_ = function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n    ;\n\n    _proto.track = function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     */\n    ;\n\n    _proto.remove = function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n    ;\n\n    _proto.fillBuffer_ = function fillBuffer_() {\n      var _this2 = this; // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.chooseNextRequest_();\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    } // never set a timestamp offset for vtt segments.\n    ;\n\n    _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_() {\n      return null;\n    };\n\n    _proto.chooseNextRequest_ = function chooseNextRequest_() {\n      return this.skipEmptySegments_(_SegmentLoader.prototype.chooseNextRequest_.call(this));\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n    ;\n\n    _proto.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        // stop at the last possible segmentInfo\n        if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n          segmentInfo = null;\n          break;\n        }\n\n        segmentInfo = this.generateSegmentInfo_({\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex + 1,\n          startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n          isSyncRequest: segmentInfo.isSyncRequest\n        });\n      }\n\n      return segmentInfo;\n    };\n\n    _proto.stopForError = function stopForError(error) {\n      this.error(error);\n      this.state = 'READY';\n      this.pause();\n      this.trigger('error');\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n    ;\n\n    _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n      var _this3 = this;\n\n      if (!this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      if (error) {\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n        }\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n        } else {\n          this.mediaRequestsErrored += 1;\n        }\n\n        this.stopForError(error);\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functionality between segment loaders\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.state = 'APPENDING'; // used for tests\n\n      this.trigger('appending');\n      var segment = segmentInfo.segment;\n\n      if (segment.map) {\n        segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.stopForError({\n            message: 'Error loading vtt.js'\n          });\n\n          return;\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.segmentRequestFinished_(error, simpleSegment, result);\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.stopForError({\n          message: e.message\n        });\n        return;\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.cues.length) {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.cues[0].startTime,\n          end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n        };\n      } else {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.startOfSegment,\n          end: segmentInfo.startOfSegment + segmentInfo.duration\n        };\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n      // the subtitle track\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n      }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n      // cues to have identical time-intervals, but if the text is also identical\n      // we can safely assume it is a duplicate that can be removed (ex. when a cue\n      // \"overlaps\" VTT segments)\n\n      removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n      this.handleAppendsDone_();\n    };\n\n    _proto.handleData_ = function handleData_() {// noop as we shouldn't be getting video/audio data captions\n      // that we do not support here.\n    };\n\n    _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_() {// noop\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n    ;\n\n    _proto.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n      var decoder;\n      var decodeBytesToString = false;\n\n      if (typeof window.TextDecoder === 'function') {\n        decoder = new window.TextDecoder('utf8');\n      } else {\n        decoder = window.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window.WebVTT.Parser(window, window.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n    ;\n\n    _proto.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / clock_1 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    };\n\n    return VTTSegmentLoader;\n  }(SegmentLoader);\n  /**\n   * @file ad-cue-tags.js\n   */\n\n  /**\n   * Searches for an ad cue that overlaps with the given mediaTime\n   *\n   * @param {Object} track\n   *        the track to find the cue for\n   *\n   * @param {number} mediaTime\n   *        the time to find the cue at\n   *\n   * @return {Object|null}\n   *         the found cue or null\n   */\n\n\n  var findAdCue = function findAdCue(track, mediaTime) {\n    var cues = track.cues;\n\n    for (var i = 0; i < cues.length; i++) {\n      var cue = cues[i];\n\n      if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n        return cue;\n      }\n    }\n\n    return null;\n  };\n\n  var updateAdCues = function updateAdCues(media, track, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    if (!media.segments) {\n      return;\n    }\n\n    var mediaTime = offset;\n    var cue;\n\n    for (var i = 0; i < media.segments.length; i++) {\n      var segment = media.segments[i];\n\n      if (!cue) {\n        // Since the cues will span for at least the segment duration, adding a fudge\n        // factor of half segment duration will prevent duplicate cues from being\n        // created when timing info is not exact (e.g. cue start time initialized\n        // at 10.006677, but next call mediaTime is 10.003332 )\n        cue = findAdCue(track, mediaTime + segment.duration / 2);\n      }\n\n      if (cue) {\n        if ('cueIn' in segment) {\n          // Found a CUE-IN so end the cue\n          cue.endTime = mediaTime;\n          cue.adEndTime = mediaTime;\n          mediaTime += segment.duration;\n          cue = null;\n          continue;\n        }\n\n        if (mediaTime < cue.endTime) {\n          // Already processed this mediaTime for this cue\n          mediaTime += segment.duration;\n          continue;\n        } // otherwise extend cue until a CUE-IN is found\n\n\n        cue.endTime += segment.duration;\n      } else {\n        if ('cueOut' in segment) {\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n          cue.adStartTime = mediaTime; // Assumes tag format to be\n          // #EXT-X-CUE-OUT:30\n\n          cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n          track.addCue(cue);\n        }\n\n        if ('cueOutCont' in segment) {\n          // Entered into the middle of an ad cue\n          // Assumes tag formate to be\n          // #EXT-X-CUE-OUT-CONT:10/30\n          var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat),\n              adOffset = _segment$cueOutCont$s[0],\n              adTotal = _segment$cueOutCont$s[1];\n\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, '');\n          cue.adStartTime = mediaTime - adOffset;\n          cue.adEndTime = cue.adStartTime + adTotal;\n          track.addCue(cue);\n        }\n      }\n\n      mediaTime += segment.duration;\n    }\n  }; // synchronize expired playlist segments.\n  // the max media sequence diff is 48 hours of live stream\n  // content with two second segments. Anything larger than that\n  // will likely be invalid.\n\n\n  var MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\n  var syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n  //                the equivalence display-time 0 === segment-index 0\n  {\n    name: 'VOD',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (duration !== Infinity) {\n        var syncPoint = {\n          time: 0,\n          segmentIndex: 0,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n  {\n    name: 'ProgramDateTime',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n        return null;\n      }\n\n      var syncPoint = null;\n      var lastDistance = null;\n      var partsAndSegments = getPartsAndSegments(playlist);\n      currentTime = currentTime || 0;\n\n      for (var i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        var partAndSegment = partsAndSegments[index];\n        var segment = partAndSegment.segment;\n        var datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n\n        if (!datetimeMapping || !segment.dateTimeObject) {\n          continue;\n        }\n\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var start = segmentTime + datetimeMapping; // take part duration into account.\n\n        if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n          for (var z = 0; z < partAndSegment.partIndex; z++) {\n            start += segment.parts[z].duration;\n          }\n        }\n\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: start,\n          segmentIndex: partAndSegment.segmentIndex,\n          partIndex: partAndSegment.partIndex\n        };\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n  //                    segment in the current timeline with timing data\n  {\n    name: 'Segment',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      var syncPoint = null;\n      var lastDistance = null;\n      currentTime = currentTime || 0;\n      var partsAndSegments = getPartsAndSegments(playlist);\n\n      for (var i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        var partAndSegment = partsAndSegments[index];\n        var segment = partAndSegment.segment;\n        var start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n\n        if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n          var distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: start,\n              segmentIndex: partAndSegment.segmentIndex,\n              partIndex: partAndSegment.partIndex\n            };\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Discontinuity\": We have a discontinuity with a known\n  //                          display-time\n  {\n    name: 'Discontinuity',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      var syncPoint = null;\n      currentTime = currentTime || 0;\n\n      if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        var lastDistance = null;\n\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var discontinuitySync = syncController.discontinuities[discontinuity];\n\n          if (discontinuitySync) {\n            var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n            // currentTime and can stop looking for better candidates\n\n            if (lastDistance !== null && lastDistance < distance) {\n              break;\n            }\n\n            if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n              lastDistance = distance;\n              syncPoint = {\n                time: discontinuitySync.time,\n                segmentIndex: segmentIndex,\n                partIndex: null\n              };\n            }\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Playlist\": We have a playlist with a known mapping of\n  //                     segment index to display time\n  {\n    name: 'Playlist',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (playlist.syncInfo) {\n        var syncPoint = {\n          time: playlist.syncInfo.time,\n          segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }];\n\n  var SyncController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SyncController, _videojs$EventTarget);\n\n    function SyncController(options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this; // ...for synching across variants\n\n      _this.timelines = [];\n      _this.discontinuities = [];\n      _this.timelineToDatetimeMappings = {};\n      _this.logger_ = logger('SyncController');\n      return _this;\n    }\n    /**\n     * Find a sync-point for the playlist specified\n     *\n     * A sync-point is defined as a known mapping from display-time to\n     * a segment-index in the current playlist.\n     *\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinite if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Object}\n     *          A sync-point object\n     */\n\n\n    var _proto = SyncController.prototype;\n\n    _proto.getSyncPoint = function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @return {number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n    ;\n\n    _proto.getExpiredTime = function getExpiredTime(playlist, duration) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: playlist.segments,\n        startIndex: syncPoint.segmentIndex,\n        endIndex: 0\n      }));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Array}\n     *          A list of sync-point objects\n     */\n    ;\n\n    _proto.runStrategies_ = function runStrategies_(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {string} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {number} target.value\n     *        The value to target for the specified key.\n     * @return {Object}\n     *          The sync-point nearest the target\n     */\n    ;\n\n    _proto.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_(\"syncPoint for [\" + target.key + \": \" + target.value + \"] chosen with strategy\" + (\" [\" + bestStrategy + \"]: [time:\" + bestSyncPoint.time + \",\") + (\" segmentIndex:\" + bestSyncPoint.segmentIndex) + (typeof bestSyncPoint.partIndex === 'number' ? \",partIndex:\" + bestSyncPoint.partIndex : '') + ']');\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n    ;\n\n    _proto.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n      if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n        videojs.log.warn(\"Not saving expired segment info. Media sequence gap \" + mediaSequenceDiff + \" is too large.\");\n        return;\n      } // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_(\"playlist refresh sync: [time:\" + newPlaylist.syncInfo.time + \",\" + (\" mediaSequence: \" + newPlaylist.syncInfo.mediaSequence + \"]\"));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n     * before segments start to load.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n    ;\n\n    _proto.setDateTimeMappingForStart = function setDateTimeMappingForStart(playlist) {\n      // It's possible for the playlist to be updated before playback starts, meaning time\n      // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n      // crossed, then the old time zero mapping (for the prior timeline) would be retained\n      // unless the mappings are cleared.\n      this.timelineToDatetimeMappings = {};\n\n      if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var firstSegment = playlist.segments[0];\n        var playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n        this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n      }\n    }\n    /**\n     * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n     * based on the latest timing information.\n     *\n     * @param {Object} options\n     *        Options object\n     * @param {SegmentInfo} options.segmentInfo\n     *        The current active request information\n     * @param {boolean} options.shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved for timeline mapping and program date time mappings.\n     */\n    ;\n\n    _proto.saveSegmentTimingInfo = function saveSegmentTimingInfo(_ref) {\n      var segmentInfo = _ref.segmentInfo,\n          shouldSaveTimelineMapping = _ref.shouldSaveTimelineMapping;\n      var didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n      var segment = segmentInfo.segment;\n\n      if (didCalculateSegmentTimeMapping) {\n        this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n        // now with segment timing information\n\n        if (!segmentInfo.playlist.syncInfo) {\n          segmentInfo.playlist.syncInfo = {\n            mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: segment.start\n          };\n        }\n      }\n\n      var dateTime = segment.dateTimeObject;\n\n      if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n        this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n      }\n    };\n\n    _proto.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    };\n\n    _proto.mappingForTimeline = function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {Object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @param {boolean} shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved in timelines.\n     * @return {boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n    ;\n\n    _proto.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n      // TODO: remove side effects\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n      var start;\n      var end;\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n\n        if (shouldSaveTimelineMapping) {\n          this.timelines[segmentInfo.timeline] = mappingObj;\n          this.trigger('timestampoffset');\n          this.logger_(\"time mapping for timeline \" + segmentInfo.timeline + \": \" + (\"[time: \" + mappingObj.time + \"] [mapping: \" + mappingObj.mapping + \"]\"));\n        }\n\n        start = segmentInfo.startOfSegment;\n        end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        start = timingInfo.start + mappingObj.mapping;\n        end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      if (part) {\n        part.start = start;\n        part.end = end;\n      } // If we don't have a segment start yet or the start value we got\n      // is less than our current segment.start value, save a new start value.\n      // We have to do this because parts will have segment timing info saved\n      // multiple times and we want segment start to be the earliest part start\n      // value for that segment.\n\n\n      if (!segment.start || start < segment.start) {\n        segment.start = start;\n      }\n\n      segment.end = end;\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n    ;\n\n    _proto.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex,\n                endIndex: segmentIndex\n              });\n            } else {\n              time = segment.end + sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex + 1,\n                endIndex: segmentIndex\n              });\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.off();\n    };\n\n    return SyncController;\n  }(videojs.EventTarget);\n  /**\n   * The TimelineChangeController acts as a source for segment loaders to listen for and\n   * keep track of latest and pending timeline changes. This is useful to ensure proper\n   * sync, as each loader may need to make a consideration for what timeline the other\n   * loader is on before making changes which could impact the other loader's media.\n   *\n   * @class TimelineChangeController\n   * @extends videojs.EventTarget\n   */\n\n\n  var TimelineChangeController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(TimelineChangeController, _videojs$EventTarget);\n\n    function TimelineChangeController() {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      _this.pendingTimelineChanges_ = {};\n      _this.lastTimelineChanges_ = {};\n      return _this;\n    }\n\n    var _proto = TimelineChangeController.prototype;\n\n    _proto.clearPendingTimelineChange = function clearPendingTimelineChange(type) {\n      this.pendingTimelineChanges_[type] = null;\n      this.trigger('pendingtimelinechange');\n    };\n\n    _proto.pendingTimelineChange = function pendingTimelineChange(_ref) {\n      var type = _ref.type,\n          from = _ref.from,\n          to = _ref.to;\n\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.pendingTimelineChanges_[type] = {\n          type: type,\n          from: from,\n          to: to\n        };\n        this.trigger('pendingtimelinechange');\n      }\n\n      return this.pendingTimelineChanges_[type];\n    };\n\n    _proto.lastTimelineChange = function lastTimelineChange(_ref2) {\n      var type = _ref2.type,\n          from = _ref2.from,\n          to = _ref2.to;\n\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.lastTimelineChanges_[type] = {\n          type: type,\n          from: from,\n          to: to\n        };\n        delete this.pendingTimelineChanges_[type];\n        this.trigger('timelinechange');\n      }\n\n      return this.lastTimelineChanges_[type];\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.pendingTimelineChanges_ = {};\n      this.lastTimelineChanges_ = {};\n      this.off();\n    };\n\n    return TimelineChangeController;\n  }(videojs.EventTarget);\n  /* rollup-plugin-worker-factory start for worker!/Users/abarstow/videojs/http-streaming/src/decrypter-worker.js */\n\n\n  var workerCode = transform(getWorkerString(function () {\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    function createCommonjsModule(fn, basedir, module) {\n      return module = {\n        path: basedir,\n        exports: {},\n        require: function require(path, base) {\n          return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n        }\n      }, fn(module, module.exports), module.exports;\n    }\n\n    function commonjsRequire() {\n      throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n    }\n\n    var createClass = createCommonjsModule(function (module) {\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n\n      module.exports = _createClass;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    var setPrototypeOf = createCommonjsModule(function (module) {\n      function _setPrototypeOf(o, p) {\n        module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n        return _setPrototypeOf(o, p);\n      }\n\n      module.exports = _setPrototypeOf;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    var inheritsLoose = createCommonjsModule(function (module) {\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n        setPrototypeOf(subClass, superClass);\n      }\n\n      module.exports = _inheritsLoose;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n    var Stream = /*#__PURE__*/function () {\n      function Stream() {\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      var _proto = Stream.prototype;\n\n      _proto.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      }\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {boolean} if we could turn it off or not\n       */\n      ;\n\n      _proto.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n        // In Video.js we slice listener functions\n        // on trigger so that it does not mess up the order\n        // while we loop through.\n        //\n        // Here we slice on off so that the loop in trigger\n        // can continue using it's old reference to loop without\n        // messing up the order.\n\n        this.listeners[type] = this.listeners[type].slice(0);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      }\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {string} type the event name\n       */\n      ;\n\n      _proto.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      }\n      /**\n       * Destroys the stream and cleans up.\n       */\n      ;\n\n      _proto.dispose = function dispose() {\n        this.listeners = {};\n      }\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n      ;\n\n      _proto.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     *\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n    /*! @name aes-decrypter @version 3.1.3 @license Apache-2.0 */\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i;\n      var x;\n      var xInv;\n      var d = [];\n      var th = [];\n      var x2;\n      var x4;\n      var x8;\n      var s;\n      var tEnc;\n      var tDec; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = /*#__PURE__*/function () {\n      function AES(key) {\n        /**\n        * The expanded S-box and inverse S-box tables. These will be computed\n        * on the client so that we don't have to send them down the wire.\n        *\n        * There are two tables, _tables[0] is for encryption and\n        * _tables[1] is for decryption.\n        *\n        * The first 4 sub-tables are the expanded S-box with MixColumns. The\n        * last (_tables[01][4]) is the S-box itself.\n        *\n        * @private\n        */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i;\n        var j;\n        var tmp;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        var encKey = key.slice(0);\n        var decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {number} encrypted0 the first word to decrypt\n       * @param {number} encrypted1 the second word to decrypt\n       * @param {number} encrypted2 the third word to decrypt\n       * @param {number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      var _proto = AES.prototype;\n\n      _proto.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2;\n        var b2;\n        var c2; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * A wrapper around the Stream class to use setTimeout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream = /*#__PURE__*/function (_Stream) {\n      inheritsLoose(AsyncStream, _Stream);\n\n      function AsyncStream() {\n        var _this;\n\n        _this = _Stream.call(this, Stream) || this;\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      var _proto = AsyncStream.prototype;\n\n      _proto.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      }\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n      ;\n\n      _proto.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream;\n    }(Stream);\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt = function decrypt(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0;\n      var init1;\n      var init2;\n      var init3;\n      var encrypted0;\n      var encrypted1;\n      var encrypted2;\n      var encrypted3; // iteration variable\n\n      var wordIx; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter = /*#__PURE__*/function () {\n      function Decrypter(encrypted, key, initVector, done) {\n        var step = Decrypter.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {number} the value of step 32000\n       */\n\n\n      var _proto = Decrypter.prototype;\n      /**\n       * @private\n       */\n\n      _proto.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter, null, [{\n        key: \"STEP\",\n        get: function get() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter;\n    }();\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    var isArrayBufferView = function isArrayBufferView(obj) {\n      if (ArrayBuffer.isView === 'function') {\n        return ArrayBuffer.isView(obj);\n      }\n\n      return obj && obj.buffer instanceof ArrayBuffer;\n    };\n\n    var BigInt = window_1.BigInt || Number;\n    [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (isArrayBufferView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /* global self */\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     */\n\n\n    self.onmessage = function (event) {\n      var data = event.data;\n      var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n      var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n      var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n      /* eslint-disable no-new, handle-callback-err */\n\n      new Decrypter(encrypted, key, iv, function (err, bytes) {\n        self.postMessage(createTransferableMessage({\n          source: data.source,\n          decrypted: bytes\n        }), [bytes.buffer]);\n      });\n      /* eslint-enable */\n    };\n  }));\n  var Decrypter = factory(workerCode);\n  /* rollup-plugin-worker-factory end for worker!/Users/abarstow/videojs/http-streaming/src/decrypter-worker.js */\n\n  /**\n   * Convert the properties of an HLS track into an audioTrackKind.\n   *\n   * @private\n   */\n\n  var audioTrackKind_ = function audioTrackKind_(properties) {\n    var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n    if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n      kind = 'main-desc';\n    }\n\n    return kind;\n  };\n  /**\n   * Pause provided segment loader and playlist loader if active\n   *\n   * @param {SegmentLoader} segmentLoader\n   *        SegmentLoader to pause\n   * @param {Object} mediaType\n   *        Active media type\n   * @function stopLoaders\n   */\n\n\n  var stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n    segmentLoader.abort();\n    segmentLoader.pause();\n\n    if (mediaType && mediaType.activePlaylistLoader) {\n      mediaType.activePlaylistLoader.pause();\n      mediaType.activePlaylistLoader = null;\n    }\n  };\n  /**\n   * Start loading provided segment loader and playlist loader\n   *\n   * @param {PlaylistLoader} playlistLoader\n   *        PlaylistLoader to start loading\n   * @param {Object} mediaType\n   *        Active media type\n   * @function startLoaders\n   */\n\n\n  var startLoaders = function startLoaders(playlistLoader, mediaType) {\n    // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n    // playlist loader\n    mediaType.activePlaylistLoader = playlistLoader;\n    playlistLoader.load();\n  };\n  /**\n   * Returns a function to be called when the media group changes. It performs a\n   * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n   * change of group is merely a rendition switch of the same content at another encoding,\n   * rather than a change of content, such as switching audio from English to Spanish.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a non-destructive resync of SegmentLoader when the active media\n   *         group changes.\n   * @function onGroupChanged\n   */\n\n\n  var onGroupChanged = function onGroupChanged(type, settings) {\n    return function () {\n      var _settings$segmentLoad = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad[type],\n          mainSegmentLoader = _settings$segmentLoad.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.getActiveGroup();\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      var lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n      if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n        return;\n      }\n\n      mediaType.lastGroup_ = activeGroup;\n      mediaType.lastTrack_ = activeTrack;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup || activeGroup.isMasterPlaylist) {\n        // there is no group active or active group is a main playlist and won't change\n        return;\n      }\n\n      if (!activeGroup.playlistLoader) {\n        if (previousActiveLoader) {\n          // The previous group had a playlist loader but the new active group does not\n          // this means we are switching from demuxed to muxed audio. In this case we want to\n          // do a destructive reset of the main segment loader and not restart the audio\n          // loaders.\n          mainSegmentLoader.resetEverything();\n        }\n\n        return;\n      } // Non-destructive resync\n\n\n      segmentLoader.resyncLoader();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n\n  var onGroupChanging = function onGroupChanging(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      mediaType.lastGroup_ = null;\n      segmentLoader.abort();\n      segmentLoader.pause();\n    };\n  };\n  /**\n   * Returns a function to be called when the media track changes. It performs a\n   * destructive reset of the SegmentLoader to ensure we start loading as close to\n   * currentTime as possible.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a destructive reset of SegmentLoader when the active media\n   *         track changes.\n   * @function onTrackChanged\n   */\n\n\n  var onTrackChanged = function onTrackChanged(type, settings) {\n    return function () {\n      var masterPlaylistLoader = settings.masterPlaylistLoader,\n          _settings$segmentLoad2 = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad2[type],\n          mainSegmentLoader = _settings$segmentLoad2.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.getActiveGroup();\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      var lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n      if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n        return;\n      }\n\n      mediaType.lastGroup_ = activeGroup;\n      mediaType.lastTrack_ = activeTrack;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup) {\n        // there is no group active so we do not want to restart loaders\n        return;\n      }\n\n      if (activeGroup.isMasterPlaylist) {\n        // track did not change, do nothing\n        if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n          return;\n        }\n\n        var mpc = settings.vhs.masterPlaylistController_;\n        var newPlaylist = mpc.selectPlaylist(); // media will not change do nothing\n\n        if (mpc.media() === newPlaylist) {\n          return;\n        }\n\n        mediaType.logger_(\"track change. Switching master audio from \" + lastTrack.id + \" to \" + activeTrack.id);\n        masterPlaylistLoader.pause();\n        mainSegmentLoader.resetEverything();\n        mpc.fastQualityChange_(newPlaylist);\n        return;\n      }\n\n      if (type === 'AUDIO') {\n        if (!activeGroup.playlistLoader) {\n          // when switching from demuxed audio/video to muxed audio/video (noted by no\n          // playlist loader for the audio group), we want to do a destructive reset of the\n          // main segment loader and not restart the audio loaders\n          mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n          // it should be stopped\n\n          mainSegmentLoader.resetEverything();\n          return;\n        } // although the segment loader is an audio segment loader, call the setAudio\n        // function to ensure it is prepared to re-append the init segment (or handle other\n        // config changes)\n\n\n        segmentLoader.setAudio(true);\n        mainSegmentLoader.setAudio(false);\n      }\n\n      if (previousActiveLoader === activeGroup.playlistLoader) {\n        // Nothing has actually changed. This can happen because track change events can fire\n        // multiple times for a \"single\" change. One for enabling the new active track, and\n        // one for disabling the track that was active\n        startLoaders(activeGroup.playlistLoader, mediaType);\n        return;\n      }\n\n      if (segmentLoader.track) {\n        // For WebVTT, set the new text track in the segmentloader\n        segmentLoader.track(activeTrack);\n      } // destructive reset\n\n\n      segmentLoader.resetEverything();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n\n  var onError = {\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n     *         console and switches back to default audio track.\n     * @function onError.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type],\n            blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n        stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n        var activeTrack = mediaType.activeTrack();\n        var activeGroup = mediaType.activeGroup();\n        var id = (activeGroup.filter(function (group) {\n          return group[\"default\"];\n        })[0] || activeGroup[0]).id;\n        var defaultTrack = mediaType.tracks[id];\n\n        if (activeTrack === defaultTrack) {\n          // Default track encountered an error. All we can do now is blacklist the current\n          // rendition and hope another will switch audio groups\n          blacklistCurrentPlaylist({\n            message: 'Problem encountered loading the default audio track.'\n          });\n          return;\n        }\n\n        videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n        for (var trackId in mediaType.tracks) {\n          mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n        }\n\n        mediaType.onTrackChanged();\n      };\n    },\n\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning to console and disables the active subtitle track\n     * @function onError.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type];\n        videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n        stopLoaders(segmentLoader, mediaType);\n        var track = mediaType.activeTrack();\n\n        if (track) {\n          track.mode = 'disabled';\n        }\n\n        mediaType.onTrackChanged();\n      };\n    }\n  };\n  var setupListeners = {\n    /**\n     * Setup event listeners for audio playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.AUDIO\n     */\n    AUDIO: function AUDIO(type, playlistLoader, settings) {\n      if (!playlistLoader) {\n        // no playlist loader means audio will be muxed with the video\n        return;\n      }\n\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup event listeners for subtitle playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions);\n        segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    }\n  };\n  var initialize = {\n    /**\n     * Setup PlaylistLoaders and AudioTracks for the audio groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.AUDIO\n     */\n    'AUDIO': function AUDIO(type, settings) {\n      var vhs = settings.vhs,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$ = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$.groups,\n          tracks = _settings$mediaTypes$.tracks,\n          logger_ = _settings$mediaTypes$.logger_,\n          masterPlaylistLoader = settings.masterPlaylistLoader;\n      var audioOnlyMaster = isAudioOnly(masterPlaylistLoader.master); // force a default if we have none\n\n      if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n        mediaGroups[type] = {\n          main: {\n            \"default\": {\n              \"default\": true\n            }\n          }\n        };\n\n        if (audioOnlyMaster) {\n          mediaGroups[type].main[\"default\"].playlists = masterPlaylistLoader.master.playlists;\n        }\n      }\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel];\n          var playlistLoader = void 0;\n\n          if (audioOnlyMaster) {\n            logger_(\"AUDIO group '\" + groupId + \"' label '\" + variantLabel + \"' is a master playlist\");\n            properties.isMasterPlaylist = true;\n            playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n            // use the resolved media playlist object\n          } else if (sourceType === 'vhs-json' && properties.playlists) {\n            playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n          } else if (properties.resolvedUri) {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n            // should we even have properties.playlists in this check.\n          } else if (properties.playlists && sourceType === 'dash') {\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n          } else {\n            // no resolvedUri means the audio is muxed with the video when using this\n            // audio track\n            playlistLoader = null;\n          }\n\n          properties = videojs.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = new videojs.AudioTrack({\n              id: variantLabel,\n              kind: audioTrackKind_(properties),\n              enabled: false,\n              language: properties.language,\n              \"default\": properties[\"default\"],\n              label: variantLabel\n            });\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup PlaylistLoaders and TextTracks for the subtitle groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.SUBTITLES\n     */\n    'SUBTITLES': function SUBTITLES(type, settings) {\n      var tech = settings.tech,\n          vhs = settings.vhs,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$2 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$2.groups,\n          tracks = _settings$mediaTypes$2.tracks,\n          masterPlaylistLoader = settings.masterPlaylistLoader;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          if (mediaGroups[type][groupId][variantLabel].forced) {\n            // Subtitle playlists with the forced attribute are not selectable in Safari.\n            // According to Apple's HLS Authoring Specification:\n            //   If content has forced subtitles and regular subtitles in a given language,\n            //   the regular subtitles track in that language MUST contain both the forced\n            //   subtitles and the regular subtitles for that language.\n            // Because of this requirement and that Safari does not add forced subtitles,\n            // forced subtitles are skipped here to maintain consistent experience across\n            // all platforms\n            continue;\n          }\n\n          var properties = mediaGroups[type][groupId][variantLabel];\n          var playlistLoader = void 0;\n\n          if (sourceType === 'hls') {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n          } else if (sourceType === 'dash') {\n            var playlists = properties.playlists.filter(function (p) {\n              return p.excludeUntil !== Infinity;\n            });\n\n            if (!playlists.length) {\n              return;\n            }\n\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n          } else if (sourceType === 'vhs-json') {\n            playlistLoader = new PlaylistLoader( // if the vhs-json object included the media playlist, use the media playlist\n            // as provided, otherwise use the resolved URI to load the playlist\n            properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n          }\n\n          properties = videojs.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: variantLabel,\n              kind: 'subtitles',\n              \"default\": properties[\"default\"] && properties.autoselect,\n              language: properties.language,\n              label: variantLabel\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup TextTracks for the closed-caption groups\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize['CLOSED-CAPTIONS']\n     */\n    'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n      var tech = settings.tech,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$3 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$3.groups,\n          tracks = _settings$mediaTypes$3.tracks;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n          if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n            continue;\n          }\n\n          var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n          var newProps = {\n            label: variantLabel,\n            language: properties.language,\n            instreamId: properties.instreamId,\n            \"default\": properties[\"default\"] && properties.autoselect\n          };\n\n          if (captionServices[newProps.instreamId]) {\n            newProps = videojs.mergeOptions(newProps, captionServices[newProps.instreamId]);\n          }\n\n          if (newProps[\"default\"] === undefined) {\n            delete newProps[\"default\"];\n          } // No PlaylistLoader is required for Closed-Captions because the captions are\n          // embedded within the video stream\n\n\n          groups[groupId].push(videojs.mergeOptions({\n            id: variantLabel\n          }, properties));\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: newProps.instreamId,\n              kind: 'captions',\n              \"default\": newProps[\"default\"],\n              language: newProps.language,\n              label: newProps.label\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      }\n    }\n  };\n\n  var groupMatch = function groupMatch(list, media) {\n    for (var i = 0; i < list.length; i++) {\n      if (playlistMatch(media, list[i])) {\n        return true;\n      }\n\n      if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Returns a function used to get the active group of the provided type\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media group for the provided type. Takes an\n   *         optional parameter {TextTrack} track. If no track is provided, a list of all\n   *         variants in the group, otherwise the variant corresponding to the provided\n   *         track is returned.\n   * @function activeGroup\n   */\n\n\n  var activeGroup = function activeGroup(type, settings) {\n    return function (track) {\n      var masterPlaylistLoader = settings.masterPlaylistLoader,\n          groups = settings.mediaTypes[type].groups;\n      var media = masterPlaylistLoader.media();\n\n      if (!media) {\n        return null;\n      }\n\n      var variants = null; // set to variants to main media active group\n\n      if (media.attributes[type]) {\n        variants = groups[media.attributes[type]];\n      }\n\n      var groupKeys = Object.keys(groups);\n\n      if (!variants) {\n        // find the masterPlaylistLoader media\n        // that is in a media group if we are dealing\n        // with audio only\n        if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.master)) {\n          for (var i = 0; i < groupKeys.length; i++) {\n            var groupPropertyList = groups[groupKeys[i]];\n\n            if (groupMatch(groupPropertyList, media)) {\n              variants = groupPropertyList;\n              break;\n            }\n          } // use the main group if it exists\n\n        } else if (groups.main) {\n          variants = groups.main; // only one group, use that one\n        } else if (groupKeys.length === 1) {\n          variants = groups[groupKeys[0]];\n        }\n      }\n\n      if (typeof track === 'undefined') {\n        return variants;\n      }\n\n      if (track === null || !variants) {\n        // An active track was specified so a corresponding group is expected. track === null\n        // means no track is currently active so there is no corresponding group\n        return null;\n      }\n\n      return variants.filter(function (props) {\n        return props.id === track.id;\n      })[0] || null;\n    };\n  };\n\n  var activeTrack = {\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].enabled) {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    },\n\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    }\n  };\n\n  var getActiveGroup = function getActiveGroup(type, _ref) {\n    var mediaTypes = _ref.mediaTypes;\n    return function () {\n      var activeTrack_ = mediaTypes[type].activeTrack();\n\n      if (!activeTrack_) {\n        return null;\n      }\n\n      return mediaTypes[type].activeGroup(activeTrack_);\n    };\n  };\n  /**\n   * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n   * Closed-Captions) specified in the master manifest.\n   *\n   * @param {Object} settings\n   *        Object containing required information for setting up the media groups\n   * @param {Tech} settings.tech\n   *        The tech of the player\n   * @param {Object} settings.requestOptions\n   *        XHR request options used by the segment loaders\n   * @param {PlaylistLoader} settings.masterPlaylistLoader\n   *        PlaylistLoader for the master source\n   * @param {VhsHandler} settings.vhs\n   *        VHS SourceHandler\n   * @param {Object} settings.master\n   *        The parsed master manifest\n   * @param {Object} settings.mediaTypes\n   *        Object to store the loaders, tracks, and utility methods for each media type\n   * @param {Function} settings.blacklistCurrentPlaylist\n   *        Blacklists the current rendition and forces a rendition switch.\n   * @function setupMediaGroups\n   */\n\n\n  var setupMediaGroups = function setupMediaGroups(settings) {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      initialize[type](type, settings);\n    });\n    var mediaTypes = settings.mediaTypes,\n        masterPlaylistLoader = settings.masterPlaylistLoader,\n        tech = settings.tech,\n        vhs = settings.vhs,\n        _settings$segmentLoad3 = settings.segmentLoaders,\n        audioSegmentLoader = _settings$segmentLoad3['AUDIO'],\n        mainSegmentLoader = _settings$segmentLoad3.main; // setup active group and track getters and change event handlers\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      mediaTypes[type].activeGroup = activeGroup(type, settings);\n      mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n      mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n      mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n      mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n      mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n    }); // DO NOT enable the default subtitle or caption track.\n    // DO enable the default audio track\n\n    var audioGroup = mediaTypes.AUDIO.activeGroup();\n\n    if (audioGroup) {\n      var groupId = (audioGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || audioGroup[0]).id;\n      mediaTypes.AUDIO.tracks[groupId].enabled = true;\n      mediaTypes.AUDIO.onGroupChanged();\n      mediaTypes.AUDIO.onTrackChanged();\n      var activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n      // track is changed, but needs to be handled here since the track may not be considered\n      // changed on the first call to onTrackChanged\n\n      if (!activeAudioGroup.playlistLoader) {\n        // either audio is muxed with video or the stream is audio only\n        mainSegmentLoader.setAudio(true);\n      } else {\n        // audio is demuxed\n        mainSegmentLoader.setAudio(false);\n        audioSegmentLoader.setAudio(true);\n      }\n    }\n\n    masterPlaylistLoader.on('mediachange', function () {\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        return mediaTypes[type].onGroupChanged();\n      });\n    });\n    masterPlaylistLoader.on('mediachanging', function () {\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        return mediaTypes[type].onGroupChanging();\n      });\n    }); // custom audio track change event handler for usage event\n\n    var onAudioTrackChanged = function onAudioTrackChanged() {\n      mediaTypes.AUDIO.onTrackChanged();\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-audio-change'\n      });\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-audio-change'\n      });\n    };\n\n    tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    vhs.on('dispose', function () {\n      tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n      tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    }); // clear existing audio tracks and add the ones we just created\n\n    tech.clearTracks('audio');\n\n    for (var id in mediaTypes.AUDIO.tracks) {\n      tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n    }\n  };\n  /**\n   * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n   * media type\n   *\n   * @return {Object}\n   *         Object to store the loaders, tracks, and utility methods for each media type\n   * @function createMediaTypes\n   */\n\n\n  var createMediaTypes = function createMediaTypes() {\n    var mediaTypes = {};\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      mediaTypes[type] = {\n        groups: {},\n        tracks: {},\n        activePlaylistLoader: null,\n        activeGroup: noop,\n        activeTrack: noop,\n        getActiveGroup: noop,\n        onGroupChanged: noop,\n        onTrackChanged: noop,\n        lastTrack_: null,\n        logger_: logger(\"MediaGroups[\" + type + \"]\")\n      };\n    });\n    return mediaTypes;\n  };\n\n  var ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n  var Vhs$1; // SegmentLoader stats that need to have each loader's\n  // values summed to calculate the final value\n\n  var loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n\n  var sumLoaderStat = function sumLoaderStat(stat) {\n    return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n  };\n\n  var shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n    var currentPlaylist = _ref.currentPlaylist,\n        buffered = _ref.buffered,\n        currentTime = _ref.currentTime,\n        nextPlaylist = _ref.nextPlaylist,\n        bufferLowWaterLine = _ref.bufferLowWaterLine,\n        bufferHighWaterLine = _ref.bufferHighWaterLine,\n        duration = _ref.duration,\n        experimentalBufferBasedABR = _ref.experimentalBufferBasedABR,\n        log = _ref.log; // we have no other playlist to switch to\n\n    if (!nextPlaylist) {\n      videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n      return false;\n    }\n\n    var sharedLogLine = \"allowing switch \" + (currentPlaylist && currentPlaylist.id || 'null') + \" -> \" + nextPlaylist.id;\n\n    if (!currentPlaylist) {\n      log(sharedLogLine + \" as current playlist is not set\");\n      return true;\n    } // no need to switch if playlist is the same\n\n\n    if (nextPlaylist.id === currentPlaylist.id) {\n      return false;\n    } // determine if current time is in a buffered range.\n\n\n    var isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n    // This is because in LIVE, the player plays 3 segments from the end of the\n    // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n    // in those segments, a viewer will never experience a rendition upswitch.\n\n    if (!currentPlaylist.endList) {\n      // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n      // doubles the time to first playback.\n      if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n        log(\"not \" + sharedLogLine + \" as current playlist is live llhls, but currentTime isn't in buffered.\");\n        return false;\n      }\n\n      log(sharedLogLine + \" as current playlist is live\");\n      return true;\n    }\n\n    var forwardBuffer = timeAheadOf(buffered, currentTime);\n    var maxBufferLowWaterLine = experimentalBufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n    // duration is below the max potential low water line\n\n    if (duration < maxBufferLowWaterLine) {\n      log(sharedLogLine + \" as duration < max low water line (\" + duration + \" < \" + maxBufferLowWaterLine + \")\");\n      return true;\n    }\n\n    var nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n    var currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n    // we can switch down\n\n    if (nextBandwidth < currBandwidth && (!experimentalBufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n      var logLine = sharedLogLine + \" as next bandwidth < current bandwidth (\" + nextBandwidth + \" < \" + currBandwidth + \")\";\n\n      if (experimentalBufferBasedABR) {\n        logLine += \" and forwardBuffer < bufferHighWaterLine (\" + forwardBuffer + \" < \" + bufferHighWaterLine + \")\";\n      }\n\n      log(logLine);\n      return true;\n    } // and if our buffer is higher than the low water line,\n    // we can switch up\n\n\n    if ((!experimentalBufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n      var _logLine = sharedLogLine + \" as forwardBuffer >= bufferLowWaterLine (\" + forwardBuffer + \" >= \" + bufferLowWaterLine + \")\";\n\n      if (experimentalBufferBasedABR) {\n        _logLine += \" and next bandwidth > current bandwidth (\" + nextBandwidth + \" > \" + currBandwidth + \")\";\n      }\n\n      log(_logLine);\n      return true;\n    }\n\n    log(\"not \" + sharedLogLine + \" as no switching criteria met\");\n    return false;\n  };\n  /**\n   * the master playlist controller controller all interactons\n   * between playlists and segmentloaders. At this time this mainly\n   * involves a master playlist and a series of audio playlists\n   * if they are available\n   *\n   * @class MasterPlaylistController\n   * @extends videojs.EventTarget\n   */\n\n\n  var MasterPlaylistController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(MasterPlaylistController, _videojs$EventTarget);\n\n    function MasterPlaylistController(options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      var src = options.src,\n          handleManifestRedirects = options.handleManifestRedirects,\n          withCredentials = options.withCredentials,\n          tech = options.tech,\n          bandwidth = options.bandwidth,\n          externVhs = options.externVhs,\n          useCueTags = options.useCueTags,\n          blacklistDuration = options.blacklistDuration,\n          enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n          sourceType = options.sourceType,\n          cacheEncryptionKeys = options.cacheEncryptionKeys,\n          experimentalBufferBasedABR = options.experimentalBufferBasedABR,\n          experimentalLeastPixelDiffSelector = options.experimentalLeastPixelDiffSelector,\n          captionServices = options.captionServices;\n\n      if (!src) {\n        throw new Error('A non-empty playlist URL or JSON manifest string is required');\n      }\n\n      var maxPlaylistRetries = options.maxPlaylistRetries;\n\n      if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n        maxPlaylistRetries = Infinity;\n      }\n\n      Vhs$1 = externVhs;\n      _this.experimentalBufferBasedABR = Boolean(experimentalBufferBasedABR);\n      _this.experimentalLeastPixelDiffSelector = Boolean(experimentalLeastPixelDiffSelector);\n      _this.withCredentials = withCredentials;\n      _this.tech_ = tech;\n      _this.vhs_ = tech.vhs;\n      _this.sourceType_ = sourceType;\n      _this.useCueTags_ = useCueTags;\n      _this.blacklistDuration = blacklistDuration;\n      _this.maxPlaylistRetries = maxPlaylistRetries;\n      _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n      if (_this.useCueTags_) {\n        _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n        _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n      }\n\n      _this.requestOptions_ = {\n        withCredentials: withCredentials,\n        handleManifestRedirects: handleManifestRedirects,\n        maxPlaylistRetries: maxPlaylistRetries,\n        timeout: null\n      };\n\n      _this.on('error', _this.pauseLoading);\n\n      _this.mediaTypes_ = createMediaTypes();\n      _this.mediaSource = new window.MediaSource();\n      _this.handleDurationChange_ = _this.handleDurationChange_.bind(assertThisInitialized(_this));\n      _this.handleSourceOpen_ = _this.handleSourceOpen_.bind(assertThisInitialized(_this));\n      _this.handleSourceEnded_ = _this.handleSourceEnded_.bind(assertThisInitialized(_this));\n\n      _this.mediaSource.addEventListener('durationchange', _this.handleDurationChange_); // load the media source into the player\n\n\n      _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_);\n\n      _this.mediaSource.addEventListener('sourceended', _this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n      // everything, and the MediaSource should not be detached without a proper disposal\n\n\n      _this.seekable_ = videojs.createTimeRanges();\n      _this.hasPlayed_ = false;\n      _this.syncController_ = new SyncController(options);\n      _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n        kind: 'metadata',\n        label: 'segment-metadata'\n      }, false).track;\n      _this.decrypter_ = new Decrypter();\n      _this.sourceUpdater_ = new SourceUpdater(_this.mediaSource);\n      _this.inbandTextTracks_ = {};\n      _this.timelineChangeController_ = new TimelineChangeController();\n      var segmentLoaderSettings = {\n        vhs: _this.vhs_,\n        parse708captions: options.parse708captions,\n        useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n        captionServices: captionServices,\n        mediaSource: _this.mediaSource,\n        currentTime: _this.tech_.currentTime.bind(_this.tech_),\n        seekable: function seekable() {\n          return _this.seekable();\n        },\n        seeking: function seeking() {\n          return _this.tech_.seeking();\n        },\n        duration: function duration() {\n          return _this.duration();\n        },\n        hasPlayed: function hasPlayed() {\n          return _this.hasPlayed_;\n        },\n        goalBufferLength: function goalBufferLength() {\n          return _this.goalBufferLength();\n        },\n        bandwidth: bandwidth,\n        syncController: _this.syncController_,\n        decrypter: _this.decrypter_,\n        sourceType: _this.sourceType_,\n        inbandTextTracks: _this.inbandTextTracks_,\n        cacheEncryptionKeys: cacheEncryptionKeys,\n        sourceUpdater: _this.sourceUpdater_,\n        timelineChangeController: _this.timelineChangeController_,\n        experimentalExactManifestTimings: options.experimentalExactManifestTimings\n      }; // The source type check not only determines whether a special DASH playlist loader\n      // should be used, but also covers the case where the provided src is a vhs-json\n      // manifest object (instead of a URL). In the case of vhs-json, the default\n      // PlaylistLoader should be used.\n\n      _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, _this.vhs_, _this.requestOptions_) : new PlaylistLoader(src, _this.vhs_, _this.requestOptions_);\n\n      _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n      // combined audio/video or just video when alternate audio track is selected\n\n\n      _this.mainSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        segmentMetadataTrack: _this.segmentMetadataTrack_,\n        loaderType: 'main'\n      }), options); // alternate audio track\n\n      _this.audioSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'audio'\n      }), options);\n      _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'vtt',\n        featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n      }), options);\n\n      _this.setupSegmentLoaderListeners_();\n\n      if (_this.experimentalBufferBasedABR) {\n        _this.masterPlaylistLoader_.one('loadedplaylist', function () {\n          return _this.startABRTimer_();\n        });\n\n        _this.tech_.on('pause', function () {\n          return _this.stopABRTimer_();\n        });\n\n        _this.tech_.on('play', function () {\n          return _this.startABRTimer_();\n        });\n      } // Create SegmentLoader stat-getters\n      // mediaRequests_\n      // mediaRequestsAborted_\n      // mediaRequestsTimedout_\n      // mediaRequestsErrored_\n      // mediaTransferDuration_\n      // mediaBytesTransferred_\n      // mediaAppends_\n\n\n      loaderStats.forEach(function (stat) {\n        _this[stat + '_'] = sumLoaderStat.bind(assertThisInitialized(_this), stat);\n      });\n      _this.logger_ = logger('MPC');\n      _this.triggeredFmp4Usage = false;\n\n      if (_this.tech_.preload() === 'none') {\n        _this.loadOnPlay_ = function () {\n          _this.loadOnPlay_ = null;\n\n          _this.masterPlaylistLoader_.load();\n        };\n\n        _this.tech_.one('play', _this.loadOnPlay_);\n      } else {\n        _this.masterPlaylistLoader_.load();\n      }\n\n      _this.timeToLoadedData__ = -1;\n      _this.mainAppendsToLoadedData__ = -1;\n      _this.audioAppendsToLoadedData__ = -1;\n      var event = _this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n      _this.tech_.one(event, function () {\n        var timeToLoadedDataStart = Date.now();\n\n        _this.tech_.one('loadeddata', function () {\n          _this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n          _this.mainAppendsToLoadedData__ = _this.mainSegmentLoader_.mediaAppends;\n          _this.audioAppendsToLoadedData__ = _this.audioSegmentLoader_.mediaAppends;\n        });\n      });\n\n      return _this;\n    }\n\n    var _proto = MasterPlaylistController.prototype;\n\n    _proto.mainAppendsToLoadedData_ = function mainAppendsToLoadedData_() {\n      return this.mainAppendsToLoadedData__;\n    };\n\n    _proto.audioAppendsToLoadedData_ = function audioAppendsToLoadedData_() {\n      return this.audioAppendsToLoadedData__;\n    };\n\n    _proto.appendsToLoadedData_ = function appendsToLoadedData_() {\n      var main = this.mainAppendsToLoadedData_();\n      var audio = this.audioAppendsToLoadedData_();\n\n      if (main === -1 || audio === -1) {\n        return -1;\n      }\n\n      return main + audio;\n    };\n\n    _proto.timeToLoadedData_ = function timeToLoadedData_() {\n      return this.timeToLoadedData__;\n    }\n    /**\n     * Run selectPlaylist and switch to the new playlist if we should\n     *\n     * @private\n     *\n     */\n    ;\n\n    _proto.checkABR_ = function checkABR_() {\n      var nextPlaylist = this.selectPlaylist();\n\n      if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n        this.switchMedia_(nextPlaylist, 'abr');\n      }\n    };\n\n    _proto.switchMedia_ = function switchMedia_(playlist, cause, delay) {\n      var oldMedia = this.media();\n      var oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n      var newId = playlist.id || playlist.uri;\n\n      if (oldId && oldId !== newId) {\n        this.logger_(\"switch media \" + oldId + \" -> \" + newId + \" from \" + cause);\n        this.tech_.trigger({\n          type: 'usage',\n          name: \"vhs-rendition-change-\" + cause\n        });\n      }\n\n      this.masterPlaylistLoader_.media(playlist, delay);\n    }\n    /**\n     * Start a timer that periodically calls checkABR_\n     *\n     * @private\n     */\n    ;\n\n    _proto.startABRTimer_ = function startABRTimer_() {\n      var _this2 = this;\n\n      this.stopABRTimer_();\n      this.abrTimer_ = window.setInterval(function () {\n        return _this2.checkABR_();\n      }, 250);\n    }\n    /**\n     * Stop the timer that periodically calls checkABR_\n     *\n     * @private\n     */\n    ;\n\n    _proto.stopABRTimer_ = function stopABRTimer_() {\n      // if we're scrubbing, we don't need to pause.\n      // This getter will be added to Video.js in version 7.11.\n      if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n        return;\n      }\n\n      window.clearInterval(this.abrTimer_);\n      this.abrTimer_ = null;\n    }\n    /**\n     * Get a list of playlists for the currently selected audio playlist\n     *\n     * @return {Array} the array of audio playlists\n     */\n    ;\n\n    _proto.getAudioTrackPlaylists_ = function getAudioTrackPlaylists_() {\n      var master = this.master();\n      var defaultPlaylists = master && master.playlists || []; // if we don't have any audio groups then we can only\n      // assume that the audio tracks are contained in masters\n      // playlist array, use that or an empty array.\n\n      if (!master || !master.mediaGroups || !master.mediaGroups.AUDIO) {\n        return defaultPlaylists;\n      }\n\n      var AUDIO = master.mediaGroups.AUDIO;\n      var groupKeys = Object.keys(AUDIO);\n      var track; // get the current active track\n\n      if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n        track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from master if mediaTypes_ isn't setup yet\n      } else {\n        // default group is `main` or just the first group.\n        var defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n\n        for (var label in defaultGroup) {\n          if (defaultGroup[label][\"default\"]) {\n            track = {\n              label: label\n            };\n            break;\n          }\n        }\n      } // no active track no playlists.\n\n\n      if (!track) {\n        return defaultPlaylists;\n      }\n\n      var playlists = []; // get all of the playlists that are possible for the\n      // active track.\n\n      for (var group in AUDIO) {\n        if (AUDIO[group][track.label]) {\n          var properties = AUDIO[group][track.label];\n\n          if (properties.playlists && properties.playlists.length) {\n            playlists.push.apply(playlists, properties.playlists);\n          } else if (properties.uri) {\n            playlists.push(properties);\n          } else if (master.playlists.length) {\n            // if an audio group does not have a uri\n            // see if we have main playlists that use it as a group.\n            // if we do then add those to the playlists list.\n            for (var i = 0; i < master.playlists.length; i++) {\n              var playlist = master.playlists[i];\n\n              if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n                playlists.push(playlist);\n              }\n            }\n          }\n        }\n      }\n\n      if (!playlists.length) {\n        return defaultPlaylists;\n      }\n\n      return playlists;\n    }\n    /**\n     * Register event handlers on the master playlist loader. A helper\n     * function for construction time.\n     *\n     * @private\n     */\n    ;\n\n    _proto.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n      var _this3 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this3.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n          _this3.requestOptions_.timeout = 0;\n        } else {\n          _this3.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this3.tech_.preload() !== 'none') {\n          _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n          _this3.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this3.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this3.audioSegmentLoader_,\n            SUBTITLES: _this3.subtitleSegmentLoader_,\n            main: _this3.mainSegmentLoader_\n          },\n          tech: _this3.tech_,\n          requestOptions: _this3.requestOptions_,\n          masterPlaylistLoader: _this3.masterPlaylistLoader_,\n          vhs: _this3.vhs_,\n          master: _this3.master(),\n          mediaTypes: _this3.mediaTypes_,\n          blacklistCurrentPlaylist: _this3.blacklistCurrentPlaylist.bind(_this3)\n        });\n\n        _this3.triggerPresenceUsage_(_this3.master(), media);\n\n        _this3.setupFirstPlay();\n\n        if (!_this3.mediaTypes_.AUDIO.activePlaylistLoader || _this3.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this3.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this3.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this3.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        if (_this3.loadOnPlay_) {\n          _this3.tech_.off('play', _this3.loadOnPlay_);\n        }\n\n        var updatedPlaylist = _this3.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // exclude any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this3.excludeUnsupportedVariants_();\n\n          var selectedMedia;\n\n          if (_this3.enableLowInitialPlaylist) {\n            selectedMedia = _this3.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this3.selectPlaylist();\n          }\n\n          if (!selectedMedia || !_this3.shouldSwitchToMedia_(selectedMedia)) {\n            return;\n          }\n\n          _this3.initialMedia_ = selectedMedia;\n\n          _this3.switchMedia_(_this3.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n          // fire again since the playlist will be requested. In the case of vhs-json\n          // (where the manifest object is provided as the source), when the media\n          // playlist's `segments` list is already available, a media playlist won't be\n          // requested, and loadedplaylist won't fire again, so the playlist handler must be\n          // called on its own here.\n\n\n          var haveJsonSource = _this3.sourceType_ === 'vhs-json' && _this3.initialMedia_.segments;\n\n          if (!haveJsonSource) {\n            return;\n          }\n\n          updatedPlaylist = _this3.initialMedia_;\n        }\n\n        _this3.handleUpdatedMediaPlaylist(updatedPlaylist);\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this3.mainSegmentLoader_.abort();\n\n        _this3.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this3.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n          _this3.requestOptions_.timeout = 0;\n        } else {\n          _this3.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n        _this3.mainSegmentLoader_.load();\n\n        _this3.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this3.masterPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n        // excluded for not-changing. We likely just have a really slowly updating\n        // playlist.\n\n\n        if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n          return;\n        }\n\n        var playlistOutdated = _this3.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this3.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }); // useful for monitoring QoS\n\n\n          _this3.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-disabled'\n        });\n\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-enabled'\n        });\n\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * Given an updated media playlist (whether it was loaded for the first time, or\n     * refreshed for live playlists), update any relevant properties and state to reflect\n     * changes in the media that should be accounted for (e.g., cues and duration).\n     *\n     * @param {Object} updatedPlaylist the updated media playlist object\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleUpdatedMediaPlaylist = function handleUpdatedMediaPlaylist(updatedPlaylist) {\n      if (this.useCueTags_) {\n        this.updateAdCues_(updatedPlaylist);\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `mediachange`\n\n\n      this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n      this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n      // as it is possible that it was temporarily stopped while waiting for\n      // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n      if (!this.tech_.paused()) {\n        this.mainSegmentLoader_.load();\n\n        if (this.audioSegmentLoader_) {\n          this.audioSegmentLoader_.load();\n        }\n      }\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n    ;\n\n    _proto.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-demuxed'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-webvtt'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Vhs$1.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-aes'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-alternate-audio'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-playlist-cue-tags'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    };\n\n    _proto.shouldSwitchToMedia_ = function shouldSwitchToMedia_(nextPlaylist) {\n      var currentPlaylist = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_;\n      var currentTime = this.tech_.currentTime();\n      var bufferLowWaterLine = this.bufferLowWaterLine();\n      var bufferHighWaterLine = this.bufferHighWaterLine();\n      var buffered = this.tech_.buffered();\n      return shouldSwitchToMedia({\n        buffered: buffered,\n        currentTime: currentTime,\n        currentPlaylist: currentPlaylist,\n        nextPlaylist: nextPlaylist,\n        bufferLowWaterLine: bufferLowWaterLine,\n        bufferHighWaterLine: bufferHighWaterLine,\n        duration: this.duration(),\n        experimentalBufferBasedABR: this.experimentalBufferBasedABR,\n        log: this.logger_\n      });\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n    ;\n\n    _proto.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n      var _this4 = this;\n\n      if (!this.experimentalBufferBasedABR) {\n        this.mainSegmentLoader_.on('bandwidthupdate', function () {\n          var nextPlaylist = _this4.selectPlaylist();\n\n          if (_this4.shouldSwitchToMedia_(nextPlaylist)) {\n            _this4.switchMedia_(nextPlaylist, 'bandwidthupdate');\n          }\n\n          _this4.tech_.trigger('bandwidthupdate');\n        });\n        this.mainSegmentLoader_.on('progress', function () {\n          _this4.trigger('progress');\n        });\n      }\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this4.blacklistCurrentPlaylist(_this4.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('appenderror', function () {\n        _this4.error = _this4.mainSegmentLoader_.error_;\n\n        _this4.trigger('error');\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this4.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-timestamp-offset'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this4.onSyncInfoUpdate_();\n      });\n      this.audioSegmentLoader_.on('appenderror', function () {\n        _this4.error = _this4.audioSegmentLoader_.error_;\n\n        _this4.trigger('error');\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this4.logger_('main segment loader ended');\n\n        _this4.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function (event) {\n        // never try to early abort with the new ABR algorithm\n        if (_this4.experimentalBufferBasedABR) {\n          return;\n        }\n\n        _this4.delegateLoaders_('all', ['abort']);\n\n        _this4.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      var updateCodecs = function updateCodecs() {\n        if (!_this4.sourceUpdater_.hasCreatedSourceBuffers()) {\n          return _this4.tryToCreateSourceBuffers_();\n        }\n\n        var codecs = _this4.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n\n        if (!codecs) {\n          return;\n        }\n\n        _this4.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n      };\n\n      this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n      this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n      this.mainSegmentLoader_.on('fmp4', function () {\n        if (!_this4.triggeredFmp4Usage) {\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'hls-fmp4'\n          });\n\n          _this4.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('fmp4', function () {\n        if (!_this4.triggeredFmp4Usage) {\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'hls-fmp4'\n          });\n\n          _this4.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this4.logger_('audioSegmentLoader ended');\n\n        _this4.onEndOfStream();\n      });\n    };\n\n    _proto.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n    ;\n\n    _proto.load = function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     * @deprecated\n     */\n    ;\n\n    _proto.smoothQualityChange_ = function smoothQualityChange_(media) {\n      if (media === void 0) {\n        media = this.selectPlaylist();\n      }\n\n      this.fastQualityChange_(media);\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n    ;\n\n    _proto.fastQualityChange_ = function fastQualityChange_(media) {\n      var _this5 = this;\n\n      if (media === void 0) {\n        media = this.selectPlaylist();\n      }\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        this.logger_('skipping fastQualityChange because new media is same as old');\n        return;\n      }\n\n      this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n          _this5.tech_.setCurrentTime(_this5.tech_.currentTime() + 0.04);\n        } else {\n          _this5.tech_.setCurrentTime(_this5.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n    ;\n\n    _proto.play = function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_) {\n        this.load();\n      }\n\n      var seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable.start(0)) {\n          return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n    ;\n\n    _proto.setupFirstPlay = function setupFirstPlay() {\n      var _this6 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable = this.seekable();\n\n        if (!seekable.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this6.trigger('firstplay');\n\n            _this6.tech_.setCurrentTime(seekable.end(0));\n\n            _this6.hasPlayed_ = true;\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.tech_.setCurrentTime(seekable.end(0));\n      }\n\n      this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleSourceOpen_ = function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * handle the sourceended event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleSourceEnded_ = function handleSourceEnded_() {\n      if (!this.inbandTextTracks_.metadataTrack_) {\n        return;\n      }\n\n      var cues = this.inbandTextTracks_.metadataTrack_.cues;\n\n      if (!cues || !cues.length) {\n        return;\n      }\n\n      var duration = this.duration();\n      cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n    }\n    /**\n     * handle the durationchange event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleDurationChange_ = function handleDurationChange_() {\n      this.tech_.trigger('durationchange');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n    ;\n\n    _proto.onEndOfStream = function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        var mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n        if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.stopABRTimer_();\n      this.sourceUpdater_.endOfStream();\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     *\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n    ;\n\n    _proto.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.duration());\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n    ;\n\n    _proto.blacklistCurrentPlaylist = function blacklistCurrentPlaylist(error, blacklistDuration) {\n      if (error === void 0) {\n        error = {};\n      } // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n\n      var currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        if (this.mediaSource.readyState !== 'open') {\n          this.trigger('error');\n        } else {\n          this.sourceUpdater_.endOfStream('network');\n        }\n\n        return;\n      }\n\n      currentPlaylist.playlistErrors_++;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n      var enabledPlaylists = playlists.filter(isEnabled);\n      var isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === currentPlaylist; // Don't blacklist the only playlist unless it was blacklisted\n      // forever\n\n      if (playlists.length === 1 && blacklistDuration !== Infinity) {\n        videojs.log.warn(\"Problem encountered with playlist \" + currentPlaylist.id + \". \" + 'Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        var reincluded = false;\n        playlists.forEach(function (playlist) {\n          // skip current playlist which is about to be blacklisted\n          if (playlist === currentPlaylist) {\n            return;\n          }\n\n          var excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n          if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n            reincluded = true;\n            delete playlist.excludeUntil;\n          }\n        });\n\n        if (reincluded) {\n          videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n          // playlist. This is needed for users relying on the retryplaylist event to catch a\n          // case where the player might be stuck and looping through \"dead\" playlists.\n\n          this.tech_.trigger('retryplaylist');\n        }\n      } // Blacklist this playlist\n\n\n      var excludeUntil;\n\n      if (currentPlaylist.playlistErrors_ > this.maxPlaylistRetries) {\n        excludeUntil = Infinity;\n      } else {\n        excludeUntil = Date.now() + blacklistDuration * 1000;\n      }\n\n      currentPlaylist.excludeUntil = excludeUntil;\n\n      if (error.reason) {\n        currentPlaylist.lastExcludeReason_ = error.reason;\n      }\n\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-blacklisted'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // TODO: should we select a new playlist if this blacklist wasn't for the currentPlaylist?\n      // Would be something like media().id !=== currentPlaylist.id and we  would need something\n      // like `pendingMedia` in playlist loaders to check against that too. This will prevent us\n      // from loading a new playlist on any blacklist.\n      // Select a new playlist\n\n      var nextPlaylist = this.selectPlaylist();\n\n      if (!nextPlaylist) {\n        this.error = 'Playback cannot continue. No available working or supported playlists.';\n        this.trigger('error');\n        return;\n      }\n\n      var logFn = error.internal ? this.logger_ : videojs.log.warn;\n      var errorMessage = error.message ? ' ' + error.message : '';\n      logFn((error.internal ? 'Internal problem' : 'Problem') + \" encountered with playlist \" + currentPlaylist.id + \".\" + (errorMessage + \" Switching to playlist \" + nextPlaylist.id + \".\")); // if audio group changed reset audio loaders\n\n      if (nextPlaylist.attributes.AUDIO !== currentPlaylist.attributes.AUDIO) {\n        this.delegateLoaders_('audio', ['abort', 'pause']);\n      } // if subtitle group changed reset subtitle loaders\n\n\n      if (nextPlaylist.attributes.SUBTITLES !== currentPlaylist.attributes.SUBTITLES) {\n        this.delegateLoaders_('subtitle', ['abort', 'pause']);\n      }\n\n      this.delegateLoaders_('main', ['abort', 'pause']);\n      var delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n      var shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n      return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n    }\n    /**\n     * Pause all segment/playlist loaders\n     */\n    ;\n\n    _proto.pauseLoading = function pauseLoading() {\n      this.delegateLoaders_('all', ['abort', 'pause']);\n      this.stopABRTimer_();\n    }\n    /**\n     * Call a set of functions in order on playlist loaders, segment loaders,\n     * or both types of loaders.\n     *\n     * @param {string} filter\n     *        Filter loaders that should call fnNames using a string. Can be:\n     *        * all - run on all loaders\n     *        * audio - run on all audio loaders\n     *        * subtitle - run on all subtitle loaders\n     *        * main - run on the main/master loaders\n     *\n     * @param {Array|string} fnNames\n     *        A string or array of function names to call.\n     */\n    ;\n\n    _proto.delegateLoaders_ = function delegateLoaders_(filter, fnNames) {\n      var _this7 = this;\n\n      var loaders = [];\n      var dontFilterPlaylist = filter === 'all';\n\n      if (dontFilterPlaylist || filter === 'main') {\n        loaders.push(this.masterPlaylistLoader_);\n      }\n\n      var mediaTypes = [];\n\n      if (dontFilterPlaylist || filter === 'audio') {\n        mediaTypes.push('AUDIO');\n      }\n\n      if (dontFilterPlaylist || filter === 'subtitle') {\n        mediaTypes.push('CLOSED-CAPTIONS');\n        mediaTypes.push('SUBTITLES');\n      }\n\n      mediaTypes.forEach(function (mediaType) {\n        var loader = _this7.mediaTypes_[mediaType] && _this7.mediaTypes_[mediaType].activePlaylistLoader;\n\n        if (loader) {\n          loaders.push(loader);\n        }\n      });\n      ['main', 'audio', 'subtitle'].forEach(function (name) {\n        var loader = _this7[name + \"SegmentLoader_\"];\n\n        if (loader && (filter === name || filter === 'all')) {\n          loaders.push(loader);\n        }\n      });\n      loaders.forEach(function (loader) {\n        return fnNames.forEach(function (fnName) {\n          if (typeof loader[fnName] === 'function') {\n            loader[fnName]();\n          }\n        });\n      });\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // if the seek location is already buffered, continue buffering as usual\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n    ;\n\n    _proto.duration = function duration() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        // no playlists loaded yet, so can't determine a duration\n        return 0;\n      } // Don't rely on the media source for duration in the case of a live playlist since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, just return Infinity.\n\n\n      if (!media.endList) {\n        return Infinity;\n      } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n      // available). If it's not available, fall back to a playlist-calculated estimate.\n\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Vhs$1.Playlist.duration(media);\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n    ;\n\n    _proto.seekable = function seekable() {\n      return this.seekable_;\n    };\n\n    _proto.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n      var audioSeekable; // TODO check for creation of both source buffers before updating seekable\n      //\n      // A fix was made to this function where a check for\n      // this.sourceUpdater_.hasCreatedSourceBuffers\n      // was added to ensure that both source buffers were created before seekable was\n      // updated. However, it originally had a bug where it was checking for a true and\n      // returning early instead of checking for false. Setting it to check for false to\n      // return early though created other issues. A call to play() would check for seekable\n      // end without verifying that a seekable range was present. In addition, even checking\n      // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n      // due to a media update calling load on the segment loaders, skipping a seek to live,\n      // thereby starting live streams at the beginning of the stream rather than at the end.\n      //\n      // This conditional should be fixed to wait for the creation of two source buffers at\n      // the same time as the other sections of code are fixed to properly seek to live and\n      // not throw an error due to checking for a seekable end when no seekable range exists.\n      //\n      // For now, fall back to the older behavior, with the understanding that the seekable\n      // range may not be completely correct, leading to a suboptimal initial live point.\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.duration());\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      var master = this.masterPlaylistLoader_.master;\n      var mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.duration());\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd;\n      var oldStart;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_(\"seekable updated [\" + printableRange(this.seekable_) + \"]\");\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n    ;\n\n    _proto.updateDuration = function updateDuration(isLive) {\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n        this.updateDuration_ = null;\n      }\n\n      if (this.mediaSource.readyState !== 'open') {\n        this.updateDuration_ = this.updateDuration.bind(this, isLive);\n        this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n        return;\n      }\n\n      if (isLive) {\n        var seekable = this.seekable();\n\n        if (!seekable.length) {\n          return;\n        } // Even in the case of a live playlist, the native MediaSource's duration should not\n        // be set to Infinity (even though this would be expected for a live playlist), since\n        // setting the native MediaSource's duration to infinity ends up with consequences to\n        // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n        //\n        // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n        // however, few browsers have support for setLiveSeekableRange()\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n        //\n        // Until a time when the duration of the media source can be set to infinity, and a\n        // seekable range specified across browsers, the duration should be greater than or\n        // equal to the last possible seekable value.\n        // MediaSource duration starts as NaN\n        // It is possible (and probable) that this case will never be reached for many\n        // sources, since the MediaSource reports duration as the highest value without\n        // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n        // we buffered times 0 to 100 with real times of 100 to 200, even though current\n        // time will be between 0 and 100, the native media source may report the duration\n        // as 200. However, since we report duration separate from the media source (as\n        // Infinity), and as long as the native media source duration value is greater than\n        // our reported seekable range, seeks will work as expected. The large number as\n        // duration for live is actually a strategy used by some players to work around the\n        // issue of live seekable ranges cited above.\n\n\n        if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n          this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n        }\n\n        return;\n      }\n\n      var buffered = this.tech_.buffered();\n      var duration = Vhs$1.Playlist.duration(this.masterPlaylistLoader_.media());\n\n      if (buffered.length > 0) {\n        duration = Math.max(duration, buffered.end(buffered.length - 1));\n      }\n\n      if (this.mediaSource.duration !== duration) {\n        this.sourceUpdater_.setDuration(duration);\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var _this8 = this;\n\n      this.trigger('dispose');\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this8.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n      this.sourceUpdater_.dispose();\n      this.timelineChangeController_.dispose();\n      this.stopABRTimer_();\n\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      }\n\n      this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n      this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n      this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n      this.off();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n    ;\n\n    _proto.master = function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n    ;\n\n    _proto.media = function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    };\n\n    _proto.areMediaTypesKnown_ = function areMediaTypesKnown_() {\n      var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n      var hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n      // otherwise check on the segment loader.\n\n      var hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n      if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.getCodecsOrExclude_ = function getCodecsOrExclude_() {\n      var _this9 = this;\n\n      var media = {\n        main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n        audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n      }; // set \"main\" media equal to video\n\n      media.video = media.main;\n      var playlistCodecs = codecsForPlaylist(this.master(), this.media());\n      var codecs = {};\n      var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n\n      if (media.main.hasVideo) {\n        codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n      }\n\n      if (media.main.isMuxed) {\n        codecs.video += \",\" + (playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC);\n      }\n\n      if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n        codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n        media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n      } // no codecs, no playback.\n\n\n      if (!codecs.audio && !codecs.video) {\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          message: 'Could not determine codecs for playlist.',\n          blacklistDuration: Infinity\n        });\n        return;\n      } // fmp4 relies on browser support, while ts relies on muxer support\n\n\n      var supportFunction = function supportFunction(isFmp4, codec) {\n        return isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n      };\n\n      var unsupportedCodecs = {};\n      var unsupportedAudio;\n      ['video', 'audio'].forEach(function (type) {\n        if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n          var supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n          unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n          unsupportedCodecs[supporter].push(codecs[type]);\n\n          if (type === 'audio') {\n            unsupportedAudio = supporter;\n          }\n        }\n      });\n\n      if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n        var audioGroup = this.media().attributes.AUDIO;\n        this.master().playlists.forEach(function (variant) {\n          var variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n\n          if (variantAudioGroup === audioGroup && variant !== _this9.media()) {\n            variant.excludeUntil = Infinity;\n          }\n        });\n        this.logger_(\"excluding audio group \" + audioGroup + \" as \" + unsupportedAudio + \" does not support codec(s): \\\"\" + codecs.audio + \"\\\"\");\n      } // if we have any unsupported codecs blacklist this playlist.\n\n\n      if (Object.keys(unsupportedCodecs).length) {\n        var message = Object.keys(unsupportedCodecs).reduce(function (acc, supporter) {\n          if (acc) {\n            acc += ', ';\n          }\n\n          acc += supporter + \" does not support codec(s): \\\"\" + unsupportedCodecs[supporter].join(',') + \"\\\"\";\n          return acc;\n        }, '') + '.';\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          internal: true,\n          message: message,\n          blacklistDuration: Infinity\n        });\n        return;\n      } // check if codec switching is happening\n\n\n      if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n        var switchMessages = [];\n        ['video', 'audio'].forEach(function (type) {\n          var newCodec = (parseCodecs(_this9.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n          var oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n\n          if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n            switchMessages.push(\"\\\"\" + _this9.sourceUpdater_.codecs[type] + \"\\\" -> \\\"\" + codecs[type] + \"\\\"\");\n          }\n        });\n\n        if (switchMessages.length) {\n          this.blacklistCurrentPlaylist({\n            playlist: this.media(),\n            message: \"Codec switching not supported: \" + switchMessages.join(', ') + \".\",\n            blacklistDuration: Infinity,\n            internal: true\n          });\n          return;\n        }\n      } // TODO: when using the muxer shouldn't we just return\n      // the codecs that the muxer outputs?\n\n\n      return codecs;\n    }\n    /**\n     * Create source buffers and exlude any incompatible renditions.\n     *\n     * @private\n     */\n    ;\n\n    _proto.tryToCreateSourceBuffers_ = function tryToCreateSourceBuffers_() {\n      // media source is not ready yet or sourceBuffers are already\n      // created.\n      if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return;\n      }\n\n      if (!this.areMediaTypesKnown_()) {\n        return;\n      }\n\n      var codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n\n      this.sourceUpdater_.createSourceBuffers(codecs);\n      var codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n      this.excludeIncompatibleVariants_(codecString);\n    }\n    /**\n     * Excludes playlists with codecs that are unsupported by the muxer and browser.\n     */\n    ;\n\n    _proto.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n      var _this10 = this;\n\n      var playlists = this.master().playlists;\n      var ids = []; // TODO: why don't we have a property to loop through all\n      // playlist? Why did we ever mix indexes and keys?\n\n      Object.keys(playlists).forEach(function (key) {\n        var variant = playlists[key]; // check if we already processed this playlist.\n\n        if (ids.indexOf(variant.id) !== -1) {\n          return;\n        }\n\n        ids.push(variant.id);\n        var codecs = codecsForPlaylist(_this10.master, variant);\n        var unsupported = [];\n\n        if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n          unsupported.push(\"audio codec \" + codecs.audio);\n        }\n\n        if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n          unsupported.push(\"video codec \" + codecs.video);\n        }\n\n        if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n          unsupported.push(\"text codec \" + codecs.text);\n        }\n\n        if (unsupported.length) {\n          variant.excludeUntil = Infinity;\n\n          _this10.logger_(\"excluding \" + variant.id + \" for unsupported: \" + unsupported.join(', '));\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n    ;\n\n    _proto.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(codecString) {\n      var _this11 = this;\n\n      var ids = [];\n      var playlists = this.master().playlists;\n      var codecs = unwrapCodecList(parseCodecs(codecString));\n      var codecCount_ = codecCount(codecs);\n      var videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n      var audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n      Object.keys(playlists).forEach(function (key) {\n        var variant = playlists[key]; // check if we already processed this playlist.\n        // or it if it is already excluded forever.\n\n        if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n          return;\n        }\n\n        ids.push(variant.id);\n        var blacklistReasons = []; // get codecs from the playlist for this variant\n\n        var variantCodecs = codecsForPlaylist(_this11.masterPlaylistLoader_.master, variant);\n        var variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n        // variant is incompatible. Wait for mux.js to probe\n\n        if (!variantCodecs.audio && !variantCodecs.video) {\n          return;\n        } // TODO: we can support this by removing the\n        // old media source and creating a new one, but it will take some work.\n        // The number of streams cannot change\n\n\n        if (variantCodecCount !== codecCount_) {\n          blacklistReasons.push(\"codec count \\\"\" + variantCodecCount + \"\\\" !== \\\"\" + codecCount_ + \"\\\"\");\n        } // only exclude playlists by codec change, if codecs cannot switch\n        // during playback.\n\n\n        if (!_this11.sourceUpdater_.canChangeType()) {\n          var variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n          var variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n          if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n            blacklistReasons.push(\"video codec \\\"\" + variantVideoDetails.type + \"\\\" !== \\\"\" + videoDetails.type + \"\\\"\");\n          } // the audio codec cannot change\n\n\n          if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n            blacklistReasons.push(\"audio codec \\\"\" + variantAudioDetails.type + \"\\\" !== \\\"\" + audioDetails.type + \"\\\"\");\n          }\n        }\n\n        if (blacklistReasons.length) {\n          variant.excludeUntil = Infinity;\n\n          _this11.logger_(\"blacklisting \" + variant.id + \": \" + blacklistReasons.join(' && '));\n        }\n      });\n    };\n\n    _proto.updateAdCues_ = function updateAdCues_(media) {\n      var offset = 0;\n      var seekable = this.seekable();\n\n      if (seekable.length) {\n        offset = seekable.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {number} Desired forward buffer length in seconds\n     */\n    ;\n\n    _proto.goalBufferLength = function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {number} Desired buffer low water line in seconds\n     */\n    ;\n\n    _proto.bufferLowWaterLine = function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      var newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, this.experimentalBufferBasedABR ? newMax : max);\n    };\n\n    _proto.bufferHighWaterLine = function bufferHighWaterLine() {\n      return Config.BUFFER_HIGH_WATER_LINE;\n    };\n\n    return MasterPlaylistController;\n  }(videojs.EventTarget);\n  /**\n   * Returns a function that acts as the Enable/disable playlist function.\n   *\n   * @param {PlaylistLoader} loader - The master playlist loader\n   * @param {string} playlistID - id of the playlist\n   * @param {Function} changePlaylistFn - A function to be called after a\n   * playlist's enabled-state has been changed. Will NOT be called if a\n   * playlist's enabled-state is unchanged\n   * @param {boolean=} enable - Value to set the playlist enabled-state to\n   * or if undefined returns the current enabled-state for the playlist\n   * @return {Function} Function for setting/getting enabled\n   */\n\n\n  var enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n    return function (enable) {\n      var playlist = loader.master.playlists[playlistID];\n      var incompatible = isIncompatible(playlist);\n      var currentlyEnabled = isEnabled(playlist);\n\n      if (typeof enable === 'undefined') {\n        return currentlyEnabled;\n      }\n\n      if (enable) {\n        delete playlist.disabled;\n      } else {\n        playlist.disabled = true;\n      }\n\n      if (enable !== currentlyEnabled && !incompatible) {\n        // Ensure the outside world knows about our changes\n        changePlaylistFn();\n\n        if (enable) {\n          loader.trigger('renditionenabled');\n        } else {\n          loader.trigger('renditiondisabled');\n        }\n      }\n\n      return enable;\n    };\n  };\n  /**\n   * The representation object encapsulates the publicly visible information\n   * in a media playlist along with a setter/getter-type function (enabled)\n   * for changing the enabled-state of a particular playlist entry\n   *\n   * @class Representation\n   */\n\n\n  var Representation = function Representation(vhsHandler, playlist, id) {\n    var mpc = vhsHandler.masterPlaylistController_,\n        smoothQualityChange = vhsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n    var changeType = smoothQualityChange ? 'smooth' : 'fast';\n    var qualityChangeFunction = mpc[changeType + \"QualityChange_\"].bind(mpc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      var resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n    }\n\n    this.codecs = codecsForPlaylist(mpc.master(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the master playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  };\n  /**\n   * A mixin function that adds the `representations` api to an instance\n   * of the VhsHandler class\n   *\n   * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n   * representation API into\n   */\n\n\n  var renditionSelectionMixin = function renditionSelectionMixin(vhsHandler) {\n    // Add a single API-specific function to the VhsHandler instance\n    vhsHandler.representations = function () {\n      var master = vhsHandler.masterPlaylistController_.master();\n      var playlists = isAudioOnly(master) ? vhsHandler.masterPlaylistController_.getAudioTrackPlaylists_() : master.playlists;\n\n      if (!playlists) {\n        return [];\n      }\n\n      return playlists.filter(function (media) {\n        return !isIncompatible(media);\n      }).map(function (e, i) {\n        return new Representation(vhsHandler, e, e.id);\n      });\n    };\n  };\n  /**\n   * @file playback-watcher.js\n   *\n   * Playback starts, and now my watch begins. It shall not end until my death. I shall\n   * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n   * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n   * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n   * my life and honor to the Playback Watch, for this Player and all the Players to come.\n   */\n\n\n  var timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n  /**\n   * @class PlaybackWatcher\n   */\n\n  var PlaybackWatcher = /*#__PURE__*/function () {\n    /**\n     * Represents an PlaybackWatcher object.\n     *\n     * @class\n     * @param {Object} options an object that includes the tech and settings\n     */\n    function PlaybackWatcher(options) {\n      var _this = this;\n\n      this.masterPlaylistController_ = options.masterPlaylistController;\n      this.tech_ = options.tech;\n      this.seekable = options.seekable;\n      this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n      this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n      this.media = options.media;\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = null;\n      this.timer_ = null;\n      this.checkCurrentTimeTimeout_ = null;\n      this.logger_ = logger('PlaybackWatcher');\n      this.logger_('initialize');\n\n      var playHandler = function playHandler() {\n        return _this.monitorCurrentTime_();\n      };\n\n      var canPlayHandler = function canPlayHandler() {\n        return _this.monitorCurrentTime_();\n      };\n\n      var waitingHandler = function waitingHandler() {\n        return _this.techWaiting_();\n      };\n\n      var cancelTimerHandler = function cancelTimerHandler() {\n        return _this.cancelTimer_();\n      };\n\n      var mpc = this.masterPlaylistController_;\n      var loaderTypes = ['main', 'subtitle', 'audio'];\n      var loaderChecks = {};\n      loaderTypes.forEach(function (type) {\n        loaderChecks[type] = {\n          reset: function reset() {\n            return _this.resetSegmentDownloads_(type);\n          },\n          updateend: function updateend() {\n            return _this.checkSegmentDownloads_(type);\n          }\n        };\n        mpc[type + \"SegmentLoader_\"].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n        // isn't changing we want to reset. We cannot assume that the new rendition\n        // will also be stalled, until after new appends.\n\n        mpc[type + \"SegmentLoader_\"].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n        // This prevents one segment playlists (single vtt or single segment content)\n        // from being detected as stalling. As the buffer will not change in those cases, since\n        // the buffer is the entire video duration.\n\n        _this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      /**\n       * We check if a seek was into a gap through the following steps:\n       * 1. We get a seeking event and we do not get a seeked event. This means that\n       *    a seek was attempted but not completed.\n       * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n       *    removed everything from our buffer and appended a segment, and should be ready\n       *    to check for gaps.\n       */\n\n      var setSeekingHandlers = function setSeekingHandlers(fn) {\n        ['main', 'audio'].forEach(function (type) {\n          mpc[type + \"SegmentLoader_\"][fn]('appended', _this.seekingAppendCheck_);\n        });\n      };\n\n      this.seekingAppendCheck_ = function () {\n        if (_this.fixesBadSeeks_()) {\n          _this.consecutiveUpdates = 0;\n          _this.lastRecordedTime = _this.tech_.currentTime();\n          setSeekingHandlers('off');\n        }\n      };\n\n      this.clearSeekingAppendCheck_ = function () {\n        return setSeekingHandlers('off');\n      };\n\n      this.watchForBadSeeking_ = function () {\n        _this.clearSeekingAppendCheck_();\n\n        setSeekingHandlers('on');\n      };\n\n      this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n      this.tech_.on('seeking', this.watchForBadSeeking_);\n      this.tech_.on('waiting', waitingHandler);\n      this.tech_.on(timerCancelEvents, cancelTimerHandler);\n      this.tech_.on('canplay', canPlayHandler);\n      /*\n        An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n        is surfaced in one of two ways:\n         1)  The `waiting` event is fired before the player has buffered content, making it impossible\n            to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n            we can check if playback is stalled due to a gap, and skip the gap if necessary.\n        2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n            is in a playing state. To catch this case, it's important that our one-time play listener is setup\n            even if the player is in a playing state\n      */\n\n      this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n      this.dispose = function () {\n        _this.clearSeekingAppendCheck_();\n\n        _this.logger_('dispose');\n\n        _this.tech_.off('waiting', waitingHandler);\n\n        _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n        _this.tech_.off('canplay', canPlayHandler);\n\n        _this.tech_.off('play', playHandler);\n\n        _this.tech_.off('seeking', _this.watchForBadSeeking_);\n\n        _this.tech_.off('seeked', _this.clearSeekingAppendCheck_);\n\n        loaderTypes.forEach(function (type) {\n          mpc[type + \"SegmentLoader_\"].off('appendsdone', loaderChecks[type].updateend);\n          mpc[type + \"SegmentLoader_\"].off('playlistupdate', loaderChecks[type].reset);\n\n          _this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n        });\n\n        if (_this.checkCurrentTimeTimeout_) {\n          window.clearTimeout(_this.checkCurrentTimeTimeout_);\n        }\n\n        _this.cancelTimer_();\n      };\n    }\n    /**\n     * Periodically check current time to see if playback stopped\n     *\n     * @private\n     */\n\n\n    var _proto = PlaybackWatcher.prototype;\n\n    _proto.monitorCurrentTime_ = function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * Reset stalled download stats for a specific type of loader\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#playlistupdate\n     * @listens Tech#seeking\n     * @listens Tech#seeked\n     */\n    ;\n\n    _proto.resetSegmentDownloads_ = function resetSegmentDownloads_(type) {\n      var loader = this.masterPlaylistController_[type + \"SegmentLoader_\"];\n\n      if (this[type + \"StalledDownloads_\"] > 0) {\n        this.logger_(\"resetting possible stalled download count for \" + type + \" loader\");\n      }\n\n      this[type + \"StalledDownloads_\"] = 0;\n      this[type + \"Buffered_\"] = loader.buffered_();\n    }\n    /**\n     * Checks on every segment `appendsdone` to see\n     * if segment appends are making progress. If they are not\n     * and we are still downloading bytes. We blacklist the playlist.\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#appendsdone\n     */\n    ;\n\n    _proto.checkSegmentDownloads_ = function checkSegmentDownloads_(type) {\n      var mpc = this.masterPlaylistController_;\n      var loader = mpc[type + \"SegmentLoader_\"];\n      var buffered = loader.buffered_();\n      var isBufferedDifferent = isRangeDifferent(this[type + \"Buffered_\"], buffered);\n      this[type + \"Buffered_\"] = buffered; // if another watcher is going to fix the issue or\n      // the buffered value for this loader changed\n      // appends are working\n\n      if (isBufferedDifferent) {\n        this.resetSegmentDownloads_(type);\n        return;\n      }\n\n      this[type + \"StalledDownloads_\"]++;\n      this.logger_(\"found #\" + this[type + \"StalledDownloads_\"] + \" \" + type + \" appends that did not increase buffer (possible stalled download)\", {\n        playlistId: loader.playlist_ && loader.playlist_.id,\n        buffered: timeRangesToArray(buffered)\n      }); // after 10 possibly stalled appends with no reset, exclude\n\n      if (this[type + \"StalledDownloads_\"] < 10) {\n        return;\n      }\n\n      this.logger_(type + \" loader stalled download exclusion\");\n      this.resetSegmentDownloads_(type);\n      this.tech_.trigger({\n        type: 'usage',\n        name: \"vhs-\" + type + \"-download-exclusion\"\n      });\n\n      if (type === 'subtitle') {\n        return;\n      } // TODO: should we exclude audio tracks rather than main tracks\n      // when type is audio?\n\n\n      mpc.blacklistCurrentPlaylist({\n        message: \"Excessive \" + type + \" segment downloading detected.\"\n      }, Infinity);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n    ;\n\n    _proto.checkCurrentTime_ = function checkCurrentTime_() {\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n    ;\n\n    _proto.cancelTimer_ = function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {boolean} whether an action was taken to fix the seek\n     * @private\n     */\n    ;\n\n    _proto.fixesBadSeeks_ = function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      } // TODO: It's possible that these seekable checks should be moved out of this function\n      // and into a function that runs on seekablechange. It's also possible that we only need\n      // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n      // seekable range.\n\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + ( // if the playlist is too short and the seekable range is an exact time (can\n        // happen in live with a 3 segment playlist), then don't use a time delta\n        seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_(\"Trying to seek outside of seekable at time \" + currentTime + \" with \" + (\"seekable range \" + printableRange(seekable) + \". Seeking to \") + (seekTo + \".\"));\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      var sourceUpdater = this.masterPlaylistController_.sourceUpdater_;\n      var buffered = this.tech_.buffered();\n      var audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n      var videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n      var media = this.media(); // verify that at least two segment durations or one part duration have been\n      // appended before checking for a gap.\n\n      var minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n      // appended before checking for a gap.\n\n      var bufferedToCheck = [audioBuffered, videoBuffered];\n\n      for (var i = 0; i < bufferedToCheck.length; i++) {\n        // skip null buffered\n        if (!bufferedToCheck[i]) {\n          continue;\n        }\n\n        var timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n        // duration behind we haven't appended enough to call this a bad seek.\n\n        if (timeAhead < minAppendedDuration) {\n          return false;\n        }\n      }\n\n      var nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n      // to seek over the gap\n\n      if (nextRange.length === 0) {\n        return false;\n      }\n\n      seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n      this.logger_(\"Buffered region starts (\" + nextRange.start(0) + \") \" + (\" just beyond seek point (\" + currentTime + \"). Seeking to \" + seekTo + \".\"));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n    ;\n\n    _proto.waiting_ = function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n        this.logger_(\"Stopped at \" + currentTime + \" while inside a buffered region \" + (\"[\" + currentRange.start(0) + \" -> \" + currentRange.end(0) + \"]. Attempting to resume \") + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-unknown-waiting'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n    ;\n\n    _proto.techWaiting_ = function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_(\"Fell out of live window at time \" + currentTime + \". Seeking to \" + (\"live point (seekable end) \" + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-live-resync'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var sourceUpdater = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;\n      var buffered = this.tech_.buffered();\n      var videoUnderflow = this.videoUnderflow_({\n        audioBuffered: sourceUpdater.audioBuffered(),\n        videoBuffered: sourceUpdater.videoBuffered(),\n        currentTime: currentTime\n      });\n\n      if (videoUnderflow) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-video-underflow'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      }\n\n      var nextRange = findNextRange(buffered, currentTime); // check for gap\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_(\"Stopped at \" + currentTime + \", setting timer for \" + difference + \", seeking \" + (\"to \" + nextRange.start(0)));\n        this.cancelTimer_();\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    };\n\n    _proto.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow) {\n      if (allowSeeksWithinUnsafeLiveWindow === void 0) {\n        allowSeeksWithinUnsafeLiveWindow = false;\n      }\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.videoUnderflow_ = function videoUnderflow_(_ref) {\n      var videoBuffered = _ref.videoBuffered,\n          audioBuffered = _ref.audioBuffered,\n          currentTime = _ref.currentTime; // audio only content will not have video underflow :)\n\n      if (!videoBuffered) {\n        return;\n      }\n\n      var gap; // find a gap in demuxed content.\n\n      if (videoBuffered.length && audioBuffered.length) {\n        // in Chrome audio will continue to play for ~3s when we run out of video\n        // so we have to check that the video buffer did have some buffer in the\n        // past.\n        var lastVideoRange = findRange(videoBuffered, currentTime - 3);\n        var videoRange = findRange(videoBuffered, currentTime);\n        var audioRange = findRange(audioBuffered, currentTime);\n\n        if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n          gap = {\n            start: lastVideoRange.end(0),\n            end: audioRange.end(0)\n          };\n        } // find a gap in muxed content.\n\n      } else {\n        var nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n\n        if (!nextRange.length) {\n          gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n        }\n      }\n\n      if (gap) {\n        this.logger_(\"Encountered a gap in video from \" + gap.start + \" to \" + gap.end + \". \" + (\"Seeking to current time \" + currentTime));\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n    ;\n\n    _proto.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-gap-skip'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    };\n\n    _proto.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    };\n\n    return PlaybackWatcher;\n  }();\n\n  var defaultOptions = {\n    errorInterval: 30,\n    getSource: function getSource(next) {\n      var tech = this.tech({\n        IWillNotUseThisInPlugins: true\n      });\n      var sourceObj = tech.currentSource_ || this.currentSource();\n      return next(sourceObj);\n    }\n  };\n  /**\n   * Main entry point for the plugin\n   *\n   * @param {Player} player a reference to a videojs Player instance\n   * @param {Object} [options] an object with plugin options\n   * @private\n   */\n\n  var initPlugin = function initPlugin(player, options) {\n    var lastCalled = 0;\n    var seekTo = 0;\n    var localOptions = videojs.mergeOptions(defaultOptions, options);\n    player.ready(function () {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-initialized'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-initialized'\n      });\n    });\n    /**\n     * Player modifications to perform that must wait until `loadedmetadata`\n     * has been triggered\n     *\n     * @private\n     */\n\n    var loadedMetadataHandler = function loadedMetadataHandler() {\n      if (seekTo) {\n        player.currentTime(seekTo);\n      }\n    };\n    /**\n     * Set the source on the player element, play, and seek if necessary\n     *\n     * @param {Object} sourceObj An object specifying the source url and mime-type to play\n     * @private\n     */\n\n\n    var setSource = function setSource(sourceObj) {\n      if (sourceObj === null || sourceObj === undefined) {\n        return;\n      }\n\n      seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n      player.one('loadedmetadata', loadedMetadataHandler);\n      player.src(sourceObj);\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload'\n      });\n      player.play();\n    };\n    /**\n     * Attempt to get a source from either the built-in getSource function\n     * or a custom function provided via the options\n     *\n     * @private\n     */\n\n\n    var errorHandler = function errorHandler() {\n      // Do not attempt to reload the source if a source-reload occurred before\n      // 'errorInterval' time has elapsed since the last source-reload\n      if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n        player.trigger({\n          type: 'usage',\n          name: 'vhs-error-reload-canceled'\n        });\n        player.trigger({\n          type: 'usage',\n          name: 'hls-error-reload-canceled'\n        });\n        return;\n      }\n\n      if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n        videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n        return;\n      }\n\n      lastCalled = Date.now();\n      return localOptions.getSource.call(player, setSource);\n    };\n    /**\n     * Unbind any event handlers that were bound by the plugin\n     *\n     * @private\n     */\n\n\n    var cleanupEvents = function cleanupEvents() {\n      player.off('loadedmetadata', loadedMetadataHandler);\n      player.off('error', errorHandler);\n      player.off('dispose', cleanupEvents);\n    };\n    /**\n     * Cleanup before re-initializing the plugin\n     *\n     * @param {Object} [newOptions] an object with plugin options\n     * @private\n     */\n\n\n    var reinitPlugin = function reinitPlugin(newOptions) {\n      cleanupEvents();\n      initPlugin(player, newOptions);\n    };\n\n    player.on('error', errorHandler);\n    player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n    // initializing the plugin\n\n    player.reloadSourceOnError = reinitPlugin;\n  };\n  /**\n   * Reload the source when an error is detected as long as there\n   * wasn't an error previously within the last 30 seconds\n   *\n   * @param {Object} [options] an object with plugin options\n   */\n\n\n  var reloadSourceOnError = function reloadSourceOnError(options) {\n    initPlugin(this, options);\n  };\n\n  var version$4 = \"2.14.3\";\n  var version$3 = \"6.0.1\";\n  var version$2 = \"0.21.1\";\n  var version$1 = \"4.7.1\";\n  var version = \"3.1.3\";\n  var Vhs = {\n    PlaylistLoader: PlaylistLoader,\n    Playlist: Playlist,\n    utils: utils,\n    STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n    INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n    lastBandwidthSelector: lastBandwidthSelector,\n    movingAverageBandwidthSelector: movingAverageBandwidthSelector,\n    comparePlaylistBandwidth: comparePlaylistBandwidth,\n    comparePlaylistResolution: comparePlaylistResolution,\n    xhr: xhrFactory()\n  }; // Define getter/setters for config properties\n\n  Object.keys(Config).forEach(function (prop) {\n    Object.defineProperty(Vhs, prop, {\n      get: function get() {\n        videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n        return Config[prop];\n      },\n      set: function set(value) {\n        videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n\n        if (typeof value !== 'number' || value < 0) {\n          videojs.log.warn(\"value of Vhs.\" + prop + \" must be greater than or equal to 0\");\n          return;\n        }\n\n        Config[prop] = value;\n      }\n    });\n  });\n  var LOCAL_STORAGE_KEY = 'videojs-vhs';\n  /**\n   * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n   * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n   * @function handleVhsMediaChange\n   */\n\n  var handleVhsMediaChange = function handleVhsMediaChange(qualityLevels, playlistLoader) {\n    var newPlaylist = playlistLoader.media();\n    var selectedIndex = -1;\n\n    for (var i = 0; i < qualityLevels.length; i++) {\n      if (qualityLevels[i].id === newPlaylist.id) {\n        selectedIndex = i;\n        break;\n      }\n    }\n\n    qualityLevels.selectedIndex_ = selectedIndex;\n    qualityLevels.trigger({\n      selectedIndex: selectedIndex,\n      type: 'change'\n    });\n  };\n  /**\n   * Adds quality levels to list once playlist metadata is available\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n   * @param {Object} vhs Vhs object to listen to for media events.\n   * @function handleVhsLoadedMetadata\n   */\n\n\n  var handleVhsLoadedMetadata = function handleVhsLoadedMetadata(qualityLevels, vhs) {\n    vhs.representations().forEach(function (rep) {\n      qualityLevels.addQualityLevel(rep);\n    });\n    handleVhsMediaChange(qualityLevels, vhs.playlists);\n  }; // HLS is a source handler, not a tech. Make sure attempts to use it\n  // as one do not cause exceptions.\n\n\n  Vhs.canPlaySource = function () {\n    return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var emeKeySystems = function emeKeySystems(keySystemOptions, mainPlaylist, audioPlaylist) {\n    if (!keySystemOptions) {\n      return keySystemOptions;\n    }\n\n    var codecs = {};\n\n    if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n      codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n    }\n\n    if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n      codecs.audio = audioPlaylist.attributes.CODECS;\n    }\n\n    var videoContentType = getMimeForCodec(codecs.video);\n    var audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n    var keySystemContentTypes = {};\n\n    for (var keySystem in keySystemOptions) {\n      keySystemContentTypes[keySystem] = {};\n\n      if (audioContentType) {\n        keySystemContentTypes[keySystem].audioContentType = audioContentType;\n      }\n\n      if (videoContentType) {\n        keySystemContentTypes[keySystem].videoContentType = videoContentType;\n      } // Default to using the video playlist's PSSH even though they may be different, as\n      // videojs-contrib-eme will only accept one in the options.\n      //\n      // This shouldn't be an issue for most cases as early intialization will handle all\n      // unique PSSH values, and if they aren't, then encrypted events should have the\n      // specific information needed for the unique license.\n\n\n      if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n        keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n      } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n      // so we need to prevent overwriting the URL entirely\n\n\n      if (typeof keySystemOptions[keySystem] === 'string') {\n        keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n      }\n    }\n\n    return videojs.mergeOptions(keySystemOptions, keySystemContentTypes);\n  };\n  /**\n   * @typedef {Object} KeySystems\n   *\n   * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n   * Note: not all options are listed here.\n   *\n   * @property {Uint8Array} [pssh]\n   *           Protection System Specific Header\n   */\n\n  /**\n   * Goes through all the playlists and collects an array of KeySystems options objects\n   * containing each playlist's keySystems and their pssh values, if available.\n   *\n   * @param {Object[]} playlists\n   *        The playlists to look through\n   * @param {string[]} keySystems\n   *        The keySystems to collect pssh values for\n   *\n   * @return {KeySystems[]}\n   *         An array of KeySystems objects containing available key systems and their\n   *         pssh values\n   */\n\n\n  var getAllPsshKeySystemsOptions = function getAllPsshKeySystemsOptions(playlists, keySystems) {\n    return playlists.reduce(function (keySystemsArr, playlist) {\n      if (!playlist.contentProtection) {\n        return keySystemsArr;\n      }\n\n      var keySystemsOptions = keySystems.reduce(function (keySystemsObj, keySystem) {\n        var keySystemOptions = playlist.contentProtection[keySystem];\n\n        if (keySystemOptions && keySystemOptions.pssh) {\n          keySystemsObj[keySystem] = {\n            pssh: keySystemOptions.pssh\n          };\n        }\n\n        return keySystemsObj;\n      }, {});\n\n      if (Object.keys(keySystemsOptions).length) {\n        keySystemsArr.push(keySystemsOptions);\n      }\n\n      return keySystemsArr;\n    }, []);\n  };\n  /**\n   * Returns a promise that waits for the\n   * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n   *\n   * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n   * browsers.\n   *\n   * As per the above ticket, this is particularly important for Chrome, where, if\n   * unencrypted content is appended before encrypted content and the key session has not\n   * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n   * during playback.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   * @param {Object[]} mainPlaylists\n   *        The playlists found on the master playlist object\n   *\n   * @return {Object}\n   *         Promise that resolves when the key session has been created\n   */\n\n\n  var waitForKeySessionCreation = function waitForKeySessionCreation(_ref) {\n    var player = _ref.player,\n        sourceKeySystems = _ref.sourceKeySystems,\n        audioMedia = _ref.audioMedia,\n        mainPlaylists = _ref.mainPlaylists;\n\n    if (!player.eme.initializeMediaKeys) {\n      return Promise.resolve();\n    } // TODO should all audio PSSH values be initialized for DRM?\n    //\n    // All unique video rendition pssh values are initialized for DRM, but here only\n    // the initial audio playlist license is initialized. In theory, an encrypted\n    // event should be fired if the user switches to an alternative audio playlist\n    // where a license is required, but this case hasn't yet been tested. In addition, there\n    // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n    // languages).\n\n\n    var playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n    var keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n    var initializationFinishedPromises = [];\n    var keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n    // only place where it should not be deduped is for ms-prefixed APIs, but the early\n    // return for IE11 above, and the existence of modern EME APIs in addition to\n    // ms-prefixed APIs on Edge should prevent this from being a concern.\n    // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n    keySystemsOptionsArr.forEach(function (keySystemsOptions) {\n      keySessionCreatedPromises.push(new Promise(function (resolve, reject) {\n        player.tech_.one('keysessioncreated', resolve);\n      }));\n      initializationFinishedPromises.push(new Promise(function (resolve, reject) {\n        player.eme.initializeMediaKeys({\n          keySystems: keySystemsOptions\n        }, function (err) {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          resolve();\n        });\n      }));\n    }); // The reasons Promise.race is chosen over Promise.any:\n    //\n    // * Promise.any is only available in Safari 14+.\n    // * None of these promises are expected to reject. If they do reject, it might be\n    //   better here for the race to surface the rejection, rather than mask it by using\n    //   Promise.any.\n\n    return Promise.race([// If a session was previously created, these will all finish resolving without\n    // creating a new session, otherwise it will take until the end of all license\n    // requests, which is why the key session check is used (to make setup much faster).\n    Promise.all(initializationFinishedPromises), // Once a single session is created, the browser knows DRM will be used.\n    Promise.race(keySessionCreatedPromises)]);\n  };\n  /**\n   * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n   * there are keySystems on the source, sets up source options to prepare the source for\n   * eme.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} media\n   *        The active media playlist\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   *\n   * @return {boolean}\n   *         Whether or not options were configured and EME is available\n   */\n\n\n  var setupEmeOptions = function setupEmeOptions(_ref2) {\n    var player = _ref2.player,\n        sourceKeySystems = _ref2.sourceKeySystems,\n        media = _ref2.media,\n        audioMedia = _ref2.audioMedia;\n    var sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n\n    if (!sourceOptions) {\n      return false;\n    }\n\n    player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n    // do nothing.\n\n    if (sourceOptions && !player.eme) {\n      videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n      return false;\n    }\n\n    return true;\n  };\n\n  var getVhsLocalStorage = function getVhsLocalStorage() {\n    if (!window.localStorage) {\n      return null;\n    }\n\n    var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (!storedObject) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(storedObject);\n    } catch (e) {\n      // someone may have tampered with the value\n      return null;\n    }\n  };\n\n  var updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n    if (!window.localStorage) {\n      return false;\n    }\n\n    var objectToStore = getVhsLocalStorage();\n    objectToStore = objectToStore ? videojs.mergeOptions(objectToStore, options) : options;\n\n    try {\n      window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n    } catch (e) {\n      // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n      // storage is set to 0).\n      // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n      // No need to perform any operation.\n      return false;\n    }\n\n    return objectToStore;\n  };\n  /**\n   * Parses VHS-supported media types from data URIs. See\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n   * for information on data URIs.\n   *\n   * @param {string} dataUri\n   *        The data URI\n   *\n   * @return {string|Object}\n   *         The parsed object/string, or the original string if no supported media type\n   *         was found\n   */\n\n\n  var expandDataUri = function expandDataUri(dataUri) {\n    if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n      return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n    } // no known case for this data URI, return the string as-is\n\n\n    return dataUri;\n  };\n  /**\n   * Whether the browser has built-in HLS support.\n   */\n\n\n  Vhs.supportsNativeHls = function () {\n    if (!document || !document.createElement) {\n      return false;\n    }\n\n    var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n    if (!videojs.getTech('Html5').isSupported()) {\n      return false;\n    } // HLS manifests can go by many mime-types\n\n\n    var canPlay = [// Apple santioned\n    'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n    'audio/mpegurl', // Very common\n    'audio/x-mpegurl', // Very common\n    'application/x-mpegurl', // Included for completeness\n    'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n    return canPlay.some(function (canItPlay) {\n      return /maybe|probably/i.test(video.canPlayType(canItPlay));\n    });\n  }();\n\n  Vhs.supportsNativeDash = function () {\n    if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n      return false;\n    }\n\n    return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n  }();\n\n  Vhs.supportsTypeNatively = function (type) {\n    if (type === 'hls') {\n      return Vhs.supportsNativeHls;\n    }\n\n    if (type === 'dash') {\n      return Vhs.supportsNativeDash;\n    }\n\n    return false;\n  };\n  /**\n   * HLS is a source handler, not a tech. Make sure attempts to use it\n   * as one do not cause exceptions.\n   */\n\n\n  Vhs.isSupported = function () {\n    return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var Component = videojs.getComponent('Component');\n  /**\n   * The Vhs Handler object, where we orchestrate all of the parts\n   * of HLS to interact with video.js\n   *\n   * @class VhsHandler\n   * @extends videojs.Component\n   * @param {Object} source the soruce object\n   * @param {Tech} tech the parent tech object\n   * @param {Object} options optional and required options\n   */\n\n  var VhsHandler = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VhsHandler, _Component);\n\n    function VhsHandler(source, tech, options) {\n      var _this;\n\n      _this = _Component.call(this, tech, videojs.mergeOptions(options.hls, options.vhs)) || this;\n\n      if (options.hls && Object.keys(options.hls).length) {\n        videojs.log.warn('Using hls options is deprecated. Please rename `hls` to `vhs` in your options object.');\n      } // if a tech level `initialBandwidth` option was passed\n      // use that over the VHS level `bandwidth` option\n\n\n      if (typeof options.initialBandwidth === 'number') {\n        _this.options_.bandwidth = options.initialBandwidth;\n      }\n\n      _this.logger_ = logger('VhsHandler'); // tech.player() is deprecated but setup a reference to HLS for\n      // backwards-compatibility\n\n      if (tech.options_ && tech.options_.playerId) {\n        var _player = videojs(tech.options_.playerId);\n\n        if (!_player.hasOwnProperty('hls')) {\n          Object.defineProperty(_player, 'hls', {\n            get: function get() {\n              videojs.log.warn('player.hls is deprecated. Use player.tech().vhs instead.');\n              tech.trigger({\n                type: 'usage',\n                name: 'hls-player-access'\n              });\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        if (!_player.hasOwnProperty('vhs')) {\n          Object.defineProperty(_player, 'vhs', {\n            get: function get() {\n              videojs.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.');\n              tech.trigger({\n                type: 'usage',\n                name: 'vhs-player-access'\n              });\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        if (!_player.hasOwnProperty('dash')) {\n          Object.defineProperty(_player, 'dash', {\n            get: function get() {\n              videojs.log.warn('player.dash is deprecated. Use player.tech().vhs instead.');\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        _this.player_ = _player;\n      }\n\n      _this.tech_ = tech;\n      _this.source_ = source;\n      _this.stats = {};\n      _this.ignoreNextSeekingEvent_ = false;\n\n      _this.setOptions_();\n\n      if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n        tech.overrideNativeAudioTracks(true);\n        tech.overrideNativeVideoTracks(true);\n      } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n        // overriding native HLS only works if audio tracks have been emulated\n        // error early if we're misconfigured\n        throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n      } // listen for fullscreenchange events for this player so that we\n      // can adjust our quality selection quickly\n\n\n      _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n        var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n        if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n          _this.masterPlaylistController_.fastQualityChange_();\n        } else {\n          // When leaving fullscreen, since the in page pixel dimensions should be smaller\n          // than full screen, see if there should be a rendition switch down to preserve\n          // bandwidth.\n          _this.masterPlaylistController_.checkABR_();\n        }\n      });\n\n      _this.on(_this.tech_, 'seeking', function () {\n        if (this.ignoreNextSeekingEvent_) {\n          this.ignoreNextSeekingEvent_ = false;\n          return;\n        }\n\n        this.setCurrentTime(this.tech_.currentTime());\n      });\n\n      _this.on(_this.tech_, 'error', function () {\n        // verify that the error was real and we are loaded\n        // enough to have mpc loaded.\n        if (this.tech_.error() && this.masterPlaylistController_) {\n          this.masterPlaylistController_.pauseLoading();\n        }\n      });\n\n      _this.on(_this.tech_, 'play', _this.play);\n\n      return _this;\n    }\n\n    var _proto = VhsHandler.prototype;\n\n    _proto.setOptions_ = function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n      this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-bandwidth-from-local-storage'\n            });\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-throughput-from-local-storage'\n            });\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'experimentalBufferBasedABR', 'liveRangeSafeTimeDelta', 'experimentalLLHLS', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'experimentalExactManifestTimings', 'experimentalLeastPixelDiffSelector'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n    ;\n\n    _proto.src = function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.src = expandDataUri(this.source_.src);\n      this.options_.tech = this.tech_;\n      this.options_.externVhs = Vhs;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n      };\n\n      if (this.options_.smoothQualityChange) {\n        videojs.log.warn('smoothQualityChange is deprecated and will be removed in the next major version');\n      }\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      var playbackWatcherOptions = videojs.mergeOptions({\n        liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n      }, this.options_, {\n        seekable: function seekable() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        },\n        masterPlaylistController: this.masterPlaylistController_\n      });\n      this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs.players[_this3.tech_.options_.playerId];\n        var error = _this3.masterPlaylistController_.error;\n\n        if (typeof error === 'object' && !error.code) {\n          error.code = 3;\n        } else if (typeof error === 'string') {\n          error = {\n            message: error,\n            code: 3\n          };\n        }\n\n        player.error(error);\n      });\n      var defaultSelector = this.options_.experimentalBufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get() {\n            var playerBandwidthEst = this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n            var networkInformation = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;\n            var tenMbpsAsBitsPerSecond = 10e6;\n\n            if (this.options_.useNetworkInformationApi && networkInformation) {\n              // downlink returns Mbps\n              // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n              var networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n              // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n              // high quality streams are not filtered out.\n\n              if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n                playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n              } else {\n                playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n              }\n            }\n\n            return playerBandwidthEst;\n          },\n          set: function set(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set() {\n            videojs.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        mediaAppends: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaAppends_() || 0;\n          },\n          enumerable: true\n        },\n        mainAppendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mainAppendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        audioAppendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.audioAppendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        appendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.appendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        timeToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.timeToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to VhsHandler\n        renditionSelectionMixin(_this3);\n      });\n      this.masterPlaylistController_.sourceUpdater_.on('createdsourcebuffers', function () {\n        _this3.setupEme_();\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      }); // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.mediaSourceUrl_ = window.URL.createObjectURL(this.masterPlaylistController_.mediaSource);\n      this.tech_.src(this.mediaSourceUrl_);\n    };\n\n    _proto.createKeySessions_ = function createKeySessions_() {\n      var _this4 = this;\n\n      var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      this.logger_('waiting for EME key session creation');\n      waitForKeySessionCreation({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n        mainPlaylists: this.playlists.master.playlists\n      }).then(function () {\n        _this4.logger_('created EME key session');\n\n        _this4.masterPlaylistController_.sourceUpdater_.initializedEme();\n      })[\"catch\"](function (err) {\n        _this4.logger_('error while creating EME key session', err);\n\n        _this4.player_.error({\n          message: 'Failed to initialize media keys for EME',\n          code: 3\n        });\n      });\n    };\n\n    _proto.handleWaitingForKey_ = function handleWaitingForKey_() {\n      // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n      // the key is in the manifest. While this should've happened on initial source load, it\n      // may happen again in live streams where the keys change, and the manifest info\n      // reflects the update.\n      //\n      // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n      // already requested keys for, we don't have to worry about this generating extraneous\n      // requests.\n      this.logger_('waitingforkey fired, attempting to create any new key sessions');\n      this.createKeySessions_();\n    }\n    /**\n     * If necessary and EME is available, sets up EME options and waits for key session\n     * creation.\n     *\n     * This function also updates the source updater so taht it can be used, as for some\n     * browsers, EME must be configured before content is appended (if appending unencrypted\n     * content before encrypted content).\n     */\n    ;\n\n    _proto.setupEme_ = function setupEme_() {\n      var _this5 = this;\n\n      var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      var didSetupEmeOptions = setupEmeOptions({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        media: this.playlists.media(),\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n      });\n      this.player_.tech_.on('keystatuschange', function (e) {\n        if (e.status !== 'output-restricted') {\n          return;\n        }\n\n        var masterPlaylist = _this5.masterPlaylistController_.master();\n\n        if (!masterPlaylist || !masterPlaylist.playlists) {\n          return;\n        }\n\n        var excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n        masterPlaylist.playlists.forEach(function (playlist) {\n          if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n            if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n              playlist.excludeUntil = Infinity;\n              excludedHDPlaylists.push(playlist);\n            }\n          }\n        });\n\n        if (excludedHDPlaylists.length) {\n          var _videojs$log;\n\n          (_videojs$log = videojs.log).warn.apply(_videojs$log, ['DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.'].concat(excludedHDPlaylists)); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n\n          _this5.masterPlaylistController_.fastQualityChange_();\n        }\n      });\n      this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n      this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n      // promises.\n\n      if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n        // If EME options were not set up, we've done all we could to initialize EME.\n        this.masterPlaylistController_.sourceUpdater_.initializedEme();\n        return;\n      }\n\n      this.createKeySessions_();\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n    ;\n\n    _proto.setupQualityLevels_ = function setupQualityLevels_() {\n      var _this6 = this;\n\n      var player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n      // or qualityLevels_ listeners have already been setup, do nothing.\n\n      if (!player || !player.qualityLevels || this.qualityLevels_) {\n        return;\n      }\n\n      this.qualityLevels_ = player.qualityLevels();\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleVhsLoadedMetadata(_this6.qualityLevels_, _this6);\n      });\n      this.playlists.on('mediachange', function () {\n        handleVhsMediaChange(_this6.qualityLevels_, _this6.playlists);\n      });\n    }\n    /**\n     * return the version\n     */\n    ;\n\n    VhsHandler.version = function version$5() {\n      return {\n        '@videojs/http-streaming': version$4,\n        'mux.js': version$3,\n        'mpd-parser': version$2,\n        'm3u8-parser': version$1,\n        'aes-decrypter': version\n      };\n    }\n    /**\n     * return the version\n     */\n    ;\n\n    _proto.version = function version() {\n      return this.constructor.version();\n    };\n\n    _proto.canChangeType = function canChangeType() {\n      return SourceUpdater.canChangeType();\n    }\n    /**\n     * Begin playing the video.\n     */\n    ;\n\n    _proto.play = function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.duration = function duration() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.seekable = function seekable() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.vhs) {\n        delete this.tech_.vhs;\n      } // don't check this.tech_.hls as it will log a deprecated warning\n\n\n      if (this.tech_) {\n        delete this.tech_.hls;\n      }\n\n      if (this.mediaSourceUrl_ && window.URL.revokeObjectURL) {\n        window.URL.revokeObjectURL(this.mediaSourceUrl_);\n        this.mediaSourceUrl_ = null;\n      }\n\n      if (this.tech_) {\n        this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n      }\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    _proto.convertToProgramTime = function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n    ;\n\n    _proto.seekToProgramTime = function seekToProgramTime$1(programTime, callback, pauseAfterSeek, retryCount) {\n      if (pauseAfterSeek === void 0) {\n        pauseAfterSeek = true;\n      }\n\n      if (retryCount === void 0) {\n        retryCount = 2;\n      }\n\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    };\n\n    return VhsHandler;\n  }(Component);\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n\n  var VhsSourceHandler = {\n    name: 'videojs-http-streaming',\n    VERSION: version$4,\n    canHandleSource: function canHandleSource(srcObj, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var localOptions = videojs.mergeOptions(videojs.options, options);\n      return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource: function handleSource(source, tech, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var localOptions = videojs.mergeOptions(videojs.options, options);\n      tech.vhs = new VhsHandler(source, tech, localOptions);\n\n      if (!videojs.hasOwnProperty('hls')) {\n        Object.defineProperty(tech, 'hls', {\n          get: function get() {\n            videojs.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.');\n            return tech.vhs;\n          },\n          configurable: true\n        });\n      }\n\n      tech.vhs.xhr = xhrFactory();\n      tech.vhs.src(source.src, source.type);\n      return tech.vhs;\n    },\n    canPlayType: function canPlayType(type, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var _videojs$mergeOptions = videojs.mergeOptions(videojs.options, options),\n          _videojs$mergeOptions2 = _videojs$mergeOptions.vhs;\n\n      _videojs$mergeOptions2 = _videojs$mergeOptions2 === void 0 ? {} : _videojs$mergeOptions2;\n      var _videojs$mergeOptions3 = _videojs$mergeOptions2.overrideNative,\n          overrideNative = _videojs$mergeOptions3 === void 0 ? !videojs.browser.IS_ANY_SAFARI : _videojs$mergeOptions3,\n          _videojs$mergeOptions4 = _videojs$mergeOptions.hls;\n      _videojs$mergeOptions4 = _videojs$mergeOptions4 === void 0 ? {} : _videojs$mergeOptions4;\n      var _videojs$mergeOptions5 = _videojs$mergeOptions4.overrideNative,\n          legacyOverrideNative = _videojs$mergeOptions5 === void 0 ? false : _videojs$mergeOptions5;\n      var supportedType = simpleTypeFromSourceType(type);\n      var canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || legacyOverrideNative || overrideNative);\n      return canUseMsePlayback ? 'maybe' : '';\n    }\n  };\n  /**\n   * Check to see if the native MediaSource object exists and supports\n   * an MP4 container with both H.264 video and AAC-LC audio.\n   *\n   * @return {boolean} if  native media sources are supported\n   */\n\n  var supportsNativeMediaSources = function supportsNativeMediaSources() {\n    return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n  }; // register source handlers with the appropriate techs\n\n\n  if (supportsNativeMediaSources()) {\n    videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n  }\n\n  videojs.VhsHandler = VhsHandler;\n  Object.defineProperty(videojs, 'HlsHandler', {\n    get: function get() {\n      videojs.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.');\n      return VhsHandler;\n    },\n    configurable: true\n  });\n  videojs.VhsSourceHandler = VhsSourceHandler;\n  Object.defineProperty(videojs, 'HlsSourceHandler', {\n    get: function get() {\n      videojs.log.warn('videojs.HlsSourceHandler is deprecated. ' + 'Use videojs.VhsSourceHandler instead.');\n      return VhsSourceHandler;\n    },\n    configurable: true\n  });\n  videojs.Vhs = Vhs;\n  Object.defineProperty(videojs, 'Hls', {\n    get: function get() {\n      videojs.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.');\n      return Vhs;\n    },\n    configurable: true\n  });\n\n  if (!videojs.use) {\n    videojs.registerComponent('Hls', Vhs);\n    videojs.registerComponent('Vhs', Vhs);\n  }\n\n  videojs.options.vhs = videojs.options.vhs || {};\n  videojs.options.hls = videojs.options.hls || {};\n\n  if (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n    var registerPlugin = videojs.registerPlugin || videojs.plugin;\n    registerPlugin('reloadSourceOnError', reloadSourceOnError);\n  }\n\n  return videojs;\n\n})));\n"],"names":["global","factory","exports","module","define","amd","globalThis","self","videojs","this","browserApi","hooks_","hooks","type","fn","concat","removeHook","index","indexOf","slice","splice","FullscreenApi","prefixed","apiMap","specApi","i","length","document","_i","history","log$1","createLogger$1","name","logByType","level","log","_len","arguments","args","Array","_key","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","window","console","info","test","isArray","LogByTypeFactory","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","commonjsGlobal","createCommonjsModule","_extends_1","_extends","Object","assign","target","source","key","prototype","call","apply","toString$1","toString","keys","object","isObject$1","each","forEach","sources","value","isPlain","constructor","computedStyle","el","prop","getComputedStyle","computedStyleValue","e","getPropertyValue","match","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","result","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","isReal","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","freeze","__proto__","isNonBlankString","str","trim","throwIfWhitespace","isEl","nodeType","isInFrame","parent","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","undefined","height","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","values","map","Number","_values","position","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","videojs$1","$","$$","Dom","_windowLoaded","autoSetup","options","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","WeakMap","vdata","floor","performance","now","Date","data","_proto","set","access","get","_supportsPassive","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","passiveEvents","on","guid","hash","handlersCopy","m","n","opts","defineProperty","supportsPassive","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","bind","uid","bound","throttle","last","EventTarget$2","allowedEvents_","ael","dispatchEvent","queueTrigger","_this","Map","oldTimeout","clearTimeout","timeout","size","objName","name_","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","mergeOptions$3","MapSham","map_","thisArg","Map$1","SetSham","set_","Set$1","Set","keycode","searchInput","hasKeyCode","names","foundNamedKey","search","String","codes","aliases","charCodeAt","isEventKey","nameOrCode","code","fromCharCode","title","alias","Component$1","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","restoreEl","replaceChild","isDisposed","localize","tokens","defaultValue","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","reduce","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","requestNamedAnimationFrame","_this5","cancelNamedAnimationFrame","cancelAnimationFrame","_this6","_ref","idName","cancelName","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","assertThisInitialized","ReferenceError","inheritsLoose","subClass","superClass","create","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","start","end","Symbol","iterator","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","errorTypes","errNum","tuple","reviver","json","JSON","parse","err","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","ModalDialog","_Component","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","MODAL_CLASS_NAME","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","newLabel","parseUrl","url","props","a","href","details","protocol","host","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","window_1","isFunction_1","alert","confirm","prompt","httpHandler","decodeResponseBody","response","responseBody","statusCode","cause","TextDecoder","charset","contentTypeHeader","contentType","_contentType$split","getCharset","headers","decode","Uint8Array","createXHR","lib","default_1","initParams","uri","params","_createXHR","called","getBody","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","errorFunc","evt","timeoutTimer","failureResponse","loadFunc","aborted","useXDR","rawRequest","getAllResponseHeaders","row","parseHeaders","cors","XDomainRequest","XMLHttpRequest","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","loaded_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","load","NONE","LOADING","LOADED","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","doccy","topLevel","document_1","_objCreate","F","o","ParsingError","errorData","parseTimeStamp","input","computeSeconds","h","s","f","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","v","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","align","center","middle","right","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","b","u","ruby","rt","lang","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","current","localName","annotation","rootDiv","tagStack","innerHTML","createProcessingInstruction","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","cueDiv","nodeStack","childNodes","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","bottom","display","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","trackList","count","computeLinePos","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","findBestPosition","toCSSCompatValues","WebVTT$1","unit","toMove","overlaps","b2","boxes","container","reference","getSimpleBoxPosition","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","processCues","overlay","paddedOverlay","margin","hasBeenReset","displayState","shouldCompute","fontSize","decoder","buffer","reportOrThrowError","collectNextLine","pos","parseHeader","ontimestampmap","parseTimestampMap","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring","vtt","directionSetting","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","enumerable","TypeError","setting","findDirectionSetting","SyntaxError","getCueAsHTML","vttcue","scrollSetting","isValidPercentValue","vttregion","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","browserIndex","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","_this8","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","lastRun","_middleware","mwFactory","mwrest","_mws$i","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","mpd","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","update","update_","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","userPref","cache_","selectedLanguage","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","Infinity","implementation","formatTime","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","time","formattedTime_","oldNode","CurrentTimeDisplay","_TimeDisplay","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","currentType","substring","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","pictureInPictureEnabled","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","currentRate","newIndex","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","immediate","debounced","_later","cancel","debounce","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","handleVisibilityChange_","handleVisibilityChange","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","_this9","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this10","resolve","play_","_this11","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","_this12","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this13","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this14","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","handleSrc_","isRetry","_this15","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","setTech","retryOnError","retry","stopListeningForErrors","str1","str2","_this16","sourceTech","_this17","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_ref3","durationDisplay","currentSources","techAutoplay","newPoster","usingNativeControls_","_this18","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","enableAudioOnlyUI_","_this19","playerChildren","controlBarHeight","disableAudioOnlyUI_","_this20","exitPromises","enablePosterModeUI_","disablePosterModeUI_","_this21","toJSON","createModal","_this22","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this23","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","setPrototypeOf","_setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","_construct","Parent","Class","instance","Function","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","hasPlugin","inherits","normalizeId","getPlayer","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","mergeOptions","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","EventTarget","dom","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","fragment","baseURLPath","newPath","lastIndexOf","parts","Stream","_length","pipe","destination","decodeB64ToUint8Array$1","b64Text","decodedString","atob","Buffer","LineStream","_Stream","nextNewline","TAB","parseByterange","byterangeString","offset","parseAttributes$1","ParseStream","customParsers","tagMappers","mapper","mappedLine","newLine","tagType","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","Uint32Array","PRECISE","subkey","addParser","expression","customType","dataParser","segment","addTagMapper","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","hb","phb","minTargetDuration","minPartDuration","lineStream","parseStream","currentMap","uris","currentUri","hasParts","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","canBlockReload","canSkipDateranges","hint","isPart","otherHint","required","partInf","partTarget","comment","custom","identifier","missing","chunk","regexs","webm","ogg","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","mediaType","isAudioCodec","getMimeForCodec","browserSupportsCodec","MediaSource","isTypeSupported","muxerSupportsCodec","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","isArrayBufferView","ArrayBuffer","isView","toUint8","bytes","byteOffset","byteLength","BigInt","BYTE_TABLE","bytesToNumber","_temp","_ref$signed","signed","_ref$le","le","total","_byte","exponent","numberToBytes","_temp2","_ref2$le","byteCount","countBits","byteIndex","stringToBytes","stringIsBytes","unescape","view","bytesMatch","_temp3","_ref3$offset","_ref3$mask","mask","bByte","resolveUrl$1","baseUrl","relativeUrl","nativeURL","URL","protocolLess","removeLocation","newUrl","decodeB64ToUint8Array","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE$3","SVG","XML","XMLNS","conventions","NAMESPACE","NAMESPACE$2","notEmptyString","orderedSetReducer","toOrderedSet","splitOnASCIIWhitespace","copy","dest","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","namespaceURI","_nsMap","prefix","_onAddAttribute","_removeNamedNode","lastIndex","DOMImplementation$1","Node","_xmlEncoder","_visitNode","Document","_onUpdateChild","cs","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","newFirst","newLast","pre","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer$1","nodeSerializeToString","isHtml","nodeFilter","buf","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","len","prefixedNodeName","defaultNS","ai","nsi","pubid","publicId","sysid","systemId","sub","internalSubset","_importNode","deep","node2","_cloneNode","attrs2","_ownerElement","setAttributeNode","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","createDocument","doctype","root","createElementNS","createDocumentType","nodeValue","refChild","oldChild","normalize","appendData","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importNode","importedNode","getElementById","rtv","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","nodeClassNamesSet","createComment","createCDATASection","createAttribute","specified","createEntityReference","pl","createAttributeNS","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","DOMImplementation","XMLSerializer","entities","XML_ENTITIES","amp","apos","gt","lt","quot","HTML_ENTITIES","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","entityMap","NAMESPACE$1","nameStartChar","nameChar","tagNamePattern","ParseError$1","locator","XMLReader$1","copyLocator","lineNumber","columnNumber","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","fatalError","addValue","warning","setTagName","closed","appendElement$1","domBuilder","localNSMap","qName","nsp","nsPrefix","_copy","startPrefixMapping","startElement","endElement","endPrefixMapping","parseHtmlSpecialContent","elStartEnd","elEndStart","characters","fixSelfClosed","closeMap","parseDCC","startCDATA","endCDATA","matchs","lastMatch","startDTD","endDTD","parseInstruction","processingInstruction","ElementAttributes","defaultNSMap","startDocument","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","appendText","xt","lineEnd","linePattern","lineStart","parseStack","tagStart","currentElement","endMatch","locator2","_parse","endDocument","getLocalName","getLocator","getQName","getURI","sax","XMLReader","ParseError","DOMParser$1","DOMHandler","cdata","_locator","_toString","chars","java","appendElement","hander","parseFromString","mimeType","xmlns","setDocumentLocator","errorImpl","isCallback","build","msg","buildErrorHandler","xml","documentURI","ins","ignorableWhitespace","ch","charNode","skippedEntity","comm","impl","dt","_error","DOMParser","__DOMHandler","isObject","merge","objects","flatten","lists","findIndex","matchingFunction","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","_ref$indexRange","indexRange","resolvedUri","startRange","endRange","MAX_SAFE_INTEGER","parseEndNumber","endNumber","segmentRange","_attributes$timescale","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$periodSta","periodStart","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","_attributes$startNumb","startNumber","toSegments","sectionDuration","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","presentationTime","_attributes$number","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","referencedSize","subsegmentDuration","endIndex","SUPPORTED_MEDIA_TYPES","getUniqueTimelineStarts","timelineStarts","keyFunction","getMediaGroupPlaylists","master","mediaGroupPlaylists","group","groupKey","labelKey","mediaProperties","updateMediaSequenceForPlaylist","positionManifestOnTimeline","_ref5","oldManifest","newManifest","oldPlaylists","newPlaylists","_ref4","oldPlaylist","findPlaylistWithName","firstNewSegment","oldMatchingSegmentIndex","oldSegment","updateSequenceNumbers","generateSidxKey","mergeDiscontiguousPlaylists","_acc$name$segments","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatVideoPlaylist","_attributes2","AUDIO","SUBTITLES","CODECS","bandwidth","videoOnly","audioOnly","vttOnly","_ref6","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","_ref8","_mediaGroups","dashPlaylists","locations","_ref8$sidxMapping","previousManifest","_dashPlaylists$0$attr","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captionServices","VIDEO","isAudioOnly","organizedAudioGroup","mainPlaylist","formattedPlaylists","roleLabel","formatted","_attributes","formatAudioPlaylist","organizeAudioPlaylists","organizedVttGroup","_m3u8Attributes","m3u8Attributes","formatVttPlaylist","organizeVttPlaylists","playlistTimelineStarts","_ref9","_ref7","subs","cc","svcObj","svc","service","channel","easyReader","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseAttributes","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","_value$split","flags","_value$split2","_value$split2$","opt","_opt$split","labelVal","keySystem","psshNode","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","adaptationSets","stringToMpdXml","manifestString","parsedManifestInfo","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periodNodes","periods","priorPeriod","priorPeriodAttributes","mpdType","getPeriodStart","representationInfo","inheritAttributes","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","MAX_UINT32","pow","getUint64","uint8","dv","DataView","getBigUint64","getUint32","parseSidx_1","subarray","referenceId","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","ID3","getId3Offset","returnSize","getId3Size","normalizePath$1","findBox","paths","complete","normalizePaths$1","results","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","normalizePaths","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","findNal","dataType","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","_isLikely","docType","matroska","fmp4","moof","moov","ac3","avi","riff","findH264Nal","findH265Nal","isLikelyTypes","isLikelyFn","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","isLikely","detectContainerForBytes","sampleRate","timestamp","clock_1","resolveUrl","resolveManifestRedirect","handleManifestRedirect","req","responseURL","logger","filterRanges","timeRanges","findRange","TIME_FUDGE_FACTOR","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","intervalDuration","endSequence","expired","backward","backwardDuration","forward","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","_ret","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","experimentalExactManifestTimings","partsAndSegments","partAndSegment","_partAndSegment","_i3","_i4","_partAndSegment2","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","forEachMediaGroup","setupMediaPlaylist","playlistErrors_","addPropertiesToMaster","phonyUri","audioOnlyMaster","groupId","setupMediaPlaylists","resolveMediaGroupUris","mergeOptions$2","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMaster$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","oldSegments","newSegments","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","_options$withCredenti","_options$handleManife","handleManifestRedirects","vhs_","vhsOptions","customTagParsers","customTagMappers","experimentalLLHLS","handleMediaupdatetimeout_","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","onwarn","oninfo","_ref$customTagParsers","_ref$customTagMappers","customParser","parseManifest","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","masterPlaylistRef","started","setupInitialPlaylist","srcUri","masterForMedia","videojsXHR","mergeOptions$1","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","buffers","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","masterPlaylistLoader_","isMaster_","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","fin","internal","blacklistDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMaster_","masterChanged","haveMaster_","masterXml_","date","masterLoaded_","handleMaster_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","masterXml","oldMaster","newMaster","noChanges","playlistUpdate","_playlistUpdate","updateMaster","mpl","mup","createMUPTimeout_","mediaGroupSidx","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","MAX_UINT32$1","numbers","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","currentGop","gops","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","silence_1","coneOfSilence","metaTable","arr","timelineStartPts","keepOriginalTimestamps","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","emulationPreventionBytesPositions","CaptionStream$1","CaptionStream","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","win","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","_char","charCodeArray","newCode","isMultiByte","extended","currentByte","nextByte","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char2","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","handleRollover$1","TimestampRolloverStream$1","TimestampRolloverStream","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode$1","parseUtf8","parseSyncSafeInteger$1","tagParsers","TXXX","WXXX","PRIV","owner","privateData","tagSize","bufferSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","_AacStream","H264Stream","NalByteStream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","parseSyncSafeInteger","isLikelyAacData","parseAdtsSize","lowThree","parseType","parseSampleRate","parseAacTimestamp","percentEncode","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","audioProperties","videoProperties","ONE_SECOND_IN_TS$1","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","Transmuxer","VideoSegmentStream","AudioSegmentStream","AUDIO_PROPERTIES","VIDEO_PROPERTIES","bin","parseType_1","toUnsigned$2","findBox_1","subresults","toUnsigned$1","getUint64$1","parseTfdt","parseSampleFlags_1","parseTrun","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","toHexString","lowestTime","baseTime","scale","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","handleRollover","probe","ONE_SECOND_IN_TS","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","typedArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","_callback","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","waitForCompletion","didError","segmentFinish","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref11","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref12","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","_ref10","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","masterPlaylistController","getAudioTrackPlaylists_","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","experimentalLeastPixelDiffSelector","leastPixelDiffList","pixelDiff","chosenRep","_type","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","masterPlaylistController_","addMetadata","inbandTextTracks","metadataArray","videoDuration","Cue","WebKitDataCue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","finite","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","_Playlist$getMediaInf","_partIndex","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","def","captionService","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleId3_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","segmentObj","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","Vhs$1","toTitleCase","bufferTypes","_updating","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","_duration","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","SourceBuffer","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","escape","VTT_LINE_TERMINATORS","_char3","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decodeBytesToString","timestampmap","MPEGTS","LOCAL","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","basedir","require","commonjsRequire","createClass","_defineProperties","Constructor","protoProps","staticProps","__esModule","aesTables","AES","tmp","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","_settings$mediaTypes$","variantLabel","isMasterPlaylist","_settings$mediaTypes$2","_settings$mediaTypes$3","newProps","groupMatch","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","_settings$segmentLoad","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","_settings$segmentLoad2","lastTrack","mpc","selectPlaylist","fastQualityChange_","activeTrack_","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","experimentalBufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","_logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","smoothQualityChange_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","blacklistReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","_segment$cueOutCont$s","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","livePoint","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","handleVhsMediaChange","qualityLevels","selectedIndex_","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","hls","initialBandwidth","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","option","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","masterPlaylist","_videojs$log","excludedHDPlaylists","qualityLevels_","addQualityLevel","dash","convertToProgramTime","VhsSourceHandler","_videojs$mergeOptions","_videojs$mergeOptions2","_videojs$mergeOptions3","_videojs$mergeOptions4","_videojs$mergeOptions5","legacyOverrideNative","supportedType"],"mappings":"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"}