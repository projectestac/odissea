{"version":3,"file":"videojs-ogvjs-lazy.min.js","sources":["../src/videojs-ogvjs-lazy.js"],"sourcesContent":["/**\n * videojs-ogvjs\n * @version 0.1.2\n * @copyright 2021 Huong Nguyen <huongnv13@gmail.com>\n * @license MIT\n */\n/*! @name videojs-ogvjs @version 0.1.2 @license MIT */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('video.js'), require('OGVCompat'), require('OGVLoader'), require('OGVPlayer')) :\n\ttypeof define === 'function' && define.amd ? define(['media_videojs/video-lazy', './local/ogv/ogv'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojsOgvjs = factory(global.videojs, global.OGVCompat, global.OGVLoader, global.OGVPlayer));\n}(this, (function (videojs, ogvBase) { 'use strict';\n\n\tfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n\tvar videojs__default = /*#__PURE__*/_interopDefaultLegacy(videojs);\n\tvar OGVCompat__default = /*#__PURE__*/_interopDefaultLegacy(ogvBase.OGVCompat);\n\tvar OGVLoader__default = /*#__PURE__*/_interopDefaultLegacy(ogvBase.OGVLoader);\n\tvar OGVPlayer__default = /*#__PURE__*/_interopDefaultLegacy(ogvBase.OGVPlayer);\n\n\tfunction createCommonjsModule(fn, basedir, module) {\n\t\treturn module = {\n\t\t  path: basedir,\n\t\t  exports: {},\n\t\t  require: function (path, base) {\n\t      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t    }\n\t\t}, fn(module, module.exports), module.exports;\n\t}\n\n\tfunction commonjsRequire () {\n\t\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n\t}\n\n\tvar setPrototypeOf = createCommonjsModule(function (module) {\n\t  function _setPrototypeOf(o, p) {\n\t    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n\t      o.__proto__ = p;\n\t      return o;\n\t    };\n\n\t    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\t    return _setPrototypeOf(o, p);\n\t  }\n\n\t  module.exports = _setPrototypeOf;\n\t  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\t});\n\n\tvar inheritsLoose = createCommonjsModule(function (module) {\n\t  function _inheritsLoose(subClass, superClass) {\n\t    subClass.prototype = Object.create(superClass.prototype);\n\t    subClass.prototype.constructor = subClass;\n\t    setPrototypeOf(subClass, superClass);\n\t  }\n\n\t  module.exports = _inheritsLoose;\n\t  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\t});\n\n\tvar Tech = videojs__default['default'].getComponent('Tech');\n\tvar androidOS = 'Android';\n\tvar iPhoneOS = 'iPhoneOS';\n\tvar iPadOS = 'iPadOS';\n\tvar otherOS = 'Other';\n\t/**\n\t * Object.defineProperty but \"lazy\", which means that the value is only set after\n\t * it retrieved the first time, rather than being set right away.\n\t *\n\t * @param {Object} obj the object to set the property on.\n\t * @param {string} key the key for the property to set.\n\t * @param {Function} getValue the function used to get the value when it is needed.\n\t * @param {boolean} setter whether a setter should be allowed or not.\n\t */\n\n\tvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n\t  if (setter === void 0) {\n\t    setter = true;\n\t  }\n\n\t  var set = function set(value) {\n\t    Object.defineProperty(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      writable: true\n\t    });\n\t  };\n\n\t  var options = {\n\t    configurable: true,\n\t    enumerable: true,\n\t    get: function get() {\n\t      var value = getValue();\n\t      set(value);\n\t      return value;\n\t    }\n\t  };\n\n\t  if (setter) {\n\t    options.set = set;\n\t  }\n\n\t  return Object.defineProperty(obj, key, options);\n\t};\n\t/**\n\t * Get the device's OS.\n\t *\n\t * @return {string} Device's OS.\n\t */\n\n\n\tvar getDeviceOS = function getDeviceOS() {\n\t  /* global navigator */\n\t  var ua = navigator.userAgent;\n\n\t  if (/android/i.test(ua)) {\n\t    return androidOS;\n\t  } else if (/iPad|iPhone|iPod/.test(ua)) {\n\t    return iPhoneOS;\n\t  } else if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1) {\n\t    return iPadOS;\n\t  }\n\n\t  return otherOS;\n\t};\n\t/**\n\t * OgvJS Media Controller - Wrapper for ogv.js Media API\n\t *\n\t * @mixes Tech~SourceHandlerAdditions\n\t * @extends Tech\n\t */\n\n\n\tvar OgvJS = /*#__PURE__*/function (_Tech) {\n\t  inheritsLoose(OgvJS, _Tech);\n\n\t  /**\n\t   * Create an instance of this Tech.\n\t   *\n\t   * @param {Object} [options] The key/value store of player options.\n\t   * @param {Component~ReadyCallback} ready Callback function to call when the `OgvJS` Tech is ready.\n\t   */\n\t  function OgvJS(options, ready) {\n\t    var _this;\n\n\t    _this = _Tech.call(this, options, ready) || this;\n\t    _this.el_.src = options.source.src;\n\t    OgvJS.setIfAvailable(_this.el_, 'autoplay', options.autoplay);\n\t    OgvJS.setIfAvailable(_this.el_, 'loop', options.loop);\n\t    OgvJS.setIfAvailable(_this.el_, 'poster', options.poster);\n\t    OgvJS.setIfAvailable(_this.el_, 'preload', options.preload);\n\n\t    _this.on('loadedmetadata', function () {\n\t      if (getDeviceOS() === iPhoneOS) {\n\t        // iPhoneOS add some inline styles to the canvas, we need to remove it.\n\t        var canvas = this.el_.getElementsByTagName('canvas')[0];\n\t        canvas.style.removeProperty('width');\n\t        canvas.style.removeProperty('margin');\n\t      }\n\n\t      this.triggerReady();\n\t    });\n\n\t    return _this;\n\t  }\n\t  /**\n\t   * Create the 'OgvJS' Tech's DOM element.\n\t   *\n\t   * @return {Element} The element that gets created.\n\t   */\n\n\n\t  var _proto = OgvJS.prototype;\n\n\t  _proto.createEl = function createEl() {\n\t    var options = this.options_;\n\n\t    if (options.base) {\n\t      OGVLoader__default['default'].base = options.base;\n\t    } else {\n\t      throw new Error('Please specify the base for the ogv.js library');\n\t    }\n\n\t    var el = new OGVPlayer__default['default'](options);\n\t    el.className += ' vjs-tech';\n\t    options.tag = el;\n\t    return el;\n\t  }\n\t  /**\n\t   * Start playback\n\t   *\n\t   * @method play\n\t   */\n\t  ;\n\n\t  _proto.play = function play() {\n\t    this.el_.play();\n\t  }\n\t  /**\n\t   * Get the current playback speed.\n\t   *\n\t   * @return {number}\n\t   * @method playbackRate\n\t   */\n\t  ;\n\n\t  _proto.playbackRate = function playbackRate() {\n\t    return this.el_.playbackRate || 1;\n\t  }\n\t  /**\n\t   * Set the playback speed.\n\t   *\n\t   * @param {number} val Speed for the player to play.\n\t   * @method setPlaybackRate\n\t   */\n\t  ;\n\n\t  _proto.setPlaybackRate = function setPlaybackRate(val) {\n\t    if (this.el_.hasOwnProperty('playbackRate')) {\n\t      this.el_.playbackRate = val;\n\t    }\n\t  }\n\t  /**\n\t   * Returns a TimeRanges object that represents the ranges of the media resource that the user agent has played.\n\t   *\n\t   * @return {TimeRangeObject} the range of points on the media timeline that has been reached through normal playback\n\t   */\n\t  ;\n\n\t  _proto.played = function played() {\n\t    return this.el_.played;\n\t  }\n\t  /**\n\t   * Pause playback\n\t   *\n\t   * @method pause\n\t   */\n\t  ;\n\n\t  _proto.pause = function pause() {\n\t    this.el_.pause();\n\t  }\n\t  /**\n\t   * Is the player paused or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method paused\n\t   */\n\t  ;\n\n\t  _proto.paused = function paused() {\n\t    return this.el_.paused;\n\t  }\n\t  /**\n\t   * Get current playing time.\n\t   *\n\t   * @return {number}\n\t   * @method currentTime\n\t   */\n\t  ;\n\n\t  _proto.currentTime = function currentTime() {\n\t    return this.el_.currentTime;\n\t  }\n\t  /**\n\t   * Set current playing time.\n\t   *\n\t   * @param {number} seconds Current time of audio/video.\n\t   * @method setCurrentTime\n\t   */\n\t  ;\n\n\t  _proto.setCurrentTime = function setCurrentTime(seconds) {\n\t    try {\n\t      this.el_.currentTime = seconds;\n\t    } catch (e) {\n\t      videojs__default['default'].log(e, 'Media is not ready. (Video.JS)');\n\t    }\n\t  }\n\t  /**\n\t   * Get media's duration.\n\t   *\n\t   * @return {number}\n\t   * @method duration\n\t   */\n\t  ;\n\n\t  _proto.duration = function duration() {\n\t    if (this.el_.duration && this.el_.duration !== Infinity) {\n\t      return this.el_.duration;\n\t    }\n\n\t    return 0;\n\t  }\n\t  /**\n\t   * Get a TimeRange object that represents the intersection\n\t   * of the time ranges for which the user agent has all\n\t   * relevant media.\n\t   *\n\t   * @return {TimeRangeObject}\n\t   * @method buffered\n\t   */\n\t  ;\n\n\t  _proto.buffered = function buffered() {\n\t    return this.el_.buffered;\n\t  }\n\t  /**\n\t   * Get current volume level.\n\t   *\n\t   * @return {number}\n\t   * @method volume\n\t   */\n\t  ;\n\n\t  _proto.volume = function volume() {\n\t    return this.el_.hasOwnProperty('volume') ? this.el_.volume : 1;\n\t  }\n\t  /**\n\t   * Set current playing volume level.\n\t   *\n\t   * @param {number} percentAsDecimal Volume percent as a decimal.\n\t   * @method setVolume\n\t   */\n\t  ;\n\n\t  _proto.setVolume = function setVolume(percentAsDecimal) {\n\t    if (getDeviceOS() !== iPhoneOS && this.el_.hasOwnProperty('volume')) {\n\t      this.el_.volume = percentAsDecimal;\n\t    }\n\t  }\n\t  /**\n\t   * Is the player muted or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method muted\n\t   */\n\t  ;\n\n\t  _proto.muted = function muted() {\n\t    return this.el_.muted;\n\t  }\n\t  /**\n\t   * Mute the player.\n\t   *\n\t   * @param {boolean} muted True to mute the player.\n\t   */\n\t  ;\n\n\t  _proto.setMuted = function setMuted(muted) {\n\t    this.el_.muted = !!muted;\n\t  }\n\t  /**\n\t   * Is the player muted by default or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method defaultMuted\n\t   */\n\t  ;\n\n\t  _proto.defaultMuted = function defaultMuted() {\n\t    return this.el_.defaultMuted || false;\n\t  }\n\t  /**\n\t   * Get the player width.\n\t   *\n\t   * @return {number}\n\t   * @method width\n\t   */\n\t  ;\n\n\t  _proto.width = function width() {\n\t    return this.el_.offsetWidth;\n\t  }\n\t  /**\n\t   * Get the player height.\n\t   *\n\t   * @return {number}\n\t   * @method height\n\t   */\n\t  ;\n\n\t  _proto.height = function height() {\n\t    return this.el_.offsetHeight;\n\t  }\n\t  /**\n\t   * Get the video width.\n\t   *\n\t   * @return {number}\n\t   * @method videoWidth\n\t   */\n\t  ;\n\n\t  _proto.videoWidth = function videoWidth() {\n\t    return this.el_.videoWidth;\n\t  }\n\t  /**\n\t   * Get the video height.\n\t   *\n\t   * @return {number}\n\t   * @method videoHeight\n\t   */\n\t  ;\n\n\t  _proto.videoHeight = function videoHeight() {\n\t    return this.el_.videoHeight;\n\t  }\n\t  /**\n\t   * Get/set media source.\n\t   *\n\t   * @param {Object=} src Source object\n\t   * @return {Object}\n\t   * @method src\n\t   */\n\t  ;\n\n\t  _proto.src = function src(_src) {\n\t    if (typeof _src === 'undefined') {\n\t      return this.el_.src;\n\t    }\n\n\t    this.el_.src = _src;\n\t  }\n\t  /**\n\t   * Load the media into the player.\n\t   *\n\t   * @method load\n\t   */\n\t  ;\n\n\t  _proto.load = function load() {\n\t    this.el_.load();\n\t  }\n\t  /**\n\t   * Get current media source.\n\t   *\n\t   * @return {Object}\n\t   * @method currentSrc\n\t   */\n\t  ;\n\n\t  _proto.currentSrc = function currentSrc() {\n\t    if (this.currentSource_) {\n\t      return this.currentSource_.src;\n\t    }\n\n\t    return this.el_.currentSrc;\n\t  }\n\t  /**\n\t   * Get media poster URL.\n\t   *\n\t   * @return {string}\n\t   * @method poster\n\t   */\n\t  ;\n\n\t  _proto.poster = function poster() {\n\t    return this.el_.poster;\n\t  }\n\t  /**\n\t   * Set media poster URL.\n\t   *\n\t   * @param {string} url the poster image's url.\n\t   * @method\n\t   */\n\t  ;\n\n\t  _proto.setPoster = function setPoster(url) {\n\t    this.el_.poster = url;\n\t  }\n\t  /**\n\t   * Is the media preloaded or not.\n\t   *\n\t   * @return {string}\n\t   * @method preload\n\t   */\n\t  ;\n\n\t  _proto.preload = function preload() {\n\t    return this.el_.preload || 'none';\n\t  }\n\t  /**\n\t   * Set the media preload method.\n\t   *\n\t   * @param {string} val Value for preload attribute.\n\t   * @method setPreload\n\t   */\n\t  ;\n\n\t  _proto.setPreload = function setPreload(val) {\n\t    if (this.el_.hasOwnProperty('preload')) {\n\t      this.el_.preload = val;\n\t    }\n\t  }\n\t  /**\n\t   * Is the media auto-played or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method autoplay\n\t   */\n\t  ;\n\n\t  _proto.autoplay = function autoplay() {\n\t    return this.el_.autoplay || false;\n\t  }\n\t  /**\n\t   * Set media autoplay method.\n\t   *\n\t   * @param {boolean} val Value for autoplay attribute.\n\t   * @method setAutoplay\n\t   */\n\t  ;\n\n\t  _proto.setAutoplay = function setAutoplay(val) {\n\t    if (this.el_.hasOwnProperty('autoplay')) {\n\t      this.el_.autoplay = !!val;\n\t    }\n\t  }\n\t  /**\n\t   * Does the media has controls or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method controls\n\t   */\n\t  ;\n\n\t  _proto.controls = function controls() {\n\t    return this.el_.controls || false;\n\t  }\n\t  /**\n\t   * Set the media controls method.\n\t   *\n\t   * @param {boolean} val Value for controls attribute.\n\t   * @method setControls\n\t   */\n\t  ;\n\n\t  _proto.setControls = function setControls(val) {\n\t    if (this.el_.hasOwnProperty('controls')) {\n\t      this.el_.controls = !!val;\n\t    }\n\t  }\n\t  /**\n\t   * Is the media looped or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method loop\n\t   */\n\t  ;\n\n\t  _proto.loop = function loop() {\n\t    return this.el_.loop || false;\n\t  }\n\t  /**\n\t   * Set the media loop method.\n\t   *\n\t   * @param {boolean} val Value for loop attribute.\n\t   * @method setLoop\n\t   */\n\t  ;\n\n\t  _proto.setLoop = function setLoop(val) {\n\t    if (this.el_.hasOwnProperty('loop')) {\n\t      this.el_.loop = !!val;\n\t    }\n\t  }\n\t  /**\n\t   * Get a TimeRanges object that represents the\n\t   * ranges of the media resource to which it is possible\n\t   * for the user agent to seek.\n\t   *\n\t   * @return {TimeRangeObject}\n\t   * @method seekable\n\t   */\n\t  ;\n\n\t  _proto.seekable = function seekable() {\n\t    return this.el_.seekable;\n\t  }\n\t  /**\n\t   * Is player in the \"seeking\" state or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method seeking\n\t   */\n\t  ;\n\n\t  _proto.seeking = function seeking() {\n\t    return this.el_.seeking;\n\t  }\n\t  /**\n\t   * Is the media ended or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method ended\n\t   */\n\t  ;\n\n\t  _proto.ended = function ended() {\n\t    return this.el_.ended;\n\t  }\n\t  /**\n\t   * Get the current state of network activity\n\t   * NETWORK_EMPTY (numeric value 0)\n\t   * NETWORK_IDLE (numeric value 1)\n\t   * NETWORK_LOADING (numeric value 2)\n\t   * NETWORK_NO_SOURCE (numeric value 3)\n\t   *\n\t   * @return {number}\n\t   * @method networkState\n\t   */\n\t  ;\n\n\t  _proto.networkState = function networkState() {\n\t    return this.el_.networkState;\n\t  }\n\t  /**\n\t   * Get the current state of the player.\n\t   * HAVE_NOTHING (numeric value 0)\n\t   * HAVE_METADATA (numeric value 1)\n\t   * HAVE_CURRENT_DATA (numeric value 2)\n\t   * HAVE_FUTURE_DATA (numeric value 3)\n\t   * HAVE_ENOUGH_DATA (numeric value 4)\n\t   *\n\t   * @return {number}\n\t   * @method readyState\n\t   */\n\t  ;\n\n\t  _proto.readyState = function readyState() {\n\t    return this.el_.readyState;\n\t  }\n\t  /**\n\t   * Does the player support native fullscreen mode or not. (Mobile devices)\n\t   *\n\t   * @return {boolean}\n\t   */\n\t  ;\n\n\t  _proto.supportsFullScreen = function supportsFullScreen() {\n\t    // iOS devices have some problem with HTML5 fullscreen api so we need to fallback to fullWindow mode.\n\t    return false;\n\t  }\n\t  /**\n\t   * Get media player error.\n\t   *\n\t   * @return {string}\n\t   * @method error\n\t   */\n\t  ;\n\n\t  _proto.error = function error() {\n\t    return this.el_.error;\n\t  };\n\n\t  return OgvJS;\n\t}(Tech);\n\t/**\n\t * List of available events of the media player.\n\t *\n\t * @private\n\t * @type {Array}\n\t */\n\n\n\tOgvJS.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\t/**\n\t * Set the value for the player is it has that property.\n\t *\n\t * @param {Element} el\n\t * @param {string} name\n\t * @param value\n\t */\n\n\tOgvJS.setIfAvailable = function (el, name, value) {\n\t  if (el.hasOwnProperty(name)) {\n\t    el[name] = value;\n\t  }\n\t};\n\t/**\n\t * Check if browser/device is supported by Ogv.JS.\n\t *\n\t * @return {boolean}\n\t */\n\n\n\tOgvJS.isSupported = function () {\n\t  return OGVCompat__default['default'].supported('OGVPlayer');\n\t};\n\t/**\n\t * Check if the tech can support the given type.\n\t *\n\t * @param {string} type The mimetype to check\n\t * @return {string} 'probably', 'maybe', or '' (empty string)\n\t */\n\n\n\tOgvJS.canPlayType = function (type) {\n\t  return type.indexOf('/ogg') !== -1 || type.indexOf('/webm') ? 'maybe' : '';\n\t};\n\t/**\n\t * Check if the tech can support the given source\n\t *\n\t * @param srcObj The source object\n\t * @return {string} The options passed to the tech\n\t */\n\n\n\tOgvJS.canPlaySource = function (srcObj) {\n\t  return OgvJS.canPlayType(srcObj.type);\n\t};\n\t/**\n\t * Check if the volume can be changed in this browser/device.\n\t * Volume cannot be changed in a lot of mobile devices.\n\t * Specifically, it can't be changed from 1 on iOS.\n\t *\n\t * @return {boolean} True if volume can be controlled.\n\t */\n\n\n\tOgvJS.canControlVolume = function () {\n\t  if (getDeviceOS() === iPhoneOS) {\n\t    return false;\n\t  }\n\n\t  var p = new OGVPlayer__default['default']();\n\t  return p.hasOwnProperty('volume');\n\t};\n\t/**\n\t * Check if the volume can be muted in this browser/device.\n\t *\n\t * @return {boolean} True if volume can be muted.\n\t */\n\n\n\tOgvJS.canMuteVolume = function () {\n\t  return true;\n\t};\n\t/**\n\t * Check if the playback rate can be changed in this browser/device.\n\t *\n\t * @return {boolean} True if playback rate can be controlled.\n\t */\n\n\n\tOgvJS.canControlPlaybackRate = function () {\n\t  return true;\n\t};\n\t/**\n\t * Check to see if native 'TextTracks' are supported by this browser/device.\n\t *\n\t * @return {boolean} True if native 'TextTracks' are supported.\n\t */\n\n\n\tOgvJS.supportsNativeTextTracks = function () {\n\t  return false;\n\t};\n\t/**\n\t * Check if the fullscreen resize is supported by this browser/device.\n\t *\n\t * @return {boolean} True if the fullscreen resize is supported.\n\t */\n\n\n\tOgvJS.supportsFullscreenResize = function () {\n\t  return true;\n\t};\n\t/**\n\t * Check if the progress events is supported by this browser/device.\n\t *\n\t * @return {boolean} True if the progress events is supported.\n\t */\n\n\n\tOgvJS.supportsProgressEvents = function () {\n\t  return true;\n\t};\n\t/**\n\t * Check if the time update events is supported by this browser/device.\n\t *\n\t * @return {boolean} True if the time update events is supported.\n\t */\n\n\n\tOgvJS.supportsTimeupdateEvents = function () {\n\t  return true;\n\t};\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech supports volume control.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.canControlVolume}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech supports muting volume.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.canMuteVolume}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech supports changing the speed at which the media plays.\n\t * Examples:\n\t *   - Set player to play 2x (twice) as fast.\n\t *   - Set player to play 0.5x (half) as fast.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.canControlPlaybackRate}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports native 'TextTracks'.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsNativeTextTracks}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports fullscreen resize.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsFullscreenResize}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports progress events.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsProgressEvents}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports time update events.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsTimeupdateEvents}\n\t */\n\n\n\t[['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresFullscreenResize', 'supportsFullscreenResize'], ['featuresProgressEvents', 'supportsProgressEvents'], ['featuresTimeupdateEvents', 'supportsTimeupdateEvents']].forEach(function (_ref) {\n\t  var key = _ref[0],\n\t      fn = _ref[1];\n\t  defineLazyProperty(OgvJS.prototype, key, function () {\n\t    OgvJS[fn]();\n\t  }, true);\n\t});\n\tTech.registerTech('OgvJS', OgvJS);\n\n\treturn OgvJS;\n\n})));\n"],"names":["global","factory","this","videojs","ogvBase","_interopDefaultLegacy","e","videojs__default","OGVCompat__default","OGVCompat","OGVLoader__default","OGVLoader","OGVPlayer__default","OGVPlayer","createCommonjsModule","fn","basedir","module","path","exports","require","base","Error","commonjsRequire","setPrototypeOf","_setPrototypeOf","o","p","Object","__proto__","__esModule","inheritsLoose","subClass","superClass","prototype","create","constructor","Tech","getComponent","getDeviceOS","ua","navigator","userAgent","test","platform","maxTouchPoints","OgvJS","_Tech","options","ready","_this","call","el_","src","source","setIfAvailable","autoplay","loop","poster","preload","on","canvas","getElementsByTagName","style","removeProperty","triggerReady","_proto","createEl","options_","el","className","tag","play","playbackRate","setPlaybackRate","val","hasOwnProperty","played","pause","paused","currentTime","setCurrentTime","seconds","log","duration","Infinity","buffered","volume","setVolume","percentAsDecimal","muted","setMuted","defaultMuted","width","offsetWidth","height","offsetHeight","videoWidth","videoHeight","_src","load","currentSrc","currentSource_","setPoster","url","setPreload","setAutoplay","controls","setControls","setLoop","seekable","seeking","ended","networkState","readyState","supportsFullScreen","error","Events","name","value","isSupported","supported","canPlayType","type","indexOf","canPlaySource","srcObj","canControlVolume","canMuteVolume","canControlPlaybackRate","supportsNativeTextTracks","supportsFullscreenResize","supportsProgressEvents","supportsTimeupdateEvents","forEach","_ref","key","obj","getValue","setter","set","defineProperty","enumerable","writable","configurable","get","defineLazyProperty","registerTech","define","amd","globalThis","self","videojsOgvjs"],"mappings":"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"}