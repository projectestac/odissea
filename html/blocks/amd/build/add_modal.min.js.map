{"version":3,"file":"add_modal.min.js","sources":["../src/add_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Show an add block modal instead of doing it on a separate page.\n *\n * @module     core_block/add_modal\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {getString} from 'core/str';\nimport Ajax from 'core/ajax';\nimport ModalForm from \"core_form/modalform\";\nimport CancelModal from 'core/modal_cancel';\n\nconst SELECTORS = {\n    ADD_BLOCK: '[data-key=\"addblock\"]',\n    SHOW_BLOCK_FORM: '[data-action=\"showaddblockform\"][data-blockname][data-blockform]'\n};\n\n// Ensure we only add our listeners once.\nlet listenerEventsRegistered = false;\n\n/**\n * Register related event listeners.\n *\n * @method registerListenerEvents\n * @param {String|null} addBlockUrl The add block URL\n * @param {String} pagehash\n */\nconst registerListenerEvents = (addBlockUrl, pagehash) => {\n    let addBlockModal = null;\n    document.addEventListener('click', e => {\n\n        const showAddBlockForm = e.target.closest(SELECTORS.SHOW_BLOCK_FORM);\n        if (showAddBlockForm) {\n            e.preventDefault();\n\n            const modalForm = new ModalForm({\n                modalConfig: {\n                    title: getString('addblock', 'core_block',\n                        showAddBlockForm.getAttribute('data-blocktitle')),\n                },\n                args: {blockname: showAddBlockForm.getAttribute('data-blockname'), pagehash,\n                    blockregion: showAddBlockForm.getAttribute('data-blockregion')},\n                formClass: showAddBlockForm.getAttribute('data-blockform'),\n                returnFocus: showAddBlockForm,\n            });\n\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n                addBlockModal.destroy();\n                window.location.reload();\n            });\n\n            modalForm.show();\n        }\n\n        const addBlock = e.target.closest(SELECTORS.ADD_BLOCK);\n        if (addBlock) {\n            e.preventDefault();\n\n            let addBlockModalUrl = addBlockUrl ?? addBlock.dataset.url;\n\n            buildAddBlockModal()\n                .then(modal => {\n                    addBlockModal = modal;\n                    const modalBody = renderBlocks(addBlockModalUrl, pagehash,\n                        addBlock.getAttribute('data-blockregion'));\n                    modal.setBody(modalBody);\n                    modal.show();\n\n                    return modalBody;\n                })\n                .catch(() => {\n                    addBlockModal.destroy();\n                });\n        }\n    });\n};\n\n/**\n * Method that creates the 'add block' modal.\n *\n * @method buildAddBlockModal\n * @returns {Promise} The modal promise (modal's body will be rendered later).\n */\nconst buildAddBlockModal = () => CancelModal.create({\n    title: getString('addblock'),\n});\n\n/**\n * Method that renders the list of available blocks.\n *\n * @method renderBlocks\n * @param {String} addBlockUrl The add block URL\n * @param {String} pagehash\n * @param {String} region\n * @return {Promise}\n */\nconst renderBlocks = async(addBlockUrl, pagehash, region) => {\n    // Fetch all addable blocks in the given page.\n    const blocks = await getAddableBlocks(pagehash);\n\n    return Templates.render('core/add_block_body', {\n        blocks: blocks,\n        url: addBlockUrl,\n        blockregion: region,\n        pagehash\n    });\n};\n\n/**\n * Method that fetches all addable blocks in a given page.\n *\n * @method getAddableBlocks\n * @param {String} pagehash\n * @return {Promise}\n */\nconst getAddableBlocks = async(pagehash) => {\n    const request = {\n        methodname: 'core_block_fetch_addable_blocks',\n        args: {\n            pagecontextid: 0,\n            pagetype: '',\n            pagelayout: '',\n            subpage: '',\n            pagehash: pagehash,\n        },\n    };\n\n    return Ajax.call([request])[0];\n};\n\n/**\n * Set up the actions.\n *\n * @method init\n * @param {String} addBlockUrl The add block URL\n * @param {String} pagehash\n */\nexport const init = (addBlockUrl = null, pagehash = '') => {\n    if (!listenerEventsRegistered) {\n        registerListenerEvents(addBlockUrl, pagehash);\n        listenerEventsRegistered = true;\n    }\n};\n"],"names":["SELECTORS","listenerEventsRegistered","registerListenerEvents","addBlockUrl","pagehash","addBlockModal","document","addEventListener","e","showAddBlockForm","target","closest","preventDefault","modalForm","ModalForm","modalConfig","title","getAttribute","args","blockname","blockregion","formClass","returnFocus","events","FORM_SUBMITTED","destroy","window","location","reload","show","addBlock","addBlockModalUrl","dataset","url","buildAddBlockModal","then","modal","modalBody","renderBlocks","setBody","catch","CancelModal","create","async","region","blocks","getAddableBlocks","Templates","render","request","methodname","pagecontextid","pagetype","pagelayout","subpage","Ajax","call"],"mappings":";;;;;;;4QA6BMA,oBACS,wBADTA,0BAEe,uEAIjBC,0BAA2B,QASzBC,uBAAyB,CAACC,YAAaC,gBACrCC,cAAgB,KACpBC,SAASC,iBAAiB,SAASC,UAEzBC,iBAAmBD,EAAEE,OAAOC,QAAQX,8BACtCS,iBAAkB,CAClBD,EAAEI,uBAEIC,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,kBAAU,WAAY,aACzBP,iBAAiBQ,aAAa,qBAEtCC,KAAM,CAACC,UAAWV,iBAAiBQ,aAAa,kBAAmBb,SAAAA,SAC/DgB,YAAaX,iBAAiBQ,aAAa,qBAC/CI,UAAWZ,iBAAiBQ,aAAa,kBACzCK,YAAab,mBAGjBI,UAAUN,iBAAiBM,UAAUU,OAAOC,gBAAgB,KACxDnB,cAAcoB,UACdC,OAAOC,SAASC,YAGpBf,UAAUgB,aAGRC,SAAWtB,EAAEE,OAAOC,QAAQX,wBAC9B8B,SAAU,CACVtB,EAAEI,qBAEEmB,iBAAmB5B,MAAAA,YAAAA,YAAe2B,SAASE,QAAQC,IAEvDC,qBACKC,MAAKC,QACF/B,cAAgB+B,YACVC,UAAYC,aAAaP,iBAAkB3B,SAC7C0B,SAASb,aAAa,4BAC1BmB,MAAMG,QAAQF,WACdD,MAAMP,OAECQ,aAEVG,OAAM,KACHnC,cAAcoB,kBAY5BS,mBAAqB,IAAMO,sBAAYC,OAAO,CAChD1B,OAAO,kBAAU,cAYfsB,aAAeK,MAAMxC,YAAaC,SAAUwC,gBAExCC,aAAeC,iBAAiB1C,iBAE/B2C,mBAAUC,OAAO,sBAAuB,CAC3CH,OAAQA,OACRZ,IAAK9B,YACLiB,YAAawB,OACbxC,SAAAA,YAWF0C,iBAAmBH,MAAAA,iBACfM,QAAU,CACZC,WAAY,kCACZhC,KAAM,CACFiC,cAAe,EACfC,SAAU,GACVC,WAAY,GACZC,QAAS,GACTlD,SAAUA,kBAIXmD,cAAKC,KAAK,CAACP,UAAU,kBAUZ,eAAC9C,mEAAc,KAAMC,gEAAW,GAC3CH,2BACDC,uBAAuBC,YAAaC,UACpCH,0BAA2B"}