{"version":3,"file":"init.min.js","sources":["../src/init.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles the display and events of the Snap! editor.\n *\n * @module     assignsubmission_snap/snap\n * @copyright 2020 Sara Arjona <sara@moodle.com> and Joan Guill√©n <jguille2@xtec.cat>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\n\nexport const init = (xmlProject, userid, attemptNumber, editable) => {\n    const snapFrame = getSnapFrame(userid, attemptNumber);\n    if (snapFrame && editable) {\n        // Register events (to update the hidden xmlproject field when the form is submitted).\n        const form = getXMLInput().closest('form');\n        registerListenerEvents(form, snapFrame);\n    }\n};\n\nconst getSnapFrame = (userid, attemptNumber) => {\n    return document.getElementById('snap_snap-' + userid + '-' + attemptNumber).contentWindow;\n};\n\nconst getXMLInput = () => {\n    return $('input[name=\"snap_xmlproject\"]')[0];\n};\n\nconst registerListenerEvents = (form, snapFrame) => {\n    const submitButton = document.getElementById('id_submitbutton');\n    submitButton.addEventListener('click',\n        function(event) {\n            event.preventDefault();\n            window.addEventListener('message',function(e) {\n                if (e.data.selector == 'getProjectXML') {updateProject(form, e.data.response);}\n            },false);\n            snapFrame.postMessage({selector:'getProjectXML'},'*');\n        }\n    );\n};\n\nconst updateProject = (form, newContent) => {\n    const xmlProject = getXMLInput();\n    xmlProject.value = newContent;\n    form.submit();\n};\n"],"names":["xmlProject","userid","attemptNumber","editable","snapFrame","getSnapFrame","form","getXMLInput","closest","registerListenerEvents","document","getElementById","contentWindow","addEventListener","event","preventDefault","window","e","data","selector","updateProject","response","postMessage","newContent","value","submit"],"mappings":";;;;;;;wJAyBoB,CAACA,WAAYC,OAAQC,cAAeC,kBAC9CC,UAAYC,aAAaJ,OAAQC,kBACnCE,WAAaD,SAAU,OAEjBG,KAAOC,cAAcC,QAAQ,QACnCC,uBAAuBH,KAAMF,mBAI/BC,aAAe,CAACJ,OAAQC,gBACnBQ,SAASC,eAAe,aAAeV,OAAS,IAAMC,eAAeU,cAG1EL,YAAc,KACT,mBAAE,iCAAiC,GAGxCE,uBAAyB,CAACH,KAAMF,aACbM,SAASC,eAAe,mBAChCE,iBAAiB,SAC1B,SAASC,OACLA,MAAMC,iBACNC,OAAOH,iBAAiB,WAAU,SAASI,GAChB,iBAAnBA,EAAEC,KAAKC,UAA8BC,cAAcd,KAAMW,EAAEC,KAAKG,aACtE,GACFjB,UAAUkB,YAAY,CAACH,SAAS,iBAAiB,SAKvDC,cAAgB,CAACd,KAAMiB,cACNhB,cACRiB,MAAQD,WACnBjB,KAAKmB"}