{"version":3,"file":"events.min.js","sources":["../src/events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/ //\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript events for the `core_filters` subsystem.\n *\n * @module     core_filters/events\n * @copyright  2021 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      4.0\n *\n * @example <caption>Example of listening to a filter event.</caption>\n * import {eventTypes as filterEventTypes} from 'core_filters/events';\n *\n * document.addEventListener(filterEventTypes.filterContentUpdated, e => {\n *     window.console.log(e.detail.nodes); // A list of the HTMLElements whose content was updated\n * });\n */\n\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport {getList as normalistNodeList} from 'core/normalise';\nimport jQuery from 'jquery';\n\n/**\n * Events for the `core_filters` subsystem.\n *\n * @constant\n * @property {String} filterContentUpdated See {@link event:filterContentUpdated}\n */\nexport const eventTypes = {\n    /**\n     * An event triggered when page content is updated and must be processed by the filter system.\n     *\n     * An example of this is loading user text that could have equations in it. MathJax can typeset the equations but\n     * only if it is notified that there are new nodes in the page that need processing.\n     *\n     * @event filterContentUpdated\n     * @type {CustomEvent}\n     * @property {object} detail\n     * @property {NodeElement[]} detail.nodes The list of parent nodes which were updated\n     */\n    filterContentUpdated: 'core_filters/contentUpdated',\n};\n\n/**\n * Trigger an event to indicate that the specified nodes were updated and should be processed by the filter system.\n *\n * @method notifyFilterContentUpdated\n * @param {jQuery|Array} nodes\n * @returns {CustomEvent}\n * @fires filterContentUpdated\n */\nexport const notifyFilterContentUpdated = nodes => {\n    // Historically this could be a jQuery Object.\n    // Normalise the list of nodes to a NodeList.\n    nodes = normalistNodeList(nodes);\n\n    return dispatchEvent(eventTypes.filterContentUpdated, {nodes});\n};\n\nlet legacyEventsRegistered = false;\nif (!legacyEventsRegistered) {\n    // The following event triggers are legacy and will be removed in the future.\n    // The following approach provides a backwards-compatability layer for the new events.\n    // Code should be updated to make use of native events.\n\n    Y.use('event', 'moodle-core-event', () => {\n        // Provide a backwards-compatability layer for YUI Events.\n        document.addEventListener(eventTypes.filterContentUpdated, e => {\n            // Trigger the legacy jQuery event.\n            jQuery(document).trigger(M.core.event.FILTER_CONTENT_UPDATED, [jQuery(e.detail.nodes)]);\n\n            // Trigger the legacy YUI event.\n            Y.fire(M.core.event.FILTER_CONTENT_UPDATED, {nodes: new Y.NodeList(e.detail.nodes)});\n        });\n    });\n\n    legacyEventsRegistered = true;\n}\n"],"names":["eventTypes","filterContentUpdated","nodes","legacyEventsRegistered","Y","use","document","addEventListener","e","trigger","M","core","event","FILTER_CONTENT_UPDATED","detail","fire","NodeList"],"mappings":";;;;;;;;;;;;;;;0LAwCaA,WAAa,CAYtBC,qBAAsB,kGAWgBC,QAGtCA,OAAQ,sBAAkBA,QAEnB,mCAAcF,WAAWC,qBAAsB,CAACC,MAAAA,aAGvDC,wBAAyB,EACxBA,yBAKDC,EAAEC,IAAI,QAAS,qBAAqB,KAEhCC,SAASC,iBAAiBP,WAAWC,sBAAsBO,wBAEhDF,UAAUG,QAAQC,EAAEC,KAAKC,MAAMC,uBAAwB,EAAC,mBAAOL,EAAEM,OAAOZ,SAG/EE,EAAEW,KAAKL,EAAEC,KAAKC,MAAMC,uBAAwB,CAACX,MAAO,IAAIE,EAAEY,SAASR,EAAEM,OAAOZ,eAIpFC,wBAAyB"}