{"version":3,"file":"scroll.min.js","sources":["../src/scroll.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage user scroll in Moodle for future floating elements.\n *\n * @module theme_boost/scroll\n * @copyright  2020 Ferran Recio <ferran@moodle.org>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Moodle scroll handling. For now it just handle a \"scrolled\" class\n * on the body tag but in the near future could handle more floating\n * elements like option bars, docked elements or other active elements.\n *\n * @class theme_boost/scroll\n */\nexport default class MoodleScroll {\n\n    /**\n     * Initialise the scroll monitoring.\n     *\n     * @method  init\n     * @chainable\n     * @return {Object} this.\n     */\n    init() {\n        this.scrollY = 0;\n        window.addEventListener(\"scroll\", this.scrollHandler.bind(this));\n        return this;\n    }\n\n    /**\n     * Add special classes to body depending on scroll position.\n     *\n     * @method  update\n     * @chainable\n     * @return {Integer} current scroll position.\n     */\n    getScrollPosition() {\n        return window.pageYOffset || document.documentElement.scrollTop;\n    }\n\n    /**\n     * Add special classes to body depending on scroll position.\n     *\n     * @method  update\n     * @chainable\n     */\n    scrollHandler() {\n        const body = document.querySelector('body');\n        const scrollY = this.getScrollPosition();\n        if (scrollY >= window.innerHeight) {\n            body.classList.add('scrolled');\n        } else {\n            body.classList.remove('scrolled');\n        }\n    }\n}\n"],"names":["MoodleScroll","scrollY","window","addEventListener","this","scrollHandler","bind","pageYOffset","document","documentElement","scrollTop","body","querySelector","getScrollPosition","innerHeight","classList","add","remove"],"mappings":";;;;;;;;IA8BqBA,ySASjB,uBACSC,QAAU,EACfC,OAAOC,iBAAiB,SAAUC,KAAKC,cAAcC,KAAKF,OACnDA,sCAUX,kBACWF,OAAOK,aAAeC,SAASC,gBAAgBC,uCAS1D,eACUC,KAAOH,SAASI,cAAc,QACpBR,KAAKS,qBACNX,OAAOY,YAClBH,KAAKI,UAAUC,IAAI,YAEnBL,KAAKI,UAAUE,OAAO"}