{"version":3,"file":"carousel.min.js","sources":["../../src/bootstrap/carousel.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'carousel'\nconst VERSION = '4.6.0'\nconst DATA_KEY = 'bs.carousel'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst ARROW_LEFT_KEYCODE = 37 // KeyboardEvent.which value for left arrow key\nconst ARROW_RIGHT_KEYCODE = 39 // KeyboardEvent.which value for right arrow key\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  slide: false,\n  pause: 'hover',\n  wrap: true,\n  touch: true\n}\n\nconst DefaultType = {\n  interval: '(number|boolean)',\n  keyboard: 'boolean',\n  slide: '(boolean|string)',\n  pause: '(string|boolean)',\n  wrap: 'boolean',\n  touch: 'boolean'\n}\n\nconst DIRECTION_NEXT = 'next'\nconst DIRECTION_PREV = 'prev'\nconst DIRECTION_LEFT = 'left'\nconst DIRECTION_RIGHT = 'right'\n\nconst EVENT_SLIDE = `slide${EVENT_KEY}`\nconst EVENT_SLID = `slid${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_CAROUSEL = 'carousel'\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_SLIDE = 'slide'\nconst CLASS_NAME_RIGHT = 'carousel-item-right'\nconst CLASS_NAME_LEFT = 'carousel-item-left'\nconst CLASS_NAME_NEXT = 'carousel-item-next'\nconst CLASS_NAME_PREV = 'carousel-item-prev'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\n\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item'\nconst SELECTOR_ITEM = '.carousel-item'\nconst SELECTOR_ITEM_IMG = '.carousel-item img'\nconst SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev'\nconst SELECTOR_INDICATORS = '.carousel-indicators'\nconst SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]'\nconst SELECTOR_DATA_RIDE = '[data-ride=\"carousel\"]'\n\nconst PointerType = {\n  TOUCH: 'touch',\n  PEN: 'pen'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass Carousel {\n  constructor(element, config) {\n    this._items = null\n    this._interval = null\n    this._activeElement = null\n    this._isPaused = false\n    this._isSliding = false\n    this.touchTimeout = null\n    this.touchStartX = 0\n    this.touchDeltaX = 0\n\n    this._config = this._getConfig(config)\n    this._element = element\n    this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS)\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n    this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent)\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  next() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_NEXT)\n    }\n  }\n\n  nextWhenVisible() {\n    const $element = $(this._element)\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden &&\n      ($element.is(':visible') && $element.css('visibility') !== 'hidden')) {\n      this.next()\n    }\n  }\n\n  prev() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_PREV)\n    }\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true\n    }\n\n    if (this._element.querySelector(SELECTOR_NEXT_PREV)) {\n      Util.triggerTransitionEnd(this._element)\n      this.cycle(true)\n    }\n\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    if (this._config.interval && !this._isPaused) {\n      this._updateInterval()\n\n      this._interval = setInterval(\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n        this._config.interval\n      )\n    }\n  }\n\n  to(index) {\n    this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n\n    const activeIndex = this._getItemIndex(this._activeElement)\n\n    if (index > this._items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      $(this._element).one(EVENT_SLID, () => this.to(index))\n      return\n    }\n\n    if (activeIndex === index) {\n      this.pause()\n      this.cycle()\n      return\n    }\n\n    const direction = index > activeIndex ?\n      DIRECTION_NEXT :\n      DIRECTION_PREV\n\n    this._slide(direction, this._items[index])\n  }\n\n  dispose() {\n    $(this._element).off(EVENT_KEY)\n    $.removeData(this._element, DATA_KEY)\n\n    this._items = null\n    this._config = null\n    this._element = null\n    this._interval = null\n    this._isPaused = null\n    this._isSliding = null\n    this._activeElement = null\n    this._indicatorsElement = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX)\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltax / this.touchDeltaX\n\n    this.touchDeltaX = 0\n\n    // swipe left\n    if (direction > 0) {\n      this.prev()\n    }\n\n    // swipe right\n    if (direction < 0) {\n      this.next()\n    }\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      $(this._element).on(EVENT_KEYDOWN, event => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      $(this._element)\n        .on(EVENT_MOUSEENTER, event => this.pause(event))\n        .on(EVENT_MOUSELEAVE, event => this.cycle(event))\n    }\n\n    if (this._config.touch) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    if (!this._touchSupported) {\n      return\n    }\n\n    const start = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchStartX = event.originalEvent.clientX\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.originalEvent.touches[0].clientX\n      }\n    }\n\n    const move = event => {\n      // ensure swiping with one touch and not pinching\n      if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n        this.touchDeltaX = 0\n      } else {\n        this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX\n      }\n    }\n\n    const end = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchDeltaX = event.originalEvent.clientX - this.touchStartX\n      }\n\n      this._handleSwipe()\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n\n        this.pause()\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout)\n        }\n\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n      }\n    }\n\n    $(this._element.querySelectorAll(SELECTOR_ITEM_IMG))\n      .on(EVENT_DRAG_START, e => e.preventDefault())\n\n    if (this._pointerEvent) {\n      $(this._element).on(EVENT_POINTERDOWN, event => start(event))\n      $(this._element).on(EVENT_POINTERUP, event => end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      $(this._element).on(EVENT_TOUCHSTART, event => start(event))\n      $(this._element).on(EVENT_TOUCHMOVE, event => move(event))\n      $(this._element).on(EVENT_TOUCHEND, event => end(event))\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    switch (event.which) {\n      case ARROW_LEFT_KEYCODE:\n        event.preventDefault()\n        this.prev()\n        break\n      case ARROW_RIGHT_KEYCODE:\n        event.preventDefault()\n        this.next()\n        break\n      default:\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode ?\n      [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) :\n      []\n    return this._items.indexOf(element)\n  }\n\n  _getItemByDirection(direction, activeElement) {\n    const isNextDirection = direction === DIRECTION_NEXT\n    const isPrevDirection = direction === DIRECTION_PREV\n    const activeIndex = this._getItemIndex(activeElement)\n    const lastItemIndex = this._items.length - 1\n    const isGoingToWrap = isPrevDirection && activeIndex === 0 ||\n                            isNextDirection && activeIndex === lastItemIndex\n\n    if (isGoingToWrap && !this._config.wrap) {\n      return activeElement\n    }\n\n    const delta = direction === DIRECTION_PREV ? -1 : 1\n    const itemIndex = (activeIndex + delta) % this._items.length\n\n    return itemIndex === -1 ?\n      this._items[this._items.length - 1] : this._items[itemIndex]\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget)\n    const fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM))\n    const slideEvent = $.Event(EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    })\n\n    $(this._element).trigger(slideEvent)\n\n    return slideEvent\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE))\n      $(indicators).removeClass(CLASS_NAME_ACTIVE)\n\n      const nextIndicator = this._indicatorsElement.children[\n        this._getItemIndex(element)\n      ]\n\n      if (nextIndicator) {\n        $(nextIndicator).addClass(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  _updateInterval() {\n    const element = this._activeElement || this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n\n    if (!element) {\n      return\n    }\n\n    const elementInterval = parseInt(element.getAttribute('data-interval'), 10)\n\n    if (elementInterval) {\n      this._config.defaultInterval = this._config.defaultInterval || this._config.interval\n      this._config.interval = elementInterval\n    } else {\n      this._config.interval = this._config.defaultInterval || this._config.interval\n    }\n  }\n\n  _slide(direction, element) {\n    const activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n    const activeElementIndex = this._getItemIndex(activeElement)\n    const nextElement = element || activeElement &&\n      this._getItemByDirection(direction, activeElement)\n    const nextElementIndex = this._getItemIndex(nextElement)\n    const isCycling = Boolean(this._interval)\n\n    let directionalClassName\n    let orderClassName\n    let eventDirectionName\n\n    if (direction === DIRECTION_NEXT) {\n      directionalClassName = CLASS_NAME_LEFT\n      orderClassName = CLASS_NAME_NEXT\n      eventDirectionName = DIRECTION_LEFT\n    } else {\n      directionalClassName = CLASS_NAME_RIGHT\n      orderClassName = CLASS_NAME_PREV\n      eventDirectionName = DIRECTION_RIGHT\n    }\n\n    if (nextElement && $(nextElement).hasClass(CLASS_NAME_ACTIVE)) {\n      this._isSliding = false\n      return\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n    if (slideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return\n    }\n\n    this._isSliding = true\n\n    if (isCycling) {\n      this.pause()\n    }\n\n    this._setActiveIndicatorElement(nextElement)\n    this._activeElement = nextElement\n\n    const slidEvent = $.Event(EVENT_SLID, {\n      relatedTarget: nextElement,\n      direction: eventDirectionName,\n      from: activeElementIndex,\n      to: nextElementIndex\n    })\n\n    if ($(this._element).hasClass(CLASS_NAME_SLIDE)) {\n      $(nextElement).addClass(orderClassName)\n\n      Util.reflow(nextElement)\n\n      $(activeElement).addClass(directionalClassName)\n      $(nextElement).addClass(directionalClassName)\n\n      const transitionDuration = Util.getTransitionDurationFromElement(activeElement)\n\n      $(activeElement)\n        .one(Util.TRANSITION_END, () => {\n          $(nextElement)\n            .removeClass(`${directionalClassName} ${orderClassName}`)\n            .addClass(CLASS_NAME_ACTIVE)\n\n          $(activeElement).removeClass(`${CLASS_NAME_ACTIVE} ${orderClassName} ${directionalClassName}`)\n\n          this._isSliding = false\n\n          setTimeout(() => $(this._element).trigger(slidEvent), 0)\n        })\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      $(activeElement).removeClass(CLASS_NAME_ACTIVE)\n      $(nextElement).addClass(CLASS_NAME_ACTIVE)\n\n      this._isSliding = false\n      $(this._element).trigger(slidEvent)\n    }\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      let _config = {\n        ...Default,\n        ...$(this).data()\n      }\n\n      if (typeof config === 'object') {\n        _config = {\n          ..._config,\n          ...config\n        }\n      }\n\n      const action = typeof config === 'string' ? config : _config.slide\n\n      if (!data) {\n        data = new Carousel(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'number') {\n        data.to(config)\n      } else if (typeof action === 'string') {\n        if (typeof data[action] === 'undefined') {\n          throw new TypeError(`No method named \"${action}\"`)\n        }\n\n        data[action]()\n      } else if (_config.interval && _config.ride) {\n        data.pause()\n        data.cycle()\n      }\n    })\n  }\n\n  static _dataApiClickHandler(event) {\n    const selector = Util.getSelectorFromElement(this)\n\n    if (!selector) {\n      return\n    }\n\n    const target = $(selector)[0]\n\n    if (!target || !$(target).hasClass(CLASS_NAME_CAROUSEL)) {\n      return\n    }\n\n    const config = {\n      ...$(target).data(),\n      ...$(this).data()\n    }\n    const slideIndex = this.getAttribute('data-slide-to')\n\n    if (slideIndex) {\n      config.interval = false\n    }\n\n    Carousel._jQueryInterface.call($(target), config)\n\n    if (slideIndex) {\n      $(target).data(DATA_KEY).to(slideIndex)\n    }\n\n    event.preventDefault()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler)\n\n$(window).on(EVENT_LOAD_DATA_API, () => {\n  const carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE))\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    const $carousel = $(carousels[i])\n    Carousel._jQueryInterface.call($carousel, $carousel.data())\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Carousel._jQueryInterface\n$.fn[NAME].Constructor = Carousel\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Carousel._jQueryInterface\n}\n\nexport default Carousel\n"],"names":["NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","$","fn","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","EVENT_SLIDE","EVENT_SLID","EVENT_KEYDOWN","EVENT_MOUSEENTER","EVENT_MOUSELEAVE","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","EVENT_DRAG_START","EVENT_LOAD_DATA_API","EVENT_CLICK_DATA_API","PointerType","TOUCH","PEN","Carousel","element","config","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","this","_getConfig","_element","_indicatorsElement","querySelector","_touchSupported","document","documentElement","navigator","maxTouchPoints","_pointerEvent","Boolean","window","PointerEvent","MSPointerEvent","_addEventListeners","each","data","_typeof","action","to","TypeError","ride","cycle","event","selector","Util","getSelectorFromElement","target","hasClass","slideIndex","getAttribute","_jQueryInterface","call","preventDefault","_slide","$element","hidden","is","css","next","triggerTransitionEnd","clearInterval","_updateInterval","setInterval","visibilityState","nextWhenVisible","bind","index","activeIndex","_getItemIndex","length","one","_this","direction","off","removeData","typeCheckConfig","absDeltax","Math","abs","prev","on","_this2","_keydown","_addTouchEventListeners","start","_this3","originalEvent","pointerType","toUpperCase","clientX","touches","end","_handleSwipe","clearTimeout","setTimeout","querySelectorAll","e","classList","add","move","test","tagName","which","parentNode","slice","indexOf","activeElement","isNextDirection","isPrevDirection","lastItemIndex","itemIndex","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","Event","from","trigger","indicators","removeClass","nextIndicator","children","addClass","elementInterval","parseInt","defaultInterval","directionalClassName","orderClassName","activeElementIndex","nextElement","_getItemByDirection","nextElementIndex","isCycling","_triggerSlideEvent","isDefaultPrevented","_setActiveIndicatorElement","slidEvent","reflow","transitionDuration","getTransitionDurationFromElement","TRANSITION_END","_this4","emulateTransitionEnd","_dataApiClickHandler","carousels","i","len","$carousel","Constructor","noConflict"],"mappings":"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"}