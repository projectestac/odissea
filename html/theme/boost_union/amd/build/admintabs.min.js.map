{"version":3,"file":"admintabs.min.js","sources":["../src/admintabs.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Theme Boost Union - JS code current admin tab selector\n *\n * @module     theme_boost_union/admintab\n * @copyright  2023 Mario Wehr <m.wehr@fh-kaernten.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n    \"use strict\";\n\n    /**\n     * Initialising.\n     */\n    function initAdminTabs() {\n        // Wait for Bootstrap to be finally loaded.\n        // As soon it's loaded, the anonymous function's code is executed.\n        whenBootstrapIsAvailable(() => {\n            // The sessionStorage key.\n            const sessionKey = 'theme_boost_union_active_admin_tab';\n\n            // Register an event listener on all boost union tabs.\n            $('a[href^=\"#theme_boost_union_\"]').parent().on(\"shown.bs.tab\", function() {\n                // Store the active tab in the session.\n                window.sessionStorage.setItem(sessionKey, $(this).children('a').eq(0).attr('href'));\n            });\n\n            // Get the active tab from the session.\n            const activeTab = window.sessionStorage.getItem(sessionKey);\n\n            // If an active tab was stored in the session.\n            if (activeTab) {\n                // Switch to the active tab from the session.\n                $('a[href=\"' + activeTab + '\"]').tab('show');\n            }\n        });\n    }\n\n    /**\n     * Wait for Bootstrap to be finally loaded.\n     *\n     * @param {function} callback\n     */\n    function whenBootstrapIsAvailable(callback) {\n        window.setTimeout(() => {\n            if (typeof $().tab == 'function') {\n                callback();\n            } else {\n                whenBootstrapIsAvailable(callback);\n            }\n        }, 100);\n    }\n\n    return {\n        init: function() {\n            initAdminTabs();\n        }\n    };\n});\n"],"names":["define","$","initAdminTabs","whenBootstrapIsAvailable","sessionKey","parent","on","window","sessionStorage","setItem","this","children","eq","attr","activeTab","getItem","tab","callback","setTimeout","init"],"mappings":";;;;;;;AAuBAA,qCAAO,CAAC,WAAW,SAASC,YAMfC,gBAGLC,0BAAyB,WAEfC,WAAa,qCAGnBH,EAAE,kCAAkCI,SAASC,GAAG,gBAAgB,WAE5DC,OAAOC,eAAeC,QAAQL,WAAYH,EAAES,MAAMC,SAAS,KAAKC,GAAG,GAAGC,KAAK,kBAIzEC,UAAYP,OAAOC,eAAeO,QAAQX,YAG5CU,WAEAb,EAAE,WAAaa,UAAY,MAAME,IAAI,oBAUxCb,yBAAyBc,UAC9BV,OAAOW,YAAW,KACQ,mBAAXjB,IAAIe,IACXC,WAEAd,yBAAyBc,YAE9B,WAGA,CACHE,KAAM,WACFjB"}