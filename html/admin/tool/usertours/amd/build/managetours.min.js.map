{"version":3,"file":"managetours.min.js","sources":["../src/managetours.js"],"sourcesContent":["/**\n * Tour management code.\n *\n * @module     tool_usertours/managetours\n * @copyright  2016 Andrew Nicols <andrew@nicols.co.uk>\n */\nimport {prefetchStrings} from 'core/prefetch';\nimport {getString} from 'core/str';\nimport {confirm as confirmModal} from 'core/notification';\n\n/**\n * Handle tour management actions.\n *\n * @param   {Event} e\n * @private\n */\nconst removeTourHandler = e => {\n    const deleteButton = e.target.closest('[data-action=\"delete\"]');\n    if (deleteButton) {\n        e.preventDefault();\n        removeTourFromLink(deleteButton.href);\n    }\n};\n\n/**\n * Handle removal of a tour with confirmation.\n *\n * @param {string} targetUrl\n * @private\n */\nconst removeTourFromLink = targetUrl => {\n    confirmModal(\n        getString('confirmtourremovaltitle', 'tool_usertours'),\n        getString('confirmtourremovalquestion', 'tool_usertours'),\n        getString('yes', 'core'),\n        getString('no', 'core'),\n        () => {\n            window.location = targetUrl;\n        }\n    );\n};\n\n/**\n * Set up the tour management handlers.\n */\nexport const setup = () => {\n    prefetchStrings('tool_usertours', [\n        'confirmtourremovaltitle',\n        'confirmtourremovalquestion',\n    ]);\n\n    prefetchStrings('core', [\n        'yes',\n        'no',\n    ]);\n\n    document.querySelector('body').addEventListener('click', removeTourHandler);\n};\n"],"names":["removeTourHandler","e","deleteButton","target","closest","preventDefault","removeTourFromLink","href","targetUrl","window","location","document","querySelector","addEventListener"],"mappings":"oOAgBMA,kBAAoBC,UAChBC,aAAeD,EAAEE,OAAOC,QAAQ,0BAClCF,eACAD,EAAEI,iBACFC,mBAAmBJ,aAAaK,QAUlCD,mBAAqBE,uCAEnB,kBAAU,0BAA2B,mBACrC,kBAAU,6BAA8B,mBACxC,kBAAU,MAAO,SACjB,kBAAU,KAAM,SAChB,KACIC,OAAOC,SAAWF,6BAQT,mCACD,iBAAkB,CAC9B,0BACA,6DAGY,OAAQ,CACpB,MACA,OAGJG,SAASC,cAAc,QAAQC,iBAAiB,QAASb"}