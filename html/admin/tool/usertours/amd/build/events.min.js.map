{"version":3,"file":"events.min.js","sources":["../src/events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript events for the `tool_usertours` subsystem.\n *\n * @module tool_usertours/events\n * @copyright 2021 Andrew Lyons <andrew@nicols.co.uk>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n * @example <caption>Example of listening to a step rendering event and cancelling it.</caption>\n * import {eventTypes as userTourEvents} from 'tool_usertours/events';\n *\n * document.addEventListener(userTourEvents.stepRender, e => {\n *     console.log(e.detail.tour); // The Tour instance\n *     e.preventDefault();\n * });\n */\n\n/**\n * Events for the component.\n *\n * @constant\n * @property {object} eventTypes\n * @property {String} eventTypes.stepRender See {@link event:tool_usertours/stepRender}\n * @property {String} eventTypes.stepRendered See {@link event:tool_usertours/stepRendered}\n * @property {String} eventTypes.tourStart See {@link event:tool_usertours/tourStart}\n * @property {String} eventTypes.tourStarted See {@link event:tool_usertours/tourStarted}\n * @property {String} eventTypes.tourEnd See {@link event:tool_usertours/tourEnd}\n * @property {String} eventTypes.tourEnded See {@link event:tool_usertours/tourEnded}\n * @property {String} eventTypes.stepHide See {@link event:tool_usertours/stepHide}\n * @property {String} eventTypes.stepHidden See {@link event:tool_usertours/stepHidden}\n */\nexport const eventTypes = {\n    /**\n     * An event triggered before a user tour step is rendered.\n     *\n     * This event is cancellable.\n     *\n     * @event tool_usertours/stepRender\n     * @type {CustomEvent}\n     * @property {object} detail\n     * @property {tool_usertours/tour} detail.tour\n     * @property {object} detail.stepConfig\n     */\n    stepRender: 'tool_usertours/stepRender',\n\n    /**\n     * An event triggered after a user tour step has been rendered.\n     *\n     * @event tool_usertours/stepRendered\n     * @type {CustomEvent}\n     * @property {object} detail\n     * @property {tool_usertours/tour} detail.tour\n     * @property {object} detail.stepConfig\n     */\n    stepRendered: 'tool_usertours/stepRendered',\n\n    /**\n     * An event triggered before a user tour starts.\n     *\n     * This event is cancellable.\n     *\n     * @event tool_usertours/tourStart\n     * @type {CustomEvent}\n     * @property {object} detail\n     * @property {tool_usertours/tour} detail.tour\n     * @property {Number} detail.startAt\n     */\n    tourStart: 'tool_usertours/tourStart',\n\n    /**\n     * An event triggered after a user tour has started.\n     *\n     * @event tool_usertours/tourStarted\n     * @property {object} detail\n     * @property {tool_usertours/tour} detail.tour\n     * @type {CustomEvent}\n     */\n    tourStarted: 'tool_usertours/tourStarted',\n\n    /**\n     * An event triggered before a tour ends.\n     *\n     * This event is cancellable.\n     *\n     * @event tool_usertours/tourEnd\n     * @property {object} detail\n     * @property {tool_usertours/tour} detail.tour\n     * @type {CustomEvent}\n     */\n    tourEnd: 'tool_usertours/tourEnd',\n\n    /**\n     * An event triggered after a tour has ended.\n     *\n     * @event tool_usertours/tourEnded\n     * @property {object} detail\n     * @property {tool_usertours/tour} detail.tour\n     * @type {CustomEvent}\n     */\n    tourEnded: 'tool_usertours/tourEnded',\n\n    /**\n     * An event triggered before a step is hidden.\n     *\n     * This event is cancellable.\n     *\n     * @event tool_usertours/stepHide\n     * @property {object} detail\n     * @property {tool_usertours/tour} detail.tour\n     * @type {CustomEvent}\n     */\n    stepHide: 'tool_usertours/stepHide',\n\n    /**\n     * An event triggered after a step has been hidden.\n     *\n     * @event tool_usertours/stepHidden\n     * @property {object} detail\n     * @property {tool_usertours/tour} detail.tour\n     * @type {CustomEvent}\n     */\n    stepHidden: 'tool_usertours/stepHidden',\n};\n"],"names":["stepRender","stepRendered","tourStart","tourStarted","tourEnd","tourEnded","stepHide","stepHidden"],"mappings":"sKA6C0B,CAYtBA,WAAY,4BAWZC,aAAc,8BAadC,UAAW,2BAUXC,YAAa,6BAYbC,QAAS,yBAUTC,UAAW,2BAYXC,SAAU,0BAUVC,WAAY"}