{"version":3,"sources":["../src/ddwtos.js"],"names":["define","$","dragDrop","keys","DragDropToTextQuestion","containerId","readOnly","getRoot","addClass","resizeAllDragsAndDrops","cloneDrags","positionDrags","prototype","thisQ","find","each","i","node","resizeAllDragsAndDropsInGroup","getClassnameNumericSuffix","group","dragHomes","maxWidth","maxHeight","drag","Math","max","ceil","offsetWidth","offsetHeight","setElementSize","drop","element","width","height","css","index","draghome","cloneDragsForOneChoice","dragHome","hasClass","noOfDrags","noOfDropsInGroup","getGroup","cloneDrag","clone","removeClass","offset","append","root","dragNode","currentPlace","getDragHome","getChoice","inputNode","input","choice","val","place","getPlace","dropPosition","data","top","left","getUnplacedChoice","fixLayoutIfDropsMoved","didMove","prevTop","prevLeft","handleDragStart","e","target","closest","info","prepare","start","setInputValue","x","y","dragMove","dragEnd","pageX","pageY","dropNode","isPointInDrop","placed","sendDragToDrop","sendDragHome","oldDrag","getCurrentDragInPlace","length","animateTo","handleKeyPress","currentDrag","nextDrag","keyCode","space","arrowRight","arrowDown","getNextDrag","arrowLeft","arrowUp","getPreviousDrag","escape","preventDefault","numChoices","noOfChoicesInGroup","next","previous","currentPos","targetPos","animate","parseInt","duration","done","position","document","getElementById","slice","prefix","classes","attr","classesArr","split","patt1","RegExp","test","patt2","match","exec","questionManager","eventHandlersInitialised","questions","init","setupEventHandlers","on","window","handleWindowResize","setTimeout","fixLayoutIfThingsMoved","question","getQuestionForEvent","hasOwnProperty","currentTarget"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to make drag-drop into text questions work.\n *\n * Some vocabulary to help understand this code:\n *\n * The question text contains 'drops' - blanks into which the 'drags', the missing\n * words, can be put.\n *\n * The thing that can be moved into the drops are called 'drags'. There may be\n * multiple copies of the 'same' drag which does not really cause problems.\n * Each drag has a 'choice' number which is the value set on the drop's hidden\n * input when this drag is placed in a drop.\n *\n * These may be in separate 'groups', distinguished by colour.\n * Things can only interact with other things in the same group.\n * The groups are numbered from 1.\n *\n * The place where a given drag started from is called its 'home'.\n *\n * @module     qtype_ddwtos/ddwtos\n * @package    qtype_ddwtos\n * @copyright  2018 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.6\n */\ndefine(['jquery', 'core/dragdrop', 'core/key_codes'], function($, dragDrop, keys) {\n\n    \"use strict\";\n\n    /**\n     * Object to handle one drag-drop into text question.\n     *\n     * @param {String} containerId id of the outer div for this question.\n     * @param {boolean} readOnly whether the question is being displayed read-only.\n     * @constructor\n     */\n    function DragDropToTextQuestion(containerId, readOnly) {\n        this.containerId = containerId;\n        if (readOnly) {\n            this.getRoot().addClass('qtype_ddwtos-readonly');\n        }\n        this.resizeAllDragsAndDrops();\n        this.cloneDrags();\n        this.positionDrags();\n    }\n\n    /**\n     * In each group, resize all the items to be the same size.\n     */\n    DragDropToTextQuestion.prototype.resizeAllDragsAndDrops = function() {\n        var thisQ = this;\n        this.getRoot().find('.answercontainer > div').each(function(i, node) {\n            thisQ.resizeAllDragsAndDropsInGroup(\n                thisQ.getClassnameNumericSuffix($(node), 'draggrouphomes'));\n        });\n    };\n\n    /**\n     * In a given group, set all the drags and drops to be the same size.\n     *\n     * @param {int} group the group number.\n     */\n    DragDropToTextQuestion.prototype.resizeAllDragsAndDropsInGroup = function(group) {\n        var thisQ = this,\n            dragHomes = this.getRoot().find('.draggrouphomes' + group + ' span.draghome'),\n            maxWidth = 0,\n            maxHeight = 0;\n\n        // Find the maximum size of any drag in this groups.\n        dragHomes.each(function(i, drag) {\n            maxWidth = Math.max(maxWidth, Math.ceil(drag.offsetWidth));\n            maxHeight = Math.max(maxHeight, Math.ceil(0 + drag.offsetHeight));\n        });\n\n        // The size we will want to set is a bit bigger than this.\n        maxWidth += 8;\n        maxHeight += 2;\n\n        // Set each drag home to that size.\n        dragHomes.each(function(i, drag) {\n            thisQ.setElementSize(drag, maxWidth, maxHeight);\n        });\n\n        // Set each drop to that size.\n        this.getRoot().find('span.drop.group' + group).each(function(i, drop) {\n            thisQ.setElementSize(drop, maxWidth, maxHeight);\n        });\n    };\n\n    /**\n     * Set a given DOM element to be a particular size.\n     *\n     * @param {HTMLElement} element\n     * @param {int} width\n     * @param {int} height\n     */\n    DragDropToTextQuestion.prototype.setElementSize = function(element, width, height) {\n        $(element).width(width).height(height).css('lineHeight', height + 'px');\n    };\n\n    /**\n     * Invisible 'drag homes' are output by the renderer. These have the same properties\n     * as the drag items but are invisible. We clone these invisible elements to make the\n     * actual drag items.\n     */\n    DragDropToTextQuestion.prototype.cloneDrags = function() {\n        var thisQ = this;\n        this.getRoot().find('span.draghome').each(function(index, draghome) {\n            thisQ.cloneDragsForOneChoice($(draghome));\n        });\n    };\n\n    /**\n     * Clone drag item for one choice.\n     *\n     * @param {jQuery} dragHome the drag home to clone.\n     */\n    DragDropToTextQuestion.prototype.cloneDragsForOneChoice = function(dragHome) {\n        if (dragHome.hasClass('infinite')) {\n            var noOfDrags = this.noOfDropsInGroup(this.getGroup(dragHome));\n            for (var i = 0; i < noOfDrags; i++) {\n                this.cloneDrag(dragHome);\n            }\n        } else {\n            this.cloneDrag(dragHome);\n        }\n    };\n\n    /**\n     * Clone drag item.\n     *\n     * @param {jQuery} dragHome\n     */\n    DragDropToTextQuestion.prototype.cloneDrag = function(dragHome) {\n        var drag = dragHome.clone();\n        drag.removeClass('draghome')\n            .addClass('drag unplaced moodle-has-zindex')\n            .offset(dragHome.offset());\n        this.getRoot().find('div.drags').append(drag);\n    };\n\n    /**\n     * Update the position of drags.\n     */\n    DragDropToTextQuestion.prototype.positionDrags = function() {\n        var thisQ = this,\n            root = this.getRoot();\n\n        // First move all items back home.\n        root.find('span.drag').each(function(i, dragNode) {\n            var drag = $(dragNode),\n                currentPlace = thisQ.getClassnameNumericSuffix(drag, 'inplace');\n            drag.addClass('unplaced')\n                .removeClass('placed')\n                .offset(thisQ.getDragHome(thisQ.getGroup(drag), thisQ.getChoice(drag)).offset());\n            if (currentPlace !== null) {\n                drag.removeClass('inplace' + currentPlace);\n            }\n        });\n\n        // Then place the once that should be placed.\n        root.find('input.placeinput').each(function(i, inputNode) {\n            var input = $(inputNode),\n                choice = input.val(),\n                place = thisQ.getPlace(input);\n\n            // Record the last known position of the drop.\n            var drop = root.find('.drop.place' + place),\n                dropPosition = drop.offset();\n            drop.data('prev-top', dropPosition.top).data('prev-left', dropPosition.left);\n\n            if (choice === '0') {\n                // No item in this place.\n                return;\n            }\n\n            thisQ.getUnplacedChoice(thisQ.getGroup(input), choice)\n                .removeClass('unplaced')\n                .addClass('placed inplace' + place)\n                .offset(root.find('.drop.place' + place).offset());\n        });\n    };\n\n    /**\n     * Check to see if a drop target has moved. If so, refresh the layout.\n     */\n    DragDropToTextQuestion.prototype.fixLayoutIfDropsMoved = function() {\n        var thisQ = this,\n            root = this.getRoot(),\n            didMove = false;\n\n        root.find('input.placeinput').each(function(i, inputNode) {\n            var place = thisQ.getPlace($(inputNode)),\n                drop = root.find('.drop.place' + place),\n                dropPosition = drop.offset(),\n                prevTop = drop.data('prev-top'),\n                prevLeft = drop.data('prev-left');\n            if (prevLeft === undefined || prevTop === undefined) {\n                // Question is not set up yet. Nothing to do.\n                return;\n            }\n            if (prevTop === dropPosition.top && prevLeft === dropPosition.left) {\n                // Things have not moved.\n                return;\n            }\n            didMove = true;\n        });\n\n        if (didMove) {\n            // We need to reposition things.\n            this.positionDrags();\n        }\n    };\n\n    /**\n     * Handles the start of dragging an item.\n     *\n     * @param {Event} e the touch start or mouse down event.\n     */\n    DragDropToTextQuestion.prototype.handleDragStart = function(e) {\n        var thisQ = this,\n            drag = $(e.target).closest('.drag');\n\n        var info = dragDrop.prepare(e);\n        if (!info.start) {\n            return;\n        }\n\n        var currentPlace = this.getClassnameNumericSuffix(drag, 'inplace');\n        if (currentPlace !== null) {\n            this.setInputValue(currentPlace, 0);\n            drag.removeClass('inplace' + currentPlace);\n        }\n\n        drag.addClass('beingdragged');\n        dragDrop.start(e, drag, function(x, y, drag) {\n            thisQ.dragMove(x, y, drag);\n        }, function(x, y, drag) {\n            thisQ.dragEnd(x, y, drag);\n        });\n    };\n\n    /**\n     * Called whenever the currently dragged items moves.\n     *\n     * @param {Number} pageX the x position.\n     * @param {Number} pageY the y position.\n     * @param {jQuery} drag the item being moved.\n     */\n    DragDropToTextQuestion.prototype.dragMove = function(pageX, pageY, drag) {\n        var thisQ = this;\n        this.getRoot().find('span.drop.group' + this.getGroup(drag)).each(function(i, dropNode) {\n            var drop = $(dropNode);\n            if (thisQ.isPointInDrop(pageX, pageY, drop)) {\n                drop.addClass('valid-drag-over-drop');\n            } else {\n                drop.removeClass('valid-drag-over-drop');\n            }\n        });\n    };\n\n    /**\n     * Called when user drops a drag item.\n     *\n     * @param {Number} pageX the x position.\n     * @param {Number} pageY the y position.\n     * @param {jQuery} drag the item being moved.\n     */\n    DragDropToTextQuestion.prototype.dragEnd = function(pageX, pageY, drag) {\n        var thisQ = this,\n            root = this.getRoot(),\n            placed = false;\n        root.find('span.drop.group' + this.getGroup(drag)).each(function(i, dropNode) {\n            var drop = $(dropNode);\n            if (!thisQ.isPointInDrop(pageX, pageY, drop)) {\n                // Not this drop.\n                return true;\n            }\n\n            // Now put this drag into the drop.\n            drop.removeClass('valid-drag-over-drop');\n            thisQ.sendDragToDrop(drag, drop);\n            placed = true;\n            return false; // Stop the each() here.\n        });\n\n        if (!placed) {\n            this.sendDragHome(drag);\n        }\n    };\n\n    /**\n     * Animate a drag item into a given place (or back home).\n     *\n     * @param {jQuery|null} drag the item to place. If null, clear the place.\n     * @param {jQuery} drop the place to put it.\n     */\n    DragDropToTextQuestion.prototype.sendDragToDrop = function(drag, drop) {\n        // Is there already a drag in this drop? if so, evict it.\n        var oldDrag = this.getCurrentDragInPlace(this.getPlace(drop));\n        if (oldDrag.length !== 0) {\n            this.sendDragHome(oldDrag);\n        }\n\n        if (drag.length === 0) {\n            this.setInputValue(this.getPlace(drop), 0);\n        } else {\n            this.setInputValue(this.getPlace(drop), this.getChoice(drag));\n            drag.removeClass('unplaced')\n                .addClass('placed inplace' + this.getPlace(drop));\n            this.animateTo(drag, drop);\n        }\n    };\n\n    /**\n     * Animate a drag back to its home.\n     *\n     * @param {jQuery} drag the item being moved.\n     */\n    DragDropToTextQuestion.prototype.sendDragHome = function(drag) {\n        drag.removeClass('placed').addClass('unplaced');\n        var currentPlace = this.getClassnameNumericSuffix(drag, 'inplace');\n        if (currentPlace !== null) {\n            drag.removeClass('inplace' + currentPlace);\n        }\n\n        this.animateTo(drag, this.getDragHome(this.getGroup(drag), this.getChoice(drag)));\n    };\n\n    /**\n     * Handles keyboard events on drops.\n     *\n     * Drops are focusable. Once focused, right/down/space switches to the next choice, and\n     * left/up switches to the previous. Escape clear.\n     *\n     * @param {KeyboardEvent} e\n     */\n    DragDropToTextQuestion.prototype.handleKeyPress = function(e) {\n        var drop = $(e.target).closest('.drop'),\n            currentDrag = this.getCurrentDragInPlace(this.getPlace(drop)),\n            nextDrag = $();\n\n        switch (e.keyCode) {\n            case keys.space:\n            case keys.arrowRight:\n            case keys.arrowDown:\n                nextDrag = this.getNextDrag(this.getGroup(drop), currentDrag);\n                break;\n\n            case keys.arrowLeft:\n            case keys.arrowUp:\n                nextDrag = this.getPreviousDrag(this.getGroup(drop), currentDrag);\n                break;\n\n            case keys.escape:\n                break;\n\n            default:\n                return; // To avoid the preventDefault below.\n        }\n\n        e.preventDefault();\n        this.sendDragToDrop(nextDrag, drop);\n    };\n\n    /**\n     * Choose the next drag in a group.\n     *\n     * @param {int} group which group.\n     * @param {jQuery} drag current choice (empty jQuery if there isn't one).\n     * @return {jQuery} the next drag in that group, or null if there wasn't one.\n     */\n    DragDropToTextQuestion.prototype.getNextDrag = function(group, drag) {\n        var choice,\n            numChoices = this.noOfChoicesInGroup(group);\n\n        if (drag.length === 0) {\n            choice = 1; // Was empty, so we want to select the first choice.\n        } else {\n            choice = this.getChoice(drag) + 1;\n        }\n\n        var next = this.getUnplacedChoice(group, choice);\n        while (next.length === 0 && choice < numChoices) {\n            choice++;\n            next = this.getUnplacedChoice(group, choice);\n        }\n\n        return next;\n    };\n\n    /**\n     * Choose the previous drag in a group.\n     *\n     * @param {int} group which group.\n     * @param {jQuery} drag current choice (empty jQuery if there isn't one).\n     * @return {jQuery} the next drag in that group, or null if there wasn't one.\n     */\n    DragDropToTextQuestion.prototype.getPreviousDrag = function(group, drag) {\n        var choice;\n\n        if (drag.length === 0) {\n            choice = this.noOfChoicesInGroup(group);\n        } else {\n            choice = this.getChoice(drag) - 1;\n        }\n\n        var previous = this.getUnplacedChoice(group, choice);\n        while (previous.length === 0 && choice > 1) {\n            choice--;\n            previous = this.getUnplacedChoice(group, choice);\n        }\n\n        // Does this choice exist?\n        return previous;\n    };\n\n    /**\n     * Animate an object to the given destination.\n     *\n     * @param {jQuery} drag the element to be animated.\n     * @param {jQuery} target element marking the place to move it to.\n     */\n    DragDropToTextQuestion.prototype.animateTo = function(drag, target) {\n        var currentPos = drag.offset(),\n            targetPos = target.offset();\n        drag.addClass('beingdragged');\n\n        // Animate works in terms of CSS position, whereas locating an object\n        // on the page works best with jQuery offset() function. So, to get\n        // the right target position, we work out the required change in\n        // offset() and then add that to the current CSS position.\n        drag.animate(\n            {\n                left: parseInt(drag.css('left')) + targetPos.left - currentPos.left,\n                top: parseInt(drag.css('top')) + targetPos.top - currentPos.top\n            },\n            {\n                duration: 'fast',\n                done: function() {\n                    drag.removeClass('beingdragged');\n                    // It seems that the animation sometimes leaves the drag\n                    // one pixel out of position. Put it in exactly the right place.\n                    drag.offset(targetPos);\n                }\n            }\n        );\n    };\n\n    /**\n     * Detect if a point is inside a given DOM node.\n     *\n     * @param {Number} pageX the x position.\n     * @param {Number} pageY the y position.\n     * @param {jQuery} drop the node to check (typically a drop).\n     * @return {boolean} whether the point is inside the node.\n     */\n    DragDropToTextQuestion.prototype.isPointInDrop = function(pageX, pageY, drop) {\n        var position = drop.offset();\n        return pageX >= position.left && pageX < position.left + drop.width()\n                && pageY >= position.top && pageY < position.top + drop.height();\n    };\n\n    /**\n     * Set the value of the hidden input for a place, to record what is currently there.\n     *\n     * @param {int} place which place to set the input value for.\n     * @param {int} choice the value to set.\n     */\n    DragDropToTextQuestion.prototype.setInputValue = function(place, choice) {\n        this.getRoot().find('input.placeinput.place' + place).val(choice);\n    };\n\n    /**\n     * Get the outer div for this question.\n     *\n     * @returns {jQuery} containing that div.\n     */\n    DragDropToTextQuestion.prototype.getRoot = function() {\n        return $(document.getElementById(this.containerId));\n    };\n\n    /**\n     * Get drag home for a given choice.\n     *\n     * @param {int} group the group.\n     * @param {int} choice the choice number.\n     * @returns {jQuery} containing that div.\n     */\n    DragDropToTextQuestion.prototype.getDragHome = function(group, choice) {\n        return this.getRoot().find('.draghome.group' + group + '.choice' + choice);\n    };\n\n    /**\n     * Get an unplaced choice for a particular group.\n     *\n     * @param {int} group the group.\n     * @param {int} choice the choice number.\n     * @returns {jQuery} jQuery wrapping the unplaced choice. If there isn't one, the jQuery will be empty.\n     */\n    DragDropToTextQuestion.prototype.getUnplacedChoice = function(group, choice) {\n        return this.getRoot().find('.drag.group' + group + '.choice' + choice + '.unplaced').slice(0, 1);\n    };\n\n    /**\n     * Get the drag that is currently in a given place.\n     *\n     * @param {int} place the place number.\n     * @return {jQuery} the current drag (or an empty jQuery if none).\n     */\n    DragDropToTextQuestion.prototype.getCurrentDragInPlace = function(place) {\n        return this.getRoot().find('span.drag.inplace' + place);\n    };\n\n    /**\n     * Return the number of blanks in a given group.\n     *\n     * @param {int} group the group number.\n     * @returns {int} the number of drops.\n     */\n    DragDropToTextQuestion.prototype.noOfDropsInGroup = function(group) {\n        return this.getRoot().find('.drop.group' + group).length;\n    };\n\n    /**\n     * Return the number of choices in a given group.\n     *\n     * @param {int} group the group number.\n     * @returns {int} the number of choices.\n     */\n    DragDropToTextQuestion.prototype.noOfChoicesInGroup = function(group) {\n        return this.getRoot().find('.draghome.group' + group).length;\n    };\n\n    /**\n     * Return the number at the end of the CSS class name with the given prefix.\n     *\n     * @param {jQuery} node\n     * @param {String} prefix name prefix\n     * @returns {Number|null} the suffix if found, else null.\n     */\n    DragDropToTextQuestion.prototype.getClassnameNumericSuffix = function(node, prefix) {\n        var classes = node.attr('class');\n        if (classes !== '') {\n            var classesArr = classes.split(' ');\n            for (var index = 0; index < classesArr.length; index++) {\n                var patt1 = new RegExp('^' + prefix + '([0-9])+$');\n                if (patt1.test(classesArr[index])) {\n                    var patt2 = new RegExp('([0-9])+$');\n                    var match = patt2.exec(classesArr[index]);\n                    return Number(match[0]);\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Get the choice number of a drag.\n     *\n     * @param {jQuery} drag the drag.\n     * @returns {Number} the choice number.\n     */\n    DragDropToTextQuestion.prototype.getChoice = function(drag) {\n        return this.getClassnameNumericSuffix(drag, 'choice');\n    };\n\n    /**\n     * Given a DOM node that is significant to this question\n     * (drag, drop, ...) get the group it belongs to.\n     *\n     * @param {jQuery} node a DOM node.\n     * @returns {Number} the group it belongs to.\n     */\n    DragDropToTextQuestion.prototype.getGroup = function(node) {\n        return this.getClassnameNumericSuffix(node, 'group');\n    };\n\n    /**\n     * Get the place number of a drop, or its corresponding hidden input.\n     *\n     * @param {jQuery} node the DOM node.\n     * @returns {Number} the place number.\n     */\n    DragDropToTextQuestion.prototype.getPlace = function(node) {\n        return this.getClassnameNumericSuffix(node, 'place');\n    };\n\n    /**\n     * Singleton that tracks all the DragDropToTextQuestions on this page, and deals\n     * with event dispatching.\n     *\n     * @type {Object}\n     */\n    var questionManager = {\n        /**\n         * {boolean} used to ensure the event handlers are only initialised once per page.\n         */\n        eventHandlersInitialised: false,\n\n        /**\n         * {DragDropToTextQuestion[]} all the questions on this page, indexed by containerId (id on the .que div).\n         */\n        questions: {},\n\n        /**\n         * Initialise questions.\n         *\n         * @param {String} containerId id of the outer div for this question.\n         * @param {boolean} readOnly whether the question is being displayed read-only.\n         */\n        init: function(containerId, readOnly) {\n            questionManager.questions[containerId] = new DragDropToTextQuestion(containerId, readOnly);\n            if (!questionManager.eventHandlersInitialised) {\n                questionManager.setupEventHandlers();\n                questionManager.eventHandlersInitialised = true;\n            }\n        },\n\n        /**\n         * Set up the event handlers that make this question type work. (Done once per page.)\n         */\n        setupEventHandlers: function() {\n            $('body').on('mousedown touchstart',\n                    '.que.ddwtos:not(.qtype_ddwtos-readonly) span.drag',\n                    questionManager.handleDragStart)\n                .on('keydown',\n                    '.que.ddwtos:not(.qtype_ddwtos-readonly) span.drop',\n                    questionManager.handleKeyPress);\n\n            $(window).on('resize', questionManager.handleWindowResize);\n            setTimeout(questionManager.fixLayoutIfThingsMoved, 100);\n        },\n\n        /**\n         * Handle mouse down / touch start on drags.\n         * @param {Event} e the DOM event.\n         */\n        handleDragStart: function(e) {\n            e.preventDefault();\n            var question = questionManager.getQuestionForEvent(e);\n            if (question) {\n                question.handleDragStart(e);\n            }\n        },\n\n        /**\n         * Handle key down / press on drops.\n         * @param {KeyboardEvent} e\n         */\n        handleKeyPress: function(e) {\n            var question = questionManager.getQuestionForEvent(e);\n            if (question) {\n                question.handleKeyPress(e);\n            }\n        },\n\n        /**\n         * Handle when the window is resized.\n         */\n        handleWindowResize: function() {\n            for (var containerId in questionManager.questions) {\n                if (questionManager.questions.hasOwnProperty(containerId)) {\n                    questionManager.questions[containerId].positionDrags();\n                }\n            }\n        },\n\n        /**\n         * Sometimes, despite our best efforts, things change in a way that cannot\n         * be specifically caught (e.g. dock expanding or collapsing in Boost).\n         * Therefore, we need to periodically check everything is in the right position.\n         */\n        fixLayoutIfThingsMoved: function() {\n            for (var containerId in questionManager.questions) {\n                if (questionManager.questions.hasOwnProperty(containerId)) {\n                    questionManager.questions[containerId].fixLayoutIfDropsMoved();\n                }\n            }\n\n            // We use setTimeout after finishing work, rather than setInterval,\n            // in case positioning things is slow. We want 100 ms gap\n            // between executions, not what setInterval does.\n            setTimeout(questionManager.fixLayoutIfThingsMoved, 100);\n        },\n\n        /**\n         * Given an event, work out which question it affects.\n         *\n         * @param {Event} e the event.\n         * @returns {DragDropToTextQuestion|undefined} The question, or undefined.\n         */\n        getQuestionForEvent: function(e) {\n            var containerId = $(e.currentTarget).closest('.que.ddwtos').attr('id');\n            return questionManager.questions[containerId];\n        }\n    };\n\n    /**\n     * @alias module:qtype_ddwtos/ddwtos\n     */\n    return {\n        /**\n         * Initialise one drag-drop into text question.\n         *\n         * @param {String} containerId id of the outer div for this question.\n         * @param {boolean} readOnly whether the question is being displayed read-only.\n         */\n        init: questionManager.init\n    };\n});\n"],"file":"ddwtos.min.js"}