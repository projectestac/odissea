{"version":3,"sources":["../src/shapes.js"],"names":["define","Point","x","y","prototype","toString","move","dx","dy","offset","offsetX","offsetY","parse","coordinates","bits","split","length","Error","Math","round","Shape","label","centre","getType","getCoordinates","edit","normalizeShape","makeSvg","updateSvg","makeSimilarCircle","makeSimilarRectangle","makeSimilarPolygon","getHandlePositions","Circle","radius","call","abs","svg","svgEl","createSvgShapeGroup","childNodes","setAttribute","textContent","match","maxX","maxY","handleIndex","limit","min","Rectangle","Polygon","moveHandle","editHandles","width","height","size","points","slice","i","replace","push","bbXMin","bbXMax","bbYMin","bbYMax","max","addNewPointAfter","pointIndex","splice","p","minX","minY","NullShape","createSvgElement","tagName","ownerDocument","createElementNS","appendChild","make","shapeType","getSimilar","shape"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint max-depth: [\"error\", 8] */\n\n/**\n * Library of classes for handling simple shapes.\n *\n * These classes can represent shapes, let you alter them, can go to and from a string\n * representation, and can give you an SVG representation.\n *\n * @package    qtype_ddmarker\n * @subpackage shapes\n * @copyright  2018 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(function() {\n\n    \"use strict\";\n\n    /**\n     * A point, with x and y coordinates.\n     *\n     * @param {int} x centre X.\n     * @param {int} y centre Y.\n     * @constructor\n     */\n    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Standard toString method.\n     * @returns {string} \"x;y\";\n     */\n    Point.prototype.toString = function() {\n        return this.x + ',' + this.y;\n    };\n\n    /**\n     * Move a point\n     * @param {int} dx x offset\n     * @param {int} dy y offset\n     */\n    Point.prototype.move = function(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    };\n\n    /**\n     * Return a new point that is a certain position relative to this one.\n     *\n     * @param {(int|Point)} offsetX if a point, offset by this points coordinates, else and int x offset.\n     * @param {int} [offsetY] used if offsetX is an int, the corresponding y offset.\n     * @return {Point} the new point.\n     */\n    Point.prototype.offset = function(offsetX, offsetY) {\n        if (offsetX instanceof Point) {\n            offsetY = offsetX.y;\n            offsetX = offsetX.x;\n        }\n        return new Point(this.x + offsetX, this.y + offsetY);\n    };\n\n    /**\n     * Make a point from the string representation.\n     *\n     * @param {String} coordinates \"x,y\".\n     * @return {Point} the point. Throws an exception if input is not valid.\n     */\n    Point.parse = function(coordinates) {\n        var bits = coordinates.split(',');\n        if (bits.length !== 2) {\n            throw new Error(coordinates + ' is not a valid point');\n        }\n        return new Point(Math.round(bits[0]), Math.round(bits[1]));\n    };\n\n\n    /**\n     * Shape constructor. Abstract class to represent the different types of drop zone shapes.\n     *\n     * @param {String} [label] name of this area.\n     * @param {int} [x] centre X.\n     * @param {int} [y] centre Y.\n     * @constructor\n     */\n    function Shape(label, x, y) {\n        this.label = label;\n        this.centre = new Point(x || 0, y || 0);\n    }\n\n    /**\n     * Get the type of shape.\n     *\n     * @return {String} 'circle', 'rectangle' or 'polygon';\n     */\n    Shape.prototype.getType = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Get the string representation of this shape.\n     *\n     * @return {String} coordinates as they need to be typed into the form.\n     */\n    Shape.prototype.getCoordinates = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Update the shape from the string representation.\n     *\n     * @param {String} coordinates in the form returned by getCoordinates.\n     * @return {boolean} true if the string could be parsed and the shape updated, else false.\n     */\n    Shape.prototype.parse = function(coordinates) {\n        void (coordinates);\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Move the entire shape by this offset.\n     *\n     * @param {int} dx x offset.\n     * @param {int} dy y offset.\n     * @param {int} maxX ensure that after editing, the shape lies between 0 and maxX on the x-axis.\n     * @param {int} maxY ensure that after editing, the shape lies between 0 and maxX on the y-axis.\n     */\n    Shape.prototype.move = function(dx, dy, maxX, maxY) {\n        void (maxY);\n    };\n\n    /**\n     * Move one of the edit handles by this offset.\n     *\n     * @param {int} handleIndex which handle was moved.\n     * @param {int} dx x offset.\n     * @param {int} dy y offset.\n     * @param {int} maxX ensure that after editing, the shape lies between 0 and maxX on the x-axis.\n     * @param {int} maxY ensure that after editing, the shape lies between 0 and maxX on the y-axis.\n     */\n    Shape.prototype.edit = function(handleIndex, dx, dy, maxX, maxY) {\n        void (maxY);\n    };\n\n    /**\n     * Update the properties of this shape after a sequence of edits.\n     *\n     * For example make sure the circle radius is positive, of the polygon centre is centred.\n     */\n    Shape.prototype.normalizeShape = function() {\n        void (1); // To make CiBoT happy.\n    };\n\n    /**\n     * Get the string representation of this shape.\n     *\n     * @param {SVGElement} svg the SVG graphic to add this shape to.\n     * @return {SVGElement} SVG representation of this shape.\n     */\n    Shape.prototype.makeSvg = function(svg) {\n        void (svg);\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Update the SVG representation of this shape.\n     *\n     * @param {SVGElement} svgEl the SVG representation of this shape.\n     */\n    Shape.prototype.updateSvg = function(svgEl) {\n        void (svgEl);\n    };\n\n    /**\n     * Make a circle similar to this shape.\n     *\n     * @return {Circle} a circle that is about the same size and position as this shape.\n     */\n    Shape.prototype.makeSimilarCircle = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Make a rectangle similar to this shape.\n     *\n     * @return {Rectangle} a rectangle that is about the same size and position as this shape.\n     */\n    Shape.prototype.makeSimilarRectangle = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Make a polygon similar to this shape.\n     *\n     * @return {Polygon} a polygon that is about the same size and position as this shape.\n     */\n    Shape.prototype.makeSimilarPolygon = function() {\n        throw new Error('Not implemented.');\n    };\n\n    /**\n     * Get the handles that should be offered to edit this shape, or null if not appropriate.\n     *\n     * @return {[Object]} with properties moveHandle {Point} and editHandles {Point[]}\n     */\n    Shape.prototype.getHandlePositions = function() {\n        return null;\n    };\n\n\n    /**\n     * A shape that is a circle.\n     *\n     * @param {String} label name of this area.\n     * @param {int} [x] centre X.\n     * @param {int} [y] centre Y.\n     * @param {int} [radius] radius.\n     * @constructor\n     */\n    function Circle(label, x, y, radius) {\n        x = x || 15;\n        y = y || 15;\n        Shape.call(this, label, x, y);\n        this.radius = radius || 15;\n    }\n    Circle.prototype = new Shape();\n\n    Circle.prototype.getType = function() {\n        return 'circle';\n    };\n\n    Circle.prototype.getCoordinates = function() {\n        return this.centre + ';' + Math.abs(this.radius);\n    };\n\n    Circle.prototype.makeSvg = function(svg) {\n        var svgEl = createSvgShapeGroup(svg, 'circle');\n        this.updateSvg(svgEl);\n        return svgEl;\n    };\n\n    Circle.prototype.updateSvg = function(svgEl) {\n        svgEl.childNodes[0].setAttribute('cx', this.centre.x);\n        svgEl.childNodes[0].setAttribute('cy', this.centre.y);\n        svgEl.childNodes[0].setAttribute('r', Math.abs(this.radius));\n        svgEl.childNodes[1].setAttribute('x', this.centre.x);\n        svgEl.childNodes[1].setAttribute('y', this.centre.y + 15);\n        svgEl.childNodes[1].textContent = this.label;\n    };\n\n    Circle.prototype.parse = function(coordinates) {\n        if (!coordinates.match(/^\\d+,\\d+;\\d+$/)) {\n            return false;\n        }\n\n        var bits = coordinates.split(';');\n        this.centre = Point.parse(bits[0]);\n        this.radius = Math.round(bits[1]);\n        return true;\n    };\n\n    Circle.prototype.move = function(dx, dy, maxX, maxY) {\n        this.centre.move(dx, dy);\n        if (this.centre.x < this.radius) {\n            this.centre.x = this.radius;\n        }\n        if (this.centre.x > maxX - this.radius) {\n            this.centre.x = maxX - this.radius;\n        }\n        if (this.centre.y < this.radius) {\n            this.centre.y = this.radius;\n        }\n        if (this.centre.y > maxY - this.radius) {\n            this.centre.y = maxY - this.radius;\n        }\n    };\n\n    Circle.prototype.edit = function(handleIndex, dx, dy, maxX, maxY) {\n        this.radius += dx;\n        var limit = Math.min(this.centre.x, this.centre.y, maxX - this.centre.x, maxY - this.centre.y);\n        if (this.radius > limit) {\n            this.radius = limit;\n        }\n        if (this.radius < -limit) {\n            this.radius = -limit;\n        }\n    };\n\n    /**\n     * Update the properties of this shape after a sequence of edits.\n     *\n     * For example make sure the circle radius is positive, of the polygon centre is centred.\n     */\n    Circle.prototype.normalizeShape = function() {\n        this.radius = Math.abs(this.radius);\n    };\n\n    Circle.prototype.makeSimilarRectangle = function() {\n        return new Rectangle(this.label,\n                this.centre.x - this.radius, this.centre.y - this.radius,\n                this.radius * 2, this.radius * 2);\n    };\n\n    Circle.prototype.makeSimilarPolygon = function() {\n        // We make a similar square, so if you go to and from Rectangle afterwards, it is loss-less.\n        return new Polygon(this.label, [\n                this.centre.offset(-this.radius, -this.radius), this.centre.offset(-this.radius, this.radius),\n                this.centre.offset(this.radius, this.radius), this.centre.offset(this.radius, -this.radius)]);\n    };\n\n    Circle.prototype.getHandlePositions = function() {\n        return {\n            moveHandle: this.centre,\n            editHandles: [this.centre.offset(this.radius, 0)]\n        };\n    };\n\n\n    /**\n     * A shape that is a rectangle.\n     *\n     * @param {String} label name of this area.\n     * @param {int} [x] top left X.\n     * @param {int} [y] top left Y.\n     * @param {int} [width] width.\n     * @param {int} [height] height.\n     * @constructor\n     */\n    function Rectangle(label, x, y, width, height) {\n        Shape.call(this, label, x, y);\n        this.width = width || 30;\n        this.height = height || 30;\n    }\n    Rectangle.prototype = new Shape();\n\n    Rectangle.prototype.getType = function() {\n        return 'rectangle';\n    };\n\n    Rectangle.prototype.getCoordinates = function() {\n        return this.centre + ';' + this.width + ',' + this.height;\n    };\n\n    Rectangle.prototype.makeSvg = function(svg) {\n        var svgEl = createSvgShapeGroup(svg, 'rect');\n        this.updateSvg(svgEl);\n        return svgEl;\n    };\n\n    Rectangle.prototype.updateSvg = function(svgEl) {\n        if (this.width >= 0) {\n            svgEl.childNodes[0].setAttribute('x', this.centre.x);\n            svgEl.childNodes[0].setAttribute('width', this.width);\n        } else {\n            svgEl.childNodes[0].setAttribute('x', this.centre.x + this.width);\n            svgEl.childNodes[0].setAttribute('width', -this.width);\n        }\n        if (this.height >= 0) {\n            svgEl.childNodes[0].setAttribute('y', this.centre.y);\n            svgEl.childNodes[0].setAttribute('height', this.height);\n        } else {\n            svgEl.childNodes[0].setAttribute('y', this.centre.y + this.height);\n            svgEl.childNodes[0].setAttribute('height', -this.height);\n        }\n\n        svgEl.childNodes[1].setAttribute('x', this.centre.x + this.width / 2);\n        svgEl.childNodes[1].setAttribute('y', this.centre.y + this.height / 2 + 15);\n        svgEl.childNodes[1].textContent = this.label;\n    };\n\n    Rectangle.prototype.parse = function(coordinates) {\n        if (!coordinates.match(/^\\d+,\\d+;\\d+,\\d+$/)) {\n            return false;\n        }\n\n        var bits = coordinates.split(';');\n        this.centre = Point.parse(bits[0]);\n        var size = Point.parse(bits[1]);\n        this.width = size.x;\n        this.height = size.y;\n        return true;\n    };\n\n    Rectangle.prototype.move = function(dx, dy, maxX, maxY) {\n        this.centre.move(dx, dy);\n        if (this.centre.x < 0) {\n            this.centre.x = 0;\n        }\n        if (this.centre.x > maxX - this.width) {\n            this.centre.x = maxX - this.width;\n        }\n        if (this.centre.y < 0) {\n            this.centre.y = 0;\n        }\n        if (this.centre.y > maxY - this.height) {\n            this.centre.y = maxY - this.height;\n        }\n    };\n\n    Rectangle.prototype.edit = function(handleIndex, dx, dy, maxX, maxY) {\n        this.width += dx;\n        this.height += dy;\n        if (this.width < -this.centre.x) {\n            this.width = -this.centre.x;\n        }\n        if (this.width > maxX - this.centre.x) {\n            this.width = maxX - this.centre.x;\n        }\n        if (this.height < -this.centre.y) {\n            this.height = -this.centre.y;\n        }\n        if (this.height > maxY - this.centre.y) {\n            this.height = maxY - this.centre.y;\n        }\n    };\n\n    /**\n     * Update the properties of this shape after a sequence of edits.\n     *\n     * For example make sure the circle radius is positive, of the polygon centre is centred.\n     */\n    Rectangle.prototype.normalizeShape = function() {\n        if (this.width < 0) {\n            this.centre.x += this.width;\n            this.width = -this.width;\n        }\n        if (this.height < 0) {\n            this.centre.y += this.height;\n            this.height = -this.height;\n        }\n    };\n\n    Rectangle.prototype.makeSimilarCircle = function() {\n        return new Circle(this.label,\n                Math.round(this.centre.x + this.width / 2),\n                Math.round(this.centre.y + this.height / 2),\n                Math.round((this.width + this.height) / 4));\n    };\n\n    Rectangle.prototype.makeSimilarPolygon = function() {\n        return new Polygon(this.label, [\n            this.centre, this.centre.offset(0, this.height),\n            this.centre.offset(this.width, this.height), this.centre.offset(this.width, 0)]);\n    };\n\n    Rectangle.prototype.getHandlePositions = function() {\n        return {\n            moveHandle: this.centre.offset(this.width / 2, this.height / 2),\n            editHandles: [this.centre.offset(this.width, this.height)]\n        };\n    };\n\n\n    /**\n     * A shape that is a polygon.\n     *\n     * @param {String} label name of this area.\n     * @param {Point[]} [points] position of the vertices relative to (centreX, centreY).\n     *      each object in the array should have two\n     * @constructor\n     */\n    function Polygon(label, points) {\n        Shape.call(this, label, 0, 0);\n        this.points = points ? points.slice() : [new Point(10, 10), new Point(40, 10), new Point(10, 40)];\n        this.normalizeShape();\n    }\n    Polygon.prototype = new Shape();\n\n    Polygon.prototype.getType = function() {\n        return 'polygon';\n    };\n\n    Polygon.prototype.getCoordinates = function() {\n        var coordinates = '';\n        for (var i = 0; i < this.points.length; i++) {\n            coordinates += this.centre.offset(this.points[i]) + ';';\n        }\n        return coordinates.slice(0, coordinates.length - 1); // Strip off the last ';'.\n    };\n\n    Polygon.prototype.makeSvg = function(svg) {\n        var svgEl = createSvgShapeGroup(svg, 'polygon');\n        this.updateSvg(svgEl);\n        return svgEl;\n    };\n\n    Polygon.prototype.updateSvg = function(svgEl) {\n        svgEl.childNodes[0].setAttribute('points', this.getCoordinates().replace(/[,;]/g, ' '));\n        svgEl.childNodes[1].setAttribute('x', this.centre.x);\n        svgEl.childNodes[1].setAttribute('y', this.centre.y + 15);\n        svgEl.childNodes[1].textContent = this.label;\n    };\n\n    Polygon.prototype.parse = function(coordinates) {\n        if (!coordinates.match(/^\\d+,\\d+(?:;\\d+,\\d+)*$/)) {\n            return false;\n        }\n\n        var bits = coordinates.split(';');\n        var points = [];\n        for (var i = 0; i < bits.length; i++) {\n            points.push(Point.parse(bits[i]));\n        }\n\n        this.points = points;\n        this.centre.x = 0;\n        this.centre.y = 0;\n        this.normalizeShape();\n\n        return true;\n    };\n\n    Polygon.prototype.move = function(dx, dy, maxX, maxY) {\n        this.centre.move(dx, dy);\n        var bbXMin = maxX,\n            bbXMax = 0,\n            bbYMin = maxY,\n            bbYMax = 0;\n        // Computer centre.\n        for (var i = 0; i < this.points.length; i++) {\n            bbXMin = Math.min(bbXMin, this.points[i].x);\n            bbXMax = Math.max(bbXMax, this.points[i].x);\n            bbYMin = Math.min(bbYMin, this.points[i].y);\n            bbYMax = Math.max(bbYMax, this.points[i].y);\n        }\n        if (this.centre.x < -bbXMin) {\n            this.centre.x = -bbXMin;\n        }\n        if (this.centre.x > maxX - bbXMax) {\n            this.centre.x = maxX - bbXMax;\n        }\n        if (this.centre.y < -bbYMin) {\n            this.centre.y = -bbYMin;\n        }\n        if (this.centre.y > maxY - bbYMax) {\n            this.centre.y = maxY - bbYMax;\n        }\n    };\n\n    Polygon.prototype.edit = function(handleIndex, dx, dy, maxX, maxY) {\n        this.points[handleIndex].move(dx, dy);\n        if (this.points[handleIndex].x < -this.centre.x) {\n            this.points[handleIndex].x = -this.centre.x;\n        }\n        if (this.points[handleIndex].x > maxX - this.centre.x) {\n            this.points[handleIndex].x = maxX - this.centre.x;\n        }\n        if (this.points[handleIndex].y < -this.centre.y) {\n            this.points[handleIndex].y = -this.centre.y;\n        }\n        if (this.points[handleIndex].y > maxY - this.centre.y) {\n            this.points[handleIndex].y = maxY - this.centre.y;\n        }\n    };\n\n    /**\n     * Add a new point after the given point, with the same co-ordinates.\n     *\n     * This does not automatically normalise.\n     *\n     * @param {int} pointIndex the index of the vertex after which to insert this new one.\n     */\n    Polygon.prototype.addNewPointAfter = function(pointIndex) {\n        this.points.splice(pointIndex, 0,\n                new Point(this.points[pointIndex].x, this.points[pointIndex].y));\n    };\n\n    Polygon.prototype.normalizeShape = function() {\n        var i,\n            x = 0,\n            y = 0;\n\n        if (this.points.length === 0) {\n            return;\n        }\n\n        // Computer centre.\n        for (i = 0; i < this.points.length; i++) {\n            x += this.points[i].x;\n            y += this.points[i].y;\n        }\n        x = Math.round(x / this.points.length);\n        y = Math.round(y / this.points.length);\n\n        if (x === 0 && y === 0) {\n            return;\n        }\n\n        for (i = 0; i < this.points.length; i++) {\n            this.points[i].move(-x, -y);\n        }\n        this.centre.move(x, y);\n    };\n\n    Polygon.prototype.makeSimilarCircle = function() {\n        return this.makeSimilarRectangle().makeSimilarCircle();\n    };\n\n    Polygon.prototype.makeSimilarRectangle = function() {\n        var p,\n            minX = 0,\n            maxX = 0,\n            minY = 0,\n            maxY = 0;\n        for (var i = 0; i < this.points.length; i++) {\n            p = this.points[i];\n            minX = Math.min(minX, p.x);\n            maxX = Math.max(maxX, p.x);\n            minY = Math.min(minY, p.y);\n            maxY = Math.max(maxY, p.y);\n        }\n        return new Rectangle(this.label,\n                this.centre.x + minX, this.centre.y + minY,\n                Math.max(maxX - minX, 10), Math.max(maxY - minY, 10));\n    };\n\n    Polygon.prototype.getHandlePositions = function() {\n        var editHandles = [];\n        for (var i = 0; i < this.points.length; i++) {\n            editHandles.push(this.points[i].offset(this.centre.x, this.centre.y));\n        }\n\n        return {\n            moveHandle: this.centre,\n            editHandles: editHandles\n        };\n    };\n\n\n    /**\n     * Not a shape (null object pattern).\n     *\n     * @param {String} label name of this area.\n     * @constructor\n     */\n    function NullShape(label) {\n        Shape.call(this, label);\n    }\n    NullShape.prototype = new Shape();\n\n    NullShape.prototype.getType = function() {\n        return 'null';\n    };\n\n    NullShape.prototype.getCoordinates = function() {\n        return '';\n    };\n\n    NullShape.prototype.makeSvg = function(svg) {\n        void (svg);\n        return null;\n    };\n\n    NullShape.prototype.updateSvg = function(svgEl) {\n        void (svgEl);\n    };\n\n    NullShape.prototype.parse = function(coordinates) {\n        void (coordinates);\n        return false;\n    };\n\n    NullShape.prototype.makeSimilarCircle = function() {\n        return new Circle(this.label);\n    };\n\n    NullShape.prototype.makeSimilarRectangle = function() {\n        return new Rectangle(this.label);\n    };\n\n    NullShape.prototype.makeSimilarPolygon = function() {\n        return new Polygon(this.label);\n    };\n\n\n    /**\n     * Make a new SVG DOM element as a child of svg.\n     *\n     * @param {SVGElement} svg the parent node.\n     * @param {String} tagName the tag name.\n     * @return {SVGElement} the newly created node.\n     */\n    function createSvgElement(svg, tagName) {\n        var svgEl = svg.ownerDocument.createElementNS('http://www.w3.org/2000/svg', tagName);\n        svg.appendChild(svgEl);\n        return svgEl;\n    }\n\n    /**\n     * Make a group SVG DOM elements containing a shape of the given type as first child,\n     * and a text label as the second child.\n     *\n     * @param {SVGElement} svg the parent node.\n     * @param {String} tagName the tag name.\n     * @return {SVGElement} the newly created g element.\n     */\n    function createSvgShapeGroup(svg, tagName) {\n        var svgEl = createSvgElement(svg, 'g');\n        createSvgElement(svgEl, tagName).setAttribute('class', 'shape');\n        createSvgElement(svgEl, 'text').setAttribute('class', 'shapeLabel');\n        return svgEl;\n    }\n\n    /**\n     * @alias module:qtype_ddmarker/shapes\n     */\n    return {\n        /**\n         * A point, with x and y coordinates.\n         *\n         * @param {int} x centre X.\n         * @param {int} y centre Y.\n         * @constructor\n         */\n        Point: Point,\n\n        /**\n         * A point, with x and y coordinates.\n         *\n         * @param {int} x centre X.\n         * @param {int} y centre Y.\n         * @constructor\n         */\n        Shape: Shape,\n\n        /**\n         * A shape that is a circle.\n         *\n         * @param {String} label name of this area.\n         * @param {int} [x] centre X.\n         * @param {int} [y] centre Y.\n         * @param {int} [radius] radius.\n         * @constructor\n         */\n        Circle: Circle,\n\n        /**\n         * A shape that is a rectangle.\n         *\n         * @param {String} label name of this area.\n         * @param {int} [x] top left X.\n         * @param {int} [y] top left Y.\n         * @param {int} [width] width.\n         * @param {int} [height] height.\n         * @constructor\n         */\n        Rectangle: Rectangle,\n\n        /**\n         * A shape that is a polygon.\n         *\n         * @param {String} label name of this area.\n         * @param {Point[]} [points] position of the vertices relative to (centreX, centreY).\n         *      each object in the array should have two\n         * @constructor\n         */\n        Polygon: Polygon,\n\n        /**\n         * Not a shape (null object pattern).\n         *\n         * @param {String} label name of this area.\n         * @constructor\n         */\n        NullShape: NullShape,\n\n        /**\n         * Make a new SVG DOM element as a child of svg.\n         *\n         * @param {SVGElement} svg the parent node.\n         * @param {String} tagName the tag name.\n         * @return {SVGElement} the newly created node.\n         */\n        createSvgElement: createSvgElement,\n\n        /**\n         * Make a shape of the given type.\n         *\n         * @param {String} shapeType\n         * @param {String} label\n         * @return {Shape} the requested shape.\n         */\n        make: function(shapeType, label) {\n            switch (shapeType) {\n                case 'circle':\n                    return new Circle(label);\n                case 'rectangle':\n                    return new Rectangle(label);\n                case 'polygon':\n                    return new Polygon(label);\n                default:\n                    return new NullShape(label);\n            }\n        },\n\n        /**\n         * Make a shape of the given type that is similar to the shape of the original type.\n         *\n         * @param {String} shapeType the new type of shape to make\n         * @param {Shape} shape the shape to copy\n         * @return {Shape} the similar shape of a different type.\n         */\n        getSimilar: function(shapeType, shape) {\n            if (shapeType === shape.getType()) {\n                return shape;\n            }\n            switch (shapeType) {\n                case 'circle':\n                    return shape.makeSimilarCircle();\n                case 'rectangle':\n                    return shape.makeSimilarRectangle();\n                case 'polygon':\n                    return shape.makeSimilarPolygon();\n                default:\n                    return new NullShape(shape.label);\n            }\n        }\n    };\n});\n"],"file":"shapes.min.js"}