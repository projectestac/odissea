{"version":3,"sources":["../src/drag_reorder.js"],"names":["define","require","specified","$","drag","keys","config","dragStart","originalOrder","itemDragging","itemMoving","proxy","orderList","startDrag","event","details","list","time","Date","getTime","x","y","currentTarget","closest","itemInPage","reorderStart","getCurrentOrder","proxyHtml","replace","html","attr","document","body","append","css","offset","width","outerWidth","height","outerHeight","addClass","itemMovingClass","updateProxy","start","dragMove","dragEnd","closestItem","closestDistance","find","item","each","index","element","distance","distanceBetweenElements","midY","insertBefore","insertAfter","items","count","length","i","reorderEnd","newOrder","arrayEquals","reorderDone","Math","abs","focus","remove","removeClass","itemMovedByKeyboard","e","current","keyCode","space","arrowRight","arrowDown","preventDefault","stopPropagation","next","arrowLeft","arrowUp","prev","midX","jQuery","left","top","element1","element2","e1","e2","dx","dy","sqrt","map","idGetter","get","a1","a2","every","v","combineSelectors","outer","inner","combined","split","forEach","firstSelector","secondSelector","push","trim","join","on","prepare"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Generic library to allow things in a vertical list to be re-ordered using drag and drop.\n *\n * To make a set of things draggable, create a new instance of this object passing the\n * necessary config, as explained in the comment on the constructor.\n *\n * @package qtype_ordering\n * @copyright 2018 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module qtype_ordering/drag_reorder\n */\ndefine([\n    'jquery',\n    require.specified('core/dragdrop') ? 'core/dragdrop' : 'qtype_ordering/dragdrop',\n    require.specified('core/key_codes') ? 'core/key_codes' : 'qtype_ordering/key_codes'\n], function(\n    $,\n    drag,\n    keys\n) {\n\n    /**\n     * Constructor.\n     *\n     * To make a list draggable, create a new instance of this object, passing the necessary config.\n     * For example:\n     * {\n     *      // Selector for the list (or lists) to be reordered.\n     *      list: 'ul.my-list',\n     *\n     *      // Selector, relative to the list selector, for the items that can be moved.\n     *      item: '> li',\n     *\n     *      // The user actually drags a proxy object, which is constructed from this string,\n     *      // and then added directly as a child of <body>. The token %%ITEM_HTML%% is\n     *      // replaced with the innerHtml of the item being dragged. The token %%ITEM_CLASS_NAME%%\n     *      // is replaced with the class attribute of the item being dragged. Because of this,\n     *      // the styling of the contents of your list item needs to work for the proxy, as well as\n     *      // for items in place in the context of the list. Your CSS also needs to ensure\n     *      // that this proxy has position: absolute. You probably want other styles, like a\n     *      // drop shadow. Using class osep-itemmoving might be all you need to do.\n     *      proxyHtml: '<div class=\"osep-itemmoving %%ITEM_CLASS_NAME%%\">%%ITEM_HTML%%</div>,\n     *\n     *      // While the proxy is being dragged, this class is added to the item being moved.\n     *      // You can probably use \"osep-itemmoving\" here.\n     *      itemMovingClass: \"osep-itemmoving\",\n     *\n     *      // This is a callback which, when called with the DOM node for an item,\n     *      // returns the string that uniquely identifies each item.\n     *      // Therefore, the result of the drag action will be represented by the array\n     *      // obtained by calling this method on each item in the list in order.\n     *      idGetter: function(item) { return $(node).data('id'); },\n     *\n     *      // This is a callback which, when called with the DOM node for an item,\n     *      // returns a string that is the name of the item.\n     *      nameGetter: function(item) { return $(node).text(); },\n     *\n     *      // Function that will be called when a re-order starts (optional, can be not set).\n     *      // Useful if you need to save information about the initial state.\n     *      // This function should have two parameters. The first will be a\n     *      // jQuery object for the list that was reordered, the second will\n     *      // be the jQuery object for the item moved - which will not yet have been moved.\n     *      // Note, it is quite possible for reorderStart to be called with no\n     *      // subsequent call to reorderDone.\n     *      reorderStart: function($list, $item) { ... }\n     *\n     *      // Function that will be called when a drag has finished, and the list\n     *      // has been reordered. This function should have three parameters. The first will be\n     *      // a jQuery object for the list that was reordered, the second will be the jQuery\n     *      // object for the item moved, and the third will be the new order, which is\n     *      // an array of ids obtained by calling idGetter on each item in the list in order.\n     *      // This callback will only be called in the new order is actually different from the old order.\n     *      reorderDone: function($list, $item, newOrder) { ... }\n     *\n     *      // Function that is alwasy called when a re-order ends (optional, can be not set)\n     *      // whether or not the order has changed. Useful if you need to undo changes made\n     *      // in reorderStart, since reorderDone is only called if the new order is different\n     *      // from the original order.\n     *      reorderEnd: function($list, $item) { ... }\n     *  }\n     *\n     * There is a subtlety ( === hack?) that you can use. If you have items in your list that do not\n     * have a drag handle, they they are considered to be placeholders in otherwise empty containers.\n     * See how block_userlinks does it, if this seems like it might be useful. nameGetter should return\n     * the container name for these items.\n     *\n     * @param config As above.\n     */\n    return function(config) {\n        var dragStart = null,       // Information about when and where the drag started.\n            originalOrder = null,   // Array of ids.\n            itemDragging = null,    // Item being moved by dragging (jQuery object).\n            itemMoving = null,      // Item being moved using the accessible modal (jQuery object).\n            proxy = null,           // Drag proxy (jQuery object).\n            orderList = null;       // Order list (jQuery object).\n\n        var startDrag = function(event, details) {\n            orderList = $(config.list);\n\n            dragStart = {\n                time: new Date().getTime(),\n                x: details.x,\n                y: details.y\n            };\n\n            itemDragging = $(event.currentTarget).closest(config.itemInPage);\n\n            if (typeof config.reorderStart !== 'undefined') {\n                config.reorderStart(itemDragging.closest(config.list), itemDragging);\n            }\n\n            originalOrder = getCurrentOrder();\n            proxy = $(config.proxyHtml.replace('%%ITEM_HTML%%', itemDragging.html())\n                .replace('%%ITEM_CLASS_NAME%%', itemDragging.attr('class'))\n                .replace('%%LIST_CLASS_NAME%%', orderList.attr('class')));\n\n            $(document.body).append(proxy);\n            proxy.css('position', 'absolute');\n            proxy.css(itemDragging.offset());\n            proxy.width(itemDragging.outerWidth());\n            proxy.height(itemDragging.outerHeight());\n            itemDragging.addClass(config.itemMovingClass);\n            updateProxy(itemDragging);\n\n            // Start drag.\n            drag.start(event, proxy, dragMove, dragEnd);\n\n        };\n\n        var dragMove = function() {\n            var list = itemDragging.closest(config.list);\n            var closestItem = null;\n            var closestDistance = null;\n            list.find(config.item).each(function (index, element) {\n                var distance = distanceBetweenElements(element, proxy);\n                if (closestItem === null || distance < closestDistance) {\n                    closestItem = $(element);\n                    closestDistance = distance;\n                }\n            });\n\n            if (closestItem[0] === itemDragging[0]) {\n                return;\n            }\n            if (midY(proxy) < midY(closestItem)) {\n                itemDragging.insertBefore(closestItem);\n            } else {\n                itemDragging.insertAfter(closestItem);\n            }\n            updateProxy(itemDragging);\n        };\n\n        /**\n         * Update proxy's position.\n         * @param itemDragging\n         */\n        var updateProxy = function(itemDragging) {\n            var list = itemDragging.closest('ol, ul');\n            var items = list.find('li');\n            var count = items.length;\n            for (var i = 0; i < count; ++i) {\n                //proxy.css('margin-left', '20p');\n                if (itemDragging[0] === items[i]) {\n                    proxy.find('li').attr('value', i + 1);\n                    break;\n                }\n            }\n        };\n\n        /**\n         * It outer and inner are two CSS selectors, which may contain commas,\n         * then combine them safely. So combineSelectors('a, b', 'c, d')\n         * gives 'a c, a d, b c, b d'.\n         * @param outer\n         * @param inner\n         * @returns {string}\n         */\n        var combineSelectors = function(outer, inner) {\n            var combined = [];\n            outer.split(',').forEach(function(firstSelector) {\n                inner.split(',').forEach(function(secondSelector) {\n                    combined.push(firstSelector.trim() + ' ' + secondSelector.trim());\n                });\n            });\n            return combined.join(', ');\n        };\n\n        var dragEnd = function(x, y) {\n            if (typeof config.reorderEnd !== 'undefined') {\n                config.reorderEnd(itemDragging.closest(config.list), itemDragging);\n            }\n\n            var newOrder = getCurrentOrder();\n            if (!arrayEquals(originalOrder, newOrder)) {\n                // Order has changed, call the callback.\n                config.reorderDone(itemDragging.closest(config.list), itemDragging, newOrder);\n\n            } else if (new Date().getTime() - dragStart.time < 500 &&\n                Math.abs(dragStart.x - x) < 10 && Math.abs(dragStart.y - y) < 10) {\n                // This was really a click. Set the focus on the current item.\n                itemDragging[0].focus();\n            }\n            proxy.remove();\n            proxy = null;\n            itemDragging.removeClass(config.itemMovingClass);\n            itemDragging = null;\n            dragStart = null;\n        };\n\n        /**\n         * Items can be moved and placed using certain keys.\n         * Tab for tabbing though and choose the item to be moved\n         * space, arrow-right arrow-down for moving current element forewards.\n         * arrow-right arrow-down for moving the current element backwards.\n         * @param e, the event\n         * @param item, the current moving item\n         */\n        var itemMovedByKeyboard = function (e, current) {\n            switch (e.keyCode) {\n                case keys.space:\n                case keys.arrowRight:\n                case keys.arrowDown:\n                    e.preventDefault();\n                    e.stopPropagation();\n                    var next = current.next();\n                    if (next.length) {\n                        next.insertBefore(current);\n                    }\n                    break;\n\n                case keys.arrowLeft:\n                case keys.arrowUp:\n                    e.preventDefault();\n                    e.stopPropagation();\n                    var prev = current.prev();\n                    if (prev.length) {\n                        prev.insertAfter(current);\n                    }\n                    break;\n            }\n        };\n\n        /**\n         * Get the x-position of the middle of the DOM node represented by the given jQuery object.\n         * @param jQuery wrapping a DOM node.\n         * @returns Number the x-coordinate of the middle (left plus half outerWidth).\n         */\n        var midX = function(jQuery) {\n            return jQuery.offset().left + jQuery.outerWidth() / 2;\n        };\n\n        /**\n         * Get the y-position of the middle of the DOM node represented by the given jQuery object.\n         * @param jQuery wrapping a DOM node.\n         * @returns Number the y-coordinate of the middle (top plus half outerHeight).\n         */\n        var midY = function(jQuery) {\n            return jQuery.offset().top + jQuery.outerHeight() / 2;\n        };\n\n        /**\n         * Calculate the distance between the centres of two elements.\n         * @param element1 selector, element or jQuery.\n         * @param element2 selector, element or jQuery.\n         * @return number the distance in pixels.\n         */\n        var distanceBetweenElements = function(element1, element2) {\n            var e1 = $(element1), e2 = $(element2);\n            var dx = midX(e1) - midX(e2);\n            var dy = midY(e1) - midY(e2);\n            return Math.sqrt(dx * dx + dy * dy);\n        };\n\n        /**\n         * Get the current order of the list containing itemDragging.\n         * @returns Array of strings, the id of each element in order.\n         */\n        var getCurrentOrder = function() {\n            return (itemDragging || itemMoving).closest(config.list).find(config.item).map(\n                    function(index, item) { return config.idGetter(item); }).get();\n        };\n\n        /**\n         * Compare two arrays, which just contain simple values like ints or strings,\n         * to see if they are equal.\n         * @param a1 first array.\n         * @param a2 second array.\n         * @return boolean true if they both contain the same elements in the same order, else false.\n         */\n        var arrayEquals = function(a1, a2) {\n            return a1.length === a2.length &&\n                a1.every(function(v, i) { return v === a2[i]; });\n        };\n        config.itemInPage = combineSelectors(config.list, config.item);\n\n        // AJAX for section drag and click-to-move.\n        $(config.list).on('mousedown touchstart', config.item, function(event) {\n            var details = drag.prepare(event);\n            if (details.start) {\n                startDrag(event, details);\n            }\n        });\n\n        $(config.list).on('keydown', config.item, function(event) {\n            itemMoving = $(event.currentTarget).closest(config.itemInPage);\n            originalOrder = getCurrentOrder();\n            itemMovedByKeyboard(event, itemMoving);\n            var newOrder = getCurrentOrder();\n            if (!arrayEquals(originalOrder, newOrder)) {\n                // Order has changed, call the callback.\n                config.reorderDone(itemMoving.closest(config.list), itemMoving, newOrder);\n            }\n        });\n\n        // Make the items tabbable.\n        $(config.itemInPage).attr('tabindex', '0');\n    };\n});\n"],"file":"drag_reorder.min.js"}