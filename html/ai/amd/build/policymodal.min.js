define("core_ai/policymodal",["exports","core/modal","./policy","core/custom_interaction_events"],(function(_exports,_modal,_policy,_custom_interaction_events){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}
/**
   * The Javascript module to handle the policy modal.
   *
   * @module     core_ai/policymodal
   * @copyright  Andrew Lyons <andrew@nicols.co.uk>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_modal=_interopRequireDefault(_modal),_policy=_interopRequireDefault(_policy),_custom_interaction_events=_interopRequireDefault(_custom_interaction_events);class PolicyModal extends _modal.default{configure(modalConfig){super.configure({...modalConfig,show:!0,removeOnClose:!0}),this.context=modalConfig.context,this.setXlarge()}setXlarge(){this.getModal().addClass("modal-xl")}registerEventListeners(){super.registerEventListeners(),this.registerCloseOnSave(),this.registerCloseOnCancel(),this.getModal().on(_custom_interaction_events.default.events.activate,this.getActionSelector("save"),(e=>{e.preventDefault(),_policy.default.acceptPolicy()}))}}return _exports.default=PolicyModal,_defineProperty(PolicyModal,"TYPE","core_ai/policymodal"),_defineProperty(PolicyModal,"TEMPLATE","core_ai/policymodal"),_exports.default}));

//# sourceMappingURL=policymodal.min.js.map