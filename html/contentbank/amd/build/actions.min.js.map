{"version":3,"sources":["../src/actions.js"],"names":["define","$","Ajax","Notification","Str","Templates","Url","ModalFactory","ModalEvents","ACTIONS","DELETE_CONTENT","RENAME_CONTENT","SET_CONTENT_VISIBILITY","Actions","registerEvents","prototype","click","e","preventDefault","contentname","data","contentuses","contentid","contextid","deleteButtonText","get_strings","key","component","param","name","then","langStrings","modalTitle","modalContent","create","title","body","type","types","SAVE_CANCEL","large","done","modal","setSaveButtonText","getRoot","on","save","deleteContent","hidden","destroy","show","catch","exception","saveButtonText","render","newname","val","trim","renameContent","alert","visibility","setContentVisibility","requestType","call","methodname","args","contentids","result","message","params","statusmsg","errormsg","window","location","href","relativeUrl","fail","warnings","id","addNotification","fetchNotifications"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to manage content bank actions, such as delete or rename.\n *\n * @module     core_contentbank/actions\n * @copyright  2020 Sara Arjona <sara@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/str',\n    'core/templates',\n    'core/url',\n    'core/modal_factory',\n    'core/modal_events'],\nfunction($, Ajax, Notification, Str, Templates, Url, ModalFactory, ModalEvents) {\n\n    /**\n     * List of action selectors.\n     *\n     * @type {{DELETE_CONTENT: string}}\n     */\n    var ACTIONS = {\n        DELETE_CONTENT: '[data-action=\"deletecontent\"]',\n        RENAME_CONTENT: '[data-action=\"renamecontent\"]',\n        SET_CONTENT_VISIBILITY: '[data-action=\"setcontentvisibility\"]',\n    };\n\n    /**\n     * Actions class.\n     */\n    var Actions = function() {\n        this.registerEvents();\n    };\n\n    /**\n     * Register event listeners.\n     */\n    Actions.prototype.registerEvents = function() {\n        $(ACTIONS.DELETE_CONTENT).click(function(e) {\n            e.preventDefault();\n\n            var contentname = $(this).data('contentname');\n            var contentuses = $(this).data('uses');\n            var contentid = $(this).data('contentid');\n            var contextid = $(this).data('contextid');\n\n            var strings = [\n                {\n                    key: 'deletecontent',\n                    component: 'core_contentbank'\n                },\n                {\n                    key: 'deletecontentconfirm',\n                    component: 'core_contentbank',\n                    param: {\n                        name: contentname,\n                    }\n                },\n                {\n                    key: 'deletecontentconfirmlinked',\n                    component: 'core_contentbank',\n                },\n                {\n                    key: 'delete',\n                    component: 'core'\n                },\n            ];\n\n            var deleteButtonText = '';\n            Str.get_strings(strings).then(function(langStrings) {\n                var modalTitle = langStrings[0];\n                var modalContent = langStrings[1];\n                if (contentuses > 0) {\n                    modalContent += ' ' + langStrings[2];\n                }\n                deleteButtonText = langStrings[3];\n\n                return ModalFactory.create({\n                    title: modalTitle,\n                    body: modalContent,\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    large: true\n                });\n            }).done(function(modal) {\n                modal.setSaveButtonText(deleteButtonText);\n                modal.getRoot().on(ModalEvents.save, function() {\n                    // The action is now confirmed, sending an action for it.\n                    return deleteContent(contentid, contextid);\n                });\n\n                // Handle hidden event.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Destroy when hidden.\n                    modal.destroy();\n                });\n\n                // Show the modal.\n                modal.show();\n\n                return;\n            }).catch(Notification.exception);\n        });\n\n        $(ACTIONS.RENAME_CONTENT).click(function(e) {\n            e.preventDefault();\n\n            var contentname = $(this).data('contentname');\n            var contentid = $(this).data('contentid');\n\n            var strings = [\n                {\n                    key: 'renamecontent',\n                    component: 'core_contentbank'\n                },\n                {\n                    key: 'rename',\n                    component: 'core_contentbank'\n                },\n            ];\n\n            var saveButtonText = '';\n            Str.get_strings(strings).then(function(langStrings) {\n                var modalTitle = langStrings[0];\n                saveButtonText = langStrings[1];\n\n                return ModalFactory.create({\n                    title: modalTitle,\n                    body: Templates.render('core_contentbank/renamecontent', {'contentid': contentid, 'name': contentname}),\n                    type: ModalFactory.types.SAVE_CANCEL\n                });\n            }).then(function(modal) {\n                modal.setSaveButtonText(saveButtonText);\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    // The action is now confirmed, sending an action for it.\n                    var newname = $(\"#newname\").val().trim();\n                    if (newname) {\n                        renameContent(contentid, newname);\n                    } else {\n                        var errorStrings = [\n                            {\n                                key: 'error',\n                            },\n                            {\n                                key: 'emptynamenotallowed',\n                                component: 'core_contentbank',\n                            },\n                        ];\n                        Str.get_strings(errorStrings).then(function(langStrings) {\n                            Notification.alert(langStrings[0], langStrings[1]);\n                        }).catch(Notification.exception);\n                        e.preventDefault();\n                    }\n                });\n\n                // Handle hidden event.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Destroy when hidden.\n                    modal.destroy();\n                });\n\n                // Show the modal.\n                modal.show();\n\n                return;\n            }).catch(Notification.exception);\n        });\n\n        $(ACTIONS.SET_CONTENT_VISIBILITY).click(function(e) {\n            e.preventDefault();\n\n            var contentid = $(this).data('contentid');\n            var visibility = $(this).data('visibility');\n\n            setContentVisibility(contentid, visibility);\n        });\n    };\n\n    /**\n     * Delete content from the content bank.\n     *\n     * @param {int} contentid The content to delete.\n     * @param {int} contextid The contextid where the content belongs.\n     */\n    function deleteContent(contentid, contextid) {\n        var request = {\n            methodname: 'core_contentbank_delete_content',\n            args: {\n                contentids: {contentid}\n            }\n        };\n\n        var requestType = 'success';\n        Ajax.call([request])[0].then(function(data) {\n            if (data.result) {\n                return 'contentdeleted';\n            }\n            requestType = 'error';\n            return 'contentnotdeleted';\n\n        }).done(function(message) {\n            var params = {\n                contextid: contextid\n            };\n            if (requestType == 'success') {\n                params.statusmsg = message;\n            } else {\n                params.errormsg = message;\n            }\n            // Redirect to the main content bank page and display the message as a notification.\n            window.location.href = Url.relativeUrl('contentbank/index.php', params, false);\n        }).fail(Notification.exception);\n    }\n\n    /**\n     * Rename content in the content bank.\n     *\n     * @param {int} contentid The content to rename.\n     * @param {string} name The new name for the content.\n     */\n    function renameContent(contentid, name) {\n        var request = {\n            methodname: 'core_contentbank_rename_content',\n            args: {\n                contentid: contentid,\n                name: name\n            }\n        };\n        var requestType = 'success';\n        Ajax.call([request])[0].then(function(data) {\n            if (data.result) {\n                return 'contentrenamed';\n            }\n            requestType = 'error';\n            return data.warnings[0].message;\n\n        }).then(function(message) {\n            var params = null;\n            if (requestType == 'success') {\n                params = {\n                    id: contentid,\n                    statusmsg: message\n                };\n                // Redirect to the content view page and display the message as a notification.\n                window.location.href = Url.relativeUrl('contentbank/view.php', params, false);\n            } else {\n                // Fetch error notifications.\n                Notification.addNotification({\n                    message: message,\n                    type: 'error'\n                });\n                Notification.fetchNotifications();\n            }\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Set content visibility in the content bank.\n     *\n     * @param {int} contentid The content to modify\n     * @param {int} visibility The new visibility value\n     */\n    function setContentVisibility(contentid, visibility) {\n        var request = {\n            methodname: 'core_contentbank_set_content_visibility',\n            args: {\n                contentid: contentid,\n                visibility: visibility\n            }\n        };\n        var requestType = 'success';\n        Ajax.call([request])[0].then(function(data) {\n            if (data.result) {\n                return 'contentvisibilitychanged';\n            }\n            requestType = 'error';\n            return data.warnings[0].message;\n\n        }).then(function(message) {\n            var params = null;\n            if (requestType == 'success') {\n                params = {\n                    id: contentid,\n                    statusmsg: message\n                };\n                // Redirect to the content view page and display the message as a notification.\n                window.location.href = Url.relativeUrl('contentbank/view.php', params, false);\n            } else {\n                // Fetch error notifications.\n                Notification.addNotification({\n                    message: message,\n                    type: 'error'\n                });\n                Notification.fetchNotifications();\n            }\n            return;\n        }).catch(Notification.exception);\n    }\n\n    return /** @alias module:core_contentbank/actions */ {\n        // Public variables and functions.\n\n        /**\n         * Initialise the contentbank actions.\n         *\n         * @method init\n         * @return {Actions}\n         */\n        'init': function() {\n            return new Actions();\n        }\n    };\n});\n"],"file":"actions.min.js"}