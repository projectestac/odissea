{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to manage content bank actions, such as delete or rename.\n *\n * @module     core_contentbank/actions\n * @copyright  2020 Sara Arjona <sara@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/str',\n    'core/templates',\n    'core/url',\n    'core/modal_factory',\n    'core/modal_events'],\nfunction($, Ajax, Notification, Str, Templates, Url, ModalFactory, ModalEvents) {\n\n    /**\n     * List of action selectors.\n     *\n     * @type {{DELETE_CONTENT: string}}\n     */\n    var ACTIONS = {\n        DELETE_CONTENT: '[data-action=\"deletecontent\"]',\n        RENAME_CONTENT: '[data-action=\"renamecontent\"]',\n        SET_CONTENT_VISIBILITY: '[data-action=\"setcontentvisibility\"]',\n    };\n\n    /**\n     * Actions class.\n     */\n    var Actions = function() {\n        this.registerEvents();\n    };\n\n    /**\n     * Register event listeners.\n     */\n    Actions.prototype.registerEvents = function() {\n        $(ACTIONS.DELETE_CONTENT).click(function(e) {\n            e.preventDefault();\n\n            var contentname = $(this).data('contentname');\n            var contentuses = $(this).data('uses');\n            var contentid = $(this).data('contentid');\n            var contextid = $(this).data('contextid');\n\n            var strings = [\n                {\n                    key: 'deletecontent',\n                    component: 'core_contentbank'\n                },\n                {\n                    key: 'deletecontentconfirm',\n                    component: 'core_contentbank',\n                    param: {\n                        name: contentname,\n                    }\n                },\n                {\n                    key: 'deletecontentconfirmlinked',\n                    component: 'core_contentbank',\n                },\n                {\n                    key: 'delete',\n                    component: 'core'\n                },\n            ];\n\n            var deleteButtonText = '';\n            Str.get_strings(strings).then(function(langStrings) {\n                var modalTitle = langStrings[0];\n                var modalContent = langStrings[1];\n                if (contentuses > 0) {\n                    modalContent += ' ' + langStrings[2];\n                }\n                deleteButtonText = langStrings[3];\n\n                return ModalFactory.create({\n                    title: modalTitle,\n                    body: modalContent,\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    large: true\n                });\n            }).done(function(modal) {\n                modal.setSaveButtonText(deleteButtonText);\n                modal.getRoot().on(ModalEvents.save, function() {\n                    // The action is now confirmed, sending an action for it.\n                    return deleteContent(contentid, contextid);\n                });\n\n                // Handle hidden event.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Destroy when hidden.\n                    modal.destroy();\n                });\n\n                // Show the modal.\n                modal.show();\n\n                return;\n            }).catch(Notification.exception);\n        });\n\n        $(ACTIONS.RENAME_CONTENT).click(function(e) {\n            e.preventDefault();\n\n            var contentname = $(this).data('contentname');\n            var contentid = $(this).data('contentid');\n\n            var strings = [\n                {\n                    key: 'renamecontent',\n                    component: 'core_contentbank'\n                },\n                {\n                    key: 'rename',\n                    component: 'core_contentbank'\n                },\n            ];\n\n            var saveButtonText = '';\n            Str.get_strings(strings).then(function(langStrings) {\n                var modalTitle = langStrings[0];\n                saveButtonText = langStrings[1];\n\n                return ModalFactory.create({\n                    title: modalTitle,\n                    body: Templates.render('core_contentbank/renamecontent', {'contentid': contentid, 'name': contentname}),\n                    type: ModalFactory.types.SAVE_CANCEL\n                });\n            }).then(function(modal) {\n                modal.setSaveButtonText(saveButtonText);\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    // The action is now confirmed, sending an action for it.\n                    var newname = $(\"#newname\").val().trim();\n                    if (newname) {\n                        renameContent(contentid, newname);\n                    } else {\n                        var errorStrings = [\n                            {\n                                key: 'error',\n                            },\n                            {\n                                key: 'emptynamenotallowed',\n                                component: 'core_contentbank',\n                            },\n                        ];\n                        Str.get_strings(errorStrings).then(function(langStrings) {\n                            Notification.alert(langStrings[0], langStrings[1]);\n                        }).catch(Notification.exception);\n                        e.preventDefault();\n                    }\n                });\n\n                // Handle hidden event.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Destroy when hidden.\n                    modal.destroy();\n                });\n\n                // Show the modal.\n                modal.show();\n\n                return;\n            }).catch(Notification.exception);\n        });\n\n        $(ACTIONS.SET_CONTENT_VISIBILITY).click(function(e) {\n            e.preventDefault();\n\n            var contentid = $(this).data('contentid');\n            var visibility = $(this).data('visibility');\n\n            setContentVisibility(contentid, visibility);\n        });\n    };\n\n    /**\n     * Delete content from the content bank.\n     *\n     * @param {int} contentid The content to delete.\n     * @param {int} contextid The contextid where the content belongs.\n     */\n    function deleteContent(contentid, contextid) {\n        var request = {\n            methodname: 'core_contentbank_delete_content',\n            args: {\n                contentids: {contentid}\n            }\n        };\n\n        var requestType = 'success';\n        Ajax.call([request])[0].then(function(data) {\n            if (data.result) {\n                return 'contentdeleted';\n            }\n            requestType = 'error';\n            return 'contentnotdeleted';\n\n        }).done(function(message) {\n            var params = {\n                contextid: contextid\n            };\n            if (requestType == 'success') {\n                params.statusmsg = message;\n            } else {\n                params.errormsg = message;\n            }\n            // Redirect to the main content bank page and display the message as a notification.\n            window.location.href = Url.relativeUrl('contentbank/index.php', params, false);\n        }).fail(Notification.exception);\n    }\n\n    /**\n     * Rename content in the content bank.\n     *\n     * @param {int} contentid The content to rename.\n     * @param {string} name The new name for the content.\n     */\n    function renameContent(contentid, name) {\n        var request = {\n            methodname: 'core_contentbank_rename_content',\n            args: {\n                contentid: contentid,\n                name: name\n            }\n        };\n        var requestType = 'success';\n        Ajax.call([request])[0].then(function(data) {\n            if (data.result) {\n                return 'contentrenamed';\n            }\n            requestType = 'error';\n            return data.warnings[0].message;\n\n        }).then(function(message) {\n            var params = null;\n            if (requestType == 'success') {\n                params = {\n                    id: contentid,\n                    statusmsg: message\n                };\n                // Redirect to the content view page and display the message as a notification.\n                window.location.href = Url.relativeUrl('contentbank/view.php', params, false);\n            } else {\n                // Fetch error notifications.\n                Notification.addNotification({\n                    message: message,\n                    type: 'error'\n                });\n                Notification.fetchNotifications();\n            }\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Set content visibility in the content bank.\n     *\n     * @param {int} contentid The content to modify\n     * @param {int} visibility The new visibility value\n     */\n    function setContentVisibility(contentid, visibility) {\n        var request = {\n            methodname: 'core_contentbank_set_content_visibility',\n            args: {\n                contentid: contentid,\n                visibility: visibility\n            }\n        };\n        var requestType = 'success';\n        Ajax.call([request])[0].then(function(data) {\n            if (data.result) {\n                return 'contentvisibilitychanged';\n            }\n            requestType = 'error';\n            return data.warnings[0].message;\n\n        }).then(function(message) {\n            var params = null;\n            if (requestType == 'success') {\n                params = {\n                    id: contentid,\n                    statusmsg: message\n                };\n                // Redirect to the content view page and display the message as a notification.\n                window.location.href = Url.relativeUrl('contentbank/view.php', params, false);\n            } else {\n                // Fetch error notifications.\n                Notification.addNotification({\n                    message: message,\n                    type: 'error'\n                });\n                Notification.fetchNotifications();\n            }\n            return;\n        }).catch(Notification.exception);\n    }\n\n    return /** @alias module:core_contentbank/actions */ {\n        // Public variables and functions.\n\n        /**\n         * Initialise the contentbank actions.\n         *\n         * @method init\n         * @return {Actions}\n         */\n        'init': function() {\n            return new Actions();\n        }\n    };\n});\n"],"names":["define","$","Ajax","Notification","Str","Templates","Url","ModalFactory","ModalEvents","ACTIONS","Actions","registerEvents","prototype","click","e","preventDefault","contentname","this","data","contentuses","contentid","contextid","strings","key","component","param","name","deleteButtonText","get_strings","then","langStrings","modalTitle","modalContent","create","title","body","type","types","SAVE_CANCEL","large","done","modal","setSaveButtonText","getRoot","on","save","request","methodname","args","contentids","requestType","call","result","message","params","statusmsg","errormsg","window","location","href","relativeUrl","fail","exception","deleteContent","hidden","destroy","show","catch","saveButtonText","render","newname","val","trim","warnings","id","addNotification","fetchNotifications","renameContent","alert","visibility","setContentVisibility"],"mappings":"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"}