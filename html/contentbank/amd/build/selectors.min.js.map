{"version":3,"file":"selectors.min.js","sources":["../src/selectors.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Define all of the selectors we will be using on the contentbank interface.\n *\n * @module     core_contentbank/selectors\n * @copyright  2020 Sara Arjona <sara@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * A small helper function to build queryable data selectors.\n *\n * @method getDataSelector\n * @param {String} name\n * @param {String} value\n * @return {string}\n */\nconst getDataSelector = (name, value) => {\n    return `[data-${name}=\"${value}\"]`;\n};\n\nexport default {\n    regions: {\n        cbcontentname: getDataSelector('region', 'cb-content-name'),\n        contentbank: getDataSelector('region', 'contentbank'),\n        filearea: getDataSelector('region', 'filearea')\n    },\n    actions: {\n        search: getDataSelector('action', 'searchcontent'),\n        clearSearch: getDataSelector('action', 'clearsearch'),\n        viewgrid: getDataSelector('action', 'viewgrid'),\n        viewlist: getDataSelector('action', 'viewlist'),\n        sortname: getDataSelector('action', 'sortname'),\n        sortuses: getDataSelector('action', 'sortuses'),\n        sortdate: getDataSelector('action', 'sortdate'),\n        sortsize: getDataSelector('action', 'sortsize'),\n        sorttype: getDataSelector('action', 'sorttype'),\n        sortauthor: getDataSelector('action', 'sortauthor'),\n    },\n    elements: {\n        listitem: '.cb-listitem',\n        heading: '.cb-heading',\n        cell: '.cb-column',\n        cbnavbarbreadcrumb: '.cb-navbar-breadbrumb',\n        cbnavbartotalsearch: '.cb-navbar-totalsearch',\n        searchinput: '#searchinput',\n        sortbutton: '.cb-btnsort'\n    },\n};\n"],"names":["getDataSelector","name","value","regions","cbcontentname","contentbank","filearea","actions","search","clearSearch","viewgrid","viewlist","sortname","sortuses","sortdate","sortsize","sorttype","sortauthor","elements","listitem","heading","cell","cbnavbarbreadcrumb","cbnavbartotalsearch","searchinput","sortbutton"],"mappings":";;;;;;;;IA+BMA,gBAAkB,SAACC,KAAMC,6BACXD,kBAASC,sBAGd,CACXC,QAAS,CACLC,cAAeJ,gBAAgB,SAAU,mBACzCK,YAAaL,gBAAgB,SAAU,eACvCM,SAAUN,gBAAgB,SAAU,aAExCO,QAAS,CACLC,OAAQR,gBAAgB,SAAU,iBAClCS,YAAaT,gBAAgB,SAAU,eACvCU,SAAUV,gBAAgB,SAAU,YACpCW,SAAUX,gBAAgB,SAAU,YACpCY,SAAUZ,gBAAgB,SAAU,YACpCa,SAAUb,gBAAgB,SAAU,YACpCc,SAAUd,gBAAgB,SAAU,YACpCe,SAAUf,gBAAgB,SAAU,YACpCgB,SAAUhB,gBAAgB,SAAU,YACpCiB,WAAYjB,gBAAgB,SAAU,eAE1CkB,SAAU,CACNC,SAAU,eACVC,QAAS,cACTC,KAAM,aACNC,mBAAoB,wBACpBC,oBAAqB,yBACrBC,YAAa,eACbC,WAAY"}